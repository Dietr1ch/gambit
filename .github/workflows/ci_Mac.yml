name: Gambit CI

on:
  push:
    branches: [ NewRunners ]
  pull_request:
    branches: [ NewRunners ]
  schedule:
    - cron:  '0 5 * * *'

jobs:
  gambit_build:
    runs-on: [self-hosted, macOS]
    strategy:
      fail-fast: false
      matrix:
        arch: [x64,Arm64] #, fedora
    #defaults:
    #  run:
    #    shell: bash -eo pipefail {0}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up build environment
      run: |
        echo "Set up the build environment"
        mkdir -p BUILD
        cd BUILD
    - name: Configure with cmake
      run: |
        echo "Configure with cmake"
        echo "Ditching plc and plc_data due to a known Issue (Issue 399)"
        cd BUILD
        cmake -Ditch="plc;plc_data" -DWITH_MPI=ON -DWITH_HEPMC=ON -DWITH_YODA=ON -DBUILD_FS_MODELS="CMSSM;MSSM;MDM" ..
    - name: Build scanners
      run: |
        echo "Build scanners"
        cd BUILD
        make scanners
        cmake ..
    - name: Build Backends
      run: |
        echo "Building Backends"
        cd BUILD
        make pythia
        make higgssignals
        make nulike
        make ATLAS_FullLikes
        make susyhit
        make heplike
        make superiso
        make contur
        echo "Running cmake again, since this is required for ColliderBit/pythia"
        cmake ..
    - name: Build Gambit
      run: |
        echo "Build GAMBIT."
        cd BUILD
        make -j8 gambit
    - name: Test spartan yaml
      run: |
        echo "Testing spartan.yaml (with cout printer)"
        sed -i "" 's/ hdf5/ cout/g' yaml_files/spartan.yaml
        ./gambit -rf yaml_files/spartan.yaml 
    - name: CLI test
      run: |
        echo "Run the test of gambit help"
        ./gambit -h
    - name: WC test
      run: |
        echo "Test WC_lite yaml (no printing)"
        sed -i "" 's/ hdf5/ none/g' yaml_files/WC_lite.yaml
        ./gambit -f yaml_files/WC_lite.yaml
    - name: ColliderBit test
      run: |
        echo "Test the ColliderBit CMSSM yaml file"
        ./gambit -f yaml_files/ColliderBit_CMSSM.yaml
    - name: Build standalones
      run: |
        echo "Test the building of the standalones"
        make standalones
    - name: Build and Run GUM
      run: |
        echo "Here I would test GUM"
