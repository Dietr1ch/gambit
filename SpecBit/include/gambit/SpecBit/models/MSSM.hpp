//   GAMBIT: Global and Modular BSM Inference Tool
//   *********************************************
///  \file
///
///  Rollcall declarations for module functions
///  for SpecBit, model MSSM
///
///  *********************************************
///
///  Authors (add name and date if you modify):
///
///  \author Ben Farmer
///          (benjamin.farmer@fysik.su.se)
///    \date 2014 Sep - Dec, 2015 Jan - Mar
///
///  \author Christopher Rogan
///          (christophersrogan@gmail.com)
///  \date 2015 Apr
///
///  \author Tomas Gonzalo
///          (tomas.gonzalo@monash.edu)
///  \date 2016 Jun, 2017 Jan, 2019 Oct
///
///  *********************************************
///

#ifndef __SpecBit_MSSM_hpp__
#define __SpecBit_MSSM_hpp__

#define MODULE SpecBit


  /// @{ Functions to supply particle spectra in various forms

  // This capability supplies the physical mass spectrum of the MSSM plus running
  // parameters in the DRbar scheme. This can be generated by many different
  // constrained models with various boundary conditions, or defined directly.
  #define CAPABILITY unimproved_MSSM_spectrum
  START_CAPABILITY

    // ==========================
    // GUT MSSM parameterisations
    // (CMSSM and its various non-universal generalisations)

    /// SPheno spectrum function
    #define FUNCTION get_MSSM_spectrum_SPheno
    START_FUNCTION(Spectrum)
    ALLOW_MODELS(CMSSM, MSSM63atMGUT, MSSM63atQ)
    DEPENDENCY(SMINPUTS, SMInputs)
    BACKEND_REQ(SPheno_MSSM_Spectrum, (MSSMspectrum), int, (Spectrum&, const SpectrumInputs&) )
    BACKEND_OPTION((SPheno, 3.3.8), (MSSMspectrum))
    BACKEND_OPTION((SARAHSPheno_MSSM, 4.0.3), (MSSMspectrum))
    #undef FUNCTION

    /// Get MSSM spectrum from CMSSM boundary conditions
    #define FUNCTION get_CMSSM_spectrum_FS
    START_FUNCTION(Spectrum)
    ALLOW_MODELS(CMSSM)
    DEPENDENCY(SMINPUTS, SMInputs) // Need SLHA2 SMINPUTS to set up spectrum generator
    BACKEND_REQ(FS_CMSSM_Spectrum, (FSMSSMSpectrum), void, (Spectrum&, const SpectrumInputs&) )
    BACKEND_OPTION((FlexibleSUSY_CMSSM, 2.0.1), (FSMSSMSpectrum))
    #undef FUNCTION

    // FlexibleSUSY compatible maximal CMSSM generalisation (MSSM with GUT boundary conditions)
    #define FUNCTION get_MSSMatMGUT_spectrum_FS
    START_FUNCTION(Spectrum)
    ALLOW_MODELS(MSSM63atMGUT, MSSM63atMGUT_lightgravitino)
    DEPENDENCY(SMINPUTS, SMInputs) // Need SLHA2 SMINPUTS to set up spectrum generator
    BACKEND_REQ(FS_MSSMatMGUT_Spectrum, (FSMSSMSpectrum), void, (Spectrum&, const SpectrumInputs &) )
    BACKEND_OPTION((FlexibleSUSY_MSSMatMGUT, 2.0.1), (FSMSSMSpectrum))
    #undef FUNCTION

    // ==============================
    // MSSM parameterised by mA and mu (instead of mHu2 and mHd2) at GUT scale
    #define FUNCTION get_MSSMatMGUT_mA_spectrum_FS
    START_FUNCTION(Spectrum)
    ALLOW_MODELS(MSSM63atMGUT_mA, MSSM63atMGUT_mA_lightgravitino)
    DEPENDENCY(SMINPUTS, SMInputs) // Need SLHA2 SMINPUTS to set up spectrum generator
    BACKEND_REQ(FS_MSSMatMGUT_mA_Spectrum, (FSMSSMSpectrum), void, (Spectrum&, const SpectrumInputs &) )
    BACKEND_OPTION((FlexibleSUSY_MSSMatMGUT_mA, 2.0.1), (FSMSSMSpectrum))
    #undef FUNCTION

    // ==============================
    // MSSM parameterised with input at (user-defined) scale Q
    #define FUNCTION get_MSSMatQ_spectrum_FS
    START_FUNCTION(Spectrum)
    ALLOW_MODELS(MSSM63atQ, MSSM63atQ_lightgravitino)
    DEPENDENCY(SMINPUTS, SMInputs) // Need SLHA2 SMINPUTS to set up spectrum generator
    BACKEND_REQ(FS_MSSMatQ_Spectrum, (FSMSSMSpectrum), void, (Spectrum&, const SpectrumInputs &) )
    BACKEND_OPTION((FlexibleSUSY_MSSMatQ, 2.0.1), (FSMSSMSpectrum))
    #undef FUNCTION

    // ==============================
    // MSSM parameterised by mA and mu (instead of mHu2 and mHd2) at (user-defined) scale Q
    #define FUNCTION get_MSSMatQ_mA_spectrum_FS
    START_FUNCTION(Spectrum)
    ALLOW_MODELS(MSSM63atQ_mA, MSSM63atQ_mA_lightgravitino)
    DEPENDENCY(SMINPUTS, SMInputs) // Need SLHA2 SMINPUTS to set up spectrum generator
    BACKEND_REQ(FS_MSSMatQ_mA_Spectrum, (FSMSSMSpectrum), void, (Spectrum&, const SpectrumInputs &) )
    BACKEND_OPTION((FlexibleSUSY_MSSMatQ_mA, 2.0.1), (FSMSSMSpectrum))
    #undef FUNCTION

    // ==============================
    // MSSM parameterised by mA and mu (instead of mHu2 and mHd2) at SUSY scale
    #define FUNCTION get_MSSMatMSUSY_mA_spectrum_FS
    START_FUNCTION(Spectrum)
    ALLOW_MODELS(MSSM63atMSUSY_mA, MSSM63atMSUSY_mA_lightgravitino)
    DEPENDENCY(SMINPUTS, SMInputs) // Need SLHA2 SMINPUTS to set up spectrum generator
    BACKEND_REQ(FS_MSSMatMSUSY_mA_Spectrum, (FSMSSMSpectrum), void, (Spectrum&, const SpectrumInputs &) )
    BACKEND_OPTION((FlexibleSUSY_MSSMatMSUSY_mA, 2.0.1), (FSMSSMSpectrum))
    #undef FUNCTION

    // ==============================
    // MSSM at GUT scale with EFTHiggs
    #define FUNCTION get_MSSMatMGUT_spectrum_FEFTHiggs
    START_FUNCTION(Spectrum)
    ALLOW_MODELS(MSSM63atMGUT, MSSM63atMGUT_lightgravitino)
    DEPENDENCY(SMINPUTS, SMInputs) // Need SLHA2 SMINPUTS to set up spectrum generator
    BACKEND_REQ(FS_MSSMatMGUTEFTHiggs_Spectrum, (FSMSSMSpectrum), void, (Spectrum&, const SpectrumInputs &) )
    BACKEND_OPTION((FlexibleSUSY_MSSMatMGUTEFTHiggs, 2.0.1), (FSMSSMSpectrum))
    #undef FUNCTION

    // ==============================
    // MSSM parameterised by mA and mu (instead of mHu2 and mHd2) at GUT scale
    // with EFTHiggs
    #define FUNCTION get_MSSMatMGUT_mA_spectrum_FEFTHiggs
    START_FUNCTION(Spectrum)
    ALLOW_MODELS(MSSM63atMGUT_mA, MSSM63atMGUT_mA_lightgravitino)
    DEPENDENCY(SMINPUTS, SMInputs) // Need SLHA2 SMINPUTS to set up spectrum generator
    DEPENDENCY(SMINPUTS, SMInputs) // Need SLHA2 SMINPUTS to set up spectrum generator
    BACKEND_REQ(FS_MSSMatMGUTEFTHiggs_mA_Spectrum, (FSMSSMSpectrum), void, (Spectrum&, const SpectrumInputs &) )
    BACKEND_OPTION((FlexibleSUSY_MSSMatMGUTEFTHiggs_mA, 2.0.1), (FSMSSMSpectrum))
    #undef FUNCTION

    // ==============================
    // MSSM parameterised by mHu2 and mHd2 (instead of mu and Bmu) at
    // user chosen scale via FlexibleEFTHiggs (FlexibleSUSY hybrid
    // EFT / Fixed order calculation)
    #define FUNCTION get_MSSMatQ_spectrum_FEFTHiggs
    START_FUNCTION(Spectrum)
    ALLOW_MODELS(MSSM63atQ, MSSM63atQ_lightgravitino)
    DEPENDENCY(SMINPUTS, SMInputs) // Need SLHA2 SMINPUTS to set up spectrum generator
    BACKEND_REQ(FS_MSSMatQEFTHiggs_Spectrum, (FSMSSMSpectrum), void, (Spectrum&, const SpectrumInputs &) )
    BACKEND_OPTION((FlexibleSUSY_MSSMatQEFTHiggs, 2.0.1), (FSMSSMSpectrum))
    #undef FUNCTION

    // ============================== 
    //MSSM parameterised by mA and mu (instead of mHu2 and mHd2) at
    // user chosen scale via FlexibleEFTHiggs (FlexibleSUSY hybrid
    // EFT / Fixed order  calculation)
    #define FUNCTION get_MSSMatQ_mA_spectrum_FEFTHiggs
    START_FUNCTION(Spectrum)
    ALLOW_MODELS(MSSM63atQ_mA, MSSM63atQ_mA_lightgravitino)
    DEPENDENCY(SMINPUTS, SMInputs) // Need SLHA2 SMINPUTS to set up spectrum generator
    BACKEND_REQ(FS_MSSMatQEFTHiggs_mA_Spectrum, (FSMSSMSpectrum), void, (Spectrum&, const SpectrumInputs &) )
    BACKEND_OPTION((FlexibleSUSY_MSSMatQEFTHiggs_mA, 2.0.1), (FSMSSMSpectrum))
    #undef FUNCTION

    // ==============================
    // MSSM parameterised by mA and mu (instead of mHu2 and mHd2) at SUSY scale
    // via FlexibleEFTHiggs (FlexibleSUSY hybrid EFT / Fixed order calculation)
    #define FUNCTION get_MSSMatMSUSY_mA_spectrum_FEFTHiggs
    START_FUNCTION(Spectrum)
    ALLOW_MODELS(MSSM63atMSUSY_mA, MSSM63atMSUSY_mA_lightgravitino)
    DEPENDENCY(SMINPUTS, SMInputs) // Need SLHA2 SMINPUTS to set up spectrum generator
    BACKEND_REQ(FS_MSSMatMSUSYEFTHiggs_mA_Spectrum, (FSMSSMSpectrum), void, (Spectrum&, const SpectrumInputs &) )
    BACKEND_OPTION((FlexibleSUSY_MSSMatMSUSYEFTHiggs_mA, 2.0.1), (FSMSSMSpectrum))
    #undef FUNCTION

 
  #undef CAPABILITY

  /// @}


#undef MODULE

#endif

