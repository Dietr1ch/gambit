SUFIT package
-------------
A package for global fits and scans.

This is a package in early development and contains mostly class skeletons,
base classes and generic methods.

============================================================
To generate the documentation, run:
        make doxygen
  the documentation is then found in doc/html/index.html       

Requires 
   
   boost  - common C++ methods and classes:
       
       With rpm:
          usually called 'boost-devel'
          yum install boost-devel 
       With ubuntu:
          sudo apt-get install libboost-dev libboost-doc

       Mac OS: download existing binaries : http://www.boost.org/users/download/    
              http://sourceforge.net/projects/boost/files/boost-jam/

       it's also easy to compile and install and use even without root access:

	    download: http://sourceforge.net/projects/boost/files/boost/    ( example: boost_1_47_0.tar.gz )

	      tar -xzvf boost_1_47_0.tar.gz
	      cd boost_1_47_0
	      export BOOST=/my/boost/installdir
	      mkdir -p /my/boost/installdir

	    build instructions are here:   	      
		    http://www.boost.org/doc/libs/1_47_0/more/getting_started/unix-variants.html#easy-build-and-install
 
	      example:

	      ./bootstrap.sh --prefix=path/to/installation/prefix     
	      ./b2 install

   darksusy 
       www.physto.se/~edsjo/darksusy/

============================================================


Example compile, run:
        make  


Developers:
SUFIT group at OKC


Code revision log:
   Just run:
   svn log svn://cnlx03.physto.se/OKCFit | less


Brief code history:

*  First version, 2010-2011, coded by Joachim Ripken, with Seon-Hee Seo.

    Developed basic concepts and example classes: scanner, variables,
    etc. Implemented working example fortran calls to dark susy.

*  Second version, July 2011, coded by Johan Lundberg;

    Redesigned the object oriented framework and classes
    using input also from from Pat Scott, Joachim Ripken, Seon-Hee Seo.
    
    Added doxygen documentation
    there are still classes from the old version remaining un-merged.    
    All up-to-date classes live in the C++ namespace sufit::

*  Second version, continued Aug-September 2011, Johan Lundberg

    classes:

     * AssociatedHandler< ENGINE, T >
         Handler for type T from specific ENGINE
     * AtlasEventInfo
         Example data content class
     * AtlasExampleComparator
         Simple example of LLH calculator comparing two complicated objects
     * atlasExperimentEngine
         Holder of code providing atlas measured quantities
     * atlasTheoryEventEngine
         Holder of code calculating atlas theory quantities
     * BinnedData< T >
         Simple binned data (of any type. Suggest: double) in 1 dimension
     * ComparatorBase
         Interface for LLH calculator, aka Comparator
     * configuration_mark
         Configuration mark
     * DarkSusyEngine
         Dark Susy backend
     * exceptions::e_configuration
         Configuraton exception
     * exceptions::e_incalculable
         Incalculable exception
     * exceptions::e_limitation
         Unphysical exception
     * exceptions::e_unphysical
         Unphysical exception
     * EngineBase
         Engine base class
     * ExampleEngine
         Example Engine
     * GlobalResourceScopeLock
         Lock a global by name
     * Handler< T >
         Pure abstract variable holder
     * HandlerBase
         Pure virtual base for Handler
     * HandlerP< T >
         Handler pointer template
     * map_looper< T >::key_types< N >
         Key: mapped tuple type at index N
     * LLHSumComparator
         LLH Sum Class using other LLH objects as input
     * map_looper< T >
         Ease looping over map like object
     * map_looper< T >::mapped_types< N >
         Value: mapped tuple type at index N
     * ModelBase
         Virtual base class for model parameters
     * ModelParameters
         Model Parameters Base class example
     * ModelParameters_CMSSM5
         CMSSM5 parameter set. Defined names: m0 m1/2 A0 sgnmu tanb
     * ModelParameters_pMSSM7
         PMSSM7 parameter set. Defined names: mu m2 ma tanb mqtild at/m ab/m
     * ModelParametersBase
         Virtual base class for model parameters
     * mssmX
         Empty example model
     * NamedCache< C, O >
         Named cache template
     * NamedCache< C >
         Named cache template without options
     * NamedCacheInterface
         Interface definition for NamedCache<C,O>
     * RandomScanner
         Random Scanner
     * ScannerBase
         Scanner Base class example
     * simpleHandleToComparator
         Handle to LLH Converter
     * simplePoissonComparator< T >
         Poisson LLH calculator
     * sufit_core
         Core sutup
     * exceptions::sufit_exception_base
         Sufit exception base class
     * EngineBase::types< ENGINE, T >
         Templated typedef for method function pointers used by EngineBase
     * Uncopyable
         Class used to copy-protect classes 


------------------------------------------------------------------------
r130 | patscott | 2012-09-26 20:56:15 -0400 (Wed, 26 Sep 2012) | 1 line

split makefiles into gnu and intel variants
------------------------------------------------------------------------
r129 | lundberg | 2011-09-27 05:57:43 -0400 (Tue, 27 Sep 2011) | 2 lines

small change to makefile. smarter test for DS-not-found

------------------------------------------------------------------------
r128 | lundberg | 2011-09-06 09:10:49 -0400 (Tue, 06 Sep 2011) | 2 lines

minor updates. doc fixes. simplified examples.

------------------------------------------------------------------------
r127 | lundberg | 2011-09-06 09:10:24 -0400 (Tue, 06 Sep 2011) | 2 lines

mored model mssmX into core

------------------------------------------------------------------------
r126 | lundberg | 2011-09-05 10:01:54 -0400 (Mon, 05 Sep 2011) | 3 lines

updated docs
reindented all files. renames some classes

------------------------------------------------------------------------
r125 | lundberg | 2011-09-05 08:22:29 -0400 (Mon, 05 Sep 2011) | 2 lines

updated makefile and examples

------------------------------------------------------------------------
r124 | lundberg | 2011-09-05 08:07:47 -0400 (Mon, 05 Sep 2011) | 2 lines

small update to makefile and doc

------------------------------------------------------------------------
r123 | lundberg | 2011-09-05 07:58:12 -0400 (Mon, 05 Sep 2011) | 3 lines

simplified example file demo_main
removed old example scanners

------------------------------------------------------------------------
r122 | lundberg | 2011-09-05 04:44:09 -0400 (Mon, 05 Sep 2011) | 2 lines

changed some class names. removed old Fermi example

------------------------------------------------------------------------
r121 | lundberg | 2011-09-05 04:31:11 -0400 (Mon, 05 Sep 2011) | 3 lines

renamed darkSusyEngine to DarkSusyEngine


------------------------------------------------------------------------
r120 | lundberg | 2011-09-03 03:27:48 -0400 (Sat, 03 Sep 2011) | 9 lines


simplified the Engine code using named_cache and map_looper template.
added dynamic casts to dark susy engine for selecting the right fortran give model 

Updated examples. added pmssm/cmssm option to dsexample_main

Fixed a bug in EngineBase where pure virtual method could be calle dy destructor.


------------------------------------------------------------------------
r119 | lundberg | 2011-09-03 03:24:04 -0400 (Sat, 03 Sep 2011) | 2 lines

doc updates

------------------------------------------------------------------------
r118 | lundberg | 2011-09-03 03:23:21 -0400 (Sat, 03 Sep 2011) | 2 lines

defining the interface for the named cache class

------------------------------------------------------------------------
r117 | lundberg | 2011-09-03 03:22:42 -0400 (Sat, 03 Sep 2011) | 2 lines

removed unused argument

------------------------------------------------------------------------
r116 | lundberg | 2011-09-03 03:22:08 -0400 (Sat, 03 Sep 2011) | 2 lines

made classes for pmssm and cmssm. 

------------------------------------------------------------------------
r115 | lundberg | 2011-09-03 03:21:09 -0400 (Sat, 03 Sep 2011) | 2 lines

added printing of models and status to a log file

------------------------------------------------------------------------
r114 | lundberg | 2011-09-03 01:17:39 -0400 (Sat, 03 Sep 2011) | 18 lines

two new classes, named_cache making EngineBase and for example dark susy easier to implement.

named_cache:

This class implements a cache of type O (as in option) to C (as in cache).
Each option is registered with a name using the Register method.
Several options can have the same option.
The user can directly access the std::map of options -> cache
using the iterators begin(),rbegin() etc, as if named_cache was a std::map.
The cache values must for now be default constructable.
There's a template specialization for the no (void) option case:
named_cache<C>.

map_looper:

ease looping over map like objects (such as named_cache).


------------------------------------------------------------------------
r113 | lundberg | 2011-08-30 11:15:32 -0400 (Tue, 30 Aug 2011) | 3 lines

added example of a histogram with flexible settings calculated and cached. At ExampleEngine.hh.


------------------------------------------------------------------------
r112 | lundberg | 2011-08-30 10:17:32 -0400 (Tue, 30 Aug 2011) | 2 lines

example of class for passing binned data. Contains n+1 bin edges and n values, nothing more. 

------------------------------------------------------------------------
r111 | lundberg | 2011-08-30 04:41:49 -0400 (Tue, 30 Aug 2011) | 2 lines

updated docsx

------------------------------------------------------------------------
r110 | lundberg | 2011-08-29 11:43:59 -0400 (Mon, 29 Aug 2011) | 2 lines

moved dark susy fortran calls to new .cpp file

------------------------------------------------------------------------
r109 | lundberg | 2011-08-29 11:25:44 -0400 (Mon, 29 Aug 2011) | 5 lines

Reworked how the Enginebase treats variables so that registering and clearing of variables in the caches can now be now done by the framwork. DarkSusyEngine.hh is an example of this. 
Added exceptions for mutliple variables with the same name in the same calculator. 
Moved code from hh into cxx. 


------------------------------------------------------------------------
r108 | lundberg | 2011-08-24 15:43:39 -0400 (Wed, 24 Aug 2011) | 3 lines

more development of the exception classes
implemented an example of exception throwing for dark susy and RandomScanner

------------------------------------------------------------------------
r107 | lundberg | 2011-08-24 08:22:59 -0400 (Wed, 24 Aug 2011) | 4 lines

rewrote logcore as a workspace. 
added exception classes and methods, found in include/core/logcore.hh
fixed bug in makefile

------------------------------------------------------------------------
r106 | lundberg | 2011-08-23 11:13:56 -0400 (Tue, 23 Aug 2011) | 3 lines

added stacktracke print+log to FATAL messages. Added more symbols for better trace info.


------------------------------------------------------------------------
r105 | lundberg | 2011-08-23 02:20:40 -0400 (Tue, 23 Aug 2011) | 5 lines

updated logcore for compile time enable/disable
updated logging of the examples
added low level log statements to EngineBase and AssociatedHandler
updated makefile  

------------------------------------------------------------------------
r104 | lundberg | 2011-08-22 16:32:01 -0400 (Mon, 22 Aug 2011) | 2 lines

tiny bugfix

------------------------------------------------------------------------
r103 | lundberg | 2011-08-22 16:29:26 -0400 (Mon, 22 Aug 2011) | 8 lines


rewrote makefile for real dep tests, and added help text during first make

removed old unused files

small updates


------------------------------------------------------------------------
r102 | lundberg | 2011-08-22 07:56:09 -0400 (Mon, 22 Aug 2011) | 2 lines

minor updates and docs

------------------------------------------------------------------------
r101 | lundberg | 2011-08-22 07:20:07 -0400 (Mon, 22 Aug 2011) | 2 lines

many small updates

------------------------------------------------------------------------
r100 | lundberg | 2011-08-22 07:08:48 -0400 (Mon, 22 Aug 2011) | 2 lines

updated with optional argument for debug messages. 

------------------------------------------------------------------------
r99 | lundberg | 2011-08-19 09:37:57 -0400 (Fri, 19 Aug 2011) | 2 lines

small updates

------------------------------------------------------------------------
r98 | lundberg | 2011-08-19 09:33:36 -0400 (Fri, 19 Aug 2011) | 3 lines

updated log setup and replaced many std::cout and std::cerr with new log format messages.
Added compile time option for completely removing the lowest debug levels from the build.

------------------------------------------------------------------------
r97 | lundberg | 2011-08-19 09:32:12 -0400 (Fri, 19 Aug 2011) | 4 lines

added small sufit_core class. 
traps ctrl-c and other signals so that exit() can be properly called at termination. 
Logfiles are autmatically closed since the log setup is already registered using atexit.

------------------------------------------------------------------------
r96 | lundberg | 2011-08-19 06:18:53 -0400 (Fri, 19 Aug 2011) | 2 lines

small update

------------------------------------------------------------------------
r95 | lundberg | 2011-08-19 06:18:00 -0400 (Fri, 19 Aug 2011) | 3 lines

added logging macros and log methods implementation using a small interface class with static methods + a logcore_imp implementation class found only in the cpp file.  
Read the doxygen documentation on logcore for examples.

------------------------------------------------------------------------
r94 | seo | 2011-08-18 10:44:22 -0400 (Thu, 18 Aug 2011) | 1 line

Add IceCubeExperimentEngine.hh, and fix small typo in README.txt
------------------------------------------------------------------------
r93 | lundberg | 2011-08-17 10:59:56 -0400 (Wed, 17 Aug 2011) | 3 lines

added logging messages of type LOG, ERROR, WARN, FATAL,  etc. all streaming to different streams (for now just hard coded to stderr stdout).
they use __LINE__ etc for debug details. Tested with gcc. Perhaps work is required to make it work on other compilers. 

------------------------------------------------------------------------
r92 | lundberg | 2011-08-17 08:13:25 -0400 (Wed, 17 Aug 2011) | 3 lines

working example of dark susy scanning.
Note: there is no mechanism for dealing with exceptions or broken results, specifically if fortran darksusy fails there's no exeptions or other ways to deal with it yet.

------------------------------------------------------------------------
r91 | lundberg | 2011-08-17 04:02:24 -0400 (Wed, 17 Aug 2011) | 3 lines

makefile cleanup + small code updates


------------------------------------------------------------------------
r90 | lundberg | 2011-08-16 09:43:14 -0400 (Tue, 16 Aug 2011) | 4 lines

Ripken and I fixed linking problem with DarkSusy.

note. the example src/dsexample_main is mostly implemented but does not work properly yet.

------------------------------------------------------------------------
r89 | lundberg | 2011-08-16 08:00:22 -0400 (Tue, 16 Aug 2011) | 2 lines

small updates

------------------------------------------------------------------------
r88 | lundberg | 2011-08-15 10:44:41 -0400 (Mon, 15 Aug 2011) | 3 lines

Added coreUtils.hh with some non-member helper templates for use in core and engines.
Added example in DarkSusyEngine on how to keep the cache and set of requested options updated with the active requirements/ living variables.

------------------------------------------------------------------------
r87 | lundberg | 2011-08-04 21:36:57 -0400 (Thu, 04 Aug 2011) | 2 lines

removed old rules

------------------------------------------------------------------------
r86 | lundberg | 2011-08-04 21:27:44 -0400 (Thu, 04 Aug 2011) | 2 lines

example of what variables you may need to setup 

------------------------------------------------------------------------
r85 | lundberg | 2011-08-04 21:25:56 -0400 (Thu, 04 Aug 2011) | 7 lines

updated readme and makefile with help about boost

added dsexample_main with full example of model, scanner etc, with dark susy.

still could not test darksusy due to fortran linking problem


------------------------------------------------------------------------
r84 | lundberg | 2011-08-04 19:58:29 -0400 (Thu, 04 Aug 2011) | 13 lines

Added varibale initialization for dark susy with a simple model (for now hardcoded type 5 param msugra) 
Added [] operator to ModelParameters + several smaller changes.

-This line, and those below, will be ignored--

M    include/core/configuration_mark.hh
M    include/core/ModelParameters.hh
M    include/core/EngineBase.hh
M    include/DarkSusyEngine.hh
M    src/core/configuration_mark.cpp
M    src/demo_main.cpp
M    makefile

------------------------------------------------------------------------
r83 | lundberg | 2011-08-04 19:02:16 -0400 (Thu, 04 Aug 2011) | 19 lines

many core updates.

now requires boost (http://www.boost.org/users/download/). 
It's easy to install (even when not root) and extremely powerful.

Wrote most of a real DarkSusyEngine: DarkSusyEngine.hh 

  Several examples of calls to the fortran DS (thanks to the version by J Ripken)
  For DarkSusyEngine I implemented ways to check out multiple variables 
  that use the same fortran method, but each with different option. 
  Implemented examples of caching with multiple in and out arguments 
  to a fortran function.
  All calculation calls to fortran DS are automatically done together in one go when
  required, and only the required calculations are made.
  I'm _not_ done with DarkSusyEngine.hh, specifically the input model is not
  yet specified (!) and I also could not test it due to fortran linking problems.
    


------------------------------------------------------------------------
r82 | lundberg | 2011-08-02 19:20:51 -0400 (Tue, 02 Aug 2011) | 2 lines

removed old comments. Cleaned. Fixed spelling accociated->associated ... ;)

------------------------------------------------------------------------
r81 | lundberg | 2011-08-02 19:12:29 -0400 (Tue, 02 Aug 2011) | 18 lines

Added operator-> and operator* to AccociatedHandler.

This allows fast (no-copy) temporary access to the calculated result values. 
For example if the actual result is a std::vector<double> stored in a shared handle 
(as in the examples in demo_main.cxx)
you can just do (*myhandler)->size() or (*myhandler)->at(32) or (**myhandler)[32] . 

If you need a copy for later use either do (the old syntax. Makes a copy.)
   std::vector<double> myvec = myhandler->Get(); 
or, now with the new operators, with identical result:
   std::vector<double> myvec = **myhandler;    
// Note, ** above is: One * for shared_ptr, and one * for Handler<double>

EngineBase and AccociatedHandler and Handler were also changed to make sure no 
results are copied when passed from the framework to the user. The example 
Engines where updated accordingly.


------------------------------------------------------------------------
r80 | lundberg | 2011-08-02 05:50:31 -0400 (Tue, 02 Aug 2011) | 2 lines

moved configuration_mark into sufit namespace

------------------------------------------------------------------------
r79 | lundberg | 2011-08-02 05:23:06 -0400 (Tue, 02 Aug 2011) | 7 lines

Added use of the new configuration_mark for (optionally) automatically keeping track of which handlers requires what unerdlying ENGINE calculations. 

The dependencies of each AccociatedHandler is managed by HandlerBase. EngineBase keeps track of the logical sum of all requirements and it available to subclasses via get_configuration_marks()

Example in DummyDarkSusyEnging.


------------------------------------------------------------------------
r78 | lundberg | 2011-08-02 05:06:40 -0400 (Tue, 02 Aug 2011) | 9 lines


New independent class, configuration_mark.

Documentation not added yet.

The class is used for creating marker objects. There are no constructor options, 
but each object is unique. Look at DummyDarkSusy for example use. 


------------------------------------------------------------------------
r77 | lundberg | 2011-07-31 19:38:15 -0400 (Sun, 31 Jul 2011) | 8 lines

changed almost all files:
Handlers are now held by 'shared_ptr'. 
When no code still knows a handle it is automatically released and 
unregistered.
Added protection and diagnostic for (the very unlikely case of) handlers with references to deleted engines.
Moved code from EngineBase.hh to new EngineBase.cpp


------------------------------------------------------------------------
r76 | lundberg | 2011-07-30 10:24:01 -0400 (Sat, 30 Jul 2011) | 2 lines

moved old DS example (core example without fortran) to this new name

------------------------------------------------------------------------
r75 | lundberg | 2011-07-30 10:23:14 -0400 (Sat, 30 Jul 2011) | 3 lines

core design updates + cleanup


------------------------------------------------------------------------
r74 | lundberg | 2011-07-15 09:16:54 -0400 (Fri, 15 Jul 2011) | 3 lines

renamed the pMSSM7 and CMSSM files so that they no longer have _DS postfix.
Next step is to integrate them with the new core

------------------------------------------------------------------------
r73 | lundberg | 2011-07-15 09:14:02 -0400 (Fri, 15 Jul 2011) | 2 lines

small core updates

------------------------------------------------------------------------
r72 | lundberg | 2011-07-15 07:28:28 -0400 (Fri, 15 Jul 2011) | 2 lines

ignoring fortran files. (doxygen is for c++)

------------------------------------------------------------------------
r71 | lundberg | 2011-07-15 07:17:45 -0400 (Fri, 15 Jul 2011) | 2 lines

Ported Scanner_random into the now class 'RandomScanner'. 

------------------------------------------------------------------------
r70 | lundberg | 2011-07-15 06:50:21 -0400 (Fri, 15 Jul 2011) | 2 lines

spell

------------------------------------------------------------------------
r69 | lundberg | 2011-07-15 06:48:51 -0400 (Fri, 15 Jul 2011) | 2 lines

hide some files

------------------------------------------------------------------------
r68 | lundberg | 2011-07-15 06:47:19 -0400 (Fri, 15 Jul 2011) | 2 lines

hide some files

------------------------------------------------------------------------
r67 | lundberg | 2011-07-15 06:42:50 -0400 (Fri, 15 Jul 2011) | 4 lines

doxygen doc updates + readme file with some credits

updated makefile for better use with doxygen + automatic recompile on header change

------------------------------------------------------------------------
r66 | lundberg | 2011-07-15 06:41:32 -0400 (Fri, 15 Jul 2011) | 2 lines

Ported Random Scanner from old to new framework

------------------------------------------------------------------------
r65 | lundberg | 2011-07-14 10:23:47 -0400 (Thu, 14 Jul 2011) | 4 lines

updates, included get/set methods from Ripken's Model and Parameterset into ModelParameters
added comments + adapted examples. 
Added assert to make sure only existing values in a Parameterset can be used

------------------------------------------------------------------------
r64 | lundberg | 2011-07-14 08:20:16 -0400 (Thu, 14 Jul 2011) | 1 line

changed demo example to avoid compiler warning
------------------------------------------------------------------------
r63 | lundberg | 2011-07-14 08:17:15 -0400 (Thu, 14 Jul 2011) | 2 lines

fixed compiler warnings

------------------------------------------------------------------------
r62 | lundberg | 2011-07-14 08:06:15 -0400 (Thu, 14 Jul 2011) | 2 lines

removed old version of Scanner base class. New version in core/ScannerBase.hh 

------------------------------------------------------------------------
r61 | lundberg | 2011-07-14 07:19:18 -0400 (Thu, 14 Jul 2011) | 2 lines

doc changes

------------------------------------------------------------------------
r60 | lundberg | 2011-07-14 07:04:56 -0400 (Thu, 14 Jul 2011) | 2 lines

spelling

------------------------------------------------------------------------
r59 | lundberg | 2011-07-14 07:03:52 -0400 (Thu, 14 Jul 2011) | 2 lines

header for demo 

------------------------------------------------------------------------
r58 | lundberg | 2011-07-14 07:02:38 -0400 (Thu, 14 Jul 2011) | 2 lines

svn ignore set for bin dir

------------------------------------------------------------------------
r57 | lundberg | 2011-07-14 06:59:47 -0400 (Thu, 14 Jul 2011) | 2 lines

main page for doxygen doc

------------------------------------------------------------------------
r56 | lundberg | 2011-07-14 06:59:07 -0400 (Thu, 14 Jul 2011) | 2 lines

Updated documentation (doxygen)

------------------------------------------------------------------------
r55 | lundberg | 2011-07-14 06:08:53 -0400 (Thu, 14 Jul 2011) | 2 lines

bin directory

------------------------------------------------------------------------
r54 | lundberg | 2011-07-14 05:17:19 -0400 (Thu, 14 Jul 2011) | 2 lines

added documentation folder

------------------------------------------------------------------------
r53 | lundberg | 2011-07-13 11:23:09 -0400 (Wed, 13 Jul 2011) | 3 lines

changed makefile and added example doxygen configuration and make rule.
Reformated doc for darksusy engine

------------------------------------------------------------------------
r52 | lundberg | 2011-07-13 10:44:27 -0400 (Wed, 13 Jul 2011) | 2 lines

updated makefile for new examples

------------------------------------------------------------------------
r51 | lundberg | 2011-07-13 09:39:34 -0400 (Wed, 13 Jul 2011) | 2 lines

spell fix in comment

------------------------------------------------------------------------
r50 | lundberg | 2011-07-13 09:39:09 -0400 (Wed, 13 Jul 2011) | 2 lines

renamed .cxx to .cpp and fixed a problem with the just written ScannerBase class

------------------------------------------------------------------------
r49 | lundberg | 2011-07-13 09:18:01 -0400 (Wed, 13 Jul 2011) | 2 lines

demo of some core and example classes 

------------------------------------------------------------------------
r48 | lundberg | 2011-07-13 09:17:26 -0400 (Wed, 13 Jul 2011) | 2 lines

GlobalResource handler for locking static/global objects such as a fortran library

------------------------------------------------------------------------
r47 | lundberg | 2011-07-13 08:56:41 -0400 (Wed, 13 Jul 2011) | 4 lines


Example data type, composite event (not just double as the other examples)
Other examples could be spectrum or histogram.

------------------------------------------------------------------------
r46 | lundberg | 2011-07-13 08:56:40 -0400 (Wed, 13 Jul 2011) | 6 lines


**
**  Silly example of LLH calculator comparing two complicated objects
**  (could be a spectrum. atlasevent is not a good example)
**

------------------------------------------------------------------------
r45 | lundberg | 2011-07-13 08:56:39 -0400 (Wed, 13 Jul 2011) | 8 lines


Two example engines (two classes in this file)
atlasTheoryEventEngine and atlasExperimentEngine
**
**  Engine interface to some code who knows something about
**  atlas theoretical signatures, could be IsaJet
**

------------------------------------------------------------------------
r44 | lundberg | 2011-07-13 08:56:38 -0400 (Wed, 13 Jul 2011) | 5 lines


Example for a backend to dark susy
it knows both experimental and theoretical stuff, and in this example
it also knows how to return a LLH for a specific measurement

------------------------------------------------------------------------
r43 | lundberg | 2011-07-13 08:56:37 -0400 (Wed, 13 Jul 2011) | 3 lines


Dummy (empty) example scanner. 

------------------------------------------------------------------------
r42 | lundberg | 2011-07-13 08:56:36 -0400 (Wed, 13 Jul 2011) | 5 lines


Example...
Engine interface to some code (fortran?) who knows something about
fermi experimental signatures. (count, gamma spectra etc)

------------------------------------------------------------------------
r41 | lundberg | 2011-07-13 08:56:09 -0400 (Wed, 13 Jul 2011) | 8 lines


empty example model.
mssmX class. Option nu_dimensions for mssm X may be 24,25, 100, etc..
it's a most trivial example - fine for example when using darksusy who
knows how to deal with mssm24.
Could provide more in other cases, for example doing stuff based on
a Lagrangian.

------------------------------------------------------------------------
r40 | lundberg | 2011-07-13 08:37:13 -0400 (Wed, 13 Jul 2011) | 2 lines

added src core dir

------------------------------------------------------------------------
r39 | lundberg | 2011-07-13 08:36:40 -0400 (Wed, 13 Jul 2011) | 5 lines

new in core: 
Example for a backend to dark susy
it knows both experimental and theoretical stuff, and in this example
it also knows how to return a LLH for a specific measurement

------------------------------------------------------------------------
r38 | lundberg | 2011-07-13 08:36:39 -0400 (Wed, 13 Jul 2011) | 32 lines

new in core: 
GlobalResourceScopeLock
-----------------------
Lock a global Resource by name. The lock is held by the object.
Give a string to the constructor to get the global lock for that name.
The lock is release by the destructor.
Atempting to lock the same global resource (same name) more than
once a the same time will throw runtime_exception.
This can be used in any scope, or for example as a member variable for
classes who should not ever have more than one simultaniours instance,
and where returning a reference to the existing object (normal singleton)
is not safe.
For example, interface to fortran/c methods with global/static states.
Could also be used to lock access for example to filenames, but
care must be taken since many filenames can lead to the same file.
/*
Example use
class myHandler {
public:
myHandler(std::string tmpx) : _lock("fortranCodeX",tmpx){}
private:
sufit::GlobalResourceScopeLock _lock;
};
myHandler handleA("A");
myHandler handleB("B");  // will fail. fortranCodeX already used.
This will work however:
{
myHandler handleA("A");
}
myHandler handleB("B");   // fortranCodeX already release at destr of A.
*/

------------------------------------------------------------------------
r37 | lundberg | 2011-07-13 08:36:38 -0400 (Wed, 13 Jul 2011) | 6 lines

new in core: 
simple base class for a code able to register and calculate values
based on some model. ( May also just ignore the model in some cases )
Keeps track of the current version of the models parameter so that
recalculations are only done when required.

------------------------------------------------------------------------
r36 | lundberg | 2011-07-13 08:36:37 -0400 (Wed, 13 Jul 2011) | 16 lines

new in core: 
AccocciatedHandler<BACKEND><T>
---------------------------
A handler who encapsulates two peaces of information:
1. what variables is requested (namely, a pointer to member function)
2. what object will calculate this for the user.
If you are not used to template this is a bit hard to read:
Example: if dark susy provides a handler with with you can get an object of
type T then the variable handler type is 'AccocciatedHandler<darkSusyEngine><T>.
The user will not use this class. instead he will use Handler<T> which is
a baseclass. So she can use handlers of say type Hanbdler<double> and
behind the scenes the right backend will be called.
Note: using this template in the handlers are not hard (look at the examples)
T is the type of the actual data we want to retrieve, such as a double, spectrum, etc.
BACKEND is the type of a calculator. See the darkSusyEngine example

------------------------------------------------------------------------
r35 | lundberg | 2011-07-13 08:36:36 -0400 (Wed, 13 Jul 2011) | 6 lines

new in core: 
LLH calculator for cases where a poisson count should be compared
to a poisson expectation with no uncertainties.
The method is templated (mostly as an example) to allow handlers
with Get() results which can be casted to double.

------------------------------------------------------------------------
r34 | lundberg | 2011-07-13 08:36:35 -0400 (Wed, 13 Jul 2011) | 5 lines

new in core: 
Example and base class for typical model parameters.
Not so important how set/get works
but the model you want to use must be able to understand it

------------------------------------------------------------------------
r33 | lundberg | 2011-07-13 08:36:34 -0400 (Wed, 13 Jul 2011) | 7 lines

new in core: 
virtual base class for model parameters. Not so important how set/get works
but the model you want to use must be able to understand it
perhaps this base class is not required. In any case, any changing of
the internals must call this base updateVersion()
Note: for now, Models are make uncopyable to prevent surprises.

------------------------------------------------------------------------
r32 | lundberg | 2011-07-13 08:36:33 -0400 (Wed, 13 Jul 2011) | 4 lines

new in core: 
Baseclass for Handler
objects of this type can only be created by shildren of EngineBase

------------------------------------------------------------------------
r31 | lundberg | 2011-07-13 08:36:32 -0400 (Wed, 13 Jul 2011) | 8 lines

new in core: 
virtual base class for model parameters.
Not so important how set/get works but the model you want to use must
be able to understand it perhaps this base class is not required.
Updating any internals (eg. in subclasses) must explicitly call
updateVersion()
Todo: copying behaviour?

------------------------------------------------------------------------
r30 | lundberg | 2011-07-13 08:36:31 -0400 (Wed, 13 Jul 2011) | 4 lines

new in core: 
An example LLH calculator which is defined as the LLH sum
of other LLH calculators

------------------------------------------------------------------------
r29 | lundberg | 2011-07-13 08:36:30 -0400 (Wed, 13 Jul 2011) | 4 lines

new in core: 
Example baseclass defining commong methods of scanner interfaces
pure virtual baseclass

------------------------------------------------------------------------
r28 | lundberg | 2011-07-13 08:36:29 -0400 (Wed, 13 Jul 2011) | 4 lines

new in core: 
Handler of type <T>, pure abstract base class.
Please read the description of AccocciatedHandler<BACKEND><T> below:

------------------------------------------------------------------------
r27 | lundberg | 2011-07-13 08:36:28 -0400 (Wed, 13 Jul 2011) | 4 lines

new in core: 
Converter from Handler<double> to LLh interface. Useful when
backend returns double holding a llh variable

------------------------------------------------------------------------
r26 | lundberg | 2011-07-13 08:36:27 -0400 (Wed, 13 Jul 2011) | 7 lines

new in core: 
Selects a good shared pointer for use in sufit
for now we use the shared pointer from tr1. This works
with (at least) gcc 4.2 and later. TODO: setup the makefiles
to help with this.
give new names to some templates (C++ pre 0x does not support simple typedef)

------------------------------------------------------------------------
r25 | lundberg | 2011-07-13 08:36:26 -0400 (Wed, 13 Jul 2011) | 6 lines

new in core: 
Uncopyable
----------
A baseclass used to prevent copying. Good for handlers, etc.
(from item 6, Effective C++. Scott Meyers, isbn 978-0-321-33487-9 )

------------------------------------------------------------------------
r24 | lundberg | 2011-07-13 08:36:25 -0400 (Wed, 13 Jul 2011) | 3 lines

new in core: 
interface for LLH calculator, aka Comparator

------------------------------------------------------------------------
r23 | lundberg | 2011-07-13 08:36:24 -0400 (Wed, 13 Jul 2011) | 4 lines

new in core: 
Basic sufit types. No coposit classes or helpers here, only
typedefs etc. Should not include any other (big) headers

------------------------------------------------------------------------
r22 | lundberg | 2011-07-13 08:31:17 -0400 (Wed, 13 Jul 2011) | 2 lines

Added core (framework) directory

------------------------------------------------------------------------
r3 | seo | 2011-07-01 04:08:27 -0400 (Fri, 01 Jul 2011) | 1 line

Change back the subdirectory names.
------------------------------------------------------------------------
r2 | seo | 2011-06-30 15:25:33 -0400 (Thu, 30 Jun 2011) | 1 line

import SUFit project
------------------------------------------------------------------------
