NEW TODO list
2016-07-12 (CW)


DarkBit
=======

Discussion/wait:
- Z0 spectrum [JE]
- Check IB mass setting routines [TB, CW]
- Check what happens with kinematically close but virtually open 
  annihilation channels (Pat mail 13 May).  Should use rescaling.  Using 
  nothing now. [CW]
- Diskless initialization problems [JE]

Urgent (for production runs):
- Figure out 175 GeV complaints of DS (CMSSM_ttbar_problem.yaml)
- Figure out h+ higgswidth problems with DS SLHA initialization (CMSSM_dsSLHA_problem.yaml)
- Make final decision about local dark matter density uncertainties

Before internal paper review:
- More details on FCMC:DecayTable object in paper
- Redo plots Fig. 7 (more channels) and Fig. 8 (official limits)
- Make sure that gambit_DarkBit_examples.yaml makes sense and is properly explained

After internal paper review started:
- Do Skypes [CW, JE, TB]
  - Go through RelicDensity FIXME items via skype with Torsten (see file)
  - Go through diskless init problems via skype with Joakim (see file)
- GalacticHalo model [CW]
  - Implement GalacticHalo model with r_s as relevant parameter (Pat mail from 2 Jul)
  - Update GalacticHalo model to include Sun distance
  - Update GalacticHalo model in gamlike
  - Make sure that halo model is used consistently between nuLike, gamLike and 
    DDCalc
- Add genRateMisc to cascade code [CW]
- Prepare post-processing of CMSSM results with alternative DarkBit configurations [CW]
- Check again convergernce critrion in cascade code (seems to be uncritical right now) [CW]
- Clean up header and src files from old mess [CW]
- Check whether DD calculations require decay information from ProcessCatalog [CW]
- Move micromegas installation routines into the cmake system [JC]
- Check that masses given to DD calc are always positive (Chris mail from 28 May) [CW]
- Check content of SloopyDarkBit.cpp [CW]
- Start adding descriptions to the capability database [CW, PS, JE, TB, JC]
- Mention all options in the darkbit paper [CW]
- Update valid energy ranges in SimYieldTables (GamYields.cpp) [JC]
- Check t tbar final single states in GamYields.cpp [CW]
- Add getValue docs for SimpleLikelihoods.cpp, SunNeutrinos.cpp, MSSM.cpp, SingletDM.cpp, ... [CW, PS, JE, TB, JC]
- Cascade code [CW]
  - Decide what to do with quark final states in cascade code (Cascades.cpp:61)
  - Double-check sampling in cascade code
  - Think about convergence criterion in cascade code
- Double-check SingletDM expression [JC]
- gambit_SingletDM_hdf5_bad_process_catalog.yaml :  Delete or keep? [JC]
- Make decision about default speeds for RD in DS [TB, CW]
- Check FIXME in Cascades.cpp, decay_chain.cpp [CW]
- Check again boost gsl integration for stability (SingletDM_test...) [CW]

Later/maybe/not-first-release:
- Use singlet scalar spectrum object (which is not existing up to now)
- DarkMatterID should come from MSSM_spectrum -- MSSM.cpp
- Update SunNeutrinos.cpp once BF become available from ProcessCatalog [PS]
- Weff plot (ask Joakim about sigmav_eff(T) routines)
- Renormalize the Fermi and other likelihoods in gamLike
- SunNeutrinos.cpp: change below to >= when version numbers are available as 
  ints
- Check directly nested integral bug DarkBit.cpp:200 (37bf52e9f79a)
- Implement filter module for masses from Spectrum object to masses used in 
  DarkBit
- Split GamYield in cascade and tabulated parts, to allow dynamic stopping
  conditions for the cascade codes
- Remove dependency on mwimp capability everywhere
- Implement Higgs yields
- Test Nazlias `DarkBit_SuperIsoRelic` routines (mail from 14-07-2015)
- Backend PPPC yields table (inclusive Higgs yields)
- CMB likelihoods
- Implement gamma-ray line limits (HESS-II, Fermi)

Done:
- Figure out DD problems without SLHA initialization
- Check NUHM_Diver.yaml, and whether it works with micromegas


Core
====

Do:
- Understand why the timing system does not work properly for parallel codes 
  (looping) [CW]

Later/maybe:
- Target options to specific function -- is this possible (Mail from 26 May from Pat)
- Dependencies of loop-manager managed functions to be added to loop-manager
  loop should only run after *all* relevant parent functors have been evaluated
- Implement function > module rules
- Check out FIXME statements in funktions.hpp again and resolve SegFault issues
- Avoid minimal loops in the dep-resolver / cyclic dependency fix
- Documentation for BaseFunctions
- Set backend versions globally in YAML file as of Pats mail from 21-12-15
- Specify only function name in ObsLike section
- Think about "!ignore" flag for debug purposes
- Implement printing of stand-alone code in core
