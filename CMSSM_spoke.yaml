Parameters:

  #SM nuisance parameters.
  StandardModel_SLHA2: !import StandardModel_SLHA2_defaults.yaml

  #Nuclear matrix parameters.
  nuclear_params_sigmas_sigmal:
    sigmas: 40.5
    sigmal: 58.0
    deltau: 0.842
    deltad: -0.427
    deltas: -0.085

  CMSSM:
    M0: 2800
#     range: [2550, 3050]
    M12: # 475
      range: [350, 600]
    A0: 1725
    TanBeta: 51
    SignMu: 1

  LocalHalo:
    rho0: # Local dark matter density
      fixed_value: .4 # GeV/cm^3
      #range: [.2, .8]
      #prior_type: flat
    vrot: # Local disk rotation speed
      fixed_value: 235 # km/s
    v0: # Maxwellian most-probable speed
      fixed_value: 235 # km/s
    vesc: # Local galactic escape speed
      fixed_value: 550 # km/s

#  Halo_gNFW_rho0:
#    rho0: 0.4
#    v0: 235.0
#    vesc: 550.0
#    vrot: 235.0
#    rs: 20.0
#    r_sun: 8.5
#    alpha: 1
#    beta: 3
#    gamma: 1
     
Priors:

  # All priors simple, so specified in Parameters section

Printer:

  printer: ascii

  options:
    output_file: "M12.txt"

Scanner:

  use_scanner: spoke

  scanners:

    spoke:
      plugin: grid
      like: LogLike
      grid_pts: [11]
      version: "=1.0"
  
ObsLikes:

    - capability: lnL_oh2
      purpose:    LogLike

    - capability: lnL_FermiLATdwarfs
      purpose:    LogLike

    - capability: LUX_2013_LogLikelihood
      purpose:    LogLike

    - capability: IC79_loglike
      purpose:    LogLike

    # Other observables
    - purpose:    Observable
      capability: RD_oh2

    - purpose:    Observable
      capability: mwimp

    - purpose:    Observable
      capability: sigmav

    - purpose:    Observable
      capability: sigma_SI_p

    - purpose:    Observable
      capability: sigma_SD_p



Rules:

  # Tell all functions that are able to dump SLHA files to do so.
  #- options:
  #    drop_SLHA_file: true

  # Choose to implement the relic density likelihood as an upper bound, not a detection
  - capability: lnL_oh2
  #  function: lnL_oh2_upperlimit
    function: lnL_oh2_Simple

  # Choose to rescale signals in direct and indirect detection by the relic density fraction
  - capability: RD_fraction
    function: RD_fraction_fixed
 
  # Use DarkSUSY, MicrOmegas or the DarkBit native calculator for the relic density?
  - capability: RD_oh2
    #function: RD_oh2_general
    #function: RD_oh2_DarkSUSY
    function: RD_oh2_MicrOmegas
    options:
      fast: 1
      omtype: 1
      Beps: 1e-5
  
  - capability: DarkSUSY_PointInit
    function: DarkSUSY_PointInit_MSSM
    options:
      use_dsSLHAread: False

  # Choose to use detailed Fermi Pass 8 dwarf likelihoood, using gamlike
  - capability: lnL_FermiLATdwarfs
    function:  lnL_FermiLATdwarfs_gamLike

  # Choose to use DarkSUSY yield tables for indirect detection
  - capability: SimYieldTable
    function: SimYieldTable_DarkSUSY

  # Use DarkSUSY or MicrOmegas for calculating direct detection couplings
  - capability: DD_couplings
    #function: DD_couplings_DarkSUSY
    function: DD_couplings_MicrOmegas

  # Choose to get decays from DecayBit proper, not from an SLHA file.
  - capability: decay_rates
    function: all_decays

  # Choose to get the spectrum from SpecBit proper, not an SLHA file.
  - capability: unimproved_MSSM_spectrum
    function: get_CMSSM_spectrum
    options:
      # Set to match benchmark point specified in
      # SpecBit/MSSM_benchmark_points/LesHouches.in.MSSM_1
      precision_goal:        1.0e-4
      max_iterations:        0
      calculate_sm_masses:   false
      pole_mass_loop_order:  2
      ewsb_loop_order:       2
      beta_loop_order:       2
      threshold_corrections_loop_order: 1
      use_higgs_2loop_at_as: true
      use_higgs_2loop_ab_as: true
      use_higgs_2loop_at_at: true
      use_higgs_2loop_atau_atau: true
      invalid_point_fatal: false

  # Make sure to use the latest version (2.11.3) of FeynHiggs for everything.
  # Here is the current clunky way to do this:
  - capability: FH_Precision
    backends:
    - {backend: FeynHiggs, version: 2.11.3}
  - capability: prec_HiggsMasses
    backends:
    - {backend: FeynHiggs, version: 2.11.3}
  - capability: Higgs_Couplings
    backends:
    - {backend: FeynHiggs, version: 2.11.3}
  - capability: FH_HiggsProd
    backends:
    - {backend: FeynHiggs, version: 2.11.3}
  - capability: FH_MSSMMasses
    backends:
    - {backend: FeynHiggs, version: 2.11.3}
  # Here is the slick version that will be implemented in a future release:
  #- backend: FeynHiggs
  #  version: 2.11.3
  # In practice, the easiest option is just to not install / nuke the versions you don't want to use, e.g.
  #  make nuke-feynhiggs_2_11_2  

  # Choose to take FeynHiggs 2.11.3's prediction for the Higgs mass (rather then FlexibleSUSY's).
  # Choose to use the difference between the FeynHiggs and spectrum generator predictions, along
  # with the FH error estimate, to estimate the theoretical error on the prediction.
  - capability: MSSM_spectrum
    options:
      Higgs_predictions_source: 1
      Higgs_predictions_error_method: 4

  # Choose to use functions that get Higgs and top decays from FeynHiggs (rather than SUSY-HIT)
  - capability: A0_decay_rates
    function: FH_A0_decays
  - capability: Higgs_decay_rates
    function: FH_MSSM_h0_1_decays
  - capability: H_plus_decay_rates
    function: FH_H_plus_decays
  - capability: h0_2_decay_rates
    function: FH_h0_2_decays
  - capability: t_decay_rates
    function: FH_t_decays

  - options:
      gauge_mixing_tolerance: 0.5
      family_mixing_tolerance: 0.5
      #gauge_mixing_tolerance_invalidates_point_only: false
      #family_mixing_tolerance_invalidates_point_only: false

Logger:

  redirection:
    [Debug] : "debug.log"
    [Default] : "default.log"
    [DecayBit] : "DecayBit.log"
    [DarkBit] : "DarkBit.log"
    [PrecisionBit] : "PrecisionBit.log"
    [FlavBit] : "FlavBit.log"
    [SpecBit] : "SpecBit.log"
    [Dependency Resolver] : "dep_resolver.log"

KeyValues:

  dependency_resolution:
    prefer_model_specific_functions: true

  likelihood:
    model_invalid_for_lnlike_below: -1e10

  default_output_path: "runs/CMSSM_spoke/"

  debug: true
