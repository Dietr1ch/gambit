Parameters:

  #SM nuisance parameters.
  StandardModel_SLHA2: !import StandardModel_SLHA2_MSSM_scan.yaml

  #Nuclear matrix parameters.
  nuclear_params_sigmas_sigmal:
    sigmas:
      range:  [19, 67] 
    sigmal:
      range:  [31, 85]
    deltau:
      fixed_value:  0.842
    deltad:
      fixed_value: -0.427
    deltas:
      fixed_value: -0.085

  CMSSM:
    M0:
      range: [50, 10000]
      prior_type: log
    M12:
      range: [50, 10000]
      prior_type: log
    A0:
      range: [-10000, 10000]
      prior_type: flat
    TanBeta:
      range: [3.0, 70]
      prior_type: flat
    SignMu: 1

  LocalHalo:
    rho0: # Local dark matter density
      fixed_value: .4 # GeV/cm^3
      #range: [.2, .8]
      #prior_type: flat
    vrot: # Local disk rotation speed
      fixed_value: 235 # km/s
    v0: # Maxwellian most-probable speed
      fixed_value: 235 # km/s
    vesc: # Local galactic escape speed
      fixed_value: 550 # km/s

Priors:

  # All priors simple, so specified in Parameters section

Printer:

  # These lines tell GAMBIT to use the hdf5 printer
  # Can switch to the ascii printer by commenting out and
  # using the ascii lines below

  printer: hdf5

  options:
    output_file: "CMSSM.hdf5"
    group: "/CMSSM"
    delete_file_on_restart: true

  #printer: ascii

  #options:
  #  output_file: "gambit_output.txt"


Scanner:

  # Choose which scanner to use
  # Default is multinest
  # Random scanner setup is given below (can switch by using use_scanner: random)

 use_scanner: multinest

 scanners:
   multinest:
     plugin: MultiNest
     like:  LogLike
     nlive: 20000
     tol: 0.0001

    #random:
    #  plugin: random
    #  point_number: 1
    #  output_file:  output
    #  like:  Likelihood
    #  files:
    #    output_file: "weights ..."


ObsLikes:

    # Calculate the relic density likelihood
    - capability: lnL_oh2
      purpose:    LogLike

    # Calculate the Fermi-LAT dwarf likelihood
    - capability: lnL_FermiLATdwarfs
      purpose:    LogLike

    # Calculate the Xenon100 2012 likelihood
    - capability: XENON100_2012_LogLikelihood
      purpose:    LogLike

   # Calculate the LUX 2013 likelihood
    - capability: LUX_2013_LogLikelihood
      purpose:    LogLike

   # Calculate the IceCube 79 string likelihood
    - capability: IC79_loglike
      purpose:    LogLike

   # Calculate SM quantities
    - capability: lnL_t_mass
      purpose:    LogLike

    - capability: lnL_mbmb
      purpose:    LogLike

    - capability: lnL_alpha_em
      purpose:    LogLike

    - capability: lnL_alpha_s
      purpose:    LogLike

    - capability: lnL_W_mass
      purpose:    LogLike

    - capability: lnL_sinW2_eff
      purpose:    LogLike

    - capability: lnL_deltarho
      purpose:    LogLike

    # SI nuclear parameters likelihood (only works for nuclear_params_sigmas_sigmal model)
    - capability: lnL_SI_nuclear_parameters
      purpose:    LogLike

    # DM Local Halo likelihoods
    - capability: lnL_rho0
      purpose: LogLike
      
    - capability: lnL_vrot
      purpose: LogLike
      
    - capability: lnL_v0
      purpose: LogLike
      
    - capability: lnL_vesc
      purpose: LogLike
      
    - purpose:    Observable
      capability: MSSM_spectrum
      type:       map_str_dbl

    # Provide the actual relic density in the output (not just the likelihood)
    - purpose:    Observable
      capability: RD_oh2

    # Provide mwimp in the output
    - purpose:    Observable
      capability: mwimp

    # Provide sigmav in the output
    - purpose:    Observable
      capability: sigmav

    # Provide the spin-independent WIMP-proton cross-section in the output
    - purpose:    Observable
      capability: sigma_SI_p

    # Provide the spin-independent WIMP-neutron cross-section in the output
    - purpose:    Observable
      capability: sigma_SI_n

    # Provide the spin-dependent WIMP-proton cross-section in the output
    - purpose:    Observable
      capability: sigma_SD_p

    # Provide the spin-dependent WIMP-neutron cross-section in the output
    - purpose:    Observable
      capability: sigma_SD_n

Rules:

  # Choose to implement the relic density likelihood as an upper bound, not a detection
  - capability: lnL_oh2
    function: lnL_oh2_upperlimit

  # Uncomment these lines and comment the above lines to use the relic density likeihood as a detection (not an upper bound)
  #- capability: lnL_oh2
  #  function: lnL_oh2_Simple


  # Choose to rescale signals in direct and indirect detection by the relic density fraction
  - capability: RD_fraction
    function: RD_fraction_from_oh2
    options:
      mode: leq_one

  # Use DarkSUSY, MicrOmegas or the DarkBit native calculator for the relic density?
  # Consult the DarkBit manual for the required options in each case
  - capability: RD_oh2
    #function: RD_oh2_general
    #function: RD_oh2_DarkSUSY
    function: RD_oh2_MicrOmegas
    options:
      fast: 1
      omtype: 1
      Beps: 1e-5

  # Choose to use detailed Fermi Pass 8 dwarf likelihoood, using gamlike
  - capability: lnL_FermiLATdwarfs
    function:  lnL_FermiLATdwarfs_gamLike
  # Uncomment these lines (and comment the above) to use simple likelihoods instead
  #- capability: lnL_FermiLATdwarfs
  #  function:  lnL_FermiLATdwarfsSimple


  # Choose to use DarkSUSY yield tables for indirect detection
  - capability: SimYieldTable
    function: SimYieldTable_DarkSUSY
  # Other options can be obtained by uncommenting the relevant lines below (and commenting the above)
  #- capability: SimYieldTable
  #  function: SimYieldTable_MicrOmegas
  #- capability: SimYieldTable
  #  function: SimYieldTable_PPPC

  # Use DarkSUSY or MicrOmegas for calculating direct detection couplings
  - capability: DD_couplings
    #function: DD_couplings_DarkSUSY
    function: DD_couplings_MicrOmegas

  # Choose to get decays from DecayBit proper, not from an SLHA file.
  - capability: decay_rates
    function: all_decays

  # Choose to get the spectrum from SpecBit proper, not an SLHA file.
  - capability: unimproved_MSSM_spectrum
    function: get_CMSSM_spectrum
    options:
      # Set to match benchmark point specified in
      # SpecBit/MSSM_benchmark_points/LesHouches.in.MSSM_1
      precision_goal:        1.0e-4
      max_iterations:        0
      calculate_sm_masses:   false
      pole_mass_loop_order:  2
      ewsb_loop_order:       2
      beta_loop_order:       2
      threshold_corrections_loop_order: 1
      use_higgs_2loop_at_as: true
      use_higgs_2loop_ab_as: true
      use_higgs_2loop_at_at: true
      use_higgs_2loop_atau_atau: true
      invalid_point_fatal: false

  # Make sure to use the latest version (2.11.3) of FeynHiggs for everything.
  - capability: FH_Precision
    backends:
    - {backend: FeynHiggs, version: 2.11.3}
  - capability: prec_HiggsMasses
    backends:
    - {backend: FeynHiggs, version: 2.11.3}
  - capability: Higgs_Couplings
    backends:
    - {backend: FeynHiggs, version: 2.11.3}
  - capability: FH_HiggsProd
    backends:
    - {backend: FeynHiggs, version: 2.11.3}
  - capability: FH_MSSMMasses
    backends:
    - {backend: FeynHiggs, version: 2.11.3}
  # Here is the slick version that will be implemented in a future release:
  #- backend: FeynHiggs
  #  version: 2.11.3
  # In practice, the easiest option is just to not install / nuke the versions you don't want to use, e.g.
  #  make nuke-feynhiggs_2_11_2  

  # Choose to take FeynHiggs 2.11.3's prediction for the Higgs mass (rather then FlexibleSUSY's).
  # Choose to use the difference between the FeynHiggs and spectrum generator predictions, along
  # with the FH error estimate, to estimate the theoretical error on the prediction.
  - capability: MSSM_spectrum
    options:
      Higgs_predictions_source: 1
      Higgs_predictions_error_method: 4

  # Choose to use functions that get Higgs and top decays from FeynHiggs (rather than SUSY-HIT)
  - capability: A0_decay_rates
    function: FH_A0_decays
  - capability: Higgs_decay_rates
    function: FH_MSSM_h0_1_decays
  - capability: H_plus_decay_rates
    function: FH_H_plus_decays
  - capability: h0_2_decay_rates
    function: FH_h0_2_decays
  - capability: t_decay_rates
    function: FH_t_decays

  # Nuclear Parameter Likelihoods (All values in MeV)
  - capability: lnL_SI_nuclear_parameters
    function: lnL_sigmas_sigmal
    options:
      sigmas_obs: 43.
      sigmas_obserr: 8.
      sigmal_obs: 58.
      sigmal_obserr: 9.

  # DM Halo Model Likelihoods
  # (rho0_obserr/rho0_obs)^2 is the variance of ln(rho0/rho0_obs)
  - capability: lnL_rho0  # Local dark matter density
    function: lnL_rho0_lognormal
    options:
      rho0_obs: 0.4 # GeV/cm^3
      rho0_obserr: .15 # GeV/cm^3

  - capability: lnL_vrot  # Local disk rotation speed
    function: lnL_vrot_gaussian
    options:
      vrot_obs: 235 # km/s
      vrot_obserr: 20 # km/s

  - capability: lnL_v0   # Maxwellian most-probable speed
    function: lnL_v0_gaussian
    options:
      v0_obs: 235 # km/s
      v0_obserr: 20 # km/s

  - capability: lnL_vesc # Local galactic escape speed
    function: lnL_vesc_gaussian
    options:
      vesc_obs: 550 # km/s
      vesc_obserr: 35 # km/s

  # This block sets various options for the spectrum generator
  - options:
      gauge_mixing_tolerance: 0.5
      family_mixing_tolerance: 0.5
      #gauge_mixing_tolerance_invalidates_point_only: false
      #family_mixing_tolerance_invalidates_point_only: false

Logger:

  redirection:
    [Debug] : "debug.log"
    [Default] : "default.log"
    [DecayBit] : "DecayBit.log"
    [DarkBit] : "DarkBit.log"
    [PrecisionBit] : "PrecisionBit.log"
    [FlavBit] : "FlavBit.log"
    [ColliderBit] : "ColliderBit.log"
    [SpecBit] : "SpecBit.log"
    [Dependency Resolver] : "dep_resolver.log"

KeyValues:

  dependency_resolution:
    prefer_model_specific_functions: true

  # Options for the likelihood in the scan
  # Can choose a likelihood below which models are thrown away
  likelihood:
    model_invalid_for_lnlike_below: -1e4
    debug: true

  # Set the output path for the log files (relative to working directory unless absolute path is specified)
  default_output_path: "runs/CMSSM/"
