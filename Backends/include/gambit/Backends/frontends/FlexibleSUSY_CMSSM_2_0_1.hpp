//   GAMBIT: Global and Modular BSM Inference Tool
//   *********************************************
///  \file
///
///  Frontend header generated by BOSS for GAMBIT backend FlexibleSUSY_CMSSM 2.0.1.
///
///  *********************************************
///
///  Authors (add name and date if you modify):
///
///  \author The GAMBIT Collaboration
///
///  *********************************************

#include "gambit/Backends/backend_types/FlexibleSUSY_CMSSM_2_0_1/identification.hpp"

LOAD_LIBRARY

namespace Gambit
{
    namespace Backends
    {
        namespace FlexibleSUSY_CMSSM_2_0_1
        {
            namespace flexiblesusy
            {
                typedef ::FlexibleSUSY_CMSSM_2_0_1::flexiblesusy::Two_scale Two_scale;
            }
            namespace flexiblesusy
            {
                template <>
                using CMSSM_spectrum_generator::FlexibleSUSY_CMSSM_2_0_1::flexiblesusy::CMSSM_spectrum_generator<>;
            }
            namespace flexiblesusy
            {
                typedef ::FlexibleSUSY_CMSSM_2_0_1::flexiblesusy::CMSSM_input_parameters CMSSM_input_parameters;
            }
            namespace flexiblesusy
            {
                typedef ::FlexibleSUSY_CMSSM_2_0_1::flexiblesusy::Spectrum_generator_settings Spectrum_generator_settings;
            }
            namespace softsusy
            {
                typedef ::FlexibleSUSY_CMSSM_2_0_1::softsusy::QedQcd QedQcd;
            }
        }
    }
}

// Functions

// Enums
namespace Gambit
{
    namespace Backends
    {
        namespace FlexibleSUSY_CMSSM_2_0_1
        {
            namespace softsusy
            {
                typedef ::FlexibleSUSY_CMSSM_2_0_1::softsusy::mass mass;
                constexpr mass mUp = ::FlexibleSUSY_CMSSM_2_0_1::softsusy::mUp;
                constexpr mass mCharm = ::FlexibleSUSY_CMSSM_2_0_1::softsusy::mCharm;
                constexpr mass mTop = ::FlexibleSUSY_CMSSM_2_0_1::softsusy::mTop;
                constexpr mass mDown = ::FlexibleSUSY_CMSSM_2_0_1::softsusy::mDown;
                constexpr mass mStrange = ::FlexibleSUSY_CMSSM_2_0_1::softsusy::mStrange;
                constexpr mass mBottom = ::FlexibleSUSY_CMSSM_2_0_1::softsusy::mBottom;
                constexpr mass mElectron = ::FlexibleSUSY_CMSSM_2_0_1::softsusy::mElectron;
                constexpr mass mMuon = ::FlexibleSUSY_CMSSM_2_0_1::softsusy::mMuon;
                constexpr mass mTau = ::FlexibleSUSY_CMSSM_2_0_1::softsusy::mTau;
            }
            namespace softsusy
            {
                typedef ::FlexibleSUSY_CMSSM_2_0_1::softsusy::leGauge leGauge;
                constexpr leGauge ALPHA = ::FlexibleSUSY_CMSSM_2_0_1::softsusy::ALPHA;
                constexpr leGauge ALPHAS = ::FlexibleSUSY_CMSSM_2_0_1::softsusy::ALPHAS;
            }
        }
    }
}

// Variables

// Initialisation function (dependencies)

// Convenience functions (registration)
BE_CONV_FUNCTION(run_FS_Spectrum, void, (Spectrum&, const SpectrumInputs&), "FS_CMSSM_Spectrum")


// Convenience functions (definitions)

// End
#include "gambit/Backends/backend_undefs.hpp"
