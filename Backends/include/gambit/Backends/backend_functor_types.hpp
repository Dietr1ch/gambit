//   GAMBIT: Global and Modular BSM Inference Tool
//   *********************************************
///  \file                                       
///                                               
///  Automatically generated template             
///  specialisations for backend functors.        
///                                               
///  This file was automatically generated by     
///  module_harvester.py. Do not modify.          
///                                               
///  The content is harvested from:               
///   - rollcall headers in module_rollcall.hpp   
///   - frontend headers in backend_rollcall.hpp  
///   - types registered in types_rollcall.hpp    
///                                               
///  *********************************************
///                                               
///  Authors:                                     
///                                               
///  \author The GAMBIT Collaboration            
///  \date 04:02PM on October 14, 2017
///                                               
///  *********************************************
                                                  
#ifndef __backend_functor_types_hpp__             
#define __backend_functor_types_hpp__             
                                                  
#include "gambit/Elements/types_rollcall.hpp"   
#include "gambit/Elements/functor_definitions.hpp"
                                                  
namespace Gambit                                  
{                                                 
  template class backend_functor_common<sd_char2bodygrav_type*(*)(),sd_char2bodygrav_type*>;
  template class backend_functor<sd_char2bodygrav_type*(*)(),sd_char2bodygrav_type*>;

  template class backend_functor_common<double(*)(const parameters*),double,const parameters*>;
  template class backend_functor<double(*)(const parameters*),double,const parameters*>;

  template class backend_functor_common<DS_PACODES*(*)(),DS_PACODES*>;
  template class backend_functor<DS_PACODES*(*)(),DS_PACODES*>;

  template class backend_functor_common<void(*)(int&,int&,double&,int&),void,int&,int&,double&,int&>;
  template class backend_functor<void(*)(int&,int&,double&,int&),void,int&,int&,double&,int&>;

  template class backend_functor_common<void(*)(const char*),void,const char*>;
  template class backend_functor<void(*)(const char*),void,const char*>;

  template class backend_functor_common<void(*)(int,std::complex<double>*,std::complex<double>*,double,double,const parameters*),void,int,std::complex<double>*,std::complex<double>*,double,double,const parameters*>;
  template class backend_functor<void(*)(int,std::complex<double>*,std::complex<double>*,double,double,const parameters*),void,int,std::complex<double>*,std::complex<double>*,double,double,const parameters*>;

  template class backend_functor_common<double(*)(Farray<Fdouble,1,2,2,3>&),double,Farray<Fdouble,1,2,2,3>&>;
  template class backend_functor<double(*)(Farray<Fdouble,1,2,2,3>&),double,Farray<Fdouble,1,2,2,3>&>;

  template class backend_functor_common<Farray_particle23_1_6*(*)(),Farray_particle23_1_6*>;
  template class backend_functor<Farray_particle23_1_6*(*)(),Farray_particle23_1_6*>;

  template class backend_functor_common<void(*)(int&,fh_real&,fh_real&,fh_real&,fh_real&,fh_real&,fh_real&,fh_real&,fh_real&,fh_real&,int&),void,int&,fh_real&,fh_real&,fh_real&,fh_real&,fh_real&,fh_real&,fh_real&,fh_real&,fh_real&,int&>;
  template class backend_functor<void(*)(int&,fh_real&,fh_real&,fh_real&,fh_real&,fh_real&,fh_real&,fh_real&,fh_real&,fh_real&,int&),void,int&,fh_real&,fh_real&,fh_real&,fh_real&,fh_real&,fh_real&,fh_real&,fh_real&,fh_real&,int&>;

  template class backend_functor_common<sd_neut2body_type*(*)(),sd_neut2body_type*>;
  template class backend_functor<sd_neut2body_type*(*)(),sd_neut2body_type*>;

  template class backend_functor_common<double(*)(int,const std::vector<double>&,const std::vector<double>&),double,int,const std::vector<double>&,const std::vector<double>&>;
  template class backend_functor<double(*)(int,const std::vector<double>&,const std::vector<double>&),double,int,const std::vector<double>&,const std::vector<double>&>;

  template class backend_functor_common<sd_sel2body_type*(*)(),sd_sel2body_type*>;
  template class backend_functor<sd_sel2body_type*(*)(),sd_sel2body_type*>;

  template class backend_functor_common<sd_sdownwidth_type*(*)(),sd_sdownwidth_type*>;
  template class backend_functor<sd_sdownwidth_type*(*)(),sd_sdownwidth_type*>;

  template class backend_functor_common<Farray_Flogical_1_100*(*)(),Farray_Flogical_1_100*>;
  template class backend_functor<Farray_Flogical_1_100*(*)(),Farray_Flogical_1_100*>;

  template class backend_functor_common<void(*)(const MInteger&,const double&),void,const MInteger&,const double&>;
  template class backend_functor<void(*)(const MInteger&,const double&),void,const MInteger&,const double&>;

  template class backend_functor_common<double(*)(double*,double*,double*,double*,double,double,const parameters*),double,double*,double*,double*,double*,double,double,const parameters*>;
  template class backend_functor<double(*)(double*,double*,double*,double*,double,double,const parameters*),double,double*,double*,double*,double*,double,double,const parameters*>;

  template class backend_functor_common<void(*)(int,double*,std::complex<double>*,double,double,const parameters*),void,int,double*,std::complex<double>*,double,double,const parameters*>;
  template class backend_functor<void(*)(int,double*,std::complex<double>*,double,double,const parameters*),void,int,double*,std::complex<double>*,double,double,const parameters*>;

  template class backend_functor_common<double(*)(const double&,const double&,const double&),double,const double&,const double&,const double&>;
  template class backend_functor<double(*)(const double&,const double&,const double&),double,const double&,const double&,const double&>;

  template class backend_functor_common<void(*)(double(*)(double&),double&,double&,double&,double&,int&),void,double(*)(double&),double&,double&,double&,double&,int&>;
  template class backend_functor<void(*)(double(*)(double&),double&,double&,double&,double&,int&),void,double(*)(double&),double&,double&,double&,double&,int&>;

  template class backend_functor_common<MicrOmegas::MOcommonSTR*(*)(),MicrOmegas::MOcommonSTR*>;
  template class backend_functor<MicrOmegas::MOcommonSTR*(*)(),MicrOmegas::MOcommonSTR*>;

  template class backend_functor_common<widthhl_hdec_type*(*)(),widthhl_hdec_type*>;
  template class backend_functor<widthhl_hdec_type*(*)(),widthhl_hdec_type*>;

  template class backend_functor_common<void(*)(double&,double&,double&,double&,double&),void,double&,double&,double&,double&,double&>;
  template class backend_functor<void(*)(double&,double&,double&,double&,double&),void,double&,double&,double&,double&,double&>;

  template class backend_functor_common<void(*)(int&),void,int&>;
  template class backend_functor<void(*)(int&),void,int&>;

  template class backend_functor_common<Farray_Fcomplex16_1_3*(*)(),Farray_Fcomplex16_1_3*>;
  template class backend_functor<Farray_Fcomplex16_1_3*(*)(),Farray_Fcomplex16_1_3*>;

  template class backend_functor_common<void(*)(const MInteger&,const double&,const double&,const double&,const double&),void,const MInteger&,const double&,const double&,const double&,const double&>;
  template class backend_functor<void(*)(const MInteger&,const double&,const double&,const double&,const double&),void,const MInteger&,const double&,const double&,const double&,const double&>;

  template class backend_functor_common<double(*)(const double&,const double&,const char&,const MInteger&,const MInteger&,const MInteger&,const MInteger&),double,const double&,const double&,const char&,const MInteger&,const MInteger&,const MInteger&,const MInteger&>;
  template class backend_functor<double(*)(const double&,const double&,const char&,const MInteger&,const MInteger&,const MInteger&,const MInteger&),double,const double&,const double&,const char&,const MInteger&,const MInteger&,const MInteger&,const MInteger&>;

  template class backend_functor_common<void(*)(int&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&),void,int&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&>;
  template class backend_functor<void(*)(int&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&),void,int&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&>;

  template class backend_functor_common<void(*)(double&,double),void,double&,double>;
  template class backend_functor<void(*)(double&,double),void,double&,double>;

  template class backend_functor_common<double(*)(double(*)(double&),int&),double,double(*)(double&),int&>;
  template class backend_functor<double(*)(double(*)(double&),int&),double,double(*)(double&),int&>;

  template class backend_functor_common<void(*)(int&,Farray<fh_real,1,4>&,fh_complex&,Farray<fh_complex,1,3,1,3>&,Farray<fh_complex,1,3,1,3>&),void,int&,Farray<fh_real,1,4>&,fh_complex&,Farray<fh_complex,1,3,1,3>&,Farray<fh_complex,1,3,1,3>&>;
  template class backend_functor<void(*)(int&,Farray<fh_real,1,4>&,fh_complex&,Farray<fh_complex,1,3,1,3>&,Farray<fh_complex,1,3,1,3>&),void,int&,Farray<fh_real,1,4>&,fh_complex&,Farray<fh_complex,1,3,1,3>&,Farray<fh_complex,1,3,1,3>&>;

  template class backend_functor_common<bool*(*)(),bool*>;
  template class backend_functor<bool*(*)(),bool*>;

  template class backend_functor_common<MList<MInteger>(*)(const MList<MInteger>&),MList<MInteger>,const MList<MInteger>&>;
  template class backend_functor<MList<MInteger>(*)(const MList<MInteger>&),MList<MInteger>,const MList<MInteger>&>;

  template class backend_functor_common<void(*)(int&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_creal&,fh_creal&,fh_creal&),void,int&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_creal&,fh_creal&,fh_creal&>;
  template class backend_functor<void(*)(int&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_creal&,fh_creal&,fh_creal&),void,int&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_creal&,fh_creal&,fh_creal&>;

  template class backend_functor_common<DS_INTDOF*(*)(),DS_INTDOF*>;
  template class backend_functor<DS_INTDOF*(*)(),DS_INTDOF*>;

  template class backend_functor_common<double(*)(const parameters*,int),double,const parameters*,int>;
  template class backend_functor<double(*)(const parameters*,int),double,const parameters*,int>;

  template class backend_functor_common<Farray_Freal8_1_3*(*)(),Farray_Freal8_1_3*>;
  template class backend_functor<Farray_Freal8_1_3*(*)(),Farray_Freal8_1_3*>;

  template class backend_functor_common<libFarrayTest_CB3_type*(*)(),libFarrayTest_CB3_type*>;
  template class backend_functor<libFarrayTest_CB3_type*(*)(),libFarrayTest_CB3_type*>;

  template class backend_functor_common<void(*)(FcomplexT<Fdoubleprecision>&,double&,double&),void,FcomplexT<Fdoubleprecision>&,double&,double&>;
  template class backend_functor<void(*)(FcomplexT<Fdoubleprecision>&,double&,double&),void,FcomplexT<Fdoubleprecision>&,double&,double&>;

  template class backend_functor_common<Farray_Fcomplex16_1_2*(*)(),Farray_Fcomplex16_1_2*>;
  template class backend_functor<Farray_Fcomplex16_1_2*(*)(),Farray_Fcomplex16_1_2*>;

  template class backend_functor_common<void(*)(int&,int&,int&,int&),void,int&,int&,int&,int&>;
  template class backend_functor<void(*)(int&,int&,int&,int&),void,int&,int&,int&,int&>;

  template class backend_functor_common<DS_SCKM*(*)(),DS_SCKM*>;
  template class backend_functor<DS_SCKM*(*)(),DS_SCKM*>;

  template class backend_functor_common<void(*)(double*,double*,double,double*,double*,double,const parameters*),void,double*,double*,double,double*,double*,double,const parameters*>;
  template class backend_functor<void(*)(double*,double*,double,double*,double*,double,const parameters*),void,double*,double*,double,double*,double*,double,const parameters*>;

  template class backend_functor_common<Farray_Freal8_1_2*(*)(),Farray_Freal8_1_2*>;
  template class backend_functor<Farray_Freal8_1_2*(*)(),Farray_Freal8_1_2*>;

  template class backend_functor_common<void(*)(const char&,const double&,const double&,nuyield_function_pointer,double&,double&,int&,double&,double&,const MInteger&,const double&,const MInteger&,const bool&,const double&,const double&,void*&,const bool&),void,const char&,const double&,const double&,nuyield_function_pointer,double&,double&,int&,double&,double&,const MInteger&,const double&,const MInteger&,const bool&,const double&,const double&,void*&,const bool&>;
  template class backend_functor<void(*)(const char&,const double&,const double&,nuyield_function_pointer,double&,double&,int&,double&,double&,const MInteger&,const double&,const MInteger&,const bool&,const double&,const double&,void*&,const bool&),void,const char&,const double&,const double&,nuyield_function_pointer,double&,double&,int&,double&,double&,const MInteger&,const double&,const MInteger&,const bool&,const double&,const double&,void*&,const bool&>;

  template class backend_functor_common<sd_gluiwidth_type*(*)(),sd_gluiwidth_type*>;
  template class backend_functor<sd_gluiwidth_type*(*)(),sd_gluiwidth_type*>;

  template class backend_functor_common<sd_top2body_type*(*)(),sd_top2body_type*>;
  template class backend_functor<sd_top2body_type*(*)(),sd_top2body_type*>;

  template class backend_functor_common<void(*)(const double&,const double&),void,const double&,const double&>;
  template class backend_functor<void(*)(const double&,const double&),void,const double&,const double&>;

  template class backend_functor_common<void(*)(int&,double&,bool&,int&,double&,Farray_Freal8_1_2&,Farray_Freal8_1_2&,Farray_Fcomplex16_1_2_1_2&,Farray_Fcomplex16_1_2_1_2&,Farray_Freal8_1_4&,Farray_Fcomplex16_1_4_1_4&,Farray_Freal8_1_2&,Farray_Freal8_1_2&,Farray_Freal8_1_2_1_2&,Farray_Freal8_1_2&,Farray_Freal8_1_2&,Farray_Freal8_1_2_1_2&,Farray_Freal8_1_2&,Farray_Freal8_1_2&,Farray_Fcomplex16_1_2_1_2&,Farray_Freal8_1_6&,Farray_Freal8_1_6&,Farray_Fcomplex16_1_6_1_6&,Farray_Freal8_1_6&,Farray_Freal8_1_6&,Farray_Fcomplex16_1_6_1_6&,Farray_Freal8_1_6&,Farray_Freal8_1_6&,Farray_Fcomplex16_1_6_1_6&,Farray_Freal8_1_3&,Farray_Freal8_1_3&,Farray_Fcomplex16_1_3_1_3&,double&,FcomplexT<Fdoubleprecision>&,Farray_Freal8_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Freal8_1_2&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,double&),void,int&,double&,bool&,int&,double&,Farray_Freal8_1_2&,Farray_Freal8_1_2&,Farray_Fcomplex16_1_2_1_2&,Farray_Fcomplex16_1_2_1_2&,Farray_Freal8_1_4&,Farray_Fcomplex16_1_4_1_4&,Farray_Freal8_1_2&,Farray_Freal8_1_2&,Farray_Freal8_1_2_1_2&,Farray_Freal8_1_2&,Farray_Freal8_1_2&,Farray_Freal8_1_2_1_2&,Farray_Freal8_1_2&,Farray_Freal8_1_2&,Farray_Fcomplex16_1_2_1_2&,Farray_Freal8_1_6&,Farray_Freal8_1_6&,Farray_Fcomplex16_1_6_1_6&,Farray_Freal8_1_6&,Farray_Freal8_1_6&,Farray_Fcomplex16_1_6_1_6&,Farray_Freal8_1_6&,Farray_Freal8_1_6&,Farray_Fcomplex16_1_6_1_6&,Farray_Freal8_1_3&,Farray_Freal8_1_3&,Farray_Fcomplex16_1_3_1_3&,double&,FcomplexT<Fdoubleprecision>&,Farray_Freal8_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Freal8_1_2&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,double&>;
  template class backend_functor<void(*)(int&,double&,bool&,int&,double&,Farray_Freal8_1_2&,Farray_Freal8_1_2&,Farray_Fcomplex16_1_2_1_2&,Farray_Fcomplex16_1_2_1_2&,Farray_Freal8_1_4&,Farray_Fcomplex16_1_4_1_4&,Farray_Freal8_1_2&,Farray_Freal8_1_2&,Farray_Freal8_1_2_1_2&,Farray_Freal8_1_2&,Farray_Freal8_1_2&,Farray_Freal8_1_2_1_2&,Farray_Freal8_1_2&,Farray_Freal8_1_2&,Farray_Fcomplex16_1_2_1_2&,Farray_Freal8_1_6&,Farray_Freal8_1_6&,Farray_Fcomplex16_1_6_1_6&,Farray_Freal8_1_6&,Farray_Freal8_1_6&,Farray_Fcomplex16_1_6_1_6&,Farray_Freal8_1_6&,Farray_Freal8_1_6&,Farray_Fcomplex16_1_6_1_6&,Farray_Freal8_1_3&,Farray_Freal8_1_3&,Farray_Fcomplex16_1_3_1_3&,double&,FcomplexT<Fdoubleprecision>&,Farray_Freal8_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Freal8_1_2&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,double&),void,int&,double&,bool&,int&,double&,Farray_Freal8_1_2&,Farray_Freal8_1_2&,Farray_Fcomplex16_1_2_1_2&,Farray_Fcomplex16_1_2_1_2&,Farray_Freal8_1_4&,Farray_Fcomplex16_1_4_1_4&,Farray_Freal8_1_2&,Farray_Freal8_1_2&,Farray_Freal8_1_2_1_2&,Farray_Freal8_1_2&,Farray_Freal8_1_2&,Farray_Freal8_1_2_1_2&,Farray_Freal8_1_2&,Farray_Freal8_1_2&,Farray_Fcomplex16_1_2_1_2&,Farray_Freal8_1_6&,Farray_Freal8_1_6&,Farray_Fcomplex16_1_6_1_6&,Farray_Freal8_1_6&,Farray_Freal8_1_6&,Farray_Fcomplex16_1_6_1_6&,Farray_Freal8_1_6&,Farray_Freal8_1_6&,Farray_Fcomplex16_1_6_1_6&,Farray_Freal8_1_3&,Farray_Freal8_1_3&,Farray_Fcomplex16_1_3_1_3&,double&,FcomplexT<Fdoubleprecision>&,Farray_Freal8_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Freal8_1_2&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,double&>;

  template class backend_functor_common<DS_COUPLINGCONSTANTS*(*)(),DS_COUPLINGCONSTANTS*>;
  template class backend_functor<DS_COUPLINGCONSTANTS*(*)(),DS_COUPLINGCONSTANTS*>;

  template class backend_functor_common<DS_MIXING*(*)(),DS_MIXING*>;
  template class backend_functor<DS_MIXING*(*)(),DS_MIXING*>;

  template class backend_functor_common<Flav_KstarMuMu_obs(*)(const parameters*,double,double),Flav_KstarMuMu_obs,const parameters*,double,double>;
  template class backend_functor<Flav_KstarMuMu_obs(*)(const parameters*,double,double),Flav_KstarMuMu_obs,const parameters*,double,double>;

  template class backend_functor_common<void(*)(int&,fh_real&,Farray<fh_real,1,52>&),void,int&,fh_real&,Farray<fh_real,1,52>&>;
  template class backend_functor<void(*)(int&,fh_real&,Farray<fh_real,1,52>&),void,int&,fh_real&,Farray<fh_real,1,52>&>;

  template class backend_functor_common<double(*)(const double&,const MInteger&,void*&),double,const double&,const MInteger&,void*&>;
  template class backend_functor<double(*)(const double&,const MInteger&,void*&),double,const double&,const MInteger&,void*&>;

  template class backend_functor_common<sd_selwidth_type*(*)(),sd_selwidth_type*>;
  template class backend_functor<sd_selwidth_type*(*)(),sd_selwidth_type*>;

  template class backend_functor_common<DS_RDPTH*(*)(),DS_RDPTH*>;
  template class backend_functor<DS_RDPTH*(*)(),DS_RDPTH*>;

  template class backend_functor_common<double(*)(int,const parameters*),double,int,const parameters*>;
  template class backend_functor<double(*)(int,const parameters*),double,int,const parameters*>;

  template class backend_functor_common<sd_stopwidth_type*(*)(),sd_stopwidth_type*>;
  template class backend_functor<sd_stopwidth_type*(*)(),sd_stopwidth_type*>;

  template class backend_functor_common<void(*)(const char&,const char&,const char&,const char&,const char&,double&,MBool&,MBool&),void,const char&,const char&,const char&,const char&,const char&,double&,MBool&,MBool&>;
  template class backend_functor<void(*)(const char&,const char&,const char&,const char&,const char&,double&,MBool&,MBool&),void,const char&,const char&,const char&,const char&,const char&,double&,MBool&,MBool&>;

  template class backend_functor_common<double(*)(const double&,const double&,const double&,const double&,const MInteger&),double,const double&,const double&,const double&,const double&,const MInteger&>;
  template class backend_functor<double(*)(const double&,const double&,const double&,const double&,const MInteger&),double,const double&,const double&,const double&,const double&,const MInteger&>;

  template class backend_functor_common<sd_stau2bodygrav_type*(*)(),sd_stau2bodygrav_type*>;
  template class backend_functor<sd_stau2bodygrav_type*(*)(),sd_stau2bodygrav_type*>;

  template class backend_functor_common<void(*)(double,double,double,double),void,double,double,double,double>;
  template class backend_functor<void(*)(double,double,double,double),void,double,double,double,double>;

  template class backend_functor_common<void(*)(double*,double*,int*,double*,double*,double*,Farray<double,1,3,1,3>&,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,Farray<double,1,3,1,3>&),void,double*,double*,int*,double*,double*,double*,Farray<double,1,3,1,3>&,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,Farray<double,1,3,1,3>&>;
  template class backend_functor<void(*)(double*,double*,int*,double*,double*,double*,Farray<double,1,3,1,3>&,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,Farray<double,1,3,1,3>&),void,double*,double*,int*,double*,double*,double*,Farray<double,1,3,1,3>&,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,double*,Farray<double,1,3,1,3>&>;

  template class backend_functor_common<DS_HMNOCLUE*(*)(),DS_HMNOCLUE*>;
  template class backend_functor<DS_HMNOCLUE*(*)(),DS_HMNOCLUE*>;

  template class backend_functor_common<sd_stop3body_type*(*)(),sd_stop3body_type*>;
  template class backend_functor<sd_stop3body_type*(*)(),sd_stop3body_type*>;

  template class backend_functor_common<sd_sbot3body_type*(*)(),sd_sbot3body_type*>;
  template class backend_functor<sd_sbot3body_type*(*)(),sd_sbot3body_type*>;

  template class backend_functor_common<double(*)(const bool&),double,const bool&>;
  template class backend_functor<double(*)(const bool&),double,const bool&>;

  template class backend_functor_common<int(*)(double,int,int,double*),int,double,int,int,double*>;
  template class backend_functor<int(*)(double,int,int,double*),int,double,int,int,double*>;

  template class backend_functor_common<DS_RDPARS*(*)(),DS_RDPARS*>;
  template class backend_functor<DS_RDPARS*(*)(),DS_RDPARS*>;

  template class backend_functor_common<void(*)(double*,double*,double*,double,double*,double*,double*,double,const parameters*),void,double*,double*,double*,double,double*,double*,double*,double,const parameters*>;
  template class backend_functor<void(*)(double*,double*,double*,double,double*,double*,double*,double,const parameters*),void,double*,double*,double*,double,double*,double*,double*,double,const parameters*>;

  template class backend_functor_common<void(*)(double&,double&,double&,bool&,bool&,Fstring<20>&,Farray_Freal8_1_6&,Farray_Fcomplex16_1_6_1_6&,Farray_Freal8_1_3&,Farray_Freal8_1_6&,Farray_Fcomplex16_1_6_1_6&,Farray_Freal8_1_3&,double&,Farray_Freal8_1_6_1_6&,Farray_Freal8_1_6_1_6&,Farray_Freal8_1_6&,Farray_Fcomplex16_1_6_1_6&,Farray_Fcomplex16_1_3_1_3&,Farray_Freal8_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Freal8_1_6_1_6&,Farray_Freal8_1_3_1_3&,Farray_Freal8_1_2&,Farray_Fcomplex16_1_2_1_2&,Farray_Fcomplex16_1_2_1_2&,Farray_Freal8_1_4&,Farray_Fcomplex16_1_4_1_4&,Farray_Freal8_1_2_1_2&,Farray_Freal8_1_4_1_4&,Farray_Freal8_1_2&,Farray_Freal8_1_2_1_2&,Farray_Freal8_1_2&,Farray_Freal8_1_2&,Farray_Freal8_1_2_1_2&,Farray_Freal8_1_2&,Farray_Fcomplex16_1_2_1_2&,Farray_Freal8_1_2&,Farray_Freal8_1_2&,double&),void,double&,double&,double&,bool&,bool&,Fstring<20>&,Farray_Freal8_1_6&,Farray_Fcomplex16_1_6_1_6&,Farray_Freal8_1_3&,Farray_Freal8_1_6&,Farray_Fcomplex16_1_6_1_6&,Farray_Freal8_1_3&,double&,Farray_Freal8_1_6_1_6&,Farray_Freal8_1_6_1_6&,Farray_Freal8_1_6&,Farray_Fcomplex16_1_6_1_6&,Farray_Fcomplex16_1_3_1_3&,Farray_Freal8_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Freal8_1_6_1_6&,Farray_Freal8_1_3_1_3&,Farray_Freal8_1_2&,Farray_Fcomplex16_1_2_1_2&,Farray_Fcomplex16_1_2_1_2&,Farray_Freal8_1_4&,Farray_Fcomplex16_1_4_1_4&,Farray_Freal8_1_2_1_2&,Farray_Freal8_1_4_1_4&,Farray_Freal8_1_2&,Farray_Freal8_1_2_1_2&,Farray_Freal8_1_2&,Farray_Freal8_1_2&,Farray_Freal8_1_2_1_2&,Farray_Freal8_1_2&,Farray_Fcomplex16_1_2_1_2&,Farray_Freal8_1_2&,Farray_Freal8_1_2&,double&>;
  template class backend_functor<void(*)(double&,double&,double&,bool&,bool&,Fstring<20>&,Farray_Freal8_1_6&,Farray_Fcomplex16_1_6_1_6&,Farray_Freal8_1_3&,Farray_Freal8_1_6&,Farray_Fcomplex16_1_6_1_6&,Farray_Freal8_1_3&,double&,Farray_Freal8_1_6_1_6&,Farray_Freal8_1_6_1_6&,Farray_Freal8_1_6&,Farray_Fcomplex16_1_6_1_6&,Farray_Fcomplex16_1_3_1_3&,Farray_Freal8_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Freal8_1_6_1_6&,Farray_Freal8_1_3_1_3&,Farray_Freal8_1_2&,Farray_Fcomplex16_1_2_1_2&,Farray_Fcomplex16_1_2_1_2&,Farray_Freal8_1_4&,Farray_Fcomplex16_1_4_1_4&,Farray_Freal8_1_2_1_2&,Farray_Freal8_1_4_1_4&,Farray_Freal8_1_2&,Farray_Freal8_1_2_1_2&,Farray_Freal8_1_2&,Farray_Freal8_1_2&,Farray_Freal8_1_2_1_2&,Farray_Freal8_1_2&,Farray_Fcomplex16_1_2_1_2&,Farray_Freal8_1_2&,Farray_Freal8_1_2&,double&),void,double&,double&,double&,bool&,bool&,Fstring<20>&,Farray_Freal8_1_6&,Farray_Fcomplex16_1_6_1_6&,Farray_Freal8_1_3&,Farray_Freal8_1_6&,Farray_Fcomplex16_1_6_1_6&,Farray_Freal8_1_3&,double&,Farray_Freal8_1_6_1_6&,Farray_Freal8_1_6_1_6&,Farray_Freal8_1_6&,Farray_Fcomplex16_1_6_1_6&,Farray_Fcomplex16_1_3_1_3&,Farray_Freal8_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Freal8_1_6_1_6&,Farray_Freal8_1_3_1_3&,Farray_Freal8_1_2&,Farray_Fcomplex16_1_2_1_2&,Farray_Fcomplex16_1_2_1_2&,Farray_Freal8_1_4&,Farray_Fcomplex16_1_4_1_4&,Farray_Freal8_1_2_1_2&,Farray_Freal8_1_4_1_4&,Farray_Freal8_1_2&,Farray_Freal8_1_2_1_2&,Farray_Freal8_1_2&,Farray_Freal8_1_2&,Farray_Freal8_1_2_1_2&,Farray_Freal8_1_2&,Farray_Fcomplex16_1_2_1_2&,Farray_Freal8_1_2&,Farray_Freal8_1_2&,double&>;

  template class backend_functor_common<sd_leshouches1_type*(*)(),sd_leshouches1_type*>;
  template class backend_functor<sd_leshouches1_type*(*)(),sd_leshouches1_type*>;

  template class backend_functor_common<void(*)(int&,int&,Farray<fh_real,1,2,1,5,1,3>&,Farray<fh_complex,1,2,1,2,1,5,1,3>&,Farray<fh_real,1,6,1,5>&,Farray<fh_complex,1,36,1,5>&,Farray<fh_real,1,2>&,Farray<fh_complex,1,4>&,Farray<fh_complex,1,4>&,Farray<fh_real,1,4>&,Farray<fh_complex,1,16>&,fh_complex&,fh_real&,Farray<fh_real,1,4>&,fh_real&),void,int&,int&,Farray<fh_real,1,2,1,5,1,3>&,Farray<fh_complex,1,2,1,2,1,5,1,3>&,Farray<fh_real,1,6,1,5>&,Farray<fh_complex,1,36,1,5>&,Farray<fh_real,1,2>&,Farray<fh_complex,1,4>&,Farray<fh_complex,1,4>&,Farray<fh_real,1,4>&,Farray<fh_complex,1,16>&,fh_complex&,fh_real&,Farray<fh_real,1,4>&,fh_real&>;
  template class backend_functor<void(*)(int&,int&,Farray<fh_real,1,2,1,5,1,3>&,Farray<fh_complex,1,2,1,2,1,5,1,3>&,Farray<fh_real,1,6,1,5>&,Farray<fh_complex,1,36,1,5>&,Farray<fh_real,1,2>&,Farray<fh_complex,1,4>&,Farray<fh_complex,1,4>&,Farray<fh_real,1,4>&,Farray<fh_complex,1,16>&,fh_complex&,fh_real&,Farray<fh_real,1,4>&,fh_real&),void,int&,int&,Farray<fh_real,1,2,1,5,1,3>&,Farray<fh_complex,1,2,1,2,1,5,1,3>&,Farray<fh_real,1,6,1,5>&,Farray<fh_complex,1,36,1,5>&,Farray<fh_real,1,2>&,Farray<fh_complex,1,4>&,Farray<fh_complex,1,4>&,Farray<fh_real,1,4>&,Farray<fh_complex,1,16>&,fh_complex&,fh_real&,Farray<fh_real,1,4>&,fh_real&>;

  template class backend_functor_common<Farray_Freal8_1_100_1_7_1_7*(*)(),Farray_Freal8_1_100_1_7_1_7*>;
  template class backend_functor<Farray_Freal8_1_100_1_7_1_7*(*)(),Farray_Freal8_1_100_1_7_1_7*>;

  template class backend_functor_common<double(*)(double&,double&),double,double&,double&>;
  template class backend_functor<double(*)(double&,double&),double,double&,double&>;

  template class backend_functor_common<double(*)(double*,double*,double*,const parameters*,double),double,double*,double*,double*,const parameters*,double>;
  template class backend_functor<double(*)(double*,double*,double*,const parameters*,double),double,double*,double*,double*,const parameters*,double>;

  template class backend_functor_common<DS_DDCOM*(*)(),DS_DDCOM*>;
  template class backend_functor<DS_DDCOM*(*)(),DS_DDCOM*>;

  template class backend_functor_common<sd_stop4body_type*(*)(),sd_stop4body_type*>;
  template class backend_functor<sd_stop4body_type*(*)(),sd_stop4body_type*>;

  template class backend_functor_common<DS_MSSMTYPE*(*)(),DS_MSSMTYPE*>;
  template class backend_functor<DS_MSSMTYPE*(*)(),DS_MSSMTYPE*>;

  template class backend_functor_common<sd_topwidth_type*(*)(),sd_topwidth_type*>;
  template class backend_functor<sd_topwidth_type*(*)(),sd_topwidth_type*>;

  template class backend_functor_common<Farray_particle2_1_6*(*)(),Farray_particle2_1_6*>;
  template class backend_functor<Farray_particle2_1_6*(*)(),Farray_particle2_1_6*>;

  template class backend_functor_common<void(*)(int&,fh_real&,fh_real&,fh_real&,fh_real&,fh_real&,fh_real&),void,int&,fh_real&,fh_real&,fh_real&,fh_real&,fh_real&,fh_real&>;
  template class backend_functor<void(*)(int&,fh_real&,fh_real&,fh_real&,fh_real&,fh_real&,fh_real&),void,int&,fh_real&,fh_real&,fh_real&,fh_real&,fh_real&,fh_real&>;

  template class backend_functor_common<sd_char2body_type*(*)(),sd_char2body_type*>;
  template class backend_functor<sd_char2body_type*(*)(),sd_char2body_type*>;

  template class backend_functor_common<int(*)(const SLHAstruct &,const DecayTable&),int,const SLHAstruct &,const DecayTable&>;
  template class backend_functor<int(*)(const SLHAstruct &,const DecayTable&),int,const SLHAstruct &,const DecayTable&>;

  template class backend_functor_common<sd_sntau2body_type*(*)(),sd_sntau2body_type*>;
  template class backend_functor<sd_sntau2body_type*(*)(),sd_sntau2body_type*>;

  template class backend_functor_common<sd_supwidth_type*(*)(),sd_supwidth_type*>;
  template class backend_functor<sd_supwidth_type*(*)(),sd_supwidth_type*>;

  template class backend_functor_common<sd_stau2body_type*(*)(),sd_stau2body_type*>;
  template class backend_functor<sd_stau2body_type*(*)(),sd_stau2body_type*>;

  template class backend_functor_common<int(*)(double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double),int,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double>;
  template class backend_functor<int(*)(double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double),int,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double>;

  template class backend_functor_common<int(*)(const bool&),int,const bool&>;
  template class backend_functor<int(*)(const bool&),int,const bool&>;

  template class backend_functor_common<int(*)(char*,double),int,char*,double>;
  template class backend_functor<int(*)(char*,double),int,char*,double>;

  template class backend_functor_common<void(*)(),void>;
  template class backend_functor<void(*)(),void>;

  template class backend_functor_common<void(*)(double*),void,double*>;
  template class backend_functor<void(*)(double*),void,double*>;

  template class backend_functor_common<void(*)(int&,Farray<Fdouble,1,35>&,Farray<Fdouble,1,35>&),void,int&,Farray<Fdouble,1,35>&,Farray<Fdouble,1,35>&>;
  template class backend_functor<void(*)(int&,Farray<Fdouble,1,35>&,Farray<Fdouble,1,35>&),void,int&,Farray<Fdouble,1,35>&,Farray<Fdouble,1,35>&>;

  template class backend_functor_common<Farray_Freal8_1_100_1_5_1_5*(*)(),Farray_Freal8_1_100_1_5_1_5*>;
  template class backend_functor<Farray_Freal8_1_100_1_5_1_5*(*)(),Farray_Freal8_1_100_1_5_1_5*>;

  template class backend_functor_common<double(*)(int&,int&,double&,int&,int&,int&),double,int&,int&,double&,int&,int&,int&>;
  template class backend_functor<double(*)(int&,int&,double&,int&,int&,int&),double,int&,int&,double&,int&,int&,int&>;

  template class backend_functor_common<double(*)(int,double*,double*,double*,std::complex<double>*,std::complex<double>*,const parameters*,double),double,int,double*,double*,double*,std::complex<double>*,std::complex<double>*,const parameters*,double>;
  template class backend_functor<double(*)(int,double*,double*,double*,std::complex<double>*,std::complex<double>*,const parameters*,double),double,int,double*,double*,double*,std::complex<double>*,std::complex<double>*,const parameters*,double>;

  template class backend_functor_common<void(*)(Farray_Freal8_1_3&,Farray_Freal8_1_3&,Farray_Freal8_1_3&,double&,double&,double&,double&,Farray_Freal8_1_3&,Farray_Freal8_1_3&,Farray_Freal8_1_3&,int&),void,Farray_Freal8_1_3&,Farray_Freal8_1_3&,Farray_Freal8_1_3&,double&,double&,double&,double&,Farray_Freal8_1_3&,Farray_Freal8_1_3&,Farray_Freal8_1_3&,int&>;
  template class backend_functor<void(*)(Farray_Freal8_1_3&,Farray_Freal8_1_3&,Farray_Freal8_1_3&,double&,double&,double&,double&,Farray_Freal8_1_3&,Farray_Freal8_1_3&,Farray_Freal8_1_3&,int&),void,Farray_Freal8_1_3&,Farray_Freal8_1_3&,Farray_Freal8_1_3&,double&,double&,double&,double&,Farray_Freal8_1_3&,Farray_Freal8_1_3&,Farray_Freal8_1_3&,int&>;

  template class backend_functor_common<sd_sbot2body_type*(*)(),sd_sbot2body_type*>;
  template class backend_functor<sd_sbot2body_type*(*)(),sd_sbot2body_type*>;

  template class backend_functor_common<DS_MSSMMIXING*(*)(),DS_MSSMMIXING*>;
  template class backend_functor<DS_MSSMMIXING*(*)(),DS_MSSMMIXING*>;

  template class backend_functor_common<double(*)(double,double,int),double,double,double,int>;
  template class backend_functor<double(*)(double,double,int),double,double,double,int>;

  template class backend_functor_common<std::vector<double>*(*)(),std::vector<double>*>;
  template class backend_functor<std::vector<double>*(*)(),std::vector<double>*>;

  template class backend_functor_common<void(*)(int&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,FcomplexT<Fdoubleprecision>&,Farray<Fdouble,1,4>&,Farray<Fdouble_complex,1,3,1,3>&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,FcomplexT<Fdoubleprecision>&,double&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,double&,double&,double&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,double&,double&,double&,double&,double&),void,int&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,FcomplexT<Fdoubleprecision>&,Farray<Fdouble,1,4>&,Farray<Fdouble_complex,1,3,1,3>&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,FcomplexT<Fdoubleprecision>&,double&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,double&,double&,double&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,double&,double&,double&,double&,double&>;
  template class backend_functor<void(*)(int&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,FcomplexT<Fdoubleprecision>&,Farray<Fdouble,1,4>&,Farray<Fdouble_complex,1,3,1,3>&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,FcomplexT<Fdoubleprecision>&,double&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,double&,double&,double&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,double&,double&,double&,double&,double&),void,int&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,FcomplexT<Fdoubleprecision>&,Farray<Fdouble,1,4>&,Farray<Fdouble_complex,1,3,1,3>&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,FcomplexT<Fdoubleprecision>&,double&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,double&,double&,double&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,FcomplexT<Fdoubleprecision>&,double&,double&,double&,double&,double&>;

  template class backend_functor_common<void(*)(double&,Farray_Freal8_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3&,FcomplexT<Fdoubleprecision>&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Freal8_1_2&,FcomplexT<Fdoubleprecision>&,double&,Farray_Freal8_1_2&,Farray_Freal8_1_2&,Farray_Freal8_1_2&,Farray_Fcomplex16_1_3_1_3&,int&,bool&,double&,FcomplexT<Fdoubleprecision>&,double&,Farray_Freal8_1_3&,Farray_Freal8_1_3&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&),void,double&,Farray_Freal8_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3&,FcomplexT<Fdoubleprecision>&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Freal8_1_2&,FcomplexT<Fdoubleprecision>&,double&,Farray_Freal8_1_2&,Farray_Freal8_1_2&,Farray_Freal8_1_2&,Farray_Fcomplex16_1_3_1_3&,int&,bool&,double&,FcomplexT<Fdoubleprecision>&,double&,Farray_Freal8_1_3&,Farray_Freal8_1_3&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&>;
  template class backend_functor<void(*)(double&,Farray_Freal8_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3&,FcomplexT<Fdoubleprecision>&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Freal8_1_2&,FcomplexT<Fdoubleprecision>&,double&,Farray_Freal8_1_2&,Farray_Freal8_1_2&,Farray_Freal8_1_2&,Farray_Fcomplex16_1_3_1_3&,int&,bool&,double&,FcomplexT<Fdoubleprecision>&,double&,Farray_Freal8_1_3&,Farray_Freal8_1_3&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&),void,double&,Farray_Freal8_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3&,FcomplexT<Fdoubleprecision>&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Freal8_1_2&,FcomplexT<Fdoubleprecision>&,double&,Farray_Freal8_1_2&,Farray_Freal8_1_2&,Farray_Freal8_1_2&,Farray_Fcomplex16_1_3_1_3&,int&,bool&,double&,FcomplexT<Fdoubleprecision>&,double&,Farray_Freal8_1_3&,Farray_Freal8_1_3&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&,double&>;

  template class backend_functor_common<double(*)(double(*)[10]),double,double(*)[10]>;
  template class backend_functor<double(*)(double(*)[10]),double,double(*)[10]>;

  template class backend_functor_common<Farray_Freal8_1_100_1_5_1_4*(*)(),Farray_Freal8_1_100_1_5_1_4*>;
  template class backend_functor<Farray_Freal8_1_100_1_5_1_4*(*)(),Farray_Freal8_1_100_1_5_1_4*>;

  template class backend_functor_common<Farray_particle23_1_4*(*)(),Farray_particle23_1_4*>;
  template class backend_functor<Farray_particle23_1_4*(*)(),Farray_particle23_1_4*>;

  template class backend_functor_common<particle23*(*)(),particle23*>;
  template class backend_functor<particle23*(*)(),particle23*>;

  template class backend_functor_common<sd_neut3body_type*(*)(),sd_neut3body_type*>;
  template class backend_functor<sd_neut3body_type*(*)(),sd_neut3body_type*>;

  template class backend_functor_common<int(*)(Spectrum&,const Finputs&),int,Spectrum&,const Finputs&>;
  template class backend_functor<int(*)(Spectrum&,const Finputs&),int,Spectrum&,const Finputs&>;

  template class backend_functor_common<DS_HMCOM*(*)(),DS_HMCOM*>;
  template class backend_functor<DS_HMCOM*(*)(),DS_HMCOM*>;

  template class backend_functor_common<sd_leshouches2_type*(*)(),sd_leshouches2_type*>;
  template class backend_functor<sd_leshouches2_type*(*)(),sd_leshouches2_type*>;

  template class backend_functor_common<void(*)(int&,int&,int&,int&,int&,int&,int&,int&,int&,int&),void,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&>;
  template class backend_functor<void(*)(int&,int&,int&,int&,int&,int&,int&,int&,int&,int&),void,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&>;

  template class backend_functor_common<void(*)(const char*,int&,int),void,const char*,int&,int>;
  template class backend_functor<void(*)(const char*,int&,int),void,const char*,int&,int>;

  template class backend_functor_common<sd_neutwidth_type*(*)(),sd_neutwidth_type*>;
  template class backend_functor<sd_neutwidth_type*(*)(),sd_neutwidth_type*>;

  template class backend_functor_common<void(*)(char*,int&,char*,int&),void,char*,int&,char*,int&>;
  template class backend_functor<void(*)(char*,int&,char*,int&),void,char*,int&,char*,int&>;

  template class backend_functor_common<Farray_particle23_1_3*(*)(),Farray_particle23_1_3*>;
  template class backend_functor<Farray_particle23_1_3*(*)(),Farray_particle23_1_3*>;

  template class backend_functor_common<sd_glui3body_type*(*)(),sd_glui3body_type*>;
  template class backend_functor<sd_glui3body_type*(*)(),sd_glui3body_type*>;

  template class backend_functor_common<double(*)(double&,double&,int&,int&,int&),double,double&,double&,int&,int&,int&>;
  template class backend_functor<double(*)(double&,double&,int&,int&,int&),double,double&,double&,int&,int&,int&>;

  template class backend_functor_common<sd_glui2body_type*(*)(),sd_glui2body_type*>;
  template class backend_functor<sd_glui2body_type*(*)(),sd_glui2body_type*>;

  template class backend_functor_common<void(*)(const MInteger&),void,const MInteger&>;
  template class backend_functor<void(*)(const MInteger&),void,const MInteger&>;

  template class backend_functor_common<DS_IBINTVARS*(*)(),DS_IBINTVARS*>;
  template class backend_functor<DS_IBINTVARS*(*)(),DS_IBINTVARS*>;

  template class backend_functor_common<Farray_Freal8_1_5*(*)(),Farray_Freal8_1_5*>;
  template class backend_functor<Farray_Freal8_1_5*(*)(),Farray_Freal8_1_5*>;

  template class backend_functor_common<void(*)(int,const std::vector<double>&,const std::vector<double>&,double),void,int,const std::vector<double>&,const std::vector<double>&,double>;
  template class backend_functor<void(*)(int,const std::vector<double>&,const std::vector<double>&,double),void,int,const std::vector<double>&,const std::vector<double>&,double>;

  template class backend_functor_common<double(*)(const gm2calc_1_2_0::gm2calc::MSSMNoFV_onshell&),double,const gm2calc_1_2_0::gm2calc::MSSMNoFV_onshell&>;
  template class backend_functor<double(*)(const gm2calc_1_2_0::gm2calc::MSSMNoFV_onshell&),double,const gm2calc_1_2_0::gm2calc::MSSMNoFV_onshell&>;

  template class backend_functor_common<flavviolation_type*(*)(),flavviolation_type*>;
  template class backend_functor<flavviolation_type*(*)(),flavviolation_type*>;

  template class backend_functor_common<DS_HMISODF*(*)(),DS_HMISODF*>;
  template class backend_functor<DS_HMISODF*(*)(),DS_HMISODF*>;

  template class backend_functor_common<void(*)(const std::string&),void,const std::string&>;
  template class backend_functor<void(*)(const std::string&),void,const std::string&>;

  template class backend_functor_common<Farray_particle23_1_2*(*)(),Farray_particle23_1_2*>;
  template class backend_functor<Farray_particle23_1_2*(*)(),Farray_particle23_1_2*>;

  template class backend_functor_common<double(*)(double,double,double,const parameters*),double,double,double,double,const parameters*>;
  template class backend_functor<double(*)(double,double,double,const parameters*),double,double,double,double,const parameters*>;

  template class backend_functor_common<void(*)(int&,Farray_Finteger_1_3&,int&,Farray_Finteger_1_3&,int&,Farray_Finteger_1_3&,int&,Farray_Finteger_1_3&,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&,Farray_Freal8_1_3&,particle23&,FcomplexT<Fdoubleprecision>&,Farray_particle23_1_2&,Farray_Fcomplex16_1_2_1_2&,Farray_Fcomplex16_1_2_1_2&,Farray_particle23_1_4&,Farray_Fcomplex16_1_4_1_4&,Farray_particle23_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_particle23_1_6&,Farray_Fcomplex16_1_6_1_6&,Farray_particle23_1_6&,Farray_Fcomplex16_1_6_1_6&,Farray_particle2_1_6&,Farray_Fcomplex16_1_6_1_6&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_particle23_1_2&,Farray_Freal8_1_2_1_2&,Farray_particle2_1_2&,Farray_Freal8_1_2_1_2&,Farray_particle2_1_2&,Farray_Fcomplex16_1_2_1_2&,double&,double&,bool&,double&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,FcomplexT<Fdoubleprecision>&,Farray_Freal8_1_2&,double&,double&,double&),void,int&,Farray_Finteger_1_3&,int&,Farray_Finteger_1_3&,int&,Farray_Finteger_1_3&,int&,Farray_Finteger_1_3&,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&,Farray_Freal8_1_3&,particle23&,FcomplexT<Fdoubleprecision>&,Farray_particle23_1_2&,Farray_Fcomplex16_1_2_1_2&,Farray_Fcomplex16_1_2_1_2&,Farray_particle23_1_4&,Farray_Fcomplex16_1_4_1_4&,Farray_particle23_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_particle23_1_6&,Farray_Fcomplex16_1_6_1_6&,Farray_particle23_1_6&,Farray_Fcomplex16_1_6_1_6&,Farray_particle2_1_6&,Farray_Fcomplex16_1_6_1_6&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_particle23_1_2&,Farray_Freal8_1_2_1_2&,Farray_particle2_1_2&,Farray_Freal8_1_2_1_2&,Farray_particle2_1_2&,Farray_Fcomplex16_1_2_1_2&,double&,double&,bool&,double&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,FcomplexT<Fdoubleprecision>&,Farray_Freal8_1_2&,double&,double&,double&>;
  template class backend_functor<void(*)(int&,Farray_Finteger_1_3&,int&,Farray_Finteger_1_3&,int&,Farray_Finteger_1_3&,int&,Farray_Finteger_1_3&,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&,Farray_Freal8_1_3&,particle23&,FcomplexT<Fdoubleprecision>&,Farray_particle23_1_2&,Farray_Fcomplex16_1_2_1_2&,Farray_Fcomplex16_1_2_1_2&,Farray_particle23_1_4&,Farray_Fcomplex16_1_4_1_4&,Farray_particle23_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_particle23_1_6&,Farray_Fcomplex16_1_6_1_6&,Farray_particle23_1_6&,Farray_Fcomplex16_1_6_1_6&,Farray_particle2_1_6&,Farray_Fcomplex16_1_6_1_6&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_particle23_1_2&,Farray_Freal8_1_2_1_2&,Farray_particle2_1_2&,Farray_Freal8_1_2_1_2&,Farray_particle2_1_2&,Farray_Fcomplex16_1_2_1_2&,double&,double&,bool&,double&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,FcomplexT<Fdoubleprecision>&,Farray_Freal8_1_2&,double&,double&,double&),void,int&,Farray_Finteger_1_3&,int&,Farray_Finteger_1_3&,int&,Farray_Finteger_1_3&,int&,Farray_Finteger_1_3&,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&,Farray_Freal8_1_3&,particle23&,FcomplexT<Fdoubleprecision>&,Farray_particle23_1_2&,Farray_Fcomplex16_1_2_1_2&,Farray_Fcomplex16_1_2_1_2&,Farray_particle23_1_4&,Farray_Fcomplex16_1_4_1_4&,Farray_particle23_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_particle23_1_6&,Farray_Fcomplex16_1_6_1_6&,Farray_particle23_1_6&,Farray_Fcomplex16_1_6_1_6&,Farray_particle2_1_6&,Farray_Fcomplex16_1_6_1_6&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_particle23_1_2&,Farray_Freal8_1_2_1_2&,Farray_particle2_1_2&,Farray_Freal8_1_2_1_2&,Farray_particle2_1_2&,Farray_Fcomplex16_1_2_1_2&,double&,double&,bool&,double&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,Farray_Fcomplex16_1_3_1_3&,FcomplexT<Fdoubleprecision>&,Farray_Freal8_1_2&,double&,double&,double&>;

  template class backend_functor_common<widthhh_hdec_type*(*)(),widthhh_hdec_type*>;
  template class backend_functor<widthhh_hdec_type*(*)(),widthhh_hdec_type*>;

  template class backend_functor_common<Farray_Freal8_1_100_1_3_1_3*(*)(),Farray_Freal8_1_100_1_3_1_3*>;
  template class backend_functor<Farray_Freal8_1_100_1_3_1_3*(*)(),Farray_Freal8_1_100_1_3_1_3*>;

  template class backend_functor_common<void(*)(const SMInputs&),void,const SMInputs&>;
  template class backend_functor<void(*)(const SMInputs&),void,const SMInputs&>;

  template class backend_functor_common<std::vector<std::vector<str>>(*)(),std::vector<std::vector<str>>>;
  template class backend_functor<std::vector<std::vector<str>>(*)(),std::vector<std::vector<str>>>;

  template class backend_functor_common<void(*)(int,double*,double*,double*,double,const parameters*),void,int,double*,double*,double*,double,const parameters*>;
  template class backend_functor<void(*)(int,double*,double*,double*,double,const parameters*),void,int,double*,double*,double*,double,const parameters*>;

  template class backend_functor_common<double(*)(int,double*,double*,double*,std::complex<double>*,std::complex<double>*,double*,std::complex<double>*,const parameters*,double),double,int,double*,double*,double*,std::complex<double>*,std::complex<double>*,double*,std::complex<double>*,const parameters*,double>;
  template class backend_functor<double(*)(int,double*,double*,double*,std::complex<double>*,std::complex<double>*,double*,std::complex<double>*,const parameters*,double),double,int,double*,double*,double*,std::complex<double>*,std::complex<double>*,double*,std::complex<double>*,const parameters*,double>;

  template class backend_functor_common<void(*)(int&,int&,const char*),void,int&,int&,const char*>;
  template class backend_functor<void(*)(int&,int&,const char*),void,int&,int&,const char*>;

  template class backend_functor_common<DS_SMRUSEFUL*(*)(),DS_SMRUSEFUL*>;
  template class backend_functor<DS_SMRUSEFUL*(*)(),DS_SMRUSEFUL*>;

  template class backend_functor_common<void(*)(int&,int&,int&),void,int&,int&,int&>;
  template class backend_functor<void(*)(int&,int&,int&),void,int&,int&,int&>;

  template class backend_functor_common<sd_mbmb_type*(*)(),sd_mbmb_type*>;
  template class backend_functor<sd_mbmb_type*(*)(),sd_mbmb_type*>;

  template class backend_functor_common<double(*)(double,double,double*,double*,double*,const parameters*,double),double,double,double,double*,double*,double*,const parameters*,double>;
  template class backend_functor<double(*)(double,double,double*,double*,double*,const parameters*,double),double,double,double,double*,double*,double*,const parameters*,double>;

  template class backend_functor_common<DS_MSSMPAR*(*)(),DS_MSSMPAR*>;
  template class backend_functor<DS_MSSMPAR*(*)(),DS_MSSMPAR*>;

  template class backend_functor_common<susyhitin_type*(*)(),susyhitin_type*>;
  template class backend_functor<susyhitin_type*(*)(),susyhitin_type*>;

  template class backend_functor_common<sd_neut2bodygrav_type*(*)(),sd_neut2bodygrav_type*>;
  template class backend_functor<sd_neut2bodygrav_type*(*)(),sd_neut2bodygrav_type*>;

  template class backend_functor_common<void(*)(parameters*),void,parameters*>;
  template class backend_functor<void(*)(parameters*),void,parameters*>;

  template class backend_functor_common<double(*)(double(*)[10][10]),double,double(*)[10][10]>;
  template class backend_functor<double(*)(double(*)[10][10]),double,double(*)[10][10]>;

  template class backend_functor_common<sd_stoploop_type*(*)(),sd_stoploop_type*>;
  template class backend_functor<sd_stoploop_type*(*)(),sd_stoploop_type*>;

  template class backend_functor_common<void(*)(double&,double&,double&,int&),void,double&,double&,double&,int&>;
  template class backend_functor<void(*)(double&,double&,double&,int&),void,double&,double&,double&,int&>;

  template class backend_functor_common<DS_SMCUSEFUL*(*)(),DS_SMCUSEFUL*>;
  template class backend_functor<DS_SMCUSEFUL*(*)(),DS_SMCUSEFUL*>;

  template class backend_functor_common<void(*)(int&,int&,int&,int&,int&,int&,int&),void,int&,int&,int&,int&,int&,int&,int&>;
  template class backend_functor<void(*)(int&,int&,int&,int&,int&,int&,int&),void,int&,int&,int&,int&,int&,int&,int&>;

  template class backend_functor_common<double(*)(int,int,double,double,double*,const parameters*),double,int,int,double,double,double*,const parameters*>;
  template class backend_functor<double(*)(int,int,double,double,double*,const parameters*),double,int,int,double,double,double*,const parameters*>;

  template class backend_functor_common<sd_stop2body_type*(*)(),sd_stop2body_type*>;
  template class backend_functor<sd_stop2body_type*(*)(),sd_stop2body_type*>;

  template class backend_functor_common<DS_NUCOM*(*)(),DS_NUCOM*>;
  template class backend_functor<DS_NUCOM*(*)(),DS_NUCOM*>;

  template class backend_functor_common<Farray_Fcomplex16_1_3_1_3*(*)(),Farray_Fcomplex16_1_3_1_3*>;
  template class backend_functor<Farray_Fcomplex16_1_3_1_3*(*)(),Farray_Fcomplex16_1_3_1_3*>;

  template class backend_functor_common<sd_snelwidth_type*(*)(),sd_snelwidth_type*>;
  template class backend_functor<sd_snelwidth_type*(*)(),sd_snelwidth_type*>;

  template class backend_functor_common<double(*)(double&),double,double&>;
  template class backend_functor<double(*)(double&),double,double&>;

  template class backend_functor_common<Farray_Freal8_1_100_1_5*(*)(),Farray_Freal8_1_100_1_5*>;
  template class backend_functor<Farray_Freal8_1_100_1_5*(*)(),Farray_Freal8_1_100_1_5*>;

  template class backend_functor_common<void(*)(const Finputs&),void,const Finputs&>;
  template class backend_functor<void(*)(const Finputs&),void,const Finputs&>;

  template class backend_functor_common<void(*)(int&,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&),void,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&>;
  template class backend_functor<void(*)(int&,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&),void,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&,int&>;

  template class backend_functor_common<DS_RDMGEV*(*)(),DS_RDMGEV*>;
  template class backend_functor<DS_RDMGEV*(*)(),DS_RDMGEV*>;

  template class backend_functor_common<double(*)(int&,double&,double&),double,int&,double&,double&>;
  template class backend_functor<double(*)(int&,double&,double&),double,int&,double&,double&>;

  template class backend_functor_common<double(*)(double*,double*,double*,std::complex<double>*,std::complex<double>*,double*,std::complex<double>*,const parameters*,double),double,double*,double*,double*,std::complex<double>*,std::complex<double>*,double*,std::complex<double>*,const parameters*,double>;
  template class backend_functor<double(*)(double*,double*,double*,std::complex<double>*,std::complex<double>*,double*,std::complex<double>*,const parameters*,double),double,double*,double*,double*,std::complex<double>*,std::complex<double>*,double*,std::complex<double>*,const parameters*,double>;

  template class backend_functor_common<hd_golddec_type*(*)(),hd_golddec_type*>;
  template class backend_functor<hd_golddec_type*(*)(),hd_golddec_type*>;

  template class backend_functor_common<double(*)(double*),double,double*>;
  template class backend_functor<double(*)(double*),double,double*>;

  template class backend_functor_common<int*(*)(),int*>;
  template class backend_functor<int*(*)(),int*>;

  template class backend_functor_common<void(*)(int),void,int>;
  template class backend_functor<void(*)(int),void,int>;

  template class backend_functor_common<sd_sntauwidth_type*(*)(),sd_sntauwidth_type*>;
  template class backend_functor<sd_sntauwidth_type*(*)(),sd_sntauwidth_type*>;

  template class backend_functor_common<int(*)(const MInteger&),int,const MInteger&>;
  template class backend_functor<int(*)(const MInteger&),int,const MInteger&>;

  template class backend_functor_common<int(*)(),int>;
  template class backend_functor<int(*)(),int>;

  template class backend_functor_common<int(*)(double(*)(double,double,double,double),double*,double*,double*,double*),int,double(*)(double,double,double,double),double*,double*,double*,double*>;
  template class backend_functor<int(*)(double(*)(double,double,double,double),double*,double*,double*,double*),int,double(*)(double,double,double,double),double*,double*,double*,double*>;

  template class backend_functor_common<wisusy_hdec_type*(*)(),wisusy_hdec_type*>;
  template class backend_functor<wisusy_hdec_type*(*)(),wisusy_hdec_type*>;

  template class backend_functor_common<void(*)(SLHAstruct ,double,double),void,SLHAstruct ,double,double>;
  template class backend_functor<void(*)(SLHAstruct ,double,double),void,SLHAstruct ,double,double>;

  template class backend_functor_common<Farray_Fcomplex16_1_2_1_2*(*)(),Farray_Fcomplex16_1_2_1_2*>;
  template class backend_functor<Farray_Fcomplex16_1_2_1_2*(*)(),Farray_Fcomplex16_1_2_1_2*>;

  template class backend_functor_common<DS_MSPCTM*(*)(),DS_MSPCTM*>;
  template class backend_functor<DS_MSPCTM*(*)(),DS_MSPCTM*>;

  template class backend_functor_common<double(*)(double*,double*,double*,double*,double,double,double,const parameters*),double,double*,double*,double*,double*,double,double,double,const parameters*>;
  template class backend_functor<double(*)(double*,double*,double*,double*,double,double,double,const parameters*),double,double*,double*,double*,double*,double,double,double,const parameters*>;

  template class backend_functor_common<DS_MSSMWIDTHS*(*)(),DS_MSSMWIDTHS*>;
  template class backend_functor<DS_MSSMWIDTHS*(*)(),DS_MSSMWIDTHS*>;

  template class backend_functor_common<double(*)(double*,int,double),double,double*,int,double>;
  template class backend_functor<double(*)(double*,int,double),double,double*,int,double>;

  template class backend_functor_common<DS_WIDTHS*(*)(),DS_WIDTHS*>;
  template class backend_functor<DS_WIDTHS*(*)(),DS_WIDTHS*>;

  template class backend_functor_common<sd_snel2body_type*(*)(),sd_snel2body_type*>;
  template class backend_functor<sd_snel2body_type*(*)(),sd_snel2body_type*>;

  template class backend_functor_common<double(*)(const gm2calc::MSSMNoFV_onshell&),double,const gm2calc::MSSMNoFV_onshell&>;
  template class backend_functor<double(*)(const gm2calc::MSSMNoFV_onshell&),double,const gm2calc::MSSMNoFV_onshell&>;

  template class backend_functor_common<libFarrayTest_CB2_type*(*)(),libFarrayTest_CB2_type*>;
  template class backend_functor<libFarrayTest_CB2_type*(*)(),libFarrayTest_CB2_type*>;

  template class backend_functor_common<void(*)(int&,double&,double&,double&,int&,double&),void,int&,double&,double&,double&,int&,double&>;
  template class backend_functor<void(*)(int&,double&,double&,double&,int&,double&),void,int&,double&,double&,double&,int&,double&>;

  template class backend_functor_common<void(*)(double*,double*,double*,double*,double*,double*,double*,double*),void,double*,double*,double*,double*,double*,double*,double*,double*>;
  template class backend_functor<void(*)(double*,double*,double*,double*,double*,double*,double*,double*),void,double*,double*,double*,double*,double*,double*,double*,double*>;

  template class backend_functor_common<double*(*)(),double*>;
  template class backend_functor<double*(*)(),double*>;

  template class backend_functor_common<void(*)(int&,Farray<fh_complex,1,681>&,Farray<fh_complex,1,231>&,Farray<fh_real,1,978>&,Farray<fh_real,1,250>&,int&),void,int&,Farray<fh_complex,1,681>&,Farray<fh_complex,1,231>&,Farray<fh_real,1,978>&,Farray<fh_real,1,250>&,int&>;
  template class backend_functor<void(*)(int&,Farray<fh_complex,1,681>&,Farray<fh_complex,1,231>&,Farray<fh_real,1,978>&,Farray<fh_real,1,250>&,int&),void,int&,Farray<fh_complex,1,681>&,Farray<fh_complex,1,231>&,Farray<fh_real,1,978>&,Farray<fh_real,1,250>&,int&>;

  template class backend_functor_common<double(*)(const MInteger&,const MInteger&),double,const MInteger&,const MInteger&>;
  template class backend_functor<double(*)(const MInteger&,const MInteger&),double,const MInteger&,const MInteger&>;

  template class backend_functor_common<wisfer_hdec_type*(*)(),wisfer_hdec_type*>;
  template class backend_functor<wisfer_hdec_type*(*)(),wisfer_hdec_type*>;

  template class backend_functor_common<DS_RDDOF*(*)(),DS_RDDOF*>;
  template class backend_functor<DS_RDDOF*(*)(),DS_RDDOF*>;

  template class backend_functor_common<slha_leshouches2_hdec_type*(*)(),slha_leshouches2_hdec_type*>;
  template class backend_functor<slha_leshouches2_hdec_type*(*)(),slha_leshouches2_hdec_type*>;

  template class backend_functor_common<double(*)(Farray<Fdouble,1,3>&),double,Farray<Fdouble,1,3>&>;
  template class backend_functor<double(*)(Farray<Fdouble,1,3>&),double,Farray<Fdouble,1,3>&>;

  template class backend_functor_common<Farray_Freal8_1_100*(*)(),Farray_Freal8_1_100*>;
  template class backend_functor<Farray_Freal8_1_100*(*)(),Farray_Freal8_1_100*>;

  template class backend_functor_common<Fstring<15>*(*)(),Fstring<15>*>;
  template class backend_functor<Fstring<15>*(*)(),Fstring<15>*>;

  template class backend_functor_common<int(*)(const str&),int,const str&>;
  template class backend_functor<int(*)(const str&),int,const str&>;

  template class backend_functor_common<double(*)(int,...),double,int>;
  template class backend_functor<double(*)(int,...),double,int>;

  template class backend_functor_common<sd_sup2body_type*(*)(),sd_sup2body_type*>;
  template class backend_functor<sd_sup2body_type*(*)(),sd_sup2body_type*>;

  template class backend_functor_common<void(*)(const MInteger&,const double&,const double&,const double&,const double&,const double&),void,const MInteger&,const double&,const double&,const double&,const double&,const double&>;
  template class backend_functor<void(*)(const MInteger&,const double&,const double&,const double&,const double&,const double&),void,const MInteger&,const double&,const double&,const double&,const double&,const double&>;

  template class backend_functor_common<double(*)(int&),double,int&>;
  template class backend_functor<double(*)(int&),double,int&>;

  template class backend_functor_common<DS_SFERMIONMASS*(*)(),DS_SFERMIONMASS*>;
  template class backend_functor<DS_SFERMIONMASS*(*)(),DS_SFERMIONMASS*>;

  template class backend_functor_common<Farray_Fcomplex16_1_6_1_6*(*)(),Farray_Fcomplex16_1_6_1_6*>;
  template class backend_functor<Farray_Fcomplex16_1_6_1_6*(*)(),Farray_Fcomplex16_1_6_1_6*>;

  template class backend_functor_common<void(*)(int&,int&),void,int&,int&>;
  template class backend_functor<void(*)(int&,int&),void,int&,int&>;

  template class backend_functor_common<double(*)(const double&,const double&),double,const double&,const double&>;
  template class backend_functor<double(*)(const double&,const double&),double,const double&,const double&>;

  template class backend_functor_common<DS_MSSMIUSEFUL*(*)(),DS_MSSMIUSEFUL*>;
  template class backend_functor<DS_MSSMIUSEFUL*(*)(),DS_MSSMIUSEFUL*>;

  template class backend_functor_common<checkfavvio_type*(*)(),checkfavvio_type*>;
  template class backend_functor<checkfavvio_type*(*)(),checkfavvio_type*>;

  template class backend_functor_common<double(*)(const MInteger&),double,const MInteger&>;
  template class backend_functor<double(*)(const MInteger&),double,const MInteger&>;

  template class backend_functor_common<void(*)(double*,double*),void,double*,double*>;
  template class backend_functor<void(*)(double*,double*),void,double*,double*>;

  template class backend_functor_common<sd_char3body_type*(*)(),sd_char3body_type*>;
  template class backend_functor<sd_char3body_type*(*)(),sd_char3body_type*>;

  template class backend_functor_common<double(*)(double,double,int,int),double,double,double,int,int>;
  template class backend_functor<double(*)(double,double,int,int),double,double,double,int,int>;

  template class backend_functor_common<double(*)(double,double*),double,double,double*>;
  template class backend_functor<double(*)(double,double*),double,double,double*>;

  template class backend_functor_common<double(*)(int,int,double,double,double*,double*,double*,double*,std::complex<double>*,std::complex<double>*,double*,std::complex<double>*,const parameters*,double),double,int,int,double,double,double*,double*,double*,double*,std::complex<double>*,std::complex<double>*,double*,std::complex<double>*,const parameters*,double>;
  template class backend_functor<double(*)(int,int,double,double,double*,double*,double*,double*,std::complex<double>*,std::complex<double>*,double*,std::complex<double>*,const parameters*,double),double,int,int,double,double,double*,double*,double*,double*,std::complex<double>*,std::complex<double>*,double*,std::complex<double>*,const parameters*,double>;

  template class backend_functor_common<void(*)(Farray<Fdouble,1,3>&,int&,Fdouble(*)(Farray<Fdouble,1,3>&)),void,Farray<Fdouble,1,3>&,int&,Fdouble(*)(Farray<Fdouble,1,3>&)>;
  template class backend_functor<void(*)(Farray<Fdouble,1,3>&,int&,Fdouble(*)(Farray<Fdouble,1,3>&)),void,Farray<Fdouble,1,3>&,int&,Fdouble(*)(Farray<Fdouble,1,3>&)>;

  template class backend_functor_common<double(*)(int&,const double&),double,int&,const double&>;
  template class backend_functor<double(*)(int&,const double&),double,int&,const double&>;

  template class backend_functor_common<double(*)(double*,double*,double*,std::complex<double>*,std::complex<double>*,const parameters*,double),double,double*,double*,double*,std::complex<double>*,std::complex<double>*,const parameters*,double>;
  template class backend_functor<double(*)(double*,double*,double*,std::complex<double>*,std::complex<double>*,const parameters*,double),double,double*,double*,double*,std::complex<double>*,std::complex<double>*,const parameters*,double>;

  template class backend_functor_common<double(*)(double&,int&,int&,int&),double,double&,int&,int&,int&>;
  template class backend_functor<double(*)(double&,int&,int&,int&),double,double&,int&,int&,int&>;

  template class backend_functor_common<libFarrayTest_CB_type*(*)(),libFarrayTest_CB_type*>;
  template class backend_functor<libFarrayTest_CB_type*(*)(),libFarrayTest_CB_type*>;

  template class backend_functor_common<void(*)(const MInteger&,double&,double&,double&,double&,double&),void,const MInteger&,double&,double&,double&,double&,double&>;
  template class backend_functor<void(*)(const MInteger&,double&,double&,double&,double&,double&),void,const MInteger&,double&,double&,double&,double&,double&>;

  template class backend_functor_common<sd_stauwidth_type*(*)(),sd_stauwidth_type*>;
  template class backend_functor<sd_stauwidth_type*(*)(),sd_stauwidth_type*>;

  template class backend_functor_common<Farray_Freal8_1_100_1_6_1_6*(*)(),Farray_Freal8_1_100_1_6_1_6*>;
  template class backend_functor<Farray_Freal8_1_100_1_6_1_6*(*)(),Farray_Freal8_1_100_1_6_1_6*>;

  template class backend_functor_common<double(*)(const parameters*,double),double,const parameters*,double>;
  template class backend_functor<double(*)(const parameters*,double),double,const parameters*,double>;

  template class backend_functor_common<bool(*)(Fstring<20>),bool,Fstring<20>>;
  template class backend_functor<bool(*)(Fstring<20>),bool,Fstring<20>>;

  template class backend_functor_common<Spectrum(*)(const std::map<str,safe_ptr<double>>&),Spectrum,const std::map<str,safe_ptr<double>>&>;
  template class backend_functor<Spectrum(*)(const std::map<str,safe_ptr<double>>&),Spectrum,const std::map<str,safe_ptr<double>>&>;

  template class backend_functor_common<Farray_Finteger_1_3*(*)(),Farray_Finteger_1_3*>;
  template class backend_functor<Farray_Finteger_1_3*(*)(),Farray_Finteger_1_3*>;

  template class backend_functor_common<Farray_Freal8_1_2_1_2*(*)(),Farray_Freal8_1_2_1_2*>;
  template class backend_functor<Farray_Freal8_1_2_1_2*(*)(),Farray_Freal8_1_2_1_2*>;

  template class backend_functor_common<sd_sbotwidth_type*(*)(),sd_sbotwidth_type*>;
  template class backend_functor<sd_sbotwidth_type*(*)(),sd_sbotwidth_type*>;

  template class backend_functor_common<void(*)(const MInteger&,const MInteger&,const MInteger&),void,const MInteger&,const MInteger&,const MInteger&>;
  template class backend_functor<void(*)(const MInteger&,const MInteger&,const MInteger&),void,const MInteger&,const MInteger&,const MInteger&>;

  template class backend_functor_common<MBool(*)(),MBool>;
  template class backend_functor<MBool(*)(),MBool>;

  template class backend_functor_common<void(*)(bool&,int&,int&,int&,int&,Farray_Finteger_1_3&,Farray_Finteger_1_3&,Farray_Finteger_1_3&,Farray_Finteger_1_3&,int&),void,bool&,int&,int&,int&,int&,Farray_Finteger_1_3&,Farray_Finteger_1_3&,Farray_Finteger_1_3&,Farray_Finteger_1_3&,int&>;
  template class backend_functor<void(*)(bool&,int&,int&,int&,int&,Farray_Finteger_1_3&,Farray_Finteger_1_3&,Farray_Finteger_1_3&,Farray_Finteger_1_3&,int&),void,bool&,int&,int&,int&,int&,Farray_Finteger_1_3&,Farray_Finteger_1_3&,Farray_Finteger_1_3&,Farray_Finteger_1_3&,int&>;

  template class backend_functor_common<double(*)(),double>;
  template class backend_functor<double(*)(),double>;

  template class backend_functor_common<widtha_hdec_type*(*)(),widtha_hdec_type*>;
  template class backend_functor<widtha_hdec_type*(*)(),widtha_hdec_type*>;

  template class backend_functor_common<void(*)(int&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&),void,int&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&>;
  template class backend_functor<void(*)(int&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&),void,int&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&,fh_ccomplex&>;

  template class backend_functor_common<sd_selectron_type*(*)(),sd_selectron_type*>;
  template class backend_functor<sd_selectron_type*(*)(),sd_selectron_type*>;

  template class backend_functor_common<DS_VRTXS*(*)(),DS_VRTXS*>;
  template class backend_functor<DS_VRTXS*(*)(),DS_VRTXS*>;

  template class backend_functor_common<void(*)(const char&),void,const char&>;
  template class backend_functor<void(*)(const char&),void,const char&>;

  template class backend_functor_common<Farray_Fcomplex16_1_4_1_4*(*)(),Farray_Fcomplex16_1_4_1_4*>;
  template class backend_functor<Farray_Fcomplex16_1_4_1_4*(*)(),Farray_Fcomplex16_1_4_1_4*>;

  template class backend_functor_common<void(*)(double&),void,double&>;
  template class backend_functor<void(*)(double&),void,double&>;

  template class backend_functor_common<DS_MSSMSWITCH*(*)(),DS_MSSMSWITCH*>;
  template class backend_functor<DS_MSSMSWITCH*(*)(),DS_MSSMSWITCH*>;

  template class backend_functor_common<void(*)(const double(&)[29],const double(&)[29][3],const double(&)[15],const double(&)[3],const double&,const double&,const double&,const double&,const double&),void,const double(&)[29],const double(&)[29][3],const double(&)[15],const double(&)[3],const double&,const double&,const double&,const double&,const double&>;
  template class backend_functor<void(*)(const double(&)[29],const double(&)[29][3],const double(&)[15],const double(&)[3],const double&,const double&,const double&,const double&,const double&),void,const double(&)[29],const double(&)[29][3],const double(&)[15],const double(&)[3],const double&,const double&,const double&,const double&,const double&>;

  template class backend_functor_common<double(*)(int),double,int>;
  template class backend_functor<double(*)(int),double,int>;

  template class backend_functor_common<DS_RDSWITCH*(*)(),DS_RDSWITCH*>;
  template class backend_functor<DS_RDSWITCH*(*)(),DS_RDSWITCH*>;

  template class backend_functor_common<void(*)(double(*)(double&),double&),void,double(*)(double&),double&>;
  template class backend_functor<void(*)(double(*)(double&),double&),void,double(*)(double&),double&>;

  template class backend_functor_common<bool(*)(bool&),bool,bool&>;
  template class backend_functor<bool(*)(bool&),bool,bool&>;

  template class backend_functor_common<DS_RDERRORS*(*)(),DS_RDERRORS*>;
  template class backend_functor<DS_RDERRORS*(*)(),DS_RDERRORS*>;

  template class backend_functor_common<double(*)(double,double,double,double),double,double,double,double,double>;
  template class backend_functor<double(*)(double,double,double,double),double,double,double,double,double>;

  template class backend_functor_common<sd_charwidth_type*(*)(),sd_charwidth_type*>;
  template class backend_functor<sd_charwidth_type*(*)(),sd_charwidth_type*>;

  template class backend_functor_common<int(*)(int&),int,int&>;
  template class backend_functor<int(*)(int&),int,int&>;

  template class backend_functor_common<double(*)(const MInteger&,const double&),double,const MInteger&,const double&>;
  template class backend_functor<double(*)(const MInteger&,const double&),double,const MInteger&,const double&>;

  template class backend_functor_common<widthhc_hdec_type*(*)(),widthhc_hdec_type*>;
  template class backend_functor<widthhc_hdec_type*(*)(),widthhc_hdec_type*>;

  template class backend_functor_common<sd_sdown2body_type*(*)(),sd_sdown2body_type*>;
  template class backend_functor<sd_sdown2body_type*(*)(),sd_sdown2body_type*>;

  template class backend_functor_common<MString(*)(const std::string&),MString,const std::string&>;
  template class backend_functor<MString(*)(const std::string&),MString,const std::string&>;

  template class backend_functor_common<sd_gluiloop_type*(*)(),sd_gluiloop_type*>;
  template class backend_functor<sd_gluiloop_type*(*)(),sd_gluiloop_type*>;

  template class backend_functor_common<double(*)(const MInteger&,const double&,const double&,const double&),double,const MInteger&,const double&,const double&,const double&>;
  template class backend_functor<double(*)(const MInteger&,const double&,const double&,const double&),double,const MInteger&,const double&,const double&,const double&>;

  template class backend_functor_common<DS_RDPADD*(*)(),DS_RDPADD*>;
  template class backend_functor<DS_RDPADD*(*)(),DS_RDPADD*>;

  template class backend_functor_common<double(*)(int&,double&),double,int&,double&>;
  template class backend_functor<double(*)(int&,double&),double,int&,double&>;

  template class backend_functor_common<void(*)(int&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&),void,int&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&>;
  template class backend_functor<void(*)(int&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&),void,int&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&,fh_creal&>;

  template class backend_functor_common<Farray_particle2_1_2*(*)(),Farray_particle2_1_2*>;
  template class backend_functor<Farray_particle2_1_2*(*)(),Farray_particle2_1_2*>;

  template class backend_functor_common<int(*)(const MList<MInteger>&,const MInteger&),int,const MList<MInteger>&,const MInteger&>;
  template class backend_functor<int(*)(const MList<MInteger>&,const MInteger&),int,const MList<MInteger>&,const MInteger&>;

  template class backend_functor_common<double(*)(const MList<MReal>&),double,const MList<MReal>&>;
  template class backend_functor<double(*)(const MList<MReal>&),double,const MList<MReal>&>;

  template class backend_functor_common<dblarr*(*)(),dblarr*>;
  template class backend_functor<dblarr*(*)(),dblarr*>;

  template class backend_functor_common<double(*)(double*,double*,double*,double*,double*,const parameters*,double,double,double),double,double*,double*,double*,double*,double*,const parameters*,double,double,double>;
  template class backend_functor<double(*)(double*,double*,double*,double*,double*,const parameters*,double,double,double),double,double*,double*,double*,double*,double*,const parameters*,double,double,double>;

  template class backend_functor_common<DS_HMFRAMEVELCOM*(*)(),DS_HMFRAMEVELCOM*>;
  template class backend_functor<DS_HMFRAMEVELCOM*(*)(),DS_HMFRAMEVELCOM*>;

  template class backend_functor_common<int(*)(char*),int,char*>;
  template class backend_functor<int(*)(char*),int,char*>;

  template class backend_functor_common<sd_neutloop_type*(*)(),sd_neutloop_type*>;
  template class backend_functor<sd_neutloop_type*(*)(),sd_neutloop_type*>;

  template class backend_functor_common<void(*)(double&,double&,double&,double&),void,double&,double&,double&,double&>;
  template class backend_functor<void(*)(double&,double&,double&,double&),void,double&,double&,double&,double&>;

  template class backend_functor_common<FcomplexT<Fdoubleprecision>*(*)(),FcomplexT<Fdoubleprecision>*>;
  template class backend_functor<FcomplexT<Fdoubleprecision>*(*)(),FcomplexT<Fdoubleprecision>*>;

  template class backend_functor_common<DS_RDLUN*(*)(),DS_RDLUN*>;
  template class backend_functor<DS_RDLUN*(*)(),DS_RDLUN*>;

  template class backend_functor_common<void(*)(double(*)(int&),int&),void,double(*)(int&),int&>;
  template class backend_functor<void(*)(double(*)(int&),int&),void,double(*)(int&),int&>;
}

#endif // defined __backend_functor_types_hpp__
