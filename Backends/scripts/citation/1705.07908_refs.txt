References
1. ATLAS Collaboration, Search for resonances
decaying to photon pairs in 3.2 fb−1 of pp
√
collisions at s = 13 TeV with the ATLAS
detector, ATLAS-CONF-2015-081 (2015).
2. ATLAS Collaboration: ATLAS Collaboration,
Summary of the ATLAS experiment’s sensitivity
to supersymmetry after LHC Run 1 – interpreted
in the phenomenological MSSM, JHEP 10 (2015)
134, [arXiv:1508.06608].
3. CMS Collaboration: CMS Collaboration, Search
for supersymmetry in the multijet and missing
transverse momentum final state in pp collisions
at 13 TeV, Phys. Lett. B 758 (2016) 152–180,
[arXiv:1602.06581].
4. G. W. Bennett, B. Bousquet, et. al., Final report
of the E821 muon anomalous magnetic moment
measurement at BNL, Phys. Rev. D 73 (2006)
072003, [hep-ex/0602035].
5. T. Abe, I. Adachi, et. al., Belle II Technical
Design Report, arXiv:1011.0352.
6. CMS and LHCb Collaborations, Observation of
the rare Bs0 → µ+ µ− decay from the combined
analysis of CMS and LHCb data, Nature 522
(2015) 68–72, [arXiv:1411.4413].
7. XENON100 Collaboration: E. Aprile, M. Alfonsi,
et. al., Dark Matter Results from 225 Live Days
of XENON100 Data, Phys. Rev. Lett. 109 (2012)
181301, [arXiv:1207.5988].
8. C. Amole, M. Ardid, et. al., Dark matter search
results from the PICO-60 CF3 I bubble chamber,
Phys. Rev. D 93 (2016) 052014,
[arXiv:1510.07754].
9. D. S. Akerib, H. M. Araújo, et. al., Improved
Limits on Scattering of Weakly Interacting
Massive Particles from Reanalysis of 2013 LUX
Data, Phys. Rev. Lett. 116 (2016) 161301,
[arXiv:1512.03506].
10. Planck Collaboration, P. A. R. Ade, et. al., Planck
2015 results. XIII. Cosmological parameters, A&A
594 (2016) A13, [arXiv:1502.01589].
11. T. R. Slatyer, Indirect dark matter signatures in
the cosmic dark ages. I. Generalizing the bound on
s -wave dark matter annihilation from Planck
results, Phys. Rev. D 93 (2016) 023527,
[arXiv:1506.03811].

12. R. Adhikari, M. Agostini, et. al., A White Paper
on keV Sterile Neutrino Dark Matter,
arXiv:1602.04816.
13. T. Bringmann and C. Weniger, Gamma ray
signals from dark matter: Concepts, status and
prospects, Physics of the Dark Universe 1 (2012)
194–217, [arXiv:1208.5481].
14. Fermi-LAT Collaboration: M. Ackermann,
A. Albert, et. al., Searching for Dark Matter
Annihilation from Milky Way Dwarf Spheroidal
Galaxies with Six Years of Fermi Large Area
Telescope Data, Phys. Rev. Lett. 115 (2015)
231301, [arXiv:1503.02641].
15. IceCube Collaboration: M. G. Aartsen et. al.,
Improved limits on dark matter annihilation in the
Sun with the 79-string IceCube detector and
implications for supersymmetry, JCAP 04 (2016)
022, [arXiv:1601.00653].
16. DAMA Collaboration: R. Bernabei, P. Belli,
et. al., First results from DAMA/LIBRA and the
combined results with DAMA/NaI,
Eur. Phys. J. C (2008) 167, [arXiv:0804.2741].
17. L. Goodenough and D. Hooper, Possible Evidence
For Dark Matter Annihilation In The Inner Milky
Way From The Fermi Gamma Ray Space
Telescope, arXiv:0910.2998.
18. O. Adriani, G. C. Barbarino, et. al., An
anomalous positron abundance in cosmic rays with
energies 1.5–100 GeV, Nature 458 (2009) 607–609,
[arXiv:0810.4995].
19. CoGeNT Collaboration: C. E. Aalseth, P. S.
Barbeau, et. al., Search for an Annual Modulation
in a p-Type Point Contact Germanium Dark
Matter Detector, Phys. Rev. Lett. 107 (2011)
141301, [arXiv:1106.0650].
20. T. Bringmann, X. Huang, A. Ibarra, S. Vogl, and
C. Weniger, Fermi-LAT search for internal
bremsstrahlung signatures from dark matter
annihilation, JCAP 7 (2012) 54,
[arXiv:1203.1312].
21. E. Bulbul, M. Markevitch, et. al., Detection of an
Unidentified Emission Line in the Stacked X-Ray
Spectrum of Galaxy Clusters, ApJ 789 (2014) 13,
[arXiv:1402.2301].
22. A. Boyarsky, O. Ruchayskiy, D. Iakubovskyi, and
J. Franse, Unidentified Line in X-Ray Spectra of
the Andromeda Galaxy and Perseus Galaxy
Cluster, Phys. Rev. Lett. 113 (2014) 251301,
[arXiv:1402.4119].
23. A. C. Vincent, P. Scott, and A. Serenelli, Possible
Indication of Momentum-Dependent Asymmetric
Dark Matter in the Sun, Phys. Rev. Lett. 114
(2015) 081302, [arXiv:1411.6626].

24. ATLAS Collaboration: G. Aad, B. Abbott, et. al.,
Search for high-mass diboson resonances with
boson-tagged jets in proton-proton collisions at
√
s = 8 TeV with the ATLAS detector, JHEP 12
(2015) 55, [arXiv:1506.00962].
25. CDMS Collaboration: CDMS Collaboration,
Z. Ahmed, et. al., Search for annual modulation
in low-energy CDMS-II data, arXiv:1203.1309.
26. R. Bartels, S. Krishnamurthy, and C. Weniger,
Strong support for the millisecond pulsar origin of
the Galactic center GeV excess, Phys. Rev. Lett.
116 (2015) 051102, [arXiv:1506.05104].
27. S. K. Lee, M. Lisanti, B. R. Safdi, T. R. Slatyer,
and W. Xue, Evidence for Unresolved γ-Ray
Point Sources in the Inner Galaxy, Phys. Rev.
Lett. 116 (2016) 051103, [arXiv:1506.05124].
28. T. Jeltema and S. Profumo, Deep XMM
observations of Draco rule out at the 99 per cent
confidence level a dark matter decay origin for the
3.5 keV line, MNRAS 458 (2016) 3592–3596,
[arXiv:1512.01239].
29. G. Angloher, A. Bento, et. al., Limits on
Momentum-Dependent Asymmetric Dark Matter
with CRESST-II, Phys. Rev. Lett. 117 (2016)
021303, [arXiv:1601.04447].
30. A. B. Arbuzov, M. Awramik, et. al., ZFITTER: a
semi-analytical program for fermion pair
production in ee annihilation, from version 6.21
to version 6.42, Comp. Phys. Comm. 174 (2006)
728–758, [hep-ph/0507146].
31. M. Baak, M. Goebel, et. al., Updated status of the
global electroweak fit and constraints on new
physics, Eur. Phys. J. C 72 (2012) 2003,
[arXiv:1107.0975].
32. J. Charles, A. Höcker, et. al., CP violation and
the CKM matrix: assessing the impact of the
asymmetric B factories, Eur. Phys. J. C 41 (2005)
1–131, [hep-ph/0406184].
33. F. Capozzi, G. L. Fogli, et. al., Status of
three-neutrino oscillation parameters, circa 2013,
Phys. Rev. D 89 (2014) 093018,
[arXiv:1312.2878].
34. D. V. Forero, M. Tórtola, and J. W. F. Valle,
Neutrino oscillations refitted, Phys. Rev. D 90
(2014) 093006, [arXiv:1405.7540].
35. J. Bergström, M. C. Gonzalez-Garcia, M. Maltoni,
and T. Schwetz, Bayesian global analysis of
neutrino oscillation data, JHEP 9 (2015) 200,
[arXiv:1507.04366].
36. E. A. Baltz and P. Gondolo, Markov Chain Monte
Carlo Exploration of Minimal Supergravity with
Implications for Dark Matter, JHEP 10 (2004) 52,
[hep-ph/0407039].

37. B. C. Allanach and C. G. Lester,
Multidimensional mSUGRA likelihood maps, Phys.
Rev. D 73 (2006) 015013, [hep-ph/0507283].
38. R. Lafaye, T. Plehn, and D. Zerwas, SFITTER:
SUSY Parameter Analysis at LHC and LC,
hep-ph/0404282.
39. R. Ruiz de Austri, R. Trotta, and L. Roszkowski,
A Markov chain Monte Carlo analysis of CMSSM,
JHEP 5 (2006) 2, [hep-ph/0602028].
40. R. Trotta, R. R. de Austri, and L. Roszkowski,
Prospects for direct dark matter detection in the
constrained MSSM, New Astronomy Review 51
(2007) 316–320, [astro-ph/0609126].
41. L. Roszkowski, R. Ruiz de Austri, and R. Trotta,
Implications for the Constrained MSSM from a
new prediction for b → sγ, JHEP 7 (2007) 75,
[0705.2012].
42. L. Roszkowski, R. Ruiz de Austri, J. Silk, and
R. Trotta, On prospects for dark matter indirect
detection in the Constrained MSSM, Phys. Lett. B
671 (2009) 10–14, [0707.0622].
43. R. Trotta, F. Feroz, M. Hobson, L. Roszkowski,
and R. Ruiz de Austri, The impact of priors and
observables on parameter inferences in the
constrained MSSM, JHEP 12 (2008) 24,
[arXiv:0809.3792].
44. G. D. Martinez, J. S. Bullock, M. Kaplinghat,
L. E. Strigari, and R. Trotta, Indirect Dark
Matter detection from Dwarf satellites: joint
expectations from astrophysics and supersymmetry,
JCAP 6 (2009) 14, [0902.4715].
45. L. Roszkowski, R. Ruiz de Austri, R. Trotta,
Y.-L. S. Tsai, and T. A. Varley, Global fits of the
nonuniversal Higgs model, Phys. Rev. D 83 (2011)
015014, [arXiv:0903.1279].
46. L. Roszkowski, R. Ruiz de Austri, and R. Trotta,
Efficient reconstruction of constrained MSSM
parameters from LHC data: A case study, Phys.
Rev. D 82 (2010) 055003, [arXiv:0907.0594].
47. P. Scott, J. Conrad, et. al., Direct constraints on
minimal supersymmetry from Fermi-LAT
observations of the dwarf galaxy Segue 1, JCAP 1
(2010) 31, [arXiv:0909.3300].
48. G. Bertone, D. G. Cerdeño, M. Fornasa, R. Ruiz
de Austri, and R. Trotta, Identification of dark
matter particles with LHC and direct detection
data, Phys. Rev. D 82 (2010) 055008,
[arXiv:1005.4280].
49. M. Bridges, K. Cranmer, et. al., A coverage study
of CMSSM based on ATLAS sensitivity using fast
neural networks techniques, JHEP 3 (2011) 12,
[arXiv:1011.4306].

50. C. Strege, G. Bertone, et. al., Updated global fits
of the cMSSM including the latest LHC SUSY
and Higgs searches and XENON100 data, JCAP 3
(2012) 30, [arXiv:1112.4192].
51. G. Bertone, D. Cumberbatch, R. Ruiz de Austri,
and R. Trotta, Dark Matter searches: the
nightmare scenario, JCAP 1 (2012) 4,
[arXiv:1107.5813].
52. G. Bertone, D. G. Cerdeño, et. al.,
Complementarity of indirect and accelerator dark
matter searches, Phys. Rev. D 85 (2012) 055014,
[arXiv:1111.2607].
53. P. Scott, C. Savage, J. Edsjö, and the IceCube
Collaboration: R. Abbasi et al., Use of event-level
neutrino telescope data in global fits for theories
of new physics, JCAP 11 (2012) 57,
[arXiv:1207.0810].
54. C. Strege, G. Bertone, et. al., Global fits of the
cMSSM and NUHM including the LHC Higgs
discovery and new XENON100 constraints, JCAP
4 (2013) 13, [arXiv:1212.2636].
55. G. Bertone, D. G. Cerdeño, et. al., Global fits of
the cMSSM including the first LHC and
XENON100 data, JCAP 1 (2012) 15,
[arXiv:1107.1715].
56. G. Bertone, F. Calore, et. al., Global analysis of
the pMSSM in light of the Fermi GeV excess:
prospects for the LHC Run-II and astroparticle
experiments, arXiv:1507.07008.
57. P. Bechtle, K. Desch, and P. Wienemann, Fittino,
a program for determining MSSM parameters
from collider observables using an iterative
method, Comp. Phys. Comm. 174 (2006) 47–70,
[hep-ph/0412012].
58. P. Bechtle, K. Desch, M. Uhlenbrock, and
P. Wienemann, Constraining SUSY models with
Fittino using measurements before, with and
beyond the LHC, Eur. Phys. J. C 66 (2010)
215–259, [arXiv:0907.2589].
59. P. Bechtle, T. Bringmann, et. al., Constrained
supersymmetry after two years of LHC data: a
global view with Fittino, JHEP 6 (2012) 98,
[arXiv:1204.4199].
60. O. Buchmueller, R. Cavanaugh, et. al., Predictions
for supersymmetric particle masses using indirect
experimental and cosmological constraints, JHEP
9 (2008) 117, [arXiv:0808.4128].
61. O. Buchmueller, R. Cavanaugh, et. al., Likelihood
functions for supersymmetric observables in
frequentist analyses of the CMSSM and NUHM1,
Eur. Phys. J. C 64 (2009) 391–415,
[arXiv:0907.5568].

62. O. Buchmueller, R. Cavanaugh, et. al., Frequentist
analysis of the parameter space of minimal
supergravity, Eur. Phys. J. C 71 (2011) 1583,
[arXiv:1011.6118].
63. O. Buchmueller, R. Cavanaugh, et. al.,
Implications of initial LHC searches for
supersymmetry, Eur. Phys. J. C 71 (2011) 1634,
[arXiv:1102.4585].
64. O. Buchmueller, R. Cavanaugh, et. al.,
Supersymmetry and dark matter in light of LHC
2010 and XENON100 data, Eur. Phys. J. C 71
(2011) 1722, [arXiv:1106.2529].
65. O. Buchmueller, R. Cavanaugh, et. al.,
Supersymmetry in light of 1/fb of LHC data,
Eur. Phys. J. C 72 (2012) 1878,
[arXiv:1110.3568].
66. O. Buchmueller, R. Cavanaugh, et. al., Higgs and
supersymmetry, Eur. Phys. J. C 72 (2012) 2020,
[arXiv:1112.3564].
67. O. Buchmueller, R. Cavanaugh, et. al., The
CMSSM and NUHM1 in light of 7 TeV LHC,
Bs → µ+ µ− and XENON100 data,
Eur. Phys. J. C 72 (2012) 2243,
[arXiv:1207.7315].
68. O. Buchmueller et. al., The CMSSM and NUHM1
after LHC Run 1, Eur. Phys. J. C 74 (2014) 2922,
[arXiv:1312.5250].
69. O. Buchmueller et. al., The NUHM2 after LHC
Run 1, Eur. Phys. J. C 74 (2014) 3212,
[arXiv:1408.4060].
70. E. Bagnaschi et. al., Likelihood Analysis of
Supersymmetric SU(5) GUTs, Eur. Phys. J. C 77
(2017) 104, [arXiv:1610.10084].
71. E. Bagnaschi et. al., Likelihood Analysis of the
Minimal AMSB Model, Eur. Phys. J. C 77 (2017)
268, [arXiv:1612.05210].
72. B. C. Allanach, K. Cranmer, C. G. Lester, and
A. M. Weber, Natural priors, CMSSM fits and
LHC weather forecasts, JHEP 08 (2007) 023,
[arXiv:0705.0487].
73. S. S. Abdussalam, B. C. Allanach, F. Quevedo,
F. Feroz, and M. Hobson, Fitting the
phenomenological MSSM, Phys. Rev. D 81 (2010)
095012, [arXiv:0904.2548].
74. S. S. Abdussalam, B. C. Allanach, M. J. Dolan,
F. Feroz, and M. P. Hobson, Selecting a model of
supersymmetry breaking mediation, Phys. Rev. D
80 (2009) 035017, [arXiv:0906.0957].
75. B. C. Allanach, Impact of CMS Multi-jets and
Missing Energy Search on CMSSM Fits, Phys.
Rev. D 83 (2011) 095019, [arXiv:1102.3149].
76. B. C. Allanach, T. J. Khoo, C. G. Lester, and
S. L. Williams, The impact of ATLAS zero-lepton,
jets and missing momentum search on a CMSSM
fit, JHEP 6 (2011) 35, [arXiv:1103.0969].

77. A. Fowlie, A. Kalinowski, M. Kazana,
L. Roszkowski, and Y. L. S. Tsai, Bayesian
Implications of Current LHC and XENON100
Search Limits for the Constrained MSSM, Phys.
Rev. D 85 (2012) 075012, [arXiv:1111.6098].

78. L. Roszkowski, E. M. Sessolo, and Y.-L. S. Tsai,
Bayesian implications of current LHC
supersymmetry and dark matter detection searches
for the constrained MSSM, Phys. Rev. D 86
(2012) 095005, [arXiv:1202.1503].

79. C. Balázs, A. Buckley, D. Carter, B. Farmer, and
M. White, Should we still believe in constrained
supersymmetry?, Eur. Phys. J. C 73 (2013) 2563,
[arXiv:1205.1568].

80. M. E. Cabrera, J. A. Casas, and R. Ruiz de
Austri, The health of SUSY after the Higgs
discovery and the XENON100 data, JHEP 07
(2013) 182, [arXiv:1212.4821].

81. A. Fowlie, K. Kowalska, L. Roszkowski, E. M.
Sessolo, and Y.-L. S. Tsai, Dark matter and
collider signatures of the MSSM, Phys. Rev. D 88
(2013) 055012, [arXiv:1306.1567].

82. S. Henrot-Versillé, R. Lafaye, et. al., Constraining
supersymmetry using the relic density and the
Higgs boson, Phys. Rev. D 89 (2014) 055017,
[arXiv:1309.6958].

83. D. Kim, P. Athron, C. Balázs, B. Farmer, and
E. Hutchison, Bayesian naturalness of the
CMSSM and CNMSSM, Phys. Rev. D 90 (2014)
055008, [arXiv:1312.4150].

84. A. Fowlie and M. Raidal, Prospects for
√
constrained supersymmetry at s = 33 TeV and
√
s = 100 TeV proton-proton super-colliders,
Eur. Phys. J. C 74 (2014) 2948,
[arXiv:1402.5419].

85. L. Roszkowski, E. M. Sessolo, and A. J. Williams,
What next for the CMSSM and the NUHM:
Improved prospects for superpartner and dark
matter detection, JHEP 08 (2014) 067,
[arXiv:1405.4289].

86. K. Kowalska, L. Roszkowski, E. M. Sessolo, and
A. J. Williams, GUT-inspired SUSY and the
muon g − 2 anomaly: prospects for LHC 14 TeV,
JHEP 06 (2015) 020, [arXiv:1503.08219].

87. M. E. Cabrera, J. A. Casas, A. Delgado,
S. Robles, and R. Ruiz de Austri, Naturalness of
MSSM dark matter, JHEP 08 (2016) 058,
[arXiv:1604.02102].

88. C. Han, K.-i. Hikasa, L. Wu, J. M. Yang, and
Y. Zhang, Status of CMSSM in light of current
LHC Run-2 and LUX data, arXiv:1612.02296.

89. C. Strege, G. Bertone, et. al., Profile likelihood
maps of a 15-dimensional MSSM, JHEP 9 (2014)
81, [arXiv:1405.0622].
90. P. Bechtle, J. E. Camargo-Molina, et. al., Killing
the cMSSM softly, Eur. Phys. J. C 76 (2016) 96,
[arXiv:1508.05951].
91. M. E. Cabrera-Catalan, S. Ando, C. Weniger, and
F. Zandanel, Indirect and direct detection prospect
for TeV dark matter in the nine parameter MSSM,
Phys. Rev. D 92 (2015) 035018,
[arXiv:1503.00599].
92. K. J. de Vries, E. A. Bagnaschi, et. al., The
pMSSM10 after LHC run 1, Eur. Phys. J. C 75
(2015) 422, [arXiv:1504.03260].
93. E. A. Bagnaschi, O. Buchmueller, et. al.,
Supersymmetric dark matter after LHC run 1,
Eur. Phys. J. C 75 (2015) 500,
[arXiv:1508.01173].
94. C. Balázs and D. Carter, Discovery potential of
the next-to-minimal supergravity-motivated model,
Phys. Rev. D 78 (2008) 055001,
[arXiv:0808.0770].
95. D. E. Lopez-Fogliani, L. Roszkowski, R. R.
de Austri, and T. A. Varley, A Bayesian Analysis
of the Constrained NMSSM, Phys. Rev. D 80
(2009) 095013, [arXiv:0906.4911].
96. K. Kowalska, S. Munir, et. al., Constrained
next-to-minimal supersymmetric standard model
with a 126 GeV Higgs boson: A global analysis,
Phys. Rev. D 87 (2013) 115010,
[arXiv:1211.1693].
97. A. Fowlie, Is the CNMSSM more credible than the
CMSSM?, Eur. Phys. J. C 74 (2014) 3105,
[arXiv:1407.7534].
98. G. Bertone, K. Kong, R. R. de Austri, and
R. Trotta, Global fits of the minimal universal
extra dimensions scenario, Phys. Rev. D 83 (2011)
036008, [arXiv:1010.2023].
99. K. Cheung, Y.-L. S. Tsai, P.-Y. Tseng, T.-C.
Yuan, and A. Zee, Global Study of the Simplest
Scalar Phantom Dark Matter Model, JCAP 1210
(2012) 042, [arXiv:1207.4930].
100. A. Arhrib, Y.-L. S. Tsai, Q. Yuan, and T.-C.
Yuan, An Updated Analysis of Inert Higgs Doublet
Model in light of the Recent Results from LUX,
PLANCK, AMS-02 and LHC, JCAP 1406 (2014)
030, [arXiv:1310.0358].
101. S. Matsumoto, S. Mukhopadhyay, and Y.-L. S.
Tsai, Singlet Majorana fermion dark matter: a
comprehensive analysis in effective field theory,
JHEP 10 (2014) 155, [arXiv:1407.1859].
102. D. Chowdhury and O. Eberhardt, Global fits of
the two-loop renormalized Two-Higgs-Doublet
model with soft Z 2 breaking, JHEP 11 (2015) 52,
[arXiv:1503.08216].

103. S. Liem, G. Bertone, et. al., Effective field theory
of dark matter: a global analysis, JHEP 9 (2016)
77, [arXiv:1603.05994].

104. X. Huang, Y.-L. S. Tsai, and Q. Yuan, LikeDM:
likelihood calculator of dark matter detection,
Comp. Phys. Comm. 213 (2017) 252–263,
[arXiv:1603.07119].

105. S. Banerjee, S. Matsumoto, K. Mukaida, and
Y.-L. S. Tsai, WIMP Dark Matter in a
Well-Tempered Regime: A case study on
Singlet-Doublets Fermionic WIMP, JHEP 11
(2016) 070, [arXiv:1603.07387].

106. S. Matsumoto, S. Mukhopadhyay, and Y.-L. S.
Tsai, Effective Theory of WIMP Dark Matter
supplemented by Simplified Models: Singlet-like
Majorana fermion case, Phys. Rev. D 94 (2016)
065034, [arXiv:1604.02230].

107. A. Cuoco, B. Eiteneuer, J. Heisig, and
M. Krämer, A global fit of the γ-ray galactic
center excess within the scalar singlet Higgs portal
model, JCAP 6 (2016) 050, [arXiv:1603.08228].

108. GAMBIT Collider Workgroup: C. Balázs,
A. Buckley, et. al., ColliderBit: a GAMBIT
module for the calculation of high-energy collider
observables and likelihoods, Eur. Phys. J. C in
press (2017) [arXiv:1705.07919].

109. GAMBIT Flavour Workgroup: F. U. Bernlochner,
M. Chrząszcz, et. al., FlavBit: A GAMBIT
module for computing flavour observables and
likelihoods, Eur. Phys. J. C in press (2017)
[arXiv:1705.07933].

110. GAMBIT Dark Matter Workgroup: T. Bringmann,
J. Conrad, et. al., DarkBit: A GAMBIT module
for computing dark matter observables and
likelihoods, Eur. Phys. J. C in press (2017)
[arXiv:1705.07920].

111. GAMBIT Models Workgroup: P. Athron,
C. Balázs, et. al., SpecBit, DecayBit and
PrecisionBit: GAMBIT modules for computing
mass spectra, particle decay rates and precision
observables, submitted to Eur. Phys. J. C (2017)
[arXiv:1705.07936].

112. GAMBIT Scanner Workgroup: G. D. Martinez,
J. McKay, et. al., Comparison of statistical
sampling methods with ScannerBit, the GAMBIT
scanning module, Eur. Phys. J. C in press (2017)
[arXiv:1705.07959].

113. R. Ruiz de Austri, R. Trotta, and F. Feroz,
SuperBayeS. http://www.superbayes.org.

114. Y. Akrami, P. Scott, J. Edsjö, J. Conrad, and
L. Bergström, A profile likelihood analysis of the

Constrained MSSM with genetic algorithms, JHEP
4 (2010) 57, [arXiv:0910.3950].

115. F. Feroz, K. Cranmer, M. Hobson, R. Ruiz de
Austri, and R. Trotta, Challenges of profile
likelihood evaluation in multi-dimensional SUSY
scans, JHEP 6 (2011) 42, [arXiv:1101.3296].

116. Y. Akrami, C. Savage, P. Scott, J. Conrad, and
J. Edsjö, Statistical coverage for supersymmetric
parameter estimation: a case study with direct
detection of dark matter, JCAP 7 (2011) 2,
[arXiv:1011.4297].

117. C. Strege, R. Trotta, G. Bertone, A. H. G. Peter,
and P. Scott, Fundamental statistical limitations
of future dark matter direct detection experiments,
Phys. Rev. D 86 (2012) 023507,
[arXiv:1201.3631].

118. C. F. Berger, J. S. Gainer, J. A. L. Hewett, and
T. G. Rizzo, Supersymmetry without prejudice,
JHEP 2 (2009) 23, [arXiv:0812.0980].

119. GAMBIT Collaboration: P. Athron, C. Balázs,
et. al., Global fits of GUT-scale SUSY models with
GAMBIT, Eur. Phys. J. C in press (2017)
[arXiv:1705.07935].

120. GAMBIT Collaboration: P. Athron, C. Balázs,
et. al., A global fit of the MSSM with GAMBIT,
Eur. Phys. J. C in press (2017)
[arXiv:1705.07917].

121. GAMBIT Collaboration: P. Athron, C. Balázs,
et. al., Status of the scalar singlet dark matter
model, Eur. Phys. J. C 77 (2017) 568,
[arXiv:1705.07931].

122. M. Cacciari, G. P. Salam, and G. Soyez, FastJet
User Manual, Eur. Phys. J. C 72 (2012) 1896,
[arXiv:1111.6097].

123. P. Athron, J.-h. Park, D. Stöckinger, and
A. Voigt, FlexibleSUSY - A spectrum generator
generator for supersymmetric models, Comp. Phys.
Comm. 190 (2015) 139–172, [arXiv:1406.2319].

124. B. C. Allanach, SOFTSUSY: a program for
calculating supersymmetric spectra, Comp. Phys.
Comm. 143 (2002) 305–331, [hep-ph/0104145].

125. T. Sjostrand, S. Ask, et. al., An Introduction to
PYTHIA 8.2, Comp. Phys. Comm. 191 (2015)
159–177, [arXiv:1410.3012].

126. S. Ovyn, X. Rouby, and V. Lemaitre, DELPHES,
a framework for fast simulation of a generic
collider experiment, arXiv:0903.2225.

127. J. de Favereau et. al., DELPHES 3, A modular
framework for fast simulation of a generic collider
experiment, JHEP 1402 (2014) 057,
[arXiv:1307.6346].

128. P. Bechtle, O. Brein, S. Heinemeyer, G. Weiglein,
and K. E. Williams, HiggsBounds: Confronting
Arbitrary Higgs Sectors with Exclusion Bounds
from LEP and the Tevatron, Comp. Phys. Comm.
181 (2010) 138–167, [arXiv:0811.4169].

129. P. Bechtle, O. Brein, S. Heinemeyer, G. Weiglein,
and K. E. Williams, HiggsBounds 2.0.0:
Confronting Neutral and Charged Higgs Sector
Predictions with Exclusion Bounds from LEP and
the Tevatron, Comp. Phys. Comm. 182 (2011)
2605–2631, [arXiv:1102.1898].

130. P. Bechtle, O. Brein, et. al., HiggsBounds − 4:
Improved Tests of Extended Higgs Sectors against
Exclusion Bounds from LEP, the Tevatron and
the LHC, Eur. Phys. J. C 74 (2014) 2693,
[arXiv:1311.0055].

131. P. Bechtle, S. Heinemeyer, O. Stål, T. Stefaniak,
and G. Weiglein, HiggsSignals: Confronting
arbitrary Higgs sectors with measurements at the
Tevatron and the LHC, Eur. Phys. J. C 74 (2014)
2711, [arXiv:1305.1933].

132. J. Alwall, M. Herquet, F. Maltoni, O. Mattelaer,
and T. Stelzer, MadGraph 5: Going Beyond,
JHEP 06 (2011) 128, [arXiv:1106.0522].

133. J. Alwall, R. Frederix, et. al., The automated
computation of tree-level and next-to-leading order
differential cross sections, and their matching to
parton shower simulations, JHEP 07 (2014) 079,
[arXiv:1405.0301].

134. F. Mahmoudi, SuperIso: A Program for
calculating the isospin asymmetry of B → K ∗ γ in
the MSSM, Comp. Phys. Comm. 178 (2008) 745,
[arXiv:0710.2067].

135. F. Mahmoudi, SuperIso v2.3: A Program for
calculating flavor physics observables in
Supersymmetry, Comp. Phys. Comm. 180 (2009)
1579, [arXiv:0808.3144].

136. F. Mahmoudi, SuperIso v3.0, flavor physics
observables calculations: Extension to NMSSM,
Comp. Phys. Comm. 180 (2009) 1718.

137. H. Bahl, S. Heinemeyer, W. Hollik, and
G. Weiglein, Reconciling EFT and hybrid
calculations of the light MSSM Higgs-boson mass,
[arXiv:1706.00346].

138. H. Bahl and W. Hollik, Precise prediction for the
light MSSM Higgs boson mass combining effective
field theory and fixed-order calculations,
Eur. Phys. J. C 76 (2016) 499,
[arXiv:1608.01880].

139. T. Hahn, S. Heinemeyer, W. Hollik, H. Rzehak,
and G. Weiglein, High-Precision Predictions for
the Light CP -Even Higgs Boson Mass of the
Minimal Supersymmetric Standard Model, Phys.
Rev. Lett. 112 (2014) 141801,
[arXiv:1312.4937].

140. M. Frank, T. Hahn, et. al., The Higgs Boson
Masses and Mixings of the Complex MSSM in the
Feynman-Diagrammatic Approach, JHEP 02
(2007) 047, [hep-ph/0611326].
141. G. Degrassi, S. Heinemeyer, W. Hollik, P. Slavich,
and G. Weiglein, Towards high precision
predictions for the MSSM Higgs sector,
Eur. Phys. J. C 28 (2003) 133–143,
[hep-ph/0212020].
142. S. Heinemeyer, W. Hollik, and G. Weiglein, The
Masses of the neutral CP - even Higgs bosons in
the MSSM: Accurate analysis at the two loop level,
Eur. Phys. J. C 9 (1999) 343–366,
[hep-ph/9812472].
143. S. Heinemeyer, W. Hollik, and G. Weiglein,
FeynHiggs: A Program for the calculation of the
masses of the neutral CP even Higgs bosons in the
MSSM, Comp. Phys. Comm. 124 (2000) 76–89,
[hep-ph/9812320].
144. F. Mahmoudi, S. Neshatpour, and J. Virto,
B → K ∗ µ+ µ− optimised observables in the
MSSM, Eur. Phys. J. C 74 (2014) 2927,
[arXiv:1401.2145].
145. W. Altmannshofer and D. M. Straub, New
physics in B → K ∗ µµ?, Eur. Phys. J. C 73
(2013) 2646, [arXiv:1308.1501].
146. S. Descotes-Genon, L. Hofer, J. Matias, and
J. Virto, Global analysis of b → s`` anomalies,
JHEP 06 (2016) 092, [arXiv:1510.04239].
147. P. Gondolo, J. Edsjö, et. al., DarkSUSY:
computing supersymmetric dark matter properties
numerically, JCAP 7 (2004) 8,
[astro-ph/0406204].
148. G. Bélanger, F. Boudjema, A. Pukhov, and
A. Semenov, MicrOMEGAs: A Program for
calculating the relic density in the MSSM, Comp.
Phys. Comm. 149 (2002) 103–120,
[hep-ph/0112278].
149. G. Bélanger, F. Boudjema, A. Pukhov, and
A. Semenov, micrOMEGAs: Version 1.3, Comp.
Phys. Comm. 174 (2006) 577–604,
[hep-ph/0405253].
150. G. Bélanger, F. Boudjema, A. Pukhov, and
A. Semenov, MicrOMEGAs 2.0: A Program to
calculate the relic density of dark matter in a
generic model, Comp. Phys. Comm. 176 (2007)
367–382, [hep-ph/0607059].
151. G. Bélanger, F. Boudjema, et. al., Indirect search
for dark matter with micrOMEGAs2.4, Comp.
Phys. Comm. 182 (2011) 842–856,
[arXiv:1004.1092].
152. G. Bélanger, F. Boudjema, A. Pukhov, and
A. Semenov, micrOMEGAs 3: A program for
calculating dark matter observables, Comp. Phys.
Comm. 185 (2014) 960–985, [arXiv:1305.0237].

153. G. Bélanger, F. Boudjema, A. Pukhov, and
A. Semenov, micrOMEGAs4.1: two dark matter
candidates, Comp. Phys. Comm. 192 (2015)
322–329, [arXiv:1407.6129].

154. W. Porod, SPheno, a program for calculating
supersymmetric spectra, SUSY particle decays and
SUSY particle production at e+ e− colliders,
Comp. Phys. Comm. 153 (2003) 275–315,
[hep-ph/0301101].

155. W. Porod and F. Staub, SPheno 3.1: Extensions
including flavour, CP-phases and models beyond
the MSSM, Comp. Phys. Comm. 183 (2012)
2458–2469, [arXiv:1104.1573].

156. B. C. Allanach and M. A. Bernhardt, Including
R-parity violation in the numerical computation
of the spectrum of the minimal supersymmetric
standard model: SOFTSUSY, Comp. Phys. Comm.
181 (2010) 232–245, [arXiv:0903.1805].

157. B. C. Allanach, C. H. Kom, and M. Hanussek,
Computation of Neutrino Masses in R-parity
Violating Supersymmetry: SOFTSUSY3.2, Comp.
Phys. Comm. 183 (2012) 785–793,
[arXiv:1109.3735].

158. B. C. Allanach, P. Athron, L. C. Tunstall,
A. Voigt, and A. G. Williams, Next-to-Minimal
SOFTSUSY, Comp. Phys. Comm. 185 (2014)
2322–2339, [arXiv:1311.7659].

159. B. C. Allanach, A. Bednyakov, and R. Ruiz de
Austri, Higher order corrections and unification in
the minimal supersymmetric standard model:
SOFTSUSY3.5, Comp. Phys. Comm. 189 (2015)
192–206, [arXiv:1407.6130].

160. A. Djouadi, M. M. Mühlleitner, and M. Spira,
Decays of supersymmetric particles: The Program
SUSY-HIT (SUspect-SdecaY-Hdecay-InTerface),
Acta Phys. Polon. 38 (2007) 635–644,
[hep-ph/0609292].
161. M. Muhlleitner, A. Djouadi, and Y. Mambrini,
SDECAY: A Fortran code for the decays of the
supersymmetric particles in the MSSM, Comp.
Phys. Comm. 168 (2005) 46–70,
[hep-ph/0311167].
162. A. Djouadi, J.-L. Kneur, and G. Moultaka,
SuSpect: A Fortran code for the supersymmetric
and Higgs particle spectrum in the MSSM, Comp.
Phys. Comm. 176 (2007) 426–455,
[hep-ph/0211331].
163. A. Djouadi, J. Kalinowski, and M. Spira,
HDECAY: A Program for Higgs boson decays in
the standard model and its supersymmetric
extension, Comp. Phys. Comm. 108 (1998) 56–74,
[hep-ph/9704448].
164. P. Athron, M. Bach, et. al., GM2Calc: precise
MSSM prediction for (g-2) of the muon,
Eur. Phys. J. C 76 (2016) 62,
[arXiv:1510.08071].
165. Message Passing Forum, MPI: A Message-Passing
Interface Standard. University of Tennessee,
Knoxville, TN, USA, 1994.
166. L. Dagum and R. Menon, OpenMP: an industry
standard API for shared-memory programming,
IEEE Computational Science & Engineering 5
(1998) 46–55.
167. G. Bélanger, F. Boudjema, A. Pukhov, and
A. Semenov, micrOMEGAs4.1: Two dark matter
candidates, Comp. Phys. Comm. 192 (2015)
322–329, [arXiv:1407.6129].
168. B. C. Allanach et. al., SUSY Les Houches Accord
2, Comp. Phys. Comm. 180 (2009) 8–25,
[arXiv:0801.0045].
169. H. Baer and X. Tata, Weak Scale Supersymmetry.
Cambridge University Press, 2006.
170. H. Silverwood, P. Scott, et. al., Sensitivity of
IceCube-DeepCore to neutralino dark matter in
the MSSM-25, JCAP 3 (2013) 27,
[arXiv:1210.0844].
171. R. C. Cotta, A. Drlica-Wagner, et. al.,
Constraints on the pMSSM from LAT
observations of dwarf spheroidal galaxies, JCAP 4
(2012) 16, [arXiv:1111.2604].
172. J. A. Conley, J. S. Gainer, J. L. Hewett, M. P. Le,
and T. G. Rizzo, Supersymmetry without
prejudice at the LHC, Eur. Phys. J. C 71 (2011)
1697, [arXiv:1009.2539].
173. A. Arbey, M. Battaglia, and F. Mahmoudi,
Implications of LHC searches on SUSY particle
spectra. The pMSSM parameter space with
neutralino dark matter, Eur. Phys. J. C 72 (2012)
1847, [arXiv:1110.3726].
174. L. Bergström and P. Gondolo, Limits on direct
detection of neutralino dark matter from b → sγ
decays, Astropart. Phys. 5 (1996) 263–278,
[hep-ph/9510252].
175. M. Berg, J. Edsjö, P. Gondolo, E. Lundström,
and S. Sjörs, Neutralino dark matter in BMSSM
effective theory, JCAP 8 (2009) 35,
[arXiv:0906.0583].
176. E. Dudas, Y. Mambrini, A. Mustafayev, and K. A.
Olive, Relating the CMSSM and SUGRA Models
with GUT Scale and Super-GUT Scale
Supersymmetry Breaking, Eur. Phys. J. C 72
(2012) 2138, [arXiv:1205.5988]. [Erratum:
Eur. Phys. J. C73, 2430 (2013)].
177. Y. Akrami, C. Savage, P. Scott, J. Conrad, and
J. Edsjö, How well will ton-scale dark matter
direct detection experiments constrain minimal
supersymmetry?, JCAP 1104 (2011) 012,
[arXiv:1011.4318].
178. R. Schoenrich, J. Binney, and W. Dehnen, Local
Kinematics and the Local Standard of Rest,
MNRAS 403 (2010) 1829, [arXiv:0912.3693].
179. J. R. Ellis, K. A. Olive, and C. Savage, Hadronic
Uncertainties in the Elastic Scattering of
Supersymmetric Dark Matter, Phys. Rev. D 77
(2008) 065026, [arXiv:0801.3656].
180. R. D. Young, Strange quark content of the nucleon
and dark matter searches, PoS LATTICE2012
(2012) 014, [arXiv:1301.1765].
181. P. Z. Skands et. al., SUSY Les Houches accord:
Interfacing SUSY spectrum calculators, decay
packages, and event generators, JHEP 07 (2004)
036, [hep-ph/0311123].
182. P. Scott, Pippi – painless parsing, post-processing
and plotting of posterior and likelihood samples,
Eur. Phys. J. Plus 127 (2012) 138,
[arXiv:1206.2245].
183. F. Feroz, M. P. Hobson, and M. Bridges,
MULTINEST: an efficient and robust Bayesian
inference tool for cosmology and particle physics,
MNRAS 398 (2009) 1601–1614,
[arXiv:0809.3437].
184. A. Putze and L. Derome, The Grenoble Analysis
Toolkit (GreAT)-A statistical analysis framework,
Physics of the Dark Universe 5 (2014) 29–34.
185. A. Lewis, Efficient sampling of fast and slow
cosmological parameters, Phys. Rev. D 87 (2013)
103529, [arXiv:1304.4473].
186. A. Lewis and S. Bridle, Cosmological parameters
from CMB and other data: A Monte Carlo
approach, Phys. Rev. D 66 (2002) 103511,
[astro-ph/0205436].
Addendum for GAMBIT 1.1

Eur. Phys. J. C manuscript No.
(will be inserted by the editor)

GAMBIT: The Global and Modular Beyond-the-StandardModel Inference Tool
Addendum for GAMBIT 1.1: Mathematica backends, SUSYHD interface and updated
likelihoods
The GAMBIT Collaboration: Peter Athron1,2 , Csaba Balazs1,2 , Torsten
Bringmann3 , Andy Buckley4 , Marcin Chrząszcz5,6 , Jan Conrad7,8 ,
Jonathan M. Cornell9 , Lars A. Dal3 , Hugh Dickinson10 , Joakim Edsjö7,8 ,
Ben Farmer7,8,a , Tomás E. Gonzalo3 , Paul Jackson11,2 , Abram Krislock3 ,
Anders Kvellestad12,b , Johan Lundberg7,8 , James McKay13 , Farvah
Mahmoudi14,15,* , Gregory D. Martinez16 , Antje Putze17 , Are Raklev3 ,
Joachim Ripken18 , Christopher Rogan19 , Aldo Saavedra20,2 , Christopher
Savage12 , Pat Scott13,c , Seon-Hee Seo21 , Nicola Serra5 , Christoph
Weniger22,d , Martin White11,2 , Sebastian Wild23
1

School of Physics and Astronomy, Monash University, Melbourne, VIC 3800, Australia
Australian Research Council Centre of Excellence for Particle Physics at the Tera-scale
3
Department of Physics, University of Oslo, N-0316 Oslo, Norway
4
SUPA, School of Physics and Astronomy, University of Glasgow, Glasgow, G12 8QQ, UK
5
Physik-Institut, Universität Zürich, Winterthurerstrasse 190, 8057 Zürich, Switzerland
6
H. Niewodniczański Institute of Nuclear Physics, Polish Academy of Sciences, 31-342 Kraków, Poland
7
Oskar Klein Centre for Cosmoparticle Physics, AlbaNova University Centre, SE-10691 Stockholm, Sweden
8
Department of Physics, Stockholm University, SE-10691 Stockholm, Sweden
9
Department of Physics, McGill University, 3600 rue University, Montréal, Québec H3A 2T8, Canada
10
Minnesota Institute for Astrophysics, University of Minnesota, Minneapolis, MN 55455, USA
11
Department of Physics, University of Adelaide, Adelaide, SA 5005, Australia
12
NORDITA, Roslagstullsbacken 23, SE-10691 Stockholm, Sweden
13
Department of Physics, Imperial College London, Blackett Laboratory, Prince Consort Road, London SW7 2AZ, UK
14
Univ Lyon, Univ Lyon 1, ENS de Lyon, CNRS, Centre de Recherche Astrophysique de Lyon UMR5574, F-69230
Saint-Genis-Laval, France
15
Theoretical Physics Department, CERN, CH-1211 Geneva 23, Switzerland
16
Physics and Astronomy Department, University of California, Los Angeles, CA 90095, USA
17
LAPTh, Université de Savoie, CNRS, 9 chemin de Bellevue B.P.110, F-74941 Annecy-le-Vieux, France
18
Max Planck Institute for Solar System Research, Justus-von-Liebig-Weg 3, D-37077 Göttingen, Germany
19
Department of Physics, Harvard University, Cambridge, MA 02138, USA
20
Centre for Translational Data Science, Faculty of Engineering and Information Technologies, School of Physics, The University of
Sydney, NSW 2006, Australia
21
Department of Physics and Astronomy, Seoul National University, 1 Gwanak-ro, Gwanak-gu, Seoul 08826, Korea
22
GRAPPA, Institute of Physics, University of Amsterdam, Science Park 904, 1098 XH Amsterdam, Netherlands
23
DESY, Notkestraße 85, D-22607 Hamburg, Germany
Received: date / Accepted: date
2

Abstract In Ref. [1] we introduced the global-fitting
framework GAMBIT. In this addendum, we describe
a new minor version increment of this package. GAMBIT 1.1 includes full support for Mathematica backends,
which we describe in some detail here. As an example,
a

benjamin.farmer@fysik.su.se
anders.kvellestad@nordita.org
c
p.scott@imperial.ac.uk
d
c.weniger@uva.nl
*
Also Institut Universitaire de France, 103 boulevard SaintMichel, 75005 Paris, France.
b

we backend SUSYHD [2], which calculates the mass of
the Higgs boson in the MSSM from effective field theory.
We also describe updated likelihoods in PrecisionBit and
DarkBit, and updated decay data included in DecayBit.

2

1 Using Mathematica backends in GAMBIT
For decades, Wolfram Mathematica1 has been the symbolic computing framework of choice for many physicists.
GAMBIT users can now access both public and private
Mathematica packages from within GAMBIT modules.
This new feature provides a seamless interface to Mathematica, indistinguishable from the existing GAMBIT
backend interfaces to codes written in C, C++ and Fortran.
Mathematica is proprietary software. It is the responsibility of the user to acquire a license in order to use the
Mathematica framework. The number of Mathematica
Kernel instances and subprocesses that can be launched
per Mathematica license is limited, and can be found
by evaluating the variables $MaxLicenseProcesses and
$MaxLicenseSubprocesses (typically 8 and 16 respectively
for a standard Mathematica license).
This addendum describes our implementation of the
Mathematica interface. Sec. 1.1 describes the mechanism
used to communicate with the Mathematica Kernel from
GAMBIT. In Secs. 1.2–1.4 we explain the different aspects of the implementation, consisting of configuration
(1.2), registration of backend functions and variables
(1.3), and updates to the GAMBIT diagnostics to accommodate Mathematica backends (1.4). In Sec. 1.5, we give
a realistic example of a Mathematica backend interfaced
to GAMBIT, namely SUSYHD [2], which calculates the
mass of the Higgs boson using methods from effective
field theory (EFT).

1.1 The Wolfram Symbolic Transfer Protocol
The Wolfram Symbolic Transfer Protocol (WSTP2 ), is
the communication standard used by Mathematica to
communicate with external programs. WSTP provides
a two-way communication system, allowing the user to
both call external codes from within Mathematica, and
to call Mathematica routines from external programs
written in many languages (C, C++, Java, etc). GAMBIT
1.1 uses the communication pathway between Mathematica and C++. This allows GAMBIT users to directly
call Mathematica functions and variables from GAMBIT
modules, in the same way as functions and variables are
accessed from C, C++ and Fortran backends in GAMBIT
1.0.
The GAMBIT-Mathematica interface uses the WSTP
messaging functions to launch and establish a link to
a Mathematica Kernel session, and to send and receive
1

http://www.wolfram.com/mathematica/
More information on WSTP can
http://reference.wolfram.com/language/.

2

be

found

at

information from that Kernel. Almost all the messaging
functions that we employ use a WSTP link object, of type
WSLINK, as a handle for communicating with the Kernel.
One retrieves such a handle by opening a link to the
Kernel with the messaging functions WSOpenArgcArgv or
WSOpenString. The most important messaging functions
for our purposes are
WSPutFunction(WSlink, function_name, n_args);
WSPutString(WSlink, string_name);
WSPutSymbol(WSlink, symbol_name);
WSPutInteger(WSlink, integer_number);
WSPutReal32(WSlink, float_number);
WSPutReal64(WSlink, double_precision_number);
WSGetString(WSlink, &string_variable);
WSGetInteger(WSlink, &integer_variable);
WSGetReal32(WSlink, &float_variable);
WSGetReal64(WSlink, &double_precision_variable);

where WSlink is an object of type WSLINK. The first argument in each of these must be a C++ object with the
appropriate type, e.g. for symbols and functions this is
a C++ string, and the argument n_args corresponds to
the number of arguments of the Mathematica function
function_name.
To interpret data received from the WSGet functions,
one must also receive the packets sent by the Kernel.
We use WSNextPacket(WSlink) to find the next packet
head, WSNewPacket(WSlink) to skip the rest of the current
packet, and WSError(WSlink) to check for errors during
packet reception.
All these messaging functions live in the header
wstp.h, native to the Mathematica installation, and will
be used by GAMBIT for different purposes, as described
below.

1.2 Preparing and configuring Mathematica backends
1.2.1 Configuration
At cmake time, GAMBIT searches for an installation of
Mathematica on the user’s system, locating the installation directory and defining several cmake variables,
including the paths to the Mathematica header files and
executables. The GAMBIT cmake system also searches
for the libuuid library, required by WSTP. It writes a
new header file containing a series of variables relating
to the system’s Mathematica configuration, including
the preprocessor macro HAVE_MATHEMATICA, which is later
used to enable or disable all code associated with Mathematica backends, according to whether or not the user
has Mathematica installed. In order to manually switch
off Mathematica support (from GAMBIT 1.1.2 onwards),
one may run the cmake command as

3

cmake -Ditch=Mathematica ..

Mathematica backends are obtained and configured in a similar manner to other backends, by
adding relevant entries to cmake/backends.cmake and
config/backend_locations.yaml.default, and then running make backend_name. Mathematica backends require
neither a configuration nor a build step, only a download
link and an installation directory.
1.2.2 Frontend header
As described in Sec. 4 of Ref. [1], GAMBIT loads backends at runtime as dynamic libraries, regardless of
whether they are written in C, C++ or Fortran, using
the POSIX-standard dl library. The macro LOAD_LIBRARY,
used in the corresponding frontend header in GAMBIT,
activates the backend library and loads its symbols.
GAMBIT communicates with Mathematica backends
in a fundamentally different way to backends written
in compiled languages. To redirect compilation flow in
the GAMBIT backend system to use the preprocessor
directives relevant for Mathematica backends, we define
the new macro BACKENDLANG. This specifies the language
of the backend in question, and can take the values CC,
CXX, FORTRAN or MATHEMATICA. For example, in GAMBIT
1.1, the frontend header for version 1.2 of a C++ backend
called backend_name would begin with
#define BACKENDNAME backend_name
#define BACKENDLANG CXX
#define VERSION 1.2
#define SAFE_VERSION 1_2
LOAD_LIBRARY

1.2.3 Backend types
In analogy with the definition of new types and typedefs
given for Fortran backends in Sec. 4.4 of Ref. [1], here
we provide a list of new types defined in GAMBIT 1.1
for use with Mathematica backends. These have clear
correspondences with equivalent types in C and C++
types, and should be adopted whenever one is working
with Mathematica backends. These are:
MVoid
MInteger
MReal
MBool
MChar
MString
MList<TYPE>

where TYPE can take any of the other defined types as its
template argument. All these types are just convenient
type redefinitions of native C++ types and thus can be
used in exactly the same manner.

1.2.4 Link to the Kernel
Prior to loading the backend library, the connection
with the Mathematica Kernel must be established. For
this, the macro LOAD_LIBRARY initializes a WSTP environment with a call to WSInitialize, which returns a
handle to the WSTP environment of type WSENV. After
retrieving this handle, GAMBIT opens a new WSTP connection using the function WSOpenString, which launches
the Mathematica Kernel and finishes the intialization
phase of the connection. These functions are employed
in the following way:
WSenv = WSInitialize();
WSlink = WSOpenString(WSenv, WSTPflags, &WSerrno);

The variable WSerrno captures any error that might
have ocurred during the establishment of the link and
WSTPflags is a string containing flags that point to the
Kernel executable and give the order to initiate the link,
e.g. WSTPflags = "-linkname math -mathlink" for Linux
systems.
If the link is successfully established, the pointer
WSlink is set to point to the new link between the main
program and the Kernel. This handle is used in every
subsequent communication with the Kernel.
1.2.5 Importing the package
After defining the relevant macros and backend types,
loading the Mathematica environment and Kernel, the
final task of the LOAD_LIBRARY macro is to import the
backend package into the Mathematica Kernel. This is
achieved by using the pointer to the WSTP link WSlink
via the following load sequence:
WSPutFunction(WSlink, "Once", 1);
WSPutFunction(WSlink, "Get", 1);
WSPutString(WSlink, path);

which is equivalent to the call Get[path] within a notebook session.
Note that before we load the package, we call the
Mathematica function Once, which makes sure that the
following function will be executed only once in a Kernel session. Here path is a string containing the path
to the .m file of the backend package; the actual value
used is taken from the default GAMBIT backend location file config/backend_locations.yaml.default or a
user-supplied override.
When loading a package in Mathematica the Get function will return information regarding its success. The
exact return value will always be package dependent, so
is difficult to interpret in general from the GAMBIT interface. Therefore we use the standard library functions

4

of C++ to check if the package and all required functions and variables exist. This is done via the GAMBIT
diagnostic system (see 1.4).
1.3 Backend functions and variables
The backend system in GAMBIT, as described in Sec.
4 of Ref. [1], provides a set of macros for registering
functions and variables from backends. In a nutshell,
GAMBIT extracts a pointer to the function/variable
living in the shared library of the backend, and wraps it
into a functor object to be handled by the dependency
resolver.
When dealing with backends written in Mathematica,
the above procedure must be modified, as there is no
shared library from which to extract the pointer to the
function or variable. Instead, we must interface with the
functions and variables via the Mathematica Kernel. The
general strategy for doing this is shown in Figure 1.
1.3.1 Backend functions
Backend functions in GAMBIT are defined with the
macro BE_FUNCTION. This macro creates a pointer to the
function in the namespace of the backend, and assigns it
a name and capability within GAMBIT of the frontend
author’s choosing. In order to communicate with the
Mathematica Kernel and provide the same sort of handle
to the dependency resolver for Mathematica backends,
we must define a wrapper function around message
calls to the Kernel, in such a way as to have the wrapper
function operate like a regular C/C++ backend function.
We achieve this by redirecting the macro BE_FUNCTION
for backends written in Mathematica, according to the
value of BACKENDLANG. The version of BE_FUNCTION that
gets used for Mathematica backends therefore constructs
a wrapper function around each Mathematica function
that the user wishes to access from within GAMBIT. The
wrapper function handles the submission and receipt
of all messages to and from the Kernel relating to the
function. This includes all function arguments, and the
eventual return value of the function. The sequence of
messages is:
WSPutFunction(WSlink,
WSPutVariable(WSlink,
WSPutVariable(WSlink,
...
WSPutVariable(WSlink,
WSGetVariable(WSlink,

symbol_name, n);
arg_1);
arg_2);
arg_n);
&val);

where symbol_name is the name of the function within the
Mathematica package, n is the number of arguments it
accepts, arg_1, arg_2, etc are the arguments themselves,

and val is the return value. Here WSPutVariable and
WSGetVariable are overloaded functions, which expand
to different type-specific setter and getter functions
intrinsic to WSTP (mentioned in Sec. 1.1).

There is an important subtlety regarding the names
of functions in Mathematica backends. Mathematica permits non-alphanumeric characters in function names.
Many of the backends that are interesting for GAMBIT
include functions with such names. However, function
names in GAMBIT are treated as regular strings, so there
is no easy way to communicate the actual name of the
function to the Kernel. To circumvent this issue, names
of Mathematica backend functions should be declared
to GAMBIT with all special characters written in terms
of their “full names”, e.g. α = \[Alpha], but making
sure to escape the slash “\” so that C++ can parse it.
To illustrate this, we show the signature used for the
function ∆MHiggs from the backend SUSYHD [2], which
calculates uncertainties on the Higgs mass:
BE_FUNCTION(DeltaMHiggs, MReal,
(const MList<MReal>&), "\\[CapitalDelta]MHiggs",
"SUSYHD_DeltaMHiggs")

where the first argument is the name of the function
within GAMBIT with its return type and signature as
the second and third arguments. The last two arguments
of the BE_FUNCTION macro are the symbol associated to
the backend function, the Mathematica function in our
case, and the capability that the function provides.
The generic function call is modified in
the case that the symbol name contains nonalphanumeric characters. The symbol name (for
example "\\[CapitalDelta]MHiggs") must be sent as
a string to the Kernel, preceded by a message that
transforms it into a valid Mathematica expression. This
expression matches the string version of the name to
the name of the actual backend function, including the
correct non-alphanumeric characters. The sequence of
messages is
WSPutFunction(WSlink, "Apply", 2);
WSPutFunction(WSlink, "ToExpression",1);
WSPutString(WSlink, symbol_name);
WSPutFunction(WSlink, "List", n_args);
WSPutVariable(WSlink, arg_1);
WSPutVariable(WSlink, arg_2);
...
WSPutVariable(WSlink, arg_n);
WSGetVariable(WSlink, &val);

which

is equivalent to WSPutFunction(WSlink,
symbol_name, n_args), in the case that the symbol_name
contains only alpha-numeric characters.

5
Wrapper function

Frontend
BE_FUNCTION(my_function,...)
BE_VARIABLE(my_variable,...)

GA

MBI T

TYPE my_function(args..)
{
WSPutFunction(my_function, ...);
...
return = WSGetTYPE(...);
}

Kernel

Overloaded operators
CLASS mathematica_variable<T>;
operator=(T my_variable)
{
WSPutTYPE(my_variable);
}
operator()
{
my_variable = WSGetTYPE(...);
}

Backend
my_function[args]:= ...;
my_variable = ...;

Fig. 1: Diagrammatic representation of the communication link between GAMBIT and the Mathematica Kernel, showing the
wrappers for backend functions and the variable classes for backend variables.

1.3.2 Backend variables
Backend variables in GAMBIT are registered with the
preprocessor macro BE_VARIABLE. For backends written
in C, C++ or Fortran, this macro retrieves a pointer
to the variable from the shared library. Through this
pointer, module functions can extract and modify values
of global variables in backends as needed. However, such
an interface cannot be constructed if the backend is
written in Mathematica. The WSTP messaging system
can only access variables from the Kernel by value, so it
is not possible to obtain a pointer via which GAMBIT
can modify the value inside the Kernel.
To work around this limitation, the GAMBIT 1.1 backend system creates a templated class
mathematica_variable<TYPE>, with a private member variable of type TYPE. The templated class acts as a wrapper
for the required calls to the Mathematica Kernel. As
with backend functions, the macro BE_VARIABLE is redefined for Mathematica backends. This macro creates an
instance of the class mathematica_variable<TYPE>, with
TYPE equal to the type of the variable in the Kernel (see
Section 1.2.3). Like backend functions, backend variable names are sent to the Kernel as a string preceded
by the ToExpression function, instead of simply sending
the symbol name via WSPutSymbol. This allows access to
variables with special characters in their names.
As we show schematically in Figure 1, the

mathematica_variable<TYPE> class allows variables in the

Kernel to be seamlessly read, modified and implicitly
cast to variables of type TYPE, allowing them to be
used directly in C++ expressions. These functionali-

ties are achieved by overloading two operators that
act on the mathematica_variable<TYPE> class. The first of
these is the assignment operator mathematica_variable&
operator=(const TYPE &), enabling modification of the
variables in the Kernel by regular assignment expressions in module functions. The other is the cast operator
operator TYPE const(), which converts an object of type
mathematica_variable<TYPE> into its member variable of
type TYPE, allowing the variable to be used in all C++
expressions where TYPE would be permitted.
1.4 Diagnostics
GAMBIT already ships with extensive diagnostic tools,
providing the user with information about the status
of backends, modules, capabilities, scanners and more.
We have added a few additional diagnostic checks for
Mathematica backends in GAMBIT 1.1.
The first of these simply assesses the status of a
Mathematica backend, as typically viewed when using
the gambit backends diagnostic. GAMBIT 1.1 adds an
additional possible status in this readout, triggered in
the case that a specific backend requires Mathematica but
no acceptable version of it has been found in the system.
When backends are loaded at runtime, they each register
in the Backends::backendInfo() object (described in Sec.
4.6 of Ref. [1]) whether or not they require Mathematica,
in the new BackendInfo member variable
std::map<str, bool> needsMathematica;

At runtime, this information is checked against the actual presence (or absence) of Mathematica, and the

6

status Mathematica absent is displayed if it is needed
but not found.
GAMBIT will also inform the user of the status of
each individual function and global variable in a backend.
For Mathematica backends, we achieve this by calling
the Mathematica function NameQ. This function takes the
symbol name (whether a function or a variable) as a
string argument, and returns a boolean result indicating
if the symbol is currently present in the Kernel. The
diagnostic system then assigns a numerical flag to the
status of the function or variable:
1: This function is available, but the backend
version does not match your request.
0: This function is not compatible with any
model you are scanning.
-1: The backend that provides this function is
missing.
-2: The backend is present, but the function is
absent or broken.
-5: The backend requires Mathematica, but
Mathematica is absent.

1.5 Higgs mass calculations with SUSYHD
GAMBIT 1.0 offers three options for calculating the
mass of the Higgs boson: FlexibleSUSY [3], SPheno [4, 5]
and FeynHiggs [6–11]. The first two are fixed order DR
calculations of the Higgs pole mass. The third is an onshell calculation that can be performed at fixed order,
or can include some resummed logarithmic corrections
to give a hybrid EFT / fixed order calculation [10–12].3
Here we provide a different approach to computing the
Higgs mass, for any MSSM model4 , via the Mathematica
package SUSYHD [2].
SUSYHD uses the pure EFT calculation, which resums logarithms through the matching and running
procedure, using three-loop Standard Model (SM) renormalisation group equations and two-loop matching, providing a more precise result than fixed-order calculations when MSUSY  mt . SUSYHD is the first pure
EFT Higgs calculation in GAMBIT, and the calculation
remains state-of-the-art. This therefore represents an
important new option for calculating the Higgs mass.
This calculation is most appropriate when MSUSY  mt
because the pure EFT approach neglects terms of or2
der O(v02 /MSUSY
) (where v0 is the SM Higgs vacuum
expectation value), which can be important at the TeV
scale and below.
3

Although both FlexibleSUSY [13] and SPheno [14] also include
the option of employing a hybrid DR calculation, implementing
the algorithm in Ref. [13], these options are not yet included
in GAMBIT. They will be added in further updates, as will the
pure EFT FlexibleSUSY calculation, HSSUSY.
4
See Sec. 5.4 of [1] for a list of MSSM models in GAMBIT.

SUSYHD includes three main functions: MHiggs,
∆MHiggs and SetSMparameters with the following signatures

MHiggs[shortList_]
∆MHiggs[shortList_]
SetSMparameters[QMTorgt_,Qα3MZ_]

The first two calculate the mass of the lightest Higgs
boson and its theoretical uncertainty in the minimal
supersymmetric SM (MSSM), starting from a list of
DR masses at scale MSUSY . The third function sets
the values of the SM parameters to be used in the
calculation.
We use these functions by declaring them to GAMBIT
as usual in a frontend header. This SUSYHD frontend
header contains the declarations
BE_FUNCTION(MHiggs, MReal,
(const MList<MReal>&), "MHiggs",
"SUSYHD_MHiggs")
BE_FUNCTION(DeltaMHiggs, MReal,
(const MList<MReal>&), "\\[CapitalDelta]MHiggs",
"SUSYHD_DeltaMHiggs")
BE_FUNCTION(SetSMparameters, MVoid,
(const MReal&, const MReal&), "SetSMparameters",
"SUSYHD_SetSMparameters")

To use SUSYHD from SpecBit to compute the Higgs
mass and uncertainty, we define a new module function SHD_HiggsMass, which provides the capability prec_mh.
The declaration of this function in the rollcall header
for SpecBit is:
#define FUNCTION SHD_HiggsMass
START_FUNCTION(triplet<double>)
DEPENDENCY(unimproved_MSSM_spectrum, Spectrum)
BACKEND_REQ(SUSYHD_MHiggs, (), MReal,
(const MList<MReal>&))
BACKEND_REQ(SUSYHD_DeltaMHiggs, (), MReal,
(const MList<MReal>&))
ALLOW_MODELS(MSSM63atQ, MSSM63atMGUT)
#undef FUNCTION

2 SpecBit, DecayBit and PrecisionBit updates
GAMBIT 1.1 also includes a simultaneous version update
to SpecBit, DecayBit and PrecisionBit [15]. In this section we briefly discuss the changes made to the module
functions and structure of the code.
PrecisionBit 1.1 features updated likelihood functions
for the first and second generation quark masses, the
strong and electromagnetic couplings, the anomalous
magnetic moment of the muon, and ∆ρ (the departure
from unity of the ratio of the Fermi couplings associated
with W and Z bosons). DecayBit 1.1 contains updates
to all SM particle widths, branching fractions and uncertainties. These updates bring the data contained in

7
Capability

Dependencies

Backend
requirements

get_CMSSM_spectrum_FS(Spectrum):
Renamed from get_CMSSM_spectrum. Make an MSSM
spectrum object with FlexibleSUSY using CMSSM
boundary conditions.

SMINPUTS

FlexibleSUSY

get_MSSMatMGUT_spectrum_FS(Spectrum):
Renamed from get_MSSMatMGUT_spectrum. Make an

SMINPUTS

FlexibleSUSY

get_MSSMatQ_spectrum_FS (Spectrum):
Renamed from get_MSSMatQ_spectrum. Make an

SMINPUTS

FlexibleSUSY

FH_AllHiggsMasses (fh_HiggsMassObs):
Renamed from FH_HiggsMasses; capabiliity reassigned from prec_HiggsMasses. Higgs masses and

–

FeynHiggs

FH_HiggsMass (triplet<double>):

FH_HiggsMasses
unimproved_MSSM_spectrum

–

SHD_HiggsMass (triplet<double>):

unimproved_MSSM_spectrum

SUSYHD

FH_HeavyHiggsMasses

FH_HiggsMasses
unimproved_MSSM_spectrum

–

Function (Return Type):
Brief Description

unimproved_MSSM
_spectrum

MSSM spectrum object with FlexibleSUSY using soft
breaking masses input at the GUT scale.

MSSM spectrum object with FlexibleSUSY from soft
breaking masses input at (user-defined) scale Q.

FH_HiggsMasses

mixings with theoretical uncertainties, as computed by
FeynHiggs.

prec_mh

Mass of the most SM-like neutral Higgs boson and associated uncertainty, as computed by FeynHiggs.
Mass of the most SM-like neutral Higgs boson and associated uncertainty, as computed by SUSYHD.

prec_HeavyHiggsMasses

(std::map<int,triplet<double>>):
Masses of the three non-SM Higgs bosons and associated uncertainties in a model with two Higgs doublets,
as computed by FeynHiggs.

Table 1: New or modified module functions of note in SpecBit 1.1. Functions that use FlexibleSUSY to generate an
unimproved_MSSM_spectrum have been appropriately renamed, a new precision SM-like Higgs mass calculator using SUSYHD has
been added, and the precision Higgs mass calculation with FeynHiggs has been split into separate functions for the SM-like Higgs
and the other three MSSM Higgs bosons.
Capability

Function (Return Type):
Brief Description

Dependencies

Backend
requirements

MSSM_spectrum

make_MSSM_precision_spectrum_H(Spectrum):

unimproved_MSSM_spectrum
prec_mh

–

make_MSSM_precision_spectrum_H_W(Spectrum):

unimproved_MSSM_spectrum
prec_mw
prec_mh

–

make_MSSM_precision_spectrum_4H_W(Spectrum):
Function to provide an updated MSSM spectrum with precision
masses for the W boson and all four Higgs bosons.

unimproved_MSSM_spectrum
prec_mw
prec_mh
prec_HeavyHiggsMasses

–

Function to provide an updated MSSM spectrum with precision
mass for the most SM-like Higgs boson.
Function to provide an updated MSSM spectrum with precision
masses for the W boson and the most SM-like Higgs boson.

Table 2: New or modified module functions of note in PrecisionBit 1.1. Precision spectra can now be computed using precision
values for 1) the W mass only (as in PrecisionBit 1.0; not shown), 2) the SM-like Higgs mass only, 3) the W mass and the SM-like
Higgs, or 4) the W mass and the masses of all four MSSM Higgs bosons. In the latter case, the precision value for the SM-like Higgs
mass can be taken from a different source to the precision masses of the other three Higgs bosons.

PrecisionBit and DecayBit up to date with the central
values and uncertainties of the 2017 Particle Data Book
[16].
The module functions of SpecBit and PrecisionBit
have undergone some rearrangement and expansion in
order to better accommodate alternative spectrum generators and precision calculators. The updated functions
are detailed in Tables 1 and 2.
Functions get_CMSSM_spectrum, get_MSSMatQ_spectrum
and get_MSSMatMGUT_spectrum of SpecBit 1.0 have
been renamed to get_CMSSM_spectrum_FS, get_MSSMatQ_
spectrum_FS and get_MSSMatMGUT_spectrum_FS in SpecBit

1.1. This is to explicitly reflect the fact that they make
use of FlexibleSUSY for spectrum generation, in contrast
to other equivalent functions that use e.g. SPheno (or,
in the future, other spectrum generators).
As described in Sec. 4.2.3 of Ref. [15], the Spectrum
object computed by SpecBit using a spectrum generator (FlexibleSUSY, SPheno, etc) can be supplemented
with more precise calculations of the masses of the W
and Higgs bosons. Initial spectrum generation and subsequent precision mass calculations all take place in
SpecBit, but PrecisionBit is responsible for combining
them to make the final ‘precision Spectrum’ object.

8

The computation of the precision mass of the most
SM-like Higgs boson in SpecBit is now separated from
the computation of the precision masses of the three
other MSSM Higgs bosons (Table 1). For the SM-like
Higgs (capability prec_mh), we now provide two module functions: FH_HiggsMass and SHD_HiggsMass, which
provide the prediction from FeynHiggs and SUSYHD,
respectively. The precision calculation of the masses
of the three other MSSM Higgs bosons (capability
prec_HeavyHiggsMasses) is now provided by the function
FH_HeavyHiggsMasses, which makes use of results from
FeynHiggs.
The precision spectrum functions in PrecisionBit now
allow the mass of the SM-like Higgs boson to be improved independently of the masses of the other three
MSSM Higgs bosons (Table 2). This makes it possible to use e.g. SUSYHD for the mass of the SM-like
Higgs boson, but FeynHiggs, FlexibleSUSY or SPheno
for the other Higgses. Each of the precision spectrum
functions in PrecisionBit now also recognises a YAML
option allow_fallback_to_unimproved_masses, which specifies the preferred behaviour when one or more of the
requested precision mass calculations returns an invalid
value (zero, a negative mass or not-a-number). With
this option set to false (the default), the parameter
combination will be flagged as invalid; if it is set to true,
failures will instead cause the original masses from the
spectrum generator to be retained for the parameter
point under investigation. This can be useful for e.g. defaulting to the Higgs mass from FlexibleSUSY or SPheno
for models with Lagrangian mass parameters below the
top mass, where the expansion used in SUSYHD breaks
down and the backend returns zero for the Higgs mass.
GAMBIT 1.1 also marks the removal of any explicit
module function for indicating the PDG code of the most
SM-like Higgs boson. This functionality is now provided
instead by the internal function SMlike_higgs_PDG_code,
which takes a high-scale SubSpectrum object as input, and
can be called from any module function by including
the header gambit/Elements/smlike_higgs.hpp.

3 Updated DarkBit likelihoods
DarkBit 1.1 includes an interface to DDCalc 1.1,
along with corresponding likelihood functions for the
XENON1T [17] and 2017 PICO-60 [18] experiments.
GAMBIT 1.1 also offers an additional option for turning
on one-loop corrections to direct detection cross-sections
computed with DarkSUSY (loop; enabled by default),
and switches the default behaviour of the micrOMEGAs
option internal_decays to false, causing decay widths
and branching fractions to be passed from DecayBit by

default. More details can be found in the DarkBit paper
[19].

References
1. GAMBIT Collaboration: P. Athron, C. Balazs,
et. al., GAMBIT: The Global and Modular
Beyond-the-Standard-Model Inference Tool,
Eur. Phys. J. C in press (2017)
[arXiv:1705.07908].
2. J. P. Vega and G. Villadoro, SusyHD: Higgs mass
Determination in Supersymmetry, JHEP 07 (2015)
159, [arXiv:1504.05200].
3. P. Athron, J.-h. Park, D. Stöckinger, and A. Voigt,
FlexibleSUSY - A spectrum generator generator for
supersymmetric models, Comp. Phys. Comm. 190
(2015) 139–172, [arXiv:1406.2319].
4. W. Porod, SPheno, a program for calculating
supersymmetric spectra, SUSY particle decays and
SUSY particle production at e+ e− colliders, Comp.
Phys. Comm. 153 (2003) 275–315,
[hep-ph/0301101].
5. W. Porod and F. Staub, SPheno 3.1: Extensions
including flavour, CP-phases and models beyond
the MSSM, Comp. Phys. Comm. 183 (2012)
2458–2469, [arXiv:1104.1573].
6. S. Heinemeyer, W. Hollik, and G. Weiglein,
FeynHiggs: A Program for the calculation of the
masses of the neutral CP even Higgs bosons in the
MSSM, Comp. Phys. Comm. 124 (2000) 76–89,
[hep-ph/9812320].
7. S. Heinemeyer, W. Hollik, and G. Weiglein, The
Masses of the neutral CP - even Higgs bosons in
the MSSM: Accurate analysis at the two loop level,
Eur. Phys. J. C 9 (1999) 343–366,
[hep-ph/9812472].
8. G. Degrassi, S. Heinemeyer, W. Hollik, P. Slavich,
and G. Weiglein, Towards high precision predictions
for the MSSM Higgs sector, Eur. Phys. J. C 28
(2003) 133–143, [hep-ph/0212020].
9. M. Frank, T. Hahn, et. al., The Higgs Boson
Masses and Mixings of the Complex MSSM in the
Feynman-Diagrammatic Approach, JHEP 02 (2007)
047, [hep-ph/0611326].
10. T. Hahn, S. Heinemeyer, W. Hollik, H. Rzehak,
and G. Weiglein, High-Precision Predictions for the
Light CP -Even Higgs Boson Mass of the Minimal
Supersymmetric Standard Model, Phys. Rev. Lett.
112 (2014) 141801, [arXiv:1312.4937].
11. H. Bahl and W. Hollik, Precise prediction for the
light MSSM Higgs boson mass combining effective
field theory and fixed-order calculations,

9

12.

13.

14.
15.

16.
17.
18.

19.

20.

Eur. Phys. J. C 76 (2016) 499,
[arXiv:1608.01880].
H. Bahl, S. Heinemeyer, W. Hollik, and
G. Weiglein, Reconciling EFT and hybrid
calculations of the light MSSM Higgs-boson mass,
arXiv:1706.00346.
P. Athron, J.-h. Park, T. Steudtner, D. Stöckinger,
and A. Voigt, Precise Higgs mass calculations in
(non-)minimal supersymmetry at both high and low
scales, JHEP 01 (2017) 079, [arXiv:1609.00371].
F. Staub and W. Porod, Improved predictions for
intermediate and heavy Supersymmetry in the
MSSM and beyond, arXiv:1703.03267.
GAMBIT Models Workgroup: P. Athron, C. Balázs,
et. al., SpecBit, DecayBit and PrecisionBit:
GAMBIT modules for computing mass spectra,
particle decay rates and precision observables,
submitted to Eur. Phys. J. C (2017)
[arXiv:1705.07936].
Particle Data Group: K. A. Olive et. al., Review of
Particle Physics, update to Ref. [20] (2017).
XENON: E. Aprile et. al., First Dark Matter
Search Results from the XENON1T Experiment,
arXiv:1705.06655.
PICO: C. Amole et. al., Dark Matter Search
Results from the PICO-60 C3 F8 Bubble Chamber,
Phys. Rev. Lett. 118 (2017) 251301,
[arXiv:1702.07666].
GAMBIT Dark Matter Workgroup: T. Bringmann,
J. Conrad, et. al., DarkBit: A GAMBIT module for
computing dark matter observables and likelihoods,
Eur. Phys. J. C in press (2017)
[arXiv:1705.07920].
Particle Data Group: C. Patrignani et. al., Review
of Particle Physics, Chin. Phys. C 40 (2016)
100001.


