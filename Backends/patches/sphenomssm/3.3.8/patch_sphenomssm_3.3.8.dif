diff -rupN SPheno-3.3.8/Makefilt ../installed/sphenomssm/3.3.8/Makefile
--- SPheno-3.3.8/Makefile	2017-11-15 21:54:55.961478896 +0100
+++ ../installed/sphenomssm/3.3.8/Makefile	2015-11-02 14:26:45.000000000 +0100
@@ -6,13 +6,16 @@
 # F90 = gfortran
 # F90 = g95
 # F90 = lf95
-F90 = ifort
+#F90 = ifort
 Model = src
 version = 330.00
+all: bin/SPheno lib/libSPhenoMSSM.so
 bin/SPheno:
 	cd ${Model} ; ${MAKE} F90=${F90} version=${version}
+lib/libSPhenoMSSM.so:
+	cd ${Model} ; ${MAKE} $@ F90=${F90} version=${version}
 clean:
 	rm -f *.o *~ */*.o */*~
 cleanall:
-	rm -f bin/SPheno lib/*.a *.o *~ */*.o */*~ include/*
-.PHONY: bin/SPheno clean cleanall
+	rm -f bin/SPheno lib/*.a lib/*.so *.o *~ */*.o */*~ include/*
+.PHONY: bin/SPheno lib/libSPhenoMSSM clean cleanall
diff -rupN SPheno-3.3.8/MSSM/Makefile ../installed/sphenomssm/3.3.8/MSSM/Makefile
--- SPheno-3.3.8/MSSM/Makefile	2017-12-20 13:18:04.447997812 +0100
+++ ../installed/sphenomssm/3.3.8/MSSM/Makefile	2017-12-20 13:21:12.180006768 +0100
@@ -4,6 +4,7 @@ PreDef = -DGENERATIONMIXING -DONLYDOUBLE
 InDir = ../include
 Mdir = ${InDir}
 name = ../lib/libSPhenoMSSM.a
+shared = lib/libSPhenoMSSM.so
  
 # check if SARAH module and SPheno are compatibel  
 minV=330.00 
@@ -12,19 +13,21 @@ cVersion =$(shell expr $(version) \>= $(
 # options for various compilers  
 #  
 # Default Compiler  
-F90=gfortran
-comp= -c -O -module ${Mdir} -I${InDir}  
-LFlagsB= -O  
+ifeq (${F90},/usr/bin/gfortran)
+override F90=gfortran
+endif
+#comp= -c -O -module ${Mdir} -I${InDir}  
+#LFlagsB= -O  
 # Intels ifort,debug modus  
 ifeq (${F90},ifortg)  
 F90=ifort  
-comp= -c -g -module ${Mdir} -I${InDir}  
-LFlagsB= -g  
+comp= -c -g -fpic -module ${Mdir} -I${InDir}  
+LFlagsB= -g -fpic 
 endif  
 # gfortran  
 ifeq (${F90},gfortran)  
-comp= -c -g -ffree-line-length-none -J${Mdir} -I${InDir}  
-LFlagsB= -g  
+comp= -c -g -fPIC --free-line-length-none -J${Mdir} -I${InDir}
+LFlagsB= -g -fPIC
 endif  
 # g95  
 ifeq (${F90},g95)  
@@ -42,15 +45,21 @@ comp= -c -O -mdir ${Mdir} -I${InDir}
 LFlagsB= -O -DONLYDOUBLE -mdir ${MDir} -I${InDir}  
 endif   
 .SUFFIXES : .o .ps .f90 .F90 .a 
-bin/SPhenoMSSM:
+${shared}:
 ifeq (${cVersion},1)
 	 cd ../src ; ${MAKE} F90=${F90} 
 	 ${MAKE} F90=${F90} ${name} 
 	 ${MAKE} F90=${F90} SPhenoMSSM.o 
-	 ${F90} -c effpotasat.f 
-	 ${F90} -o SPhenoMSSM ${LFlagsB} SPhenoMSSM.o effpotasat.o ../lib/libSPhenoMSSM.a ../lib/libSPheno.a
-	 mv SPhenoMSSM ../bin
-	 rm SPhenoMSSM.o  
+	 ${F90} -c -fPIC effpotasat.f
+	 ${F90} -shared -o ../${shared} ${LFlagsB} SPhenoMSSM.o effpotasat.o ../lib/libSPhenoMSSM.a ../lib/libSPheno.a
+bin/SPhenoMSSM:
+	cd ../src ; ${MAKE} F90=${F90} 
+	${MAKE} F90=${F90} ${name} 
+	${MAKE} F90=${F90} SPhenoMSSM.o 
+	${F90} -c effpotasat.f 
+	${F90} -o SPhenoMSSM ${LFlagsB} SPhenoMSSM.o effpotasat.o ../lib/libSPhenoMSSM.a ../lib/libSPheno.a
+	mv SPhenoMSSM ../bin
+	rm SPhenoMSSM.o  
 ${name}:  ${name}(Model_Data_MSSM.o)  \
  ${name}(RGEs_MSSM.o)   \
  ${name}(Couplings_MSSM.o) ${name}(SusyMasses_MSSM.o) ${name}(TadpoleEquations_MSSM.o) \
@@ -77,7 +86,7 @@ endif
 clean: 
 	 rm -f *.o *~ */*.o */*~
 cleanall: 
-	 rm -f bin/SPheno3 lib/*.a *~ */*.o */*~ include/*
+	 rm -f bin/SPheno3 lib/*.a lib/*so *~ */*.o */*~ include/*
 #
 # Suffix rules
 #
diff -rupN SPheno0-3.3.8/MSSM/SPhenoMSSM.f90 ../installed/sphenomssm/3.3.8/MSSM/SPhenoMSSM.f90
--- SPheno-3.3.8/MSSM/SPhenoMSSM.f90	2017-12-15 16:23:26.618801172 +0100
+++ ../installed/sphenomssm/3.3.8/MSSM/SPhenoMSSM.f90	2017-12-15 19:46:26.299382209 +0100
@@ -7,7 +7,8 @@
 ! ----------------------------------------------------------------------  
  
  
-Program SPhenoMSSM 
+!Program SPhenoMSSM 
+Module SPhenoMSSM ! Added by GAMBIT
  
 Use Control
 Use InputOutput_MSSM
@@ -53,290 +54,290 @@ Real(dp) :: ae,amu,atau,EDMe,EDMmu,EDMta
 & BrBtoDnunu,ratioBtoDnunu,BrKptoPipnunu,ratioKptoPipnunu,BrKltoPinunu,ratioKltoPinunu,  & 
 & DelMK,ratioDelMK,epsK,ratioepsK
 
-ae = 0._dp 
-amu = 0._dp 
-atau = 0._dp 
-EDMe = 0._dp 
-EDMmu = 0._dp 
-EDMtau = 0._dp 
-dRho = 0._dp 
-BrBsGamma = 0._dp 
-ratioBsGamma = 0._dp 
-BrDmunu = 0._dp 
-ratioDmunu = 0._dp 
-BrDsmunu = 0._dp 
-ratioDsmunu = 0._dp 
-BrDstaunu = 0._dp 
-ratioDstaunu = 0._dp 
-BrBmunu = 0._dp 
-ratioBmunu = 0._dp 
-BrBtaunu = 0._dp 
-ratioBtaunu = 0._dp 
-BrKmunu = 0._dp 
-ratioKmunu = 0._dp 
-RK = 0._dp 
-RKSM = 0._dp 
-muEgamma = 0._dp 
-tauEgamma = 0._dp 
-tauMuGamma = 0._dp 
-CRmuEAl = 0._dp 
-CRmuETi = 0._dp 
-CRmuESr = 0._dp 
-CRmuESb = 0._dp 
-CRmuEAu = 0._dp 
-CRmuEPb = 0._dp 
-BRmuTo3e = 0._dp 
-BRtauTo3e = 0._dp 
-BRtauTo3mu = 0._dp 
-BRtauToemumu = 0._dp 
-BRtauTomuee = 0._dp 
-BRtauToemumu2 = 0._dp 
-BRtauTomuee2 = 0._dp 
-BrZtoMuE = 0._dp 
-BrZtoTauE = 0._dp 
-BrZtoTauMu = 0._dp 
-BrhtoMuE = 0._dp 
-BrhtoTauE = 0._dp 
-BrhtoTauMu = 0._dp 
-DeltaMBs = 0._dp 
-ratioDeltaMBs = 0._dp 
-DeltaMBq = 0._dp 
-ratioDeltaMBq = 0._dp 
-BrTautoEPi = 0._dp 
-BrTautoEEta = 0._dp 
-BrTautoEEtap = 0._dp 
-BrTautoMuPi = 0._dp 
-BrTautoMuEta = 0._dp 
-BrTautoMuEtap = 0._dp 
-BrB0dEE = 0._dp 
-ratioB0dEE = 0._dp 
-BrB0sEE = 0._dp 
-ratioB0sEE = 0._dp 
-BrB0dMuMu = 0._dp 
-ratioB0dMuMu = 0._dp 
-BrB0sMuMu = 0._dp 
-ratioB0sMuMu = 0._dp 
-BrB0dTauTau = 0._dp 
-ratioB0dTauTau = 0._dp 
-BrB0sTauTau = 0._dp 
-ratioB0sTauTau = 0._dp 
-BrBtoSEE = 0._dp 
-ratioBtoSEE = 0._dp 
-BrBtoSMuMu = 0._dp 
-ratioBtoSMuMu = 0._dp 
-BrBtoKmumu = 0._dp 
-ratioBtoKmumu = 0._dp 
-BrBtoSnunu = 0._dp 
-ratioBtoSnunu = 0._dp 
-BrBtoDnunu = 0._dp 
-ratioBtoDnunu = 0._dp 
-BrKptoPipnunu = 0._dp 
-ratioKptoPipnunu = 0._dp 
-BrKltoPinunu = 0._dp 
-ratioKltoPinunu = 0._dp 
-DelMK = 0._dp 
-ratioDelMK = 0._dp 
-epsK = 0._dp 
-ratioepsK = 0._dp 
-Call get_command_argument(1,inputFileName)
-If (len_trim(inputFileName)==0) Then
-  inputFileName="LesHouches.in.MSSM"
-Else
-  inputFileName=trim(inputFileName)
-End if
-Call get_command_argument(2,outputFileName)
-If (len_trim(outputFileName)==0) Then
-  outputFileName="SPheno.spc.MSSM"
-Else
-  outputFileName=trim(outputFileName)
-End if 
-Call Set_All_Parameters_0() 
- 
-Qin = SetRenormalizationScale(1.0E3_dp**2)  
-kont = 0 
-delta_Mass = 0.0001_dp 
-CalcTBD = .false. 
-Call ReadingData(kont) 
- 
-If ((HighScaleModel.Eq."LOW").and.(.not.SUSYrunningFromMZ)) Then ! No longer used by default 
- ! Setting values 
- vd = vdIN 
- vu = vuIN 
- Mu = MuIN 
- Td = TdIN 
- Te = TeIN 
- Tu = TuIN 
- Bmu = BmuIN 
- mq2 = mq2IN 
- ml2 = ml2IN 
- mHd2 = mHd2IN 
- mHu2 = mHu2IN 
- md2 = md2IN 
- mu2 = mu2IN 
- me2 = me2IN 
- M1 = M1IN 
- M2 = M2IN 
- M3 = M3IN 
- g1 = g1IN 
- g2 = g2IN 
- g3 = g3IN 
- Yd = YdIN 
- Ye = YeIN 
- Yu = YuIN 
- M1 = M1input
-M2 = M2input
-M3 = M3input
-Mu = Muinput
-Bmu = MA2input/(1/TanBeta + TanBeta)
-vd = (2*Sqrt(mz2/(g1**2 + g2**2)))/Sqrt(1 + TanBeta**2)
-vu = (2*Sqrt(mz2/(g1**2 + g2**2))*TanBeta)/Sqrt(1 + TanBeta**2)
-tanbetaMZ = tanbeta 
-
- 
- ! Setting VEVs used for low energy constraints 
- vdMZ = vd 
- vuMZ = vu 
- 
- 
- ! RGE running for gauge and Yukawa couplings from M_Z to M_SUSY 
- Qin=sqrt(getRenormalizationScale()) 
-If (SMrunningLowScaleInput) Then 
-Call RunSM(Qin,deltaM,tanbeta,g1,g2,g3,Yu,Yd,Ye,vd,vu) 
-End if 
-
- ! Setting Boundary conditions 
- M1 = M1input
-M2 = M2input
-M3 = M3input
-Mu = Muinput
-Bmu = MA2input/(1/TanBeta + TanBeta)
-vd = (2*Sqrt(mz2/(g1**2 + g2**2)))/Sqrt(1 + TanBeta**2)
-vu = (2*Sqrt(mz2/(g1**2 + g2**2))*TanBeta)/Sqrt(1 + TanBeta**2)
-Call SolveTadpoleEquations(g1,g2,g3,Yd,Ye,Yu,Mu,Td,Te,Tu,Bmu,mq2,ml2,mHd2,            & 
-& mHu2,md2,mu2,me2,M1,M2,M3,vd,vu,(/ ZeroC, ZeroC /))
-
-Call OneLoopMasses(MAh,MAh2,MCha,MCha2,MChi,MChi2,MFd,MFd2,MFe,MFe2,MFu,              & 
-& MFu2,MGlu,MGlu2,Mhh,Mhh2,MHpm,MHpm2,MSd,MSd2,MSe,MSe2,MSu,MSu2,MSv,MSv2,               & 
-& MVWm,MVWm2,MVZ,MVZ2,pG,TW,UM,UP,v,ZA,ZD,ZDL,ZDR,ZE,ZEL,ZER,ZH,ZN,ZP,ZU,ZUL,            & 
-& ZUR,ZV,ZW,ZZ,alphaH,betaH,vd,vu,g1,g2,g3,Yd,Ye,Yu,Mu,Td,Te,Tu,Bmu,mq2,ml2,             & 
-& mHd2,mHu2,md2,mu2,me2,M1,M2,M3,kont)
-
-
- If (SignOfMassChanged) Then  
- If (.Not.IgnoreNegativeMasses) Then 
-  Write(*,*) " Stopping calculation because of negative mass squared." 
-  Call TerminateProgram 
- Else 
-  SignOfMassChanged= .False. 
-  kont=0  
- End If 
-End If 
-If (SignOfMuChanged) Then 
- If (.Not.IgnoreMuSignFlip) Then 
-  Write(*,*) " Stopping calculation because of negative mass squared in tadpoles." 
-  Call TerminateProgram 
- Else 
-  SignOfMuChanged= .False. 
-  kont=0 
- End If 
-End If 
-
-Else 
- Call CalculateSpectrum(n_run,delta_mass,WriteOut,kont,MAh,MAh2,MCha,MCha2,            & 
-& MChi,MChi2,MFd,MFd2,MFe,MFe2,MFu,MFu2,MGlu,MGlu2,Mhh,Mhh2,MHpm,MHpm2,MSd,              & 
-& MSd2,MSe,MSe2,MSu,MSu2,MSv,MSv2,MVWm,MVWm2,MVZ,MVZ2,pG,TW,UM,UP,v,ZA,ZD,               & 
-& ZDL,ZDR,ZE,ZEL,ZER,ZH,ZN,ZP,ZU,ZUL,ZUR,ZV,ZW,ZZ,alphaH,betaH,vd,vu,g1,g2,              & 
-& g3,Yd,Ye,Yu,Mu,Td,Te,Tu,Bmu,mq2,ml2,mHd2,mHu2,md2,mu2,me2,M1,M2,M3,mGUT)
-
-End If 
- ! Save correct Higgs masses for calculation of L -> 3 L' 
-MhhL = Mhh
-Mhh2L = MhhL**2 
-MAhL = MAh
-MAh2L = MAhL**2 
- 
-v = Sqrt(vd**2 + vu**2)
-betaH = ASin(Abs(ZP(1,2)))
-alphaH = ACos(ZH(1,2))
-TW = ACos(Abs(ZZ(1,1)))
-If ((L_BR).And.(kont.Eq.0)) Then 
- sinW2=1._dp-mW2/mZ2 
-vev=Sqrt(mZ2*(1._dp-sinW2)*SinW2/(pi*alpha_mZ))
-vdMZ=vev/Sqrt(1._dp+tanbetaMZ**2)
-vuMZ=tanbetaMZ*vdMZ 
-Call CalculateBR(CalcTBD,ratioWoM,epsI,deltaM,kont,MAh,MAh2,MCha,MCha2,               & 
-& MChi,MChi2,MFd,MFd2,MFe,MFe2,MFu,MFu2,MGlu,MGlu2,Mhh,Mhh2,MHpm,MHpm2,MSd,              & 
-& MSd2,MSe,MSe2,MSu,MSu2,MSv,MSv2,MVWm,MVWm2,MVZ,MVZ2,pG,TW,UM,UP,v,ZA,ZD,               & 
-& ZDL,ZDR,ZE,ZEL,ZER,ZH,ZN,ZP,ZU,ZUL,ZUR,ZV,ZW,ZZ,alphaH,betaH,vdMZ,vuMZ,g1,             & 
-& g2,g3,Yd,Ye,Yu,Mu,Td,Te,Tu,Bmu,mq2,ml2,mHd2,mHu2,md2,mu2,me2,M1,M2,M3,gPSd,            & 
-& gTSd,BRSd,gPSu,gTSu,BRSu,gPSe,gTSe,BRSe,gPSv,gTSv,BRSv,gPhh,gThh,BRhh,gPAh,            & 
-& gTAh,BRAh,gPHpm,gTHpm,BRHpm,gPGlu,gTGlu,BRGlu,gPChi,gTChi,BRChi,gPCha,gTCha,           & 
-& BRCha,gPFu,gTFu,BRFu)
-
-Call HiggsCrossSections(Mhh,ratioGG,ratioPP,rHB_S_VWm,rHB_S_VZ,rHB_S_S_Fu(:,3)        & 
-& ,CS_Higgs_LHC,kont)
-
-Call HiggsCrossSections(MAh,ratioPGG,ratioPPP,0._dp*rHB_S_VWm,0._dp*rHB_S_VZ,         & 
-& rHB_P_S_Fu(:,3),CS_PHiggs_LHC,kont)
-
-End If 
- 
- If (CalculateLowEnergy) then 
-Call CalculateLowEnergyConstraints(g1,g2,g3,Yd,Ye,Yu,Mu,Td,Te,Tu,Bmu,mq2,             & 
-& ml2,mHd2,mHu2,md2,mu2,me2,M1,M2,M3,vd,vu,ae,amu,atau,EDMe,EDMmu,EDMtau,dRho,           & 
-& BrBsGamma,ratioBsGamma,BrDmunu,ratioDmunu,BrDsmunu,ratioDsmunu,BrDstaunu,              & 
-& ratioDstaunu,BrBmunu,ratioBmunu,BrBtaunu,ratioBtaunu,BrKmunu,ratioKmunu,               & 
-& RK,RKSM,muEgamma,tauEgamma,tauMuGamma,CRmuEAl,CRmuETi,CRmuESr,CRmuESb,CRmuEAu,         & 
-& CRmuEPb,BRmuTo3e,BRtauTo3e,BRtauTo3mu,BRtauToemumu,BRtauTomuee,BRtauToemumu2,          & 
-& BRtauTomuee2,BrZtoMuE,BrZtoTauE,BrZtoTauMu,BrhtoMuE,BrhtoTauE,BrhtoTauMu,              & 
-& DeltaMBs,ratioDeltaMBs,DeltaMBq,ratioDeltaMBq,BrTautoEPi,BrTautoEEta,BrTautoEEtap,     & 
-& BrTautoMuPi,BrTautoMuEta,BrTautoMuEtap,BrB0dEE,ratioB0dEE,BrB0sEE,ratioB0sEE,          & 
-& BrB0dMuMu,ratioB0dMuMu,BrB0sMuMu,ratioB0sMuMu,BrB0dTauTau,ratioB0dTauTau,              & 
-& BrB0sTauTau,ratioB0sTauTau,BrBtoSEE,ratioBtoSEE,BrBtoSMuMu,ratioBtoSMuMu,              & 
-& BrBtoKmumu,ratioBtoKmumu,BrBtoSnunu,ratioBtoSnunu,BrBtoDnunu,ratioBtoDnunu,            & 
-& BrKptoPipnunu,ratioKptoPipnunu,BrKltoPinunu,ratioKltoPinunu,DelMK,ratioDelMK,          & 
-& epsK,ratioepsK)
-
-MVZ = mz 
-MVZ2 = mz2 
-MVWm = mW 
-MVWm2 = mW2 
-If (WriteParametersAtQ) Then 
-Call TreeMasses(MAh,MAh2,MCha,MCha2,MChi,MChi2,MFd,MFd2,MFe,MFe2,MFu,MFu2,            & 
-& MGlu,MGlu2,Mhh,Mhh2,MHpm,MHpm2,MSd,MSd2,MSe,MSe2,MSu,MSu2,MSv,MSv2,MVWm,               & 
-& MVWm2,MVZ,MVZ2,pG,TW,UM,UP,v,ZA,ZD,ZDL,ZDR,ZE,ZEL,ZER,ZH,ZN,ZP,ZU,ZUL,ZUR,             & 
-& ZV,ZW,ZZ,alphaH,betaH,vd,vu,g1,g2,g3,Yd,Ye,Yu,Mu,Td,Te,Tu,Bmu,mq2,ml2,mHd2,            & 
-& mHu2,md2,mu2,me2,M1,M2,M3,GenerationMixing,kont)
-
-End If 
- 
-End if 
- 
-If (HighScaleModel.ne."LOW") Then 
-  If (calcFT) Then 
-Call FineTuning(g1,g2,g3,Yd,Ye,Yu,Mu,Td,Te,Tu,Bmu,mq2,ml2,mHd2,mHu2,md2,              & 
-& mu2,me2,M1,M2,M3,vd,vu,mGut,kont)
-
- End If 
-End If 
-If ((FoundIterativeSolution).or.(WriteOutputForNonConvergence)) Then 
-Write(*,*) "Writing output files" 
-Call LesHouches_Out(67,11,kont,MGUT,ae,amu,atau,EDMe,EDMmu,EDMtau,dRho,               & 
-& BrBsGamma,ratioBsGamma,BrDmunu,ratioDmunu,BrDsmunu,ratioDsmunu,BrDstaunu,              & 
-& ratioDstaunu,BrBmunu,ratioBmunu,BrBtaunu,ratioBtaunu,BrKmunu,ratioKmunu,               & 
-& RK,RKSM,muEgamma,tauEgamma,tauMuGamma,CRmuEAl,CRmuETi,CRmuESr,CRmuESb,CRmuEAu,         & 
-& CRmuEPb,BRmuTo3e,BRtauTo3e,BRtauTo3mu,BRtauToemumu,BRtauTomuee,BRtauToemumu2,          & 
-& BRtauTomuee2,BrZtoMuE,BrZtoTauE,BrZtoTauMu,BrhtoMuE,BrhtoTauE,BrhtoTauMu,              & 
-& DeltaMBs,ratioDeltaMBs,DeltaMBq,ratioDeltaMBq,BrTautoEPi,BrTautoEEta,BrTautoEEtap,     & 
-& BrTautoMuPi,BrTautoMuEta,BrTautoMuEtap,BrB0dEE,ratioB0dEE,BrB0sEE,ratioB0sEE,          & 
-& BrB0dMuMu,ratioB0dMuMu,BrB0sMuMu,ratioB0sMuMu,BrB0dTauTau,ratioB0dTauTau,              & 
-& BrB0sTauTau,ratioB0sTauTau,BrBtoSEE,ratioBtoSEE,BrBtoSMuMu,ratioBtoSMuMu,              & 
-& BrBtoKmumu,ratioBtoKmumu,BrBtoSnunu,ratioBtoSnunu,BrBtoDnunu,ratioBtoDnunu,            & 
-& BrKptoPipnunu,ratioKptoPipnunu,BrKltoPinunu,ratioKltoPinunu,DelMK,ratioDelMK,          & 
-& epsK,ratioepsK,GenerationMixing)
-
-End if 
-Write(*,*) "Finished!" 
+! ae = 0._dp 
+! amu = 0._dp 
+! atau = 0._dp 
+! EDMe = 0._dp 
+! EDMmu = 0._dp 
+! EDMtau = 0._dp 
+! dRho = 0._dp 
+! BrBsGamma = 0._dp 
+! ratioBsGamma = 0._dp 
+! BrDmunu = 0._dp 
+! ratioDmunu = 0._dp 
+! BrDsmunu = 0._dp 
+! ratioDsmunu = 0._dp 
+! BrDstaunu = 0._dp 
+! ratioDstaunu = 0._dp 
+! BrBmunu = 0._dp 
+! ratioBmunu = 0._dp 
+! BrBtaunu = 0._dp 
+! ratioBtaunu = 0._dp 
+! BrKmunu = 0._dp 
+! ratioKmunu = 0._dp 
+! RK = 0._dp 
+! RKSM = 0._dp 
+! muEgamma = 0._dp 
+! tauEgamma = 0._dp 
+! tauMuGamma = 0._dp 
+! CRmuEAl = 0._dp 
+! CRmuETi = 0._dp 
+! CRmuESr = 0._dp 
+! CRmuESb = 0._dp 
+! CRmuEAu = 0._dp 
+! CRmuEPb = 0._dp 
+! BRmuTo3e = 0._dp 
+! BRtauTo3e = 0._dp 
+! BRtauTo3mu = 0._dp 
+! BRtauToemumu = 0._dp 
+! BRtauTomuee = 0._dp 
+! BRtauToemumu2 = 0._dp 
+! BRtauTomuee2 = 0._dp 
+! BrZtoMuE = 0._dp 
+! BrZtoTauE = 0._dp 
+! BrZtoTauMu = 0._dp 
+! BrhtoMuE = 0._dp 
+! BrhtoTauE = 0._dp 
+! BrhtoTauMu = 0._dp 
+! DeltaMBs = 0._dp 
+! ratioDeltaMBs = 0._dp 
+! DeltaMBq = 0._dp 
+! ratioDeltaMBq = 0._dp 
+! BrTautoEPi = 0._dp 
+! BrTautoEEta = 0._dp 
+! BrTautoEEtap = 0._dp 
+! BrTautoMuPi = 0._dp 
+! BrTautoMuEta = 0._dp 
+! BrTautoMuEtap = 0._dp 
+! BrB0dEE = 0._dp 
+! ratioB0dEE = 0._dp 
+! BrB0sEE = 0._dp 
+! ratioB0sEE = 0._dp 
+! BrB0dMuMu = 0._dp 
+! ratioB0dMuMu = 0._dp 
+! BrB0sMuMu = 0._dp 
+! ratioB0sMuMu = 0._dp 
+! BrB0dTauTau = 0._dp 
+! ratioB0dTauTau = 0._dp 
+! BrB0sTauTau = 0._dp 
+! ratioB0sTauTau = 0._dp 
+! BrBtoSEE = 0._dp 
+! ratioBtoSEE = 0._dp 
+! BrBtoSMuMu = 0._dp 
+! ratioBtoSMuMu = 0._dp 
+! BrBtoKmumu = 0._dp 
+! ratioBtoKmumu = 0._dp 
+! BrBtoSnunu = 0._dp 
+! ratioBtoSnunu = 0._dp 
+! BrBtoDnunu = 0._dp 
+! ratioBtoDnunu = 0._dp 
+! BrKptoPipnunu = 0._dp 
+! ratioKptoPipnunu = 0._dp 
+! BrKltoPinunu = 0._dp 
+! ratioKltoPinunu = 0._dp 
+! DelMK = 0._dp 
+! ratioDelMK = 0._dp 
+! epsK = 0._dp 
+! ratioepsK = 0._dp 
+! Call get_command_argument(1,inputFileName)
+! If (len_trim(inputFileName)==0) Then
+!   inputFileName="LesHouches.in.MSSM"
+! Else
+!   inputFileName=trim(inputFileName)
+! End if
+! Call get_command_argument(2,outputFileName)
+! If (len_trim(outputFileName)==0) Then
+!   outputFileName="SPheno.spc.MSSM"
+! Else
+!   outputFileName=trim(outputFileName)
+! End if 
+! Call Set_All_Parameters_0() 
+!  
+! Qin = SetRenormalizationScale(1.0E3_dp**2)  
+! kont = 0 
+! delta_Mass = 0.0001_dp 
+! CalcTBD = .false. 
+! Call ReadingData(kont) 
+!  
+! If ((HighScaleModel.Eq."LOW").and.(.not.SUSYrunningFromMZ)) Then ! No longer used by default 
+! ! Setting values 
+!  vd = vdIN 
+!  vu = vuIN 
+!  Mu = MuIN 
+!  Td = TdIN 
+!  Te = TeIN 
+!  Tu = TuIN 
+! Bmu = BmuIN 
+!  mq2 = mq2IN 
+!  ml2 = ml2IN 
+!  mHd2 = mHd2IN 
+!  mHu2 = mHu2IN 
+!  md2 = md2IN 
+!  mu2 = mu2IN 
+!  me2 = me2IN 
+!  M1 = M1IN 
+!  M2 = M2IN 
+!  M3 = M3IN 
+!  g1 = g1IN 
+!  g2 = g2IN 
+!  g3 = g3IN 
+!  Yd = YdIN 
+!  Ye = YeIN 
+!  Yu = YuIN 
+!  M1 = M1input
+! M2 = M2input
+! M3 = M3input
+! Mu = Muinput
+! Bmu = MA2input/(1/TanBeta + TanBeta)
+! vd = (2*Sqrt(mz2/(g1**2 + g2**2)))/Sqrt(1 + TanBeta**2)
+! vu = (2*Sqrt(mz2/(g1**2 + g2**2))*TanBeta)/Sqrt(1 + TanBeta**2)
+! tanbetaMZ = tanbeta 
+! 
+!  
+!  ! Setting VEVs used for low energy constraints 
+!  vdMZ = vd 
+!  vuMZ = vu 
+!  
+!  
+!  ! RGE running for gauge and Yukawa couplings from M_Z to M_SUSY 
+!  Qin=sqrt(getRenormalizationScale()) 
+! If (SMrunningLowScaleInput) Then 
+!  all RunSM(Qin,deltaM,tanbeta,g1,g2,g3,Yu,Yd,Ye,vd,vu) 
+! End if 
+! 
+!  ! Setting Boundary conditions 
+!  M1 = M1input
+! M2 = M2input
+! M3 = M3input
+! Mu = Muinput
+! Bmu = MA2input/(1/TanBeta + TanBeta)
+! vd = (2*Sqrt(mz2/(g1**2 + g2**2)))/Sqrt(1 + TanBeta**2)
+! vu = (2*Sqrt(mz2/(g1**2 + g2**2))*TanBeta)/Sqrt(1 + TanBeta**2)
+! Call SolveTadpoleEquations(g1,g2,g3,Yd,Ye,Yu,Mu,Td,Te,Tu,Bmu,mq2,ml2,mHd2,            & 
+! & mHu2,md2,mu2,me2,M1,M2,M3,vd,vu,(/ ZeroC, ZeroC /))
+! 
+! Call OneLoopMasses(MAh,MAh2,MCha,MCha2,MChi,MChi2,MFd,MFd2,MFe,MFe2,MFu,              & 
+! & MFu2,MGlu,MGlu2,Mhh,Mhh2,MHpm,MHpm2,MSd,MSd2,MSe,MSe2,MSu,MSu2,MSv,MSv2,               & 
+! & MVWm,MVWm2,MVZ,MVZ2,pG,TW,UM,UP,v,ZA,ZD,ZDL,ZDR,ZE,ZEL,ZER,ZH,ZN,ZP,ZU,ZUL,            & 
+! & ZUR,ZV,ZW,ZZ,alphaH,betaH,vd,vu,g1,g2,g3,Yd,Ye,Yu,Mu,Td,Te,Tu,Bmu,mq2,ml2,             & 
+! & mHd2,mHu2,md2,mu2,me2,M1,M2,M3,kont)
+! 
+! 
+!  If (SignOfMassChanged) Then  
+!  If (.Not.IgnoreNegativeMasses) Then 
+!   Write(*,*) " Stopping calculation because of negative mass squared." 
+!   Call TerminateProgram 
+!  Else 
+!   SignOfMassChanged= .False. 
+!   kont=0  
+!  End If 
+! End If 
+! If (SignOfMuChanged) Then 
+!  If (.Not.IgnoreMuSignFlip) Then 
+!   Write(*,*) " Stopping calculation because of negative mass squared in tadpoles." 
+!   Call TerminateProgram 
+!  Else 
+!   SignOfMuChanged= .False. 
+!   kont=0 
+!  End If 
+! End If 
+! 
+! Else 
+!  Call CalculateSpectrum(n_run,delta_mass,WriteOut,kont,MAh,MAh2,MCha,MCha2,            & 
+! & MChi,MChi2,MFd,MFd2,MFe,MFe2,MFu,MFu2,MGlu,MGlu2,Mhh,Mhh2,MHpm,MHpm2,MSd,              & 
+! & MSd2,MSe,MSe2,MSu,MSu2,MSv,MSv2,MVWm,MVWm2,MVZ,MVZ2,pG,TW,UM,UP,v,ZA,ZD,               & 
+! & ZDL,ZDR,ZE,ZEL,ZER,ZH,ZN,ZP,ZU,ZUL,ZUR,ZV,ZW,ZZ,alphaH,betaH,vd,vu,g1,g2,              & 
+! & g3,Yd,Ye,Yu,Mu,Td,Te,Tu,Bmu,mq2,ml2,mHd2,mHu2,md2,mu2,me2,M1,M2,M3,mGUT)
+! 
+! End If 
+!  ! Save correct Higgs masses for calculation of L -> 3 L' 
+! MhhL = Mhh
+! Mhh2L = MhhL**2 
+! MAhL = MAh
+! MAh2L = MAhL**2 
+!  
+! v = Sqrt(vd**2 + vu**2)
+! betaH = ASin(Abs(ZP(1,2)))
+! alphaH = ACos(ZH(1,2))
+! TW = ACos(Abs(ZZ(1,1)))
+! If ((L_BR).And.(kont.Eq.0)) Then 
+!  sinW2=1._dp-mW2/mZ2 
+! vev=Sqrt(mZ2*(1._dp-sinW2)*SinW2/(pi*alpha_mZ))
+! vdMZ=vev/Sqrt(1._dp+tanbetaMZ**2)
+! vuMZ=tanbetaMZ*vdMZ 
+! Call CalculateBR(CalcTBD,ratioWoM,epsI,deltaM,kont,MAh,MAh2,MCha,MCha2,               & 
+! & MChi,MChi2,MFd,MFd2,MFe,MFe2,MFu,MFu2,MGlu,MGlu2,Mhh,Mhh2,MHpm,MHpm2,MSd,              & 
+! & MSd2,MSe,MSe2,MSu,MSu2,MSv,MSv2,MVWm,MVWm2,MVZ,MVZ2,pG,TW,UM,UP,v,ZA,ZD,               & 
+! & ZDL,ZDR,ZE,ZEL,ZER,ZH,ZN,ZP,ZU,ZUL,ZUR,ZV,ZW,ZZ,alphaH,betaH,vdMZ,vuMZ,g1,             & 
+! & g2,g3,Yd,Ye,Yu,Mu,Td,Te,Tu,Bmu,mq2,ml2,mHd2,mHu2,md2,mu2,me2,M1,M2,M3,gPSd,            & 
+! & gTSd,BRSd,gPSu,gTSu,BRSu,gPSe,gTSe,BRSe,gPSv,gTSv,BRSv,gPhh,gThh,BRhh,gPAh,            & 
+! & gTAh,BRAh,gPHpm,gTHpm,BRHpm,gPGlu,gTGlu,BRGlu,gPChi,gTChi,BRChi,gPCha,gTCha,           & 
+! & BRCha,gPFu,gTFu,BRFu)
+! 
+! Call HiggsCrossSections(Mhh,ratioGG,ratioPP,rHB_S_VWm,rHB_S_VZ,rHB_S_S_Fu(:,3)        & 
+! & ,CS_Higgs_LHC,kont)
+! 
+! Call HiggsCrossSections(MAh,ratioPGG,ratioPPP,0._dp*rHB_S_VWm,0._dp*rHB_S_VZ,         & 
+! & rHB_P_S_Fu(:,3),CS_PHiggs_LHC,kont)
+! 
+! End If 
+!  
+!  If (CalculateLowEnergy) then 
+! Call CalculateLowEnergyConstraints(g1,g2,g3,Yd,Ye,Yu,Mu,Td,Te,Tu,Bmu,mq2,             & 
+! & ml2,mHd2,mHu2,md2,mu2,me2,M1,M2,M3,vd,vu,ae,amu,atau,EDMe,EDMmu,EDMtau,dRho,           & 
+! & BrBsGamma,ratioBsGamma,BrDmunu,ratioDmunu,BrDsmunu,ratioDsmunu,BrDstaunu,              & 
+! & ratioDstaunu,BrBmunu,ratioBmunu,BrBtaunu,ratioBtaunu,BrKmunu,ratioKmunu,               & 
+! & RK,RKSM,muEgamma,tauEgamma,tauMuGamma,CRmuEAl,CRmuETi,CRmuESr,CRmuESb,CRmuEAu,         & 
+! & CRmuEPb,BRmuTo3e,BRtauTo3e,BRtauTo3mu,BRtauToemumu,BRtauTomuee,BRtauToemumu2,          & 
+! & BRtauTomuee2,BrZtoMuE,BrZtoTauE,BrZtoTauMu,BrhtoMuE,BrhtoTauE,BrhtoTauMu,              & 
+! & DeltaMBs,ratioDeltaMBs,DeltaMBq,ratioDeltaMBq,BrTautoEPi,BrTautoEEta,BrTautoEEtap,     & 
+! & BrTautoMuPi,BrTautoMuEta,BrTautoMuEtap,BrB0dEE,ratioB0dEE,BrB0sEE,ratioB0sEE,          & 
+! & BrB0dMuMu,ratioB0dMuMu,BrB0sMuMu,ratioB0sMuMu,BrB0dTauTau,ratioB0dTauTau,              & 
+! & BrB0sTauTau,ratioB0sTauTau,BrBtoSEE,ratioBtoSEE,BrBtoSMuMu,ratioBtoSMuMu,              & 
+! & BrBtoKmumu,ratioBtoKmumu,BrBtoSnunu,ratioBtoSnunu,BrBtoDnunu,ratioBtoDnunu,            & 
+! & BrKptoPipnunu,ratioKptoPipnunu,BrKltoPinunu,ratioKltoPinunu,DelMK,ratioDelMK,          & 
+! & epsK,ratioepsK)
+! 
+! MVZ = mz 
+! MVZ2 = mz2 
+! MVWm = mW 
+! MVWm2 = mW2 
+! If (WriteParametersAtQ) Then 
+! Call TreeMasses(MAh,MAh2,MCha,MCha2,MChi,MChi2,MFd,MFd2,MFe,MFe2,MFu,MFu2,            & 
+! & MGlu,MGlu2,Mhh,Mhh2,MHpm,MHpm2,MSd,MSd2,MSe,MSe2,MSu,MSu2,MSv,MSv2,MVWm,               & 
+! & MVWm2,MVZ,MVZ2,pG,TW,UM,UP,v,ZA,ZD,ZDL,ZDR,ZE,ZEL,ZER,ZH,ZN,ZP,ZU,ZUL,ZUR,             & 
+! & ZV,ZW,ZZ,alphaH,betaH,vd,vu,g1,g2,g3,Yd,Ye,Yu,Mu,Td,Te,Tu,Bmu,mq2,ml2,mHd2,            & 
+! & mHu2,md2,mu2,me2,M1,M2,M3,GenerationMixing,kont)
+! 
+! End If 
+!  
+! End if 
+!  
+! If (HighScaleModel.ne."LOW") Then 
+!   If (calcFT) Then 
+! Call FineTuning(g1,g2,g3,Yd,Ye,Yu,Mu,Td,Te,Tu,Bmu,mq2,ml2,mHd2,mHu2,md2,              & 
+! & mu2,me2,M1,M2,M3,vd,vu,mGut,kont)
+! 
+!  End If 
+! End If 
+! If ((FoundIterativeSolution).or.(WriteOutputForNonConvergence)) Then 
+! Write(*,*) "Writing output files" 
+! Call LesHouches_Out(67,11,kont,MGUT,ae,amu,atau,EDMe,EDMmu,EDMtau,dRho,               & 
+! & BrBsGamma,ratioBsGamma,BrDmunu,ratioDmunu,BrDsmunu,ratioDsmunu,BrDstaunu,              & 
+! & ratioDstaunu,BrBmunu,ratioBmunu,BrBtaunu,ratioBtaunu,BrKmunu,ratioKmunu,               & 
+! & RK,RKSM,muEgamma,tauEgamma,tauMuGamma,CRmuEAl,CRmuETi,CRmuESr,CRmuESb,CRmuEAu,         & 
+! & CRmuEPb,BRmuTo3e,BRtauTo3e,BRtauTo3mu,BRtauToemumu,BRtauTomuee,BRtauToemumu2,          & 
+! & BRtauTomuee2,BrZtoMuE,BrZtoTauE,BrZtoTauMu,BrhtoMuE,BrhtoTauE,BrhtoTauMu,              & 
+! & DeltaMBs,ratioDeltaMBs,DeltaMBq,ratioDeltaMBq,BrTautoEPi,BrTautoEEta,BrTautoEEtap,     & 
+! & BrTautoMuPi,BrTautoMuEta,BrTautoMuEtap,BrB0dEE,ratioB0dEE,BrB0sEE,ratioB0sEE,          & 
+! & BrB0dMuMu,ratioB0dMuMu,BrB0sMuMu,ratioB0sMuMu,BrB0dTauTau,ratioB0dTauTau,              & 
+! & BrB0sTauTau,ratioB0sTauTau,BrBtoSEE,ratioBtoSEE,BrBtoSMuMu,ratioBtoSMuMu,              & 
+! & BrBtoKmumu,ratioBtoKmumu,BrBtoSnunu,ratioBtoSnunu,BrBtoDnunu,ratioBtoDnunu,            & 
+! & BrKptoPipnunu,ratioKptoPipnunu,BrKltoPinunu,ratioKltoPinunu,DelMK,ratioDelMK,          & 
+! & epsK,ratioepsK,GenerationMixing)
+! 
+! End if 
+! Write(*,*) "Finished!" 
 Contains 
  
 Subroutine CalculateSpectrum(n_run,delta,WriteOut,kont,MAh,MAh2,MCha,MCha2,           & 
@@ -5124,4 +5125,5 @@ g1input = Sqrt(3._dp/5._dp)*g1input
 End subroutine CalculateLowEnergyConstraints 
  
  
-End Program SPhenoMSSM 
+!End Program SPhenoMSSM 
+End Module SPhenoMSSM ! Added by GAMBIT
diff -rupN SPheno-3.3.8/src/Makefile ../installed/sphenomssm/3.3.8/src/Makefile
--- SPheno-3.3.8/src/Makefile	2015-11-02 14:26:45.000000000 +0100
+++ ../installed/sphenomssm/3.3.8/src/Makefile	2017-12-21 21:04:08.147494939 +0100
@@ -23,8 +23,8 @@ endif
 
 # gfortran
 ifeq (${F90},gfortran)
- comp = -c -O -J${Mdir} -I${InDir}
- LFlagsB = -O  
+ comp = -c -O -fPIC -J${Mdir} -I${InDir}
+ LFlagsB = -O -fPIC
 endif
 
 # g95 
