--- ../../../installed/MultiModeCode/2.0.0/modpk_backgrnd.f90	2015-04-20 16:36:02.000000000 +0100
+++ ../../../include/gambit/Backends/backend_types/MultiModeCode_2_0_0/modpk_backgrnd.f90	2017-08-28 20:55:48.000000000 +0100
@@ -23,14 +23,14 @@ CONTAINS
     use modpk_icsampling, only : save_iso_N, N_iso_ref, phi_iso_N, &
       dphi_iso_N, ic_sampling, ic_flags
 
-    INTEGER*4 :: i,j, rescl_count
+    INTEGER*4 :: i,j,ii, rescl_count
 
     real(dp) :: phi_init_trial(size(phi_init))
     real(dp) :: alpha_e,dalpha,V_end,dv,dh
     real(dp) :: a_end_inst
     real(dp) :: V_i, ph, alpha_pivot, bb(size(phi_init))
     real(dp) :: Np_last
-
+    real(dp) :: dchidrho, derr
     CHARACTER(16) :: fmt = '(a25,es15.7)'
 
     !MULTIFIELD
@@ -323,37 +323,50 @@ CONTAINS
 
       !dphi/dalpha(x1) slowroll approx
       !MULTIFIELD
-
-      h_init=pot(phi_init_trial)/(6.e0_dp*M_Pl**2) * &
-           (1.e0_dp+SQRT(1.e0_dp+2.e0_dp/3.e0_dp* M_Pl**2 *&
-           dot_product(dVdphi(phi_init_trial), dVdphi(phi_init_trial)) &
-           / pot(phi_init_trial)**2.))
-
-      if (h_init<0.0e0_dp) then
-        print*, "MODECODE: h_init=", h_init
-        call raise%fatal_code(&
-          "The initial value of H is imaginary.  This is &
-          likely related to a problem in the definition of V &
-          or its derivatives.",&
-          __FILE__, __LINE__)
+      if (potential_choice==18) then
+        y(size(y)/2+1 : (size(y))) = 0.0e0_dp ! y(size(y)/2+1 : (size(y))) ! * 0.0e0_dp ! 1.0e-10_dp
       else
-        h_init = sqrt(h_init)
-      end if
-
-      !END MULTIFIELD
-
-      y(size(y)/2+1 : (size(y))) = &
-        -dVdphi(phi_init_trial)/3.e0_dp/h_init/h_init
+        h_init=pot(phi_init_trial)/(6.e0_dp*M_Pl**2) * &
+             (1.e0_dp+SQRT(1.e0_dp+2.e0_dp/3.e0_dp* M_Pl**2 *&
+             dot_product(dVdphi(phi_init_trial), dVdphi(phi_init_trial)) &
+             / pot(phi_init_trial)**2.))
+        print*,"h_init",h_init
+        if (h_init<0.0e0_dp) then
+          print*, "MODECODE: h_init=", h_init
+          call raise%fatal_code(&
+            "The initial value of H is imaginary.  This is &
+            likely related to a problem in the definition of V &
+            or its derivatives.",&
+            __FILE__, __LINE__)
+        else
+          h_init = sqrt(h_init)
+        end if
+        !END MULTIFIELD
+        y(size(y)/2+1 : (size(y))) = &
+            -dVdphi(phi_init_trial)/3.e0_dp/h_init/h_init
 
-      dphi_init0 = y(size(y)/2+1 : (size(y)))
+  	  end if
 
     else
-
-      h_init = getH(phi_init_trial,dphi_init0)
-
-      !Set not necess close to SR
-      y(size(y)/2+1 : (size(y))) = dphi_init0
-
+      if (potential_choice==18) then
+        print*,"pot(phi_init_trial)=",pot(phi_init_trial)
+        h_init=pot(phi_init_trial)/(6.e0_dp*M_Pl**2) * &
+                (1.e0_dp+SQRT(1.e0_dp+2.e0_dp/3.e0_dp* M_Pl**2 *&
+                dot_product(dVdphi(phi_init_trial), dVdphi(phi_init_trial)) &
+                / pot(phi_init_trial)**2.))
+
+        y(size(y)/2+1 : (size(y))) = &
+               -dVdphi(phi_init_trial)/3.e0_dp/h_init/h_init
+
+        dphi_init0 = y(size(y)/2+1 : (size(y)))
+        print*,"dphi_init=",dphi_init
+	  else
+
+        h_init = getH(phi_init_trial,dphi_init0)
+
+        !Set not necess close to SR
+        y(size(y)/2+1 : (size(y))) = dphi_init0
+	  end if
     end if
     !END MULTIFIELD
 
@@ -539,7 +552,7 @@ CONTAINS
        !or to homogeneously rescale all the fields. It is better to work on a case by case basis.
        !
 
-       IF (size(phi_init) .eq. 1) THEN
+       IF ((size(phi_init) .eq. 1) .and. .not. (potential_choice .eq. 18)) THEN
           IF(alpha_e.LT.(N_pivot+20.e0_dp)) THEN
              IF ((potential_choice.eq.6).and.(vparams(1,1)<-2.e0_dp)) THEN
                 phi_init_trial = phi_init*0.9e0_dp
