*** ../../Backends/installed/MultiModeCode/2.0.0/modpk.f90	2015-04-20 16:36:02.000000000 +0100
--- ../../Backends/include/gambit/Backends/backend_types/MultiModeCode_2_0_0/modpk.f90	2018-05-21 16:02:29.000000000 +0100
***************
*** 18,32 ****
  
  CONTAINS
  
!   SUBROUTINE potinit
      USE modpkparams
      USE modpk_observables
      USE background_evolution, ONLY : backgrnd
      USE potential, ONLY : initialphi
      use modpk_icsampling, only : ic_flags, ic_sampling
      IMPLICIT NONE
  
  
      !
      !     Solve the background equations
      !
--- 18,122 ----
  
  CONTAINS
  
!   SUBROUTINE potinit(observs)
      USE modpkparams
      USE modpk_observables
      USE background_evolution, ONLY : backgrnd
      USE potential, ONLY : initialphi
+     use modpk_numerics, only : locate, polint, array_polint
      use modpk_icsampling, only : ic_flags, ic_sampling
      IMPLICIT NONE
  
+ 	type(observables), intent(inout) :: observs
+ 
+     integer*4 :: ii
+     real(dp) :: dchidrho, derr,rho_init,slowroll_efolds
+     real(dp) :: xi,beta,lambda
+ 
+     chiHarray = 0e0_dp
+     rhoHarray = 0e0_dp
+     potHarray = 0e0_dp
+     dpotHarray = 0e0_dp
+     d2potHarray = 0e0_dp
+ 
+     if (potential_choice == 18) then !! build potential for SMASH inflation
+       xi = 10**vparams(1,1)
+       beta = 10**vparams(2,1)
+       lambda = 10**vparams(3,1)
+ 
+       print*,"phi_init0 =",phi_init0
+ 
+       do ii=1,builtpot
+         rhoHarray(ii) = 5e0_dp*phi_init0(1) - dble(ii)*(1e-3_dp)*phi_init0(1)
+         chiHarray(ii) = (sqrt(1e0_dp+6e0_dp*xi/beta)*&
+                         asinh(sqrt(1e0_dp+6e0_dp*xi/beta)*&
+                         sqrt(xi)*rhoHarray(ii)) - &
+                         sqrt(6e0_dp*xi/beta) * &
+                         asinh(sqrt(6e0_dp*xi/beta) * &
+                         sqrt(xi)*rhoHarray(ii)/ &
+                         sqrt(1e0_dp+(sqrt(xi)*rhoHarray(ii))**2))) /&
+                         sqrt(xi/beta)
+ 		potHarray(ii) = lambda/4e0_dp*rhoHarray(ii)**4 / &
+                         (1e0_dp+xi*rhoHarray(ii)**2)**2
+         dchidrho = sqrt(beta*(1e0_dp+xi*rhoHarray(ii)**2) +&
+                         6e0_dp*xi**2*rhoHarray(ii)**2) / &
+                         (1e0_dp+xi*rhoHarray(ii)**2)
+         dpotHarray(ii) = (lambda*rhoHarray(ii)**3/dchidrho)/(1e0_dp + &
+ 						  xi*rhoHarray(ii)**2)**2*(1e0_dp - &
+                           rhoHarray(ii)**2*xi/(1e0_dp+xi *&
+                           rhoHarray(ii)**2))
+ 
+         if (ii > 1) then
+           d2potHarray(ii-1) = (dpotHarray(ii)-dpotHarray(ii-1)) / &
+                               (chiHarray(ii)-chiHarray(ii-1))
+ 	    end if
+ 
+         if (ii > 2) then
+           d3potHarray(ii-2) = (d2potHarray(ii-1)-d2potHarray(ii-2)) / &
+ 							  (chiHarray(ii-1)-chiHarray(ii-2))
+ 		end if
+       end do
+ 
+       ii = locate(chiHarray,phi_init0(1))
+       call polint(chiHarray(ii:ii+4), rhoHarray(ii:ii+4), phi_init0(1), rho_init, derr)
+ 
+       !slowroll_efolds = (0.06250000000000001*beta)/xi - &
+       !                  (0.0625*Sqrt(beta**2 + &
+       !                  32.*beta*xi + &
+ 	  !					192.*xi**2))/xi + &
+       !                  0.125*beta*rho_init**2 + &
+ 	  !					0.75*xi*rho_init**2 + &
+       !                  0.75*Log(1. + (0.5000000000000001* &
+       !                  (-1.*beta + Sqrt(beta**2 + &
+ 	  !					32.*beta*xi + &
+       !                  192.*xi**2)))/ &
+       !                  (beta + 6.*xi)) - &
+       !                  0.75*Log(1. + xi*rho_init**2)
+       ! if (slowroll_efolds < 30. .or. slowroll_efolds > 120.) then
+ 	  !  observs%is_ic_ok = .false.
+ 	  !  print*, "SMASH: Initial conditions: SR efolds =", slowroll_efolds
+       !  RETURN
+       !else
+       observs%is_ic_ok = .true.
+ 	  !end if
+ 
+       print*, "we are still inside!"
+ 
+       call polint(chiHarray((size(d2potHarray)-4):size(d2potHarray)-1),&
+                   d2potHarray((size(d2potHarray)-4):size(d2potHarray)-1),&
+                   chiHarray(size(d2potHarray)),d2potHarray(size(d2potHarray)), derr)
+ 
+       d3potHarray(size(d2potHarray)-1) = (d2potHarray(size(d2potHarray)) - &
+                                           d2potHarray(size(d2potHarray)-1)) / &
+                                          (chiHarray(size(d2potHarray)) - &
+                                           chiHarray(size(d2potHarray)-1))
+ 
+       call polint(chiHarray((size(d3potHarray)-4):size(d3potHarray)-1),&
+                   d3potHarray((size(d3potHarray)-4):size(d3potHarray)-1),&
+ 				  chiHarray(size(d3potHarray)),d3potHarray(size(d3potHarray)), derr)
  
+ 
+     end if
      !
      !     Solve the background equations
      !
