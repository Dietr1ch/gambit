*** ../../Backends/installed/class/2.6.3/include/primordial.h	2018-09-10 17:06:10.000000000 +0100
--- ../../Backends/include/gambit/Backends/backend_types/class_types/gambit_update/primordial.h	2018-09-15 23:34:47.000000000 +0100
***************
*** 13,19 ****
    inflation_V,
    inflation_H,
    inflation_V_end,
!   external_Pk
  };
  
  /** enum defining whether the spectrum routine works with linear or logarithmic input/output */
--- 13,20 ----
    inflation_V,
    inflation_H,
    inflation_V_end,
!   external_Pk,
!   gambit_Pk // ADDED BY S.C.H. FOR GAMBIT 01-2018
  };
  
  /** enum defining whether the spectrum routine works with linear or logarithmic input/output */
***************
*** 28,34 ****
  enum potential_shape {
    polynomial,
    natural,
!   higgs_inflation
  };
  
  /** enum defining which quantity plays the role of a target for evolving inflationary equations */
--- 29,36 ----
  enum potential_shape {
    polynomial,
    natural,
!   higgs_inflation,
! 	smash_inflation
  };
  
  /** enum defining which quantity plays the role of a target for evolving inflationary equations */
***************
*** 84,89 ****
--- 86,96 ----
  
    //@{
  
+ //  double *k_gambit   // scalar perturbation power spectrum // ADDED BY S.C.H. FOR GAMBIT 01-2018
+ //  double *pks_gambit // scalar perturbation power spectrum // ADDED BY S.C.H. FOR GAMBIT 01-2018
+ //  double *pkt_gambit // tensor perturbation power spectrum // ADDED BY S.C.H. FOR GAMBIT 01-2018
+ //  int ksteps_gambit  // bin number of  the  power spectrum // ADDED BY S.C.H. FOR GAMBIT 01-2018
+ 
    double k_pivot; /**< pivot scale in \f$ Mpc^{-1} \f$ */
  
    enum primordial_spectrum_type primordial_spec_type; /**< type of primordial spectrum (simple analytic from, integration of inflationary perturbations, etc.) */
***************
*** 288,293 ****
--- 295,324 ----
  
    //@}
  
+ 	/** @name - added smash parameters */
+ 	
+ 	//@{
+ 	
+ 	int max_pot_smash; // need to set it properly
+ 	int last_index;
+ 	
+ 	double phi_init0; // need to set it properly
+ 	
+ 	double * rho_array;
+ 	double * chi_array;
+ 	double * d0V_array;
+ 	double * d1V_array;
+ 	double * d2V_array;
+ 	double * d3V_array;
+ 	
+ 	double * ddd0V_array;
+ 	double * ddd1V_array;
+ 	double * ddd2V_array;
+ 	double * ddd3V_array;
+ 
+ 	//@}
+ 
+ 
    /** @name - technical parameters */
  
    //@{
