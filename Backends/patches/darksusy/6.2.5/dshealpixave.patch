--- dshealpixave.ORIG	2020-12-17 15:11:13.000000000 +0100
+++ dshealpixave.f	2021-04-23 13:24:28.000000000 +0200
@@ -18,7 +18,7 @@
 *** date 2018-11-28                                                         ***
 *******************************************************************************
       subroutine dshealpixave(f,n,how,ave)
-      use pix_tools
+cc HP use pix_tools
       implicit none
       include 'dsmpconst.h'
       integer n, how
@@ -28,6 +28,17 @@
       integer plist(2000000),nlist(2000000),pmax,nmax
       save nlist, nmax
 
+cc HP Code added because of unsuccessful HealPIX installation
+      write(*,*) 'ERROR in dshealpix: You have built ds_core without HealPIX support,'
+      write(*,*) 'so this function is DISABLED. '
+      write(*,*) '(To enable HealPix support, re-install DarkSUSY and follow the  instructions'
+      write(*,*) ' after the message ''Now building CONTRIBUTED CODE: healpix'')'
+      write(*,*)
+      write(*,*) 'Program stopping...'
+      write(*,*)
+      stop
+cc HP ending here
+
       nside=2**n      
       ppmax=12*nside*nside
       sum=0.d0
@@ -57,7 +68,7 @@
         call pix2ang_nest(nside, plist(i), l, b)
         tmp=f(-l+l0,b-b0)
         if (tmp.ne.0.0d0) then
-          call dsaddhpxpt(nside,plist(i),nmax,nlist)      
+cc HP           call dsaddhpxpt(nside,plist(i),nmax,nlist)      
           sum=sum+tmp
         endif
       enddo
@@ -65,7 +76,7 @@
       goto 20 ! skip the "always how=0" implementation
 c 10    continue
       sum=0.d0
-      call pix2ang_nest(nside, 0, l0, b0)  ! to rotate the HP system to (0,0)
+cc HP       call pix2ang_nest(nside, 0, l0, b0)  ! to rotate the HP system to (0,0)
       do i=1,ppmax
          call pix2ang_nest(nside, i-1, l, b)
          sum=sum+f(-l+l0,b-b0)
@@ -79,7 +90,7 @@
 *** Auxiliary routine needed by dshealpixave, adding points to nlist        ***
 *******************************************************************************
       subroutine dsaddhpxpt(nside,ipix,nmax,nlist)
-      use pix_tools
+cc HP        use pix_tools
       implicit none
         integer nside,ipix,nmax,nlist(10000)
         integer i,j,nneigh,lneigh(9),cand(36)
@@ -87,7 +98,7 @@
         
 c... create a list with 4*(nneigh+1) candidate pixels to be added 
 c... to the list of relevant pixels at next level
-        call neighbours_nest(nside, ipix, lneigh, nneigh)        
+cc HP         call neighbours_nest(nside, ipix, lneigh, nneigh)        
         lneigh(nneigh+1) = ipix ! add central point to list
         do i=0,nneigh
           do j=0,3
