diff -rupN darksusy-5.1.3/configure darksusy-5.1.3.patched/configure
--- darksusy-5.1.3/configure	2015-04-07 10:23:05.000000000 +0100
+++ darksusy-5.1.3.patched/configure	2017-02-11 20:01:26.155863534 +0000
@@ -3337,11 +3337,11 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu
 if test "${FCSET}" = "false" ; then
   if test "${FC}" = "ifort"; then
     echo "Fortran compiler is $FC"
-    FCFLAGS=${FCFLAGS+-O -extend_source}
+    FCFLAGS=${FCFLAGS+-O -extend_source -openmp -fPIC}
   fi
   if test "${FC}" = "gfortran"; then
     echo "Fortran compiler is $FC"
-    FCFLAGS=${FCFLAGS+-O -ffixed-line-length-none}
+    FCFLAGS=${FCFLAGS+-O -ffixed-line-length-none -fopenmp -fPIC}
   fi
 fi
 
diff -rupN darksusy-5.1.3/configure.ac darksusy-5.1.3.patched/configure.ac
--- darksusy-5.1.3/configure.ac	2015-04-07 10:23:05.000000000 +0100
+++ darksusy-5.1.3.patched/configure.ac	2017-02-11 20:01:26.155863534 +0000
@@ -28,11 +28,11 @@ AC_PROG_FC([ifort gfortran])
 if test "${FCSET}" = "false" ; then
   if test "${FC}" = "ifort"; then 
     echo "Fortran compiler is $FC"
-    FCFLAGS=${FCFLAGS+-O -extend_source}
+    FCFLAGS=${FCFLAGS+-O -extend_source -openmp -fPIC}
   fi 
   if test "${FC}" = "gfortran"; then
     echo "Fortran compiler is $FC"
-    FCFLAGS=${FCFLAGS+-O -ffixed-line-length-none}
+    FCFLAGS=${FCFLAGS+-O -ffixed-line-length-none -fopenmp -fPIC}
   fi
 fi
 
diff -rupN darksusy-5.1.3/contrib/FeynHiggs-2.9.4/makefile.in darksusy-5.1.3.patched/contrib/FeynHiggs-2.9.4/makefile.in
--- darksusy-5.1.3/contrib/FeynHiggs-2.9.4/makefile.in	2013-02-10 06:43:34.000000000 +0000
+++ darksusy-5.1.3.patched/contrib/FeynHiggs-2.9.4/makefile.in	2017-02-11 20:01:26.155863534 +0000
@@ -31,6 +31,9 @@ ARGS = $(PARALLEL) \
 default all lib frontend mma: force
 	cd $(BLD) && $(MAKE) $(ARGS) $@
 
+lib_shared: lib
+	$(FC) $(FFLAGS) -shared -o $(DS_LIB)/libFH.so build/*.o
+
 install: default
 	-mkdir "$(PREFIX)"
 	-mkdir "$(LIBDIR)" "$(INCLUDEDIR)" "$(BINDIR)"
diff -rupN darksusy-5.1.3/contrib/FeynHiggs-2.9.4/src/Decays/VecSet.F darksusy-5.1.3.patched/contrib/FeynHiggs-2.9.4/src/Decays/VecSet.F
--- darksusy-5.1.3/contrib/FeynHiggs-2.9.4/src/Decays/VecSet.F	2013-02-10 06:43:34.000000000 +0000
+++ darksusy-5.1.3.patched/contrib/FeynHiggs-2.9.4/src/Decays/VecSet.F	2017-02-11 20:01:26.155863534 +0000
@@ -27,7 +27,7 @@
 #define EpsL(x,y)  vec_(x,y, 3, i)
 #define EpsTL(x,y) vec_(x,y, 4, i)
 
-	ComplexType spi_(2, 6:7, nvec, 1)
+	ComplexType spi_(2, 6:7, nvec, LEGS)
 	equivalence (vec, spi_)
 
 #define Spi(hel,om,x) spi_(x, om, hel+6, i)
diff -rupN darksusy-5.1.3/contrib/HiggsBounds-3.8.1/HiggsBounds/makefile_darksusy.in darksusy-5.1.3.patched/contrib/HiggsBounds-3.8.1/HiggsBounds/makefile_darksusy.in
--- darksusy-5.1.3/contrib/HiggsBounds-3.8.1/HiggsBounds/makefile_darksusy.in	2015-04-07 10:23:05.000000000 +0100
+++ darksusy-5.1.3.patched/contrib/HiggsBounds-3.8.1/HiggsBounds/makefile_darksusy.in	2017-02-11 20:01:26.155863534 +0000
@@ -106,10 +106,10 @@ OBJSsubroutines =  $(OBJSbasic) \
 default: HiggsBounds
 
 %.o: %.f
-	$(F77C) -c $< -o $@
+	$(F77C) $(F90FLAGS) -c $< -o $@
 
 %.o: %.F
-	$(F77C) -c $< -o $@
+	$(F77C) $(F90FLAGS) -c $< -o $@
 
 %.o %.mod: %.f90
 	$(F90C) $(F90FLAGS) $(ADDITIONALDEFINE) -c $< 
@@ -138,6 +138,17 @@ libHB:  $(MODS) $(OBJSsubroutines)
 
 libHB.a: libHB
 
+libHB_shared:  $(MODS) $(OBJSsubroutines)
+	$(F90C) $(F90FLAGS) -shared -o $(DS_LIB)/libHB.so $(OBJSsubroutines)
+	rm -f Expt_tables/S95_t1.binary 
+	rm -f Expt_tables/S95_t2.binary 
+	rm -f Theory_tables/BRSM.binary 	
+	touch Expt_tables/S95_t1.binary 
+	touch Expt_tables/S95_t2.binary 
+	touch Theory_tables/BRSM.binary 
+
+libHB.so: libHB_shared
+
 HBwithFH:  libHB.a
 	$(F77C) $(FHINCLUDE) example_programs/HBwithFH.F -o example_programs/HBwithFH $(FHLIBS) $(HBLIBS)
 	$(F90C) $(FHINCLUDE) example_programs/HBSLHAinputblocksfromFH_extras.F example_programs/HBSLHAinputblocksfromFH.F90 -o example_programs/HBSLHAinputblocksfromFH $(FHLIBS) $(HBLIBS)
@@ -157,10 +168,9 @@ clean:
 	rm -f *.o *.mod *.MOD *.a
 	rm -f store_pathname.f90
 
-hyperclean:
-	rm -f *.o *.mod *.MOD *.a *~ 
+hyperclean: clean
+	rm -f *~ 
 	rm -f example_programs/*~ 
-	rm -f store_pathname.f90
 	rm -f example_programs/HBwithFH
 	rm -f example_programs/HBwithCPsuperH
 	rm -f example_programs/example-SM_vs_4thGen
diff -rupN darksusy-5.1.3/contrib/isajet781-for-darksusy/aldata.f darksusy-5.1.3.patched/contrib/isajet781-for-darksusy/aldata.f
--- darksusy-5.1.3/contrib/isajet781-for-darksusy/aldata.f	2011-11-03 14:34:52.000000000 +0000
+++ darksusy-5.1.3.patched/contrib/isajet781-for-darksusy/aldata.f	2017-02-11 20:01:26.159863534 +0000
@@ -155,8 +155,8 @@ C          LUXSET=.TRUE. after RLUXGO ha
      $GOWW(25,2),ALLWW(2),GOWMOD(25,MXGOJ)
       SAVE /Q1Q2/
       LOGICAL GOQ,GOALL,GODY,STDDY,GOWW,ALLWW,GOWMOD
-      COMMON/SEED/XSEED
-      SAVE /SEED/
+      COMMON/SEEDg/XSEED
+      SAVE /SEEDg/
       CHARACTER*24 XSEED
 C          SUSY parameters
 C          AMGLSS               = gluino mass
diff -rupN darksusy-5.1.3/contrib/isajet781-for-darksusy/func.f darksusy-5.1.3.patched/contrib/isajet781-for-darksusy/func.f
--- darksusy-5.1.3/contrib/isajet781-for-darksusy/func.f	2011-11-03 14:34:52.000000000 +0000
+++ darksusy-5.1.3.patched/contrib/isajet781-for-darksusy/func.f	1970-01-01 01:00:00.000000000 +0100
@@ -1,189 +0,0 @@
-
-******************************************************************
-******************************************************************
-******************************************************************
-      FUNCTION FUNC(X)
-
-
-      IMPLICIT NONE
-      
-      CHARACTER*6 PINF,PN1,PN2
-      REAL*8 A
-      COMMON/VARS/A(1800)
- 
-      COMMON /CTRL/
-     &AS_MAX,XFINI,XF,COS_MIN,COS_MAX,CS_MIN,SUPPEXP, SUPPEXPMAX,
-     &NDIMUSER,NDIMUSER_EFF,ISUM,NST_MAX,
-     &NPROC_MIN,NPROC_MAX,NPROC_STEP
-
-      REAL*8 AS_MAX,XFINI,XF,COS_MIN,COS_MAX,CS_MIN,SUPPEXP, SUPPEXPMAX
-      INTEGER NDIMUSER,NDIMUSER_EFF,ISUM,NST_MAX,
-     &NPROC_MIN,NPROC_MAX,NPROC_STEP
-      
-      REAL*8 X(25)
-      REAL*8 P(0:3,4)
-
-      REAL*8 RR,SN,PI,GEVTOPBN,FUNC,ds_da_dc,AS_MIN,PM,E,XMASS,Z,
-     &COS1, PM1,PM2,PM3,PM4,SIN1,SFACT,CFACT,TFACT,B1,B2,FA,AS,DJACOB,
-     &ECM,XFA,FA12,E1,E2,R1,R2,E3,R3,E4,R4,F_PS,FA12_integr,FUNC_TMP,
-     &SQME
-     
-      INTEGER I
-      
-      RR(E,XMASS)  = SQRT(MAX(0d0,(E-XMASS)*(E+XMASS)))
-      SN(Z)        = SQRT(MAX(0d0,(1-z)*(1+z)))
-      
-      
-      PI=DACOS(-1d0)
-      GEVTOPBN= 0.3893796623*1.E+09      
-      
-      FUNC=0.
-      ds_da_dc=0.
-      
-
- 
-      AS_MIN=2d0
-      PM=abs(A(93))
-C------------------------------------------ 
-      COS1=1d0-2d0*X(1)
-
-
-      IF(COS1.gt.COS_MAX) goto 999
-      IF(COS1.lt.cos_min) goto 999
-      SIN1=SN(COS1)
-
-
-C------------------------------------------      
-	
-      DO I =NPROC_MIN,NPROC_MAX,NPROC_STEP
-        
-        CALL PMAS(I,1,PM1)
-        CALL PMAS(I,2,PM2)
-	IF(ABS(PM1/PM).gt.SUPPEXPMAX.or.ABS(PM2/PM).gt.SUPPEXPMAX) 
-     >  goto 900
-        CALL PMAS(I,3,PM3)
-        CALL PMAS(I,4,PM4)
-	
-	PN1=PINF(I,1)
-        PN2=PINF(I,2)
-	SFACT=1.
-	CFACT=1.
-
-	IF(PN1.ne.PN2) SFACT=2.
-
-	IF(PN1.ne.'~o1'.and.PN1.ne.'~o2'.and.PN1.ne.'~g')  CFACT=2.
-	IF(PN2.ne.'~o1'.and.PN2.ne.'~o2'.and.PN2.ne.'~g')  CFACT=2.
-	
-	IF(PN1.eq.'~1+'.and.PN2.eq.'~1-')  CFACT=1.
-	
-	IF(PN1.eq.'~e1'.and.PN2.eq.'~E1')  CFACT=1.
-	IF(PN1.eq.'~e2'.and.PN2.eq.'~E2')  CFACT=1.
-	IF(PN1.eq.'~e3'.and.PN2.eq.'~E3')  CFACT=1.
-	IF(PN1.eq.'~n1'.and.PN2.eq.'~N1')  CFACT=1.
-	IF(PN1.eq.'~n2'.and.PN2.eq.'~N2')  CFACT=1.
-	IF(PN1.eq.'~n3'.and.PN2.eq.'~N3')  CFACT=1.
-	IF(PN1.eq.'~u1'.and.PN2.eq.'~U1')  CFACT=1.
-	IF(PN1.eq.'~d1'.and.PN2.eq.'~D1')  CFACT=1.
-	IF(PN1.eq.'~c1'.and.PN2.eq.'~C1')  CFACT=1.
-	IF(PN1.eq.'~s1'.and.PN2.eq.'~S1')  CFACT=1.
-	IF(PN1.eq.'~t1'.and.PN2.eq.'~T1')  CFACT=1.
-	IF(PN1.eq.'~b1'.and.PN2.eq.'~B1')  CFACT=1.
-	
-	TFACT=SFACT*CFACT
-	
-     
-      
-	
-	pm1=abs(pm1)
-	pm2=abs(pm2)
-	pm3=abs(pm3)
-	pm4=abs(pm4)
-	
-      
-	
-	B1=pm1/pm
-	B2=pm2/pm
-        
-	
-     
-        IF(NDIMUSER.eq.1) then
-          FA=1.
-          AS=AS_MAX
-          DJACOB=2.
-        ELSEIF(NDIMUSER.ge.2) then
-	
-          AS=AS_MIN+(AS_MAX-AS_MIN)*X(2)
-          DJACOB=(AS_MAX-AS_MIN)*2.
-	  IF(AS.le.b1+b2) goto 900
-	  
-	  IF(NDIMUSER.eq.2) THEN
-	      FA=FA12(AS,I,XF)
-	      
-	    
-	  ELSEIF(NDIMUSER.eq.3.and.NDIMUSER_EFF.eq.2) THEN
-	
-   	      FA=FA12_integr(AS,b1,b2,XF)*
-     &        ((AS**2-b1**2-b2**2)**2-4.*b1**2*b2**2)
-     &        /sqrt(AS)/(2.*sqrt(2.*pi)*b1**(3./2.)*b2**(3./2.))
-
-         
-          ELSEIF(NDIMUSER.eq.3.and.NDIMUSER_EFF.eq.3) THEN
-	      XFA=X(3)
-	      FA=FA12(AS,I,XFA)
-	      
-          ENDIF
-      
-        ENDIF
-	
-         
-        ECM=AS*PM
-        IF(ECM.GT.max(PM1+PM2,PM3+PM4)) then
-	
-	
-          E1=(ECM+(PM1-PM2)*(PM1+PM2)/ECM)/2D0
-          E2=(ECM+(PM2-PM1)*(PM1+PM2)/ECM)/2D0
-          R1=RR(E1,PM1)
-          R2=R1
- 	
-          P(0,1)=E1
-          P(1,1)=0.
-          P(2,1)=0.
-          P(3,1)=-R1
-          P(0,2)=E2
-          P(1,2)=0.
-          P(2,2)=0.
-          P(3,2)=R1
-	
-          E3=(ECM+(PM3-PM4)*(PM3+PM4)/ECM)/2D0
-          R3=RR(E3,PM3)
-          E4=(ECM+(PM4-PM3)*(PM3+PM4)/ECM)/2D0
-          R4=R3
-
-          P(0,3)=E3
-          P(1,3)=R3*SIN1
-          P(2,3)=0.
-          P(3,3)=R3*COS1
-         
-	  P(0,4)=E4
-          P(1,4)=-P(1,3)
-          P(2,4)=0.
-          P(3,4)=-P(3,3)
-           
-       	 
-	  F_PS=R3/R1/(32d0*Pi*ECM**2)
-	  FUNC_TMP =TFACT*SQME(I,P)*F_PS*FA*DJACOB*GEVTOPBN
-          ds_da_dc=FUNC_TMP+ds_da_dc
-	  IF(I.eq.26.and.NDIMUSER.eq.3.and.NDIMUSER_EFF.eq.2) goto 999
-	  
-	  
-        ENDIF
-  900   CONTINUE     
-
-      ENDDO
-  999 FUNC=ds_da_dc
-       
-
-      IF(FUNC.le.1D-16) FUNC=1D-16
- 
-      return
-      end
diff -rupN darksusy-5.1.3/contrib/isajet781-for-darksusy/func_int.f darksusy-5.1.3.patched/contrib/isajet781-for-darksusy/func_int.f
--- darksusy-5.1.3/contrib/isajet781-for-darksusy/func_int.f	2011-11-03 14:34:52.000000000 +0000
+++ darksusy-5.1.3.patched/contrib/isajet781-for-darksusy/func_int.f	1970-01-01 01:00:00.000000000 +0100
@@ -1,69 +0,0 @@
-
-
-C-------------------------------------------------------
-C#######################################################
-C-------------------------------------------------------
-
-      FUNCTION FUNC_INT(IPRINT)
-      IMPLICIT NONE
-C------- BASES COMMON BLOCKS ---------------------
-      
-      EXTERNAL FUNC
-      REAL*8  FUNC_INT,FUNC
-      
-      INTEGER NDIM,IG,MXDIM,NWILD,NCALL
-      REAL*8 XL,XU
-      PARAMETER (MXDIM = 50 )                                           
-      COMMON /BPARM1/ XL(MXDIM),XU(MXDIM),NDIM,NWILD,IG(MXDIM),NCALL    
-c      DATA NWILD/2/,NCALL/1000/      
-      INTEGER INTV, IPNT, NLOOP, MLOOP,ITMX1,ITMX2
-      REAL*8 ACC1,ACC2
-      COMMON /BPARM2/ ACC1,ACC2,ITMX1,ITMX2                             
-c      DATA  ITMX1/5/,ITMX2/5/,ACC1/0.1d0/,ACC2/0.1d0/
-      COMMON /BSCNTL/ INTV, IPNT, NLOOP, MLOOP      
-c---------------------------------------------------
-      REAL*8 ESTIM, SIGMA, CTIME
-
-     
-      COMMON /CTRL/
-     &AS_MAX,XFINI,XF,COS_MIN,COS_MAX,CS_MIN,SUPPEXP, SUPPEXPMAX,
-     &NDIMUSER,NDIMUSER_EFF,ISUM,NST_MAX,
-     &NPROC_MIN,NPROC_MAX,NPROC_STEP
-
-      REAL*8 AS_MAX,XFINI,XF,COS_MIN,COS_MAX,CS_MIN,SUPPEXP, SUPPEXPMAX
-      INTEGER NDIMUSER,NDIMUSER_EFF,ISUM,NST_MAX,
-     &NPROC_MIN,NPROC_MAX,NPROC_STEP
-     
-      INTEGER I,IPRINT,IT1,IT2
-      
-      CALL BSINIT 
-      
-      ITMX1=5
-      ITMX2=5
-      NDIM =NDIMUSER_EFF
-      NWILD=NDIM
-      ACC1=1.
-      ACC2=1.
-      
-      DO 1 I=1,NDIMUSER_EFF
-        XL(I)=0d0
-        XU(I)=1d0
-    1 CONTINUE
-      XL(3)=0.000001
-      XU(3)=XF
-   
-c-------------------------------------------------
-
-      INTV=IPRINT
-      
-c       print *,'NCALLS=', NCALL,IPRINT,INTV,NPROC_MIN,NPROC_MAX
-      
-c      CALL BSINIT                                                  
-      CALL BASES( FUNC, ESTIM, SIGMA, CTIME, IT1, IT2 )             
-      
-      FUNC_INT=ESTIM
-      
-     
-      
-      RETURN
-      END
diff -rupN darksusy-5.1.3/contrib/isajet781-for-darksusy/gettot.f darksusy-5.1.3.patched/contrib/isajet781-for-darksusy/gettot.f
--- darksusy-5.1.3/contrib/isajet781-for-darksusy/gettot.f	2011-11-03 14:34:52.000000000 +0000
+++ darksusy-5.1.3.patched/contrib/isajet781-for-darksusy/gettot.f	2017-02-11 20:01:26.159863534 +0000
@@ -77,8 +77,8 @@ C          Jet limits
       COMMON/IDRUN/IDVER,IDG(2),IEVT,IEVGEN
       SAVE /IDRUN/
       INTEGER   IDVER,IDG,IEVT,IEVGEN
-      COMMON/SEED/XSEED
-      SAVE /SEED/
+      COMMON/SEEDg/XSEED
+      SAVE /SEEDg/
       CHARACTER*24 XSEED
       COMMON/PRIMAR/NJET,SCM,HALFE,ECM,IDIN(2),NEVENT,NTRIES,NSIGMA,
      $WRTLHE
diff -rupN darksusy-5.1.3/contrib/isajet781-for-darksusy/isared.f darksusy-5.1.3.patched/contrib/isajet781-for-darksusy/isared.f
--- darksusy-5.1.3/contrib/isajet781-for-darksusy/isared.f	2011-11-03 14:34:52.000000000 +0000
+++ darksusy-5.1.3.patched/contrib/isajet781-for-darksusy/isared.f	1970-01-01 01:00:00.000000000 +0100
@@ -1,391 +0,0 @@
-CDECK  ID>, ISARED.
-cccccccccccccccccccccccccccccccccccccccccccccc
-c      AUTHORS: Baer,Balazs,Belyaev
-c
-c      Last modification -> 10/27/2005 A.Belyaev
-c      Last modification -> 10/04/2007 A.Belyaev
-c      Last modification -> 12/06/2007 A.Belyaev -> sigma*v (v->0) added
-c
-cccccccccccccccccccccccccccccccccccccccccccccc
-     
-      SUBROUTINE ISARED(IPRT)
-c      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
-      IMPLICIT NONE
-      
-	
-c----------USER--------------------------------      
-      COMMON /CTRL/
-     &AS_MAX,XFINI,XF,COS_MIN,COS_MAX,CS_MIN,SUPPEXP, SUPPEXPMAX,
-     &NDIMUSER,NDIMUSER_EFF,ISUM,NST_MAX,
-     &NPROC_MIN,NPROC_MAX,NPROC_STEP
-
-      REAL*8 AS_MAX,XFINI,XF,COS_MIN,COS_MAX,CS_MIN,SUPPEXP, SUPPEXPMAX
-      INTEGER NDIMUSER,NDIMUSER_EFF,ISUM,NST_MAX,
-     &NPROC_MIN,NPROC_MAX,NPROC_STEP
-     
-
-      INTEGER IPRINT
-      
-      DATA   AS_MAX / 3D0 /, XFINI/0.05D0/, NDIMUSER/3/, NST_MAX/10/,
-     &      NPROC_MIN/1/,   NPROC_MAX/1820/, NPROC_STEP/1/, IPRINT/1/,
-     &      COS_MIN / -0.999999d0 / , COS_MAX / 0.999999d0 /,
-     &      CS_MIN  /0d0/, ISUM/1/, SUPPEXPMAX/2d0/
-     
-
-      common/printlevel/NPRINT
-      INTEGER NPRINT
-c-----------------------------------------------      
-      COMMON   /GOOD/    NNOGOOD,IALLOW 
-      INTEGER  NNOGOOD,IALLOW                                                                                                       
-c------BASES------------------------------------\
-     
-      INTEGER NDIM,IG,MXDIM,NWILD,NCALL
-      REAL*8 XL,XU
-   
-      PARAMETER (MXDIM = 50 )                                           
-      COMMON /BPARM1/ XL(MXDIM),XU(MXDIM),NDIM,NWILD,IG(MXDIM),NCALL    
-      DATA NWILD/2/,NCALL/1000/      
-      
-      INTEGER INTV, IPNT, NLOOP, MLOOP,ITMX1,ITMX2
-      REAL*8 ACC1,ACC2
-      COMMON /BPARM2/ ACC1,ACC2,ITMX1,ITMX2                             
-      DATA  ITMX1/5/,ITMX2/5/,ACC1/1d0/,ACC2/1d0/
-      COMMON /BSCNTL/ INTV, IPNT, NLOOP, MLOOP                          
-c-----------------------------------------------
-      REAL*8 xb,g,pm
-      CHARACTER*6 names
-      INTEGER J,idof,IPTOT
-      COMMON /INPART/ xb(29),g(29),pm(29),idof(29),IPTOT
-      COMMON /NAMES/ names(29)
-
-      DATA IPTOT/29/
-      DATA  (IDOF(J),J=1,29)
-     _/  2,     2 ,     16,
-     _   2 ,	1 ,     1,      1,      3,     3, 
-     _  	1 ,     1 ,     1,      3,     3,    3,    3,
-     _   2 ,    1 ,     1,      1,      3,     3,
-     _  	1 ,     1 ,     1,      3,     3,    3,    3/
-
-     
-      DATA  (NAMES(J),J=1,29)
-     _/'~o1',  '~o2' ,'~g',
-     _  '~1-' ,'~e1' , '~e2' , '~e3' ,'~t1','~b1', 
-     _         '~n1' , '~n2' , '~n3' ,'~u1','~d1','~c1','~s1',
-     _  '~1+' ,'~E1' , '~E2' , '~E3' ,'~T1','~B1', 
-     _         '~N1' , '~N2' , '~N3' ,'~U1','~D1','~C1','~S1'/
-c-----------------------------------------------
-      REAL*4 OMGH2,SIGMA,XFREEZ,FFF_V
-      INTEGER NSTEPS
-      COMMON/SUGRED/ OMGH2,SIGMA,XFREEZ,NSTEPS,FFF_V
-c-----ISAJET-----------------------------------   
-      COMMON/SSLUN/LOUT,LHEOUT
-      INTEGER LOUT,LHEOUT
-      SAVE /SSLUN/
-C     XSUGIN contains the inputs to SUGRA:
-C     XSUGIN(1) = M_0        XSUGIN(2) = M_(1/2)  XSUGIN(3) = A_0
-C     XSUGIN(4) = tan(beta)  XSUGIN(5) = sgn(mu)  XSUGIN(6) = M_t
-C     XSUGIN(7) = SUG BC scale
-C     XGMIN(1) = LAM         XGMIN(2)  = M_MES    XGMIN(3)  = XN5
-C     XGMIN(4) = tan(beta)   XGMIN(5)  = sgn(mu)  XGMIN(6) = M_t
-C     XGMIN(7) = CGRAV       XGMIN(8)  =RSL       XGMIN(9)  = DEL_HD
-C     XGMIN(10)  = DEL_HU    XGMIN(11) = DY       XGMIN(12) = N5_1
-C     XGMIN(13)  = N5_2      XGMIN(14) = N5_3
-C     XNRIN(1) = M_N3        XNRIN(2) = M_MAJ     XNRIN(3) = ANSS 
-C     XNRIN(4) = M_N3SS
-C     XISAIN contains the MSSMi inputs in natural order.
-      COMMON /SUGXIN/ XISAIN(24),XSUGIN(7),XGMIN(14),XNRIN(4),
-     $XAMIN(11)
-      REAL XISAIN,XSUGIN,XGMIN,XNRIN,XAMIN
-      SAVE /SUGXIN/
-C          Frozen couplings from RG equations:
-C     GSS( 1) = g_1        GSS( 2) = g_2        GSS( 3) = g_3
-C     GSS( 4) = y_tau      GSS( 5) = y_b        GSS( 6) = y_t
-C     GSS( 7) = M_1        GSS( 8) = M_2        GSS( 9) = M_3
-C     GSS(10) = A_tau      GSS(11) = A_b        GSS(12) = A_t
-C     GSS(13) = M_hd^2     GSS(14) = M_hu^2     GSS(15) = M_er^2
-C     GSS(16) = M_el^2     GSS(17) = M_dnr^2    GSS(18) = M_upr^2
-C     GSS(19) = M_upl^2    GSS(20) = M_taur^2   GSS(21) = M_taul^2
-C     GSS(22) = M_btr^2    GSS(23) = M_tpr^2    GSS(24) = M_tpl^2
-C     GSS(25) = mu         GSS(26) = B          GSS(27) = Y_N
-C     GSS(28) = M_nr       GSS(29) = A_n        GSS(30) = vdq
-C     GSS(31) = vuq
-C          Masses:
-C     MSS( 1) = glss     MSS( 2) = upl      MSS( 3) = upr
-C     MSS( 4) = dnl      MSS( 5) = dnr      MSS( 6) = stl
-C     MSS( 7) = str      MSS( 8) = chl      MSS( 9) = chr
-C     MSS(10) = b1       MSS(11) = b2       MSS(12) = t1
-C     MSS(13) = t2       MSS(14) = nuel     MSS(15) = numl
-C     MSS(16) = nutl     MSS(17) = el-      MSS(18) = er-
-C     MSS(19) = mul-     MSS(20) = mur-     MSS(21) = tau1
-C     MSS(22) = tau2     MSS(23) = z1ss     MSS(24) = z2ss
-C     MSS(25) = z3ss     MSS(26) = z4ss     MSS(27) = w1ss
-C     MSS(28) = w2ss     MSS(29) = hl0      MSS(30) = hh0
-C     MSS(31) = ha0      MSS(32) = h+
-C          Unification:
-C     MGUTSS  = M_GUT    GGUTSS  = g_GUT    AGUTSS  = alpha_GUT
-      COMMON /SUGMG/ MSS(32),GSS(31),MGUTSS,GGUTSS,AGUTSS,FTGUT,
-     $FBGUT,FTAGUT,FNGUT
-      REAL MSS,GSS,MGUTSS,GGUTSS,AGUTSS,FTGUT,FBGUT,FTAGUT,FNGUT
-      SAVE /SUGMG/
-      COMMON /SUGPAS/ XTANB,MSUSY,AMT,MGUT,MU,G2,GP,V,VP,XW,
-     $A1MZ,A2MZ,ASMZ,FTAMZ,FBMZ,B,SIN2B,FTMT,G3MT,VEV,HIGFRZ,
-     $FNMZ,AMNRMJ,NOGOOD,IAL3UN,ITACHY,MHPNEG,MHLNEG,MHCNEG,
-     $IGUTST,ASM3,
-     $VUMT,VDMT,ASMTP,ASMSS,M3Q,MHDSQ,MHUSQ,MHDSMG,MHUSMG,MUMG,BMG,
-     $FT2Z1,FB2Z1,FL2Z1
-      REAL XTANB,MSUSY,AMT,MGUT,MU,G2,GP,V,VP,XW,
-     $A1MZ,A2MZ,ASMZ,FTAMZ,FBMZ,B,SIN2B,FTMT,G3MT,VEV,HIGFRZ,
-     $FNMZ,AMNRMJ,ASM3,VUMT,VDMT,ASMTP,ASMSS,M3Q,MHDSQ,MHUSQ,
-     $MHDSMG,MHUSMG,MUMG,BMG,FT2Z1,FB2Z1,FL2Z1
-      INTEGER NOGOOD,IAL3UN,ITACHY,MHPNEG,MHLNEG,MHCNEG,IGUTST
-      SAVE /SUGPAS/
-c----------COMPHEP------------------------------      
-      COMMON/VARS/A(1800)
-      REAL*8 A
-c-----------------------------------------------      
-c-----------------------------------------------      
-      CHARACTER*6 PINF
-      REAL*8 PBNTOGEV,PI,SQRT_GN,FFF,XFI,XF_OLD,SUMM,GEFF,
-     &FUNC_INT,FFF_TMP,OMEGA,FFF_OLD
-      
-      INTEGER IPRT,NPROC_MAX_S,NPROC_MIN_S,IPM,IDEL,
-     &NDIMUSER_SAVE,NST,NDIMUSER_EFF_SAVE, NCALL_SAV,I
-    
-      
-c-----------------------------------------------      
-      REAL*8 del(29)
-    
-      REAL*8 vvv,AS_MAX_SAVE,conv1,conv2,CS_V
-      
-      
-      IPRINT=IPRT
-      NPRINT=IPRINT
-      
-      XF=XFINI
-      FFF=0d0
-	
-      SQRT_GN=dsqrt(67.07d0)/1d+20
-      PBNTOGEV=1d0/0.3893796623/1d+09	
-       
-      Pi=DACOS(-1d0)
-      
-      FFF=0
-      NNOGOOD=0
-      
-      call vini
-***************************
-
-      call isachp
-
-*****************************
-! Z1,Z2,W1, e1, e2, e3, n1,n2,n3,u1,d1,c1,s1,t1,b1,gss
-****************************
-	PM(1)=abs(A(93))   	!neutr1
-        PM(2)=abs(A(95))   	!neutr2
-        PM(3)=abs(A(131))  	!gluino
-	
-        PM(4)=abs(A(89))   	!charg
-        PM(5)=abs(A(132))  	!sel
-        PM(6)=abs(A(134))  	!smu
-        PM(7)=abs(A(106))  	!sta
-        PM(8)=abs(A(122))   	!stop
-        PM(9)=abs(A(126))  	!sbot
-	
-   	
-        PM(10)=abs(A(136))  	!snu_e
-        PM(11)=abs(A(137))  	!snu_l
-        PM(12)=abs(A(112))  	!snu_tau
-        PM(13)=abs(A(138))  	!sup1
-        PM(14)=abs(A(140))  	!sd_1
-        PM(15)=abs(A(142))  	!sc1
-        PM(16)=abs(A(144))  	!ss_1
-	
-        PM(17)=	PM(4)		!charg
-        PM(18)=	PM(5)  		!sel
-        PM(19)=	PM(6)  		!smu
-        PM(20)=	PM(7)  		!sta
-        PM(21)=	PM(8)		!stop
-        PM(22)=	PM(9)  		!sbot
-	
- 
-        PM(23)=	PM(10)  	!snu_e
-        PM(24)=	PM(11)  	!snu_l
-        PM(25)=	PM(12)  	!snu_tau
-        PM(26)=	PM(13)  	!sup1
-        PM(27)=	PM(14)  	!sd_1
-        PM(28)=	PM(15)  	!sc1
-        PM(29)=	PM(17)  	!ss_1
-***********************************************      
-
- 
-      SUPPEXP=1E+20
- 
-      DO IPM=2,IPTOT
-        if(min(pm(IPM),PM(1)).ne.pm(1).and.iallow.eq.0) then
-          iallow=-11 !NEUTR IS NOT THE LIGHTEST
-          if(iprt.gt.2) print *,'Z1 IS NOT LSP',IPM,PM(IPM),PM(1)
-          NNOGOOD=5
-          goto 555
-          ENDIF 
-          SUPPEXP=min(SUPPEXP,pm(IPM)/pm(1))
-      ENDDO
-
-      geff=0d0
-      DO IDEL=1,IPTOT
-        del(idel)=(pm(idel)-pm(1))/pm(1)
-        geff=geff+ 2. * (1.+del(IDEL))**(3./2.) * Exp(-del(idel)/XF)
-        if(iprint.gt.2) 
-     &print *,  (1.+del(IDEL))**(3./2.) * Exp(-del(idel)/XF), del(idel)
-      ENDDO
-      IF(IPRINT.gt.1) print *,'GEFF=', GEFF,'   ','SUPPEXP=',SUPPEXP
-      NDIMUSER_EFF=NDIMUSER
-      IF(SUPPEXP.ge.SUPPEXPMAX.and.NDIMUSER.eq.3)  NDIMUSER_EFF=2 
-      if(iprint.gt.2) 
-     & print *, 'NDIMUSER_EFF=', NDIMUSER_EFF,SUPPEXP
-     
-
-cccccccccccccccccc    
-c      goto 111
-
-      NST=0
-      NDIMUSER_SAVE=NDIMUSER
-      NDIMUSER_EFF_SAVE=NDIMUSER_EFF
-c       print *,'ISARED:', NPROC_MIN,NPROC_MAX
-
-      IF(NDIMUSER.ge.2) NDIMUSER=2
-      NDIMUSER_EFF=NDIMUSER
-      NCALL_SAV=NCALL
-      NCALL=NCALL/2.
-888   continue
-      NST=NST+1
-      IF(NST.GT.NST_MAX) goto 666
-      
-      IPRINT=IPRT
-c--------------------	
-      FFF_OLD=FFF  
-      FFF=FUNC_INT(IPRINT)
-      IF(FFF.lt.CS_MIN) GOTO  666
-c--------------------	  
-
-      IF(NDIMUSER_SAVE.eq.2) GOTO 777
-      if(IPRT.gt.1) print *,'FFF0=', FFF
-
-        
-      IF(FFF.le.0) then
-         FFF=0.
-         goto 666
-      ENDIF
-
-
-       XFI=LOG(
-     &     PM(1)/(2d0*Pi**3)*geff/2d0*sqrt(45d0/(2d0*81d0))/SQRT_GN
-     &     *FFF*PBNTOGEV*SQRT(XF)
-     &     )
-       
-
-       XF_OLD=XF
-       XF=1D0/XFI
-       
-
-
-       IF(iprint.gt.1) then
-       print *,'======================='
-       print *,'XF = ',XF,1d0/XF
-       print *,'CS  = ',FFF
-       print *,'NST = ',NST
-       print *,'======================='
-       endif
-
-       IF(XF.le.0.) then
-         XF=XFINI
-         FFF=0
-         goto 666
-       ENDIF
-
-ccc       IF(abs(XF-XF_OLD)/XF.gt.0.01) goto 888
-       IF(abs(FFF-FFF_OLD)/FFF.gt.0.03) goto 888
-ccc    print *,'xxxxxxxx 3d Integration xxxxxxxxxx'
- 777   CONTINUE
- 666   NCALL=NCALL*2.
-       NDIMUSER=NDIMUSER_SAVE
-       NDIMUSER_EFF=NDIMUSER_EFF_SAVE
-       IF(NDIMUSER.eq.2    ) goto 999
-       IF(NDIMUSER_EFF.eq.2) NCALL=NCALL/2.
-
-       IF(FFF.lt.CS_MIN) THEN
-          FFF=1.E-20
-          GOTO 999
-       ENDIF
-
-
-       FFF=FUNC_INT(IPRINT)
- 999   continue
-  
-c      print *,'IPRINT=',IPRINT
-       IF(IPRINT.ge.3) then
-         NPROC_MAX_S=NPROC_MAX
-         NPROC_MIN_S=NPROC_MIN
-         SUMM=0.
-         
-         
-         DO I =NPROC_MIN_S,NPROC_MAX_S,NPROC_STEP
-           if(SUPPEXP.ge.SUPPEXPMAX.and.I.gt.26) GOTO 444
-           NPROC_MIN=I
-           NPROC_MAX=I
-           FFF_TMP=FUNC_INT(-1)
-           IF(FFF_TMP/FFF.gt.0.01) THEN
-             print '(I6,A4,F6.2,A2,4A8)',
-     &       I,'  ',FFF_TMP/FFF*100,' %',
-     &       (PINF(I,J),J=1,4)
-             SUMM=SUMM+FFF_TMP/FFF
-           ENDIF
-         ENDDO
- 444     continue	 
-
-         NPROC_MAX=NPROC_MAX_S
-         NPROC_MIN=NPROC_MIN_S
-       endif
-
-      
- 
- 555   continue
-       if(iprint.gt.1) then
-       print *,'===========FINAL======='
-       print *, 'freez out temp=',1d0/XF
-       print *, 'n steps       =',NST
-       print *, 'CS (fb)       =',FFF*1000d0
-       print *, 'OMEGA H^2     =',OMEGA(FFF)
-       print *,'======================='
-       endif
-
-       OMGH2 =OMEGA(FFF)
-       SIGMA =FFF
-       XFREEZ=XF
-       NSTEPS =NST
-
-       NCALL=NCALL_SAV
-      
-cccccccccccccccccccccccccccccccccccccccccccc
- 111   continue
-       NDIMUSER_SAVE=NDIMUSER
-       AS_MAX_SAVE  =AS_MAX
-       NDIMUSER=1
-       NDIMUSER_EFF=1
-
-       
-       VVV=1.E-03
-       AS_MAX=2.*sqrt(1.+(VVV/2.)**2)  
-       CONV1 =  2.998E+10  ! speed of light cm/sec
-       CONV2 =  1.000E-36  ! 1pb ==> cm^2
-
-       CS_V  =  FUNC_INT(IPRINT)
-       FFF_V =  CS_V*VVV*CONV1*CONV2
-
-       NDIMUSER=NDIMUSER_SAVE
-       AS_MAX=AS_MAX_SAVE
-       
-
-cccccccccccccccccccccccccccccccccccccccccccc       
-
-      RETURN
-      END
diff -rupN darksusy-5.1.3/contrib/isajet781-for-darksusy/makefile.in darksusy-5.1.3.patched/contrib/isajet781-for-darksusy/makefile.in
--- darksusy-5.1.3/contrib/isajet781-for-darksusy/makefile.in	2011-11-03 14:34:52.000000000 +0000
+++ darksusy-5.1.3.patched/contrib/isajet781-for-darksusy/makefile.in	2017-02-11 20:01:26.159863534 +0000
@@ -6,9 +6,6 @@
 FF=@F77@
 FOPT=@FOPT@
 
-DS_ROOT=../..
-LIB=$(DS_ROOT)/lib
-
 ########################################################
 ### READ THROUGH AND CHANGE THE DEFAULT VALUES BELOW ###
 ### BEFORE COMPILING.                                ###
@@ -20,21 +17,24 @@ LIB=$(DS_ROOT)/lib
 # to libisajet.a.
 # For compatibility with gfortran, aldata.o _is_ included here (after 'BLOCK DATA' has been changed to 'SUBROUTINE').
 
-OBJ = aldata.o alqcd.o amass.o amgmw.o ayukdiag.o b0func.o bases.o besk1.o bhinit.o bhplot.o bhrset.o bhsave.o bi.o bk2mvsm.o boostx.o brems.o bschck.o bsdate.o bsdims.o bsetgu.o bsetgv.o bsggut.o bsgrid.o bsinfo.o bsinit.o bsintg.o bslist.o bsordr.o bsparm.o bsprnt.o bsread.o bstcnv.o bstime.o bsutim.o bswrit.o bufin.o bufout.o c0.o cbk2mvsm.o ccon.o cdagger.o charge.o chargino.o chdec.o chint.o ci.o cmatmul.o cmd.o cmodsq.o colr12.o colr13.o colr22.o con.o coup1x.o coup2x.o coup3x.o coup4x.o cputim.o cre.o crge215.o crge601.o crkstp.o csfmul.o csmrgedr.o cteq5l.o ctq5pdf.o ctrace.o ctxc2i.o ctxi2c.o ctxin.o ctxout.o d0.o dadmul.o dagger.o dblpcm.o dblvec.o dboost.o dcabs1.o ddilog.o decay.o decjet.o decoutcoup.o decps1.o decps2.o decrun.o decss3.o dectau.o decva.o dhfill.o dhinit.o dhplot.o di.o diagsqm.o dincgm.o disnan.o dlabad.o dladiv.o dlaisnan.o dlamc1.o dlamc2.o dlamc3.o dlamc4.o dlamc5.o dlamch.o dlapy2.o dlapy3.o dmatmul.o domssm.o downmhcond.o downmhighmh.o downmhighmz.o downmscond.o downsqm.o dre.o drge215.o drge601.o drkstp.o drllyn.o drn.o drnset.o drotsq.o drotsqback.o dscal.o dsmma.o dsmrgedr.o dtrace.o dtrint.o dzasum.o dznrm2.o eaixxx.o eaoxxx.o ebeam.o edit.o eebeg.o eemax.o ei.o eigsys.o eisrs1.o elctrn.o epf.o estruc.o evol01.o evol02.o evol03.o evol05.o evol06.o evol07.o evol11.o evolms.o evolve.o fa12.o fa12_integr.o fbrbm.o fes.o flavor.o fntg.o fortop.o frgjet.o frgmnt.o fsixxx.o fsoxxx.o func.o func_int.o funs.o fvixxx.o fvoxxx.o gamma.o gammac1.o gammac2.o gammahp.o gammasm.o gammawb1.o gammawb2.o gamtot.o gbeam.o ges.o getpas.o getpt.o gettot.o ggggxx.o gggxxx.o gluneno.o gout601.o gstruc.o hdcyad.o hdcysy.o heavyx.o hermtest.o hevolv.o higgs.o highin.o hioxxx.o hsssxx.o hssxxx.o hvsxxx.o hvvxxx.o idamax.o idanti.o idgen.o ieeeck.o iframs.o ilaenv.o ilazlc.o inisap.o iosxxx.o iovxxx.o ipartns.o ipjset.o iprtns.o irmov0.o isaamu.o isabeg.o isabmm.o isabsg.o isachp.o isaend.o isaevt.o isahep.o isaini.o isajet.o isalha.o isalhd.o isalhe.o isared.o isares.o isasrt.o isawbg.o isawev.o isawig.o isawnd.o ispjet.o istrad.o iswdky.o itrans.o ixxxxx.o j3xxxx.o jeexxx.o jetgen.o jgggxx.o jggxxx.o jioxxx.o jssxxx.o jtioxx.o jvssxx.o jvsxxx.o jvvxxx.o jw3wxx.o jwwwxx.o kkgf1.o kkgf2.o kkgf3.o kmin.o label.o lboost.o logerr.o logic.o logmgm.o logmgy.o logmij.o logp.o logphi.o logphw.o logpt.o logqm.o logqt.o logthw.o logx.o logxw.o logyth.o logyw.o lsame.o lstsq.o mass.o masssqm.o mat2vec.o mbias.o mbset.o mginit.o mmamsb.o modsq.o mom2cx.o momntx.o movlev.o mprod2.o mprod2x.o mprod3.o mprod3x.o mprod4x.o mprod5x.o muljet.o nogood.o omega.o ordecr.o order.o orth.o outcoup.o oxxxxx.o pdgid.o piblbl.o piblbr.o pibrbr.o pielel.o pierer.o pillll.o pilllr.o pilrlr.o pinene.o pitltl.o pitltr.o pitrtr.o prtevt.o prtlim.o prtlst.o ptfun.o qcdini.o qcdint.o qcdinz.o qcdjet.o qcdt.o qcdz.o qfunc.o ranf.o ranfgt.o ranfmt.o ranfst.o ranlux.o rdbeg.o rdtape.o readin.o rejfrg.o rejjet.o remsf.o rend.o rescal.o reset.o rge157.o rgeflav.o rgens.o rgeread.o rkstp.o rotate.o rotate215.o rotatesm.o rotback.o rotback215.o rotbacksm.o rotsq.o rotsqback.o rotxxx.o rpdecy.o rpinf1.o rpinf2.o rpint1.o rpint2.o rpint3.o rpmain.o rpmoda.o rpnorm.o rprate.o rprtch.o setcon.o setdky.o seth.o sethss.o setkkg.o setnxt.o settyp.o setw.o sfmul.o shcler.o shfill.o shinit.o shplot.o shrset.o shupdt.o sig0l.o sig0r.o sig0s.o sigdy.o sigdy2.o sigee.o sigfil.o siggam.o sigh.o sigh2.o sigh3.o sighss.o sigint.o sigkkg.o sigpl.o sigpr.o sigps.o sigqcd.o sigsse.o sigssl.o sigssy.o sigssz.o sigtc.o sigtc2.o sigtc3.o sigwh.o sigwhs.o sigww.o sigww2.o smszg.o sorttf.o sortth.o sortzg.o spchck.o sphist.o spinfo.o spline.o sprgen.o spring.o sqdiag.o sqrlam.o sqsix.o ssa0.o ssalfs.o ssb0.o ssb00.o ssb1.o ssb1f.o ssbt20.o ssbt22.o ssc0.o ssd0.o ssd27.o ssdhll.o ssdint.o ssdlam.o ssf.o ssf0.o ssfel.o ssg.o ssglbf.o ssgst.o ssgt.o ssgwq1.o ssgwq2.o ssgwt1.o ssgwt2.o ssgwt3.o ssgwt4.o ssgwt5.o ssgwt6.o ssgwt7.o ssgwt8.o ssgx1.o ssgx10.o ssgx11.o ssgx2.o ssgx3.o ssgx4.o ssgx5.o ssgx6.o ssgx7.o ssgx8.o ssgx9.o ssgzg1.o ssgzg2.o ssgzg3.o ssgzt.o ssh.o ssh0.o sshcc.o sshff.o sshff1.o sshgl.o sshgm.o sshgm1.o sshhx.o sshibf.o sshnn.o sshsf.o sshww.o sshww1.o sshww2.o ssl1st.o sslpbf.o sslrt1.o ssm1lp.o ssmass.o ssme3.o ssmhc.o ssmhn.o ssmqcd.o ssmssm.o ssn1st.o ssnorm.o sspole.o ssqkbf.o ssrsgb.o ssrsgl.o ssrsgt.o sssave.o sssnws.o ssssxx.o ssstbf.o sssvme.o sssxxx.o sstest.o sstpbf.o sswibf.o sswwf1.o sswz2p.o sswz3p.o sswzbf.o sswzf1.o sswzf2.o sswzf3.o sswzf4.o sswzf5.o sswzf6.o sswzf7.o ssxint.o ssxlam.o sszhx.o sszibf.o sszwf1.o sszzf1.o sszzf2.o sszzf3.o sszzf4.o sszzf5.o sszzg1.o sszzg2.o sszzg3.o sszzg4.o st1cneu.o st3int.o st3mat.o stbwz1.o stradd.o strotate.o strotback.o struc.o strucw.o sualfe.o sualfs.o sug2bsg.o sugeff.o sugefffl.o sugfrz.o sugmas.o sugra.o sugrge.o surg06.o surg26.o sxxxxx.o symmtest.o szjj1.o szjj2.o szjj3.o szjj4.o szjj5.o szjj6.o szjj7.o tactiv.o tcsfmul.o thetaxy.o timer.o tql2.o tqleig.o tr3x3.o trace.o trdiag.o tred2.o triint.o tsfmul.o twojet.o twokin.o uoutcoup.o upmhcond.o upmhcond2.o upmzmhigh.o upmzmhigh2.o upsqm.o usmma.o vec2mat.o vgen.o visaje.o vssxxx.o vvssxx.o vvsxxx.o vvvxxx.o vxxxxx.o w3w3xx.o wgens.o whiggs.o wilson.o wpair.o wwkin.o wwss.o wwst.o wwtt.o wwwwxx.o wzss.o wzst.o wzsu.o wztu.o xerbla.o xhchck.o xhfill.o xhinit.o xhordr.o xhplot.o xhrnge.o xhscle.o xkaim.o xkare.o xwwww.o xwwzz.o xzzww.o xzzzz.o ygenj.o yukdiag.o zaxpy.o zcopy.o zdotc.o zdotu.o zdscal.o zerol.o zgebak.o zgebal.o zgeev.o zgehd2.o zgehrd.o zgemm.o zgemv.o zgerc.o zhseqr.o zjj.o zjj0.o zjj1.o zjj2.o zjj3.o zjj4.o zjj5.o zjj6.o zjj7.o zlacgv.o zlacpy.o zladiv.o zlahqr.o zlahr2.o zlange.o zlaqr0.o zlaqr1.o zlaqr2.o zlaqr3.o zlaqr4.o zlaqr5.o zlarf.o zlarfb.o zlarfg.o zlarft.o zlartg.o zlascl.o zlaset.o zlassq.o zlatrs.o zrot.o zscal.o zswap.o ztrevc.o ztrexc.o ztrmm.o ztrmv.o ztrsv.o zung2r.o zunghr.o zungqr.o zunm2r.o zunmhr.o zunmqr.o zzall.o zzstar.o
+OBJ = aldata.o alqcd.o amass.o amgmw.o ayukdiag.o b0func.o bases.o besk1.o bhinit.o bhplot.o bhrset.o bhsave.o bi.o bk2mvsm.o boostx.o brems.o bschck.o bsdate.o bsdims.o bsetgu.o bsetgv.o bsggut.o bsgrid.o bsinfo.o bsinit.o bsintg.o bslist.o bsordr.o bsparm.o bsprnt.o bsread.o bstcnv.o bstime.o bsutim.o bswrit.o bufin.o bufout.o c0.o cbk2mvsm.o ccon.o cdagger.o charge.o chargino.o chdec.o chint.o ci.o cmatmul.o cmd.o cmodsq.o colr12.o colr13.o colr22.o con.o coup1x.o coup2x.o coup3x.o coup4x.o cputim.o cre.o crge215.o crge601.o crkstp.o csfmul.o csmrgedr.o cteq5l.o ctq5pdf.o ctrace.o ctxc2i.o ctxi2c.o ctxin.o ctxout.o d0.o dadmul.o dagger.o dblpcm.o dblvec.o dboost.o dcabs1.o ddilog.o decay.o decjet.o decoutcoup.o decps1.o decps2.o decrun.o decss3.o dectau.o decva.o dhfill.o dhinit.o dhplot.o di.o diagsqm.o dincgm.o disnan.o dlabad.o dladiv.o dlaisnan.o dlamc1.o dlamc2.o dlamc3.o dlamc4.o dlamc5.o dlamch.o dlapy2.o dlapy3.o dmatmul.o domssm.o downmhcond.o downmhighmh.o downmhighmz.o downmscond.o downsqm.o dre.o drge215.o drge601.o drkstp.o drllyn.o drn.o drnset.o drotsq.o drotsqback.o dscal.o dsmma.o dsmrgedr.o dtrace.o dtrint.o dzasum.o dznrm2.o eaixxx.o eaoxxx.o ebeam.o edit.o eebeg.o eemax.o ei.o eigsys.o eisrs1.o elctrn.o epf.o estruc.o evol01.o evol02.o evol03.o evol05.o evol06.o evol07.o evol11.o evolms.o evolve.o fa12_integr.o fbrbm.o fes.o flavor.o fntg.o fortop.o frgjet.o frgmnt.o fsixxx.o fsoxxx.o funs.o fvixxx.o fvoxxx.o gamma.o gammac1.o gammac2.o gammahp.o gammasm.o gammawb1.o gammawb2.o gamtot.o gbeam.o ges.o getpas.o getpt.o gettot.o ggggxx.o gggxxx.o gluneno.o gout601.o gstruc.o hdcyad.o hdcysy.o heavyx.o hermtest.o hevolv.o higgs.o highin.o hioxxx.o hsssxx.o hssxxx.o hvsxxx.o hvvxxx.o idamax.o idanti.o idgen.o ieeeck.o iframs.o ilaenv.o ilazlc.o inisap.o iosxxx.o iovxxx.o ipartns.o ipjset.o iprtns.o irmov0.o isaamu.o isabeg.o isabmm.o isabsg.o isachp.o isaend.o isaevt.o isahep.o isaini.o isajet.o isalha.o isalhd.o isalhe.o isares.o isasrt.o isawbg.o isawev.o isawig.o isawnd.o ispjet.o istrad.o iswdky.o itrans.o ixxxxx.o j3xxxx.o jeexxx.o jetgen.o jgggxx.o jggxxx.o jioxxx.o jssxxx.o jtioxx.o jvssxx.o jvsxxx.o jvvxxx.o jw3wxx.o jwwwxx.o kkgf1.o kkgf2.o kkgf3.o kmin.o label.o lboost.o logerr.o logic.o logmgm.o logmgy.o logmij.o logp.o logphi.o logphw.o logpt.o logqm.o logqt.o logthw.o logx.o logxw.o logyth.o logyw.o lsame.o lstsq.o mass.o masssqm.o mat2vec.o mbias.o mbset.o mginit.o mmamsb.o modsq.o mom2cx.o momntx.o movlev.o mprod2.o mprod2x.o mprod3.o mprod3x.o mprod4x.o mprod5x.o muljet.o nogood.o omega.o ordecr.o order.o orth.o outcoup.o oxxxxx.o pdgid.o piblbl.o piblbr.o pibrbr.o pielel.o pierer.o pillll.o pilllr.o pilrlr.o pinene.o pitltl.o pitltr.o pitrtr.o prtevt.o prtlim.o prtlst.o ptfun.o qcdini.o qcdint.o qcdinz.o qcdjet.o qcdt.o qcdz.o qfunc.o ranf.o ranfgt.o ranfmt.o ranfst.o ranlux.o rdbeg.o rdtape.o readin.o rejfrg.o rejjet.o remsf.o rend.o rescal.o reset.o rge157.o rgeflav.o rgens.o rgeread.o rkstp.o rotate.o rotate215.o rotatesm.o rotback.o rotback215.o rotbacksm.o rotsq.o rotsqback.o rotxxx.o rpdecy.o rpinf1.o rpinf2.o rpint1.o rpint2.o rpint3.o rpmain.o rpmoda.o rpnorm.o rprate.o rprtch.o setcon.o setdky.o seth.o sethss.o setkkg.o setnxt.o settyp.o setw.o sfmul.o shcler.o shfill.o shinit.o shplot.o shrset.o shupdt.o sig0l.o sig0r.o sig0s.o sigdy.o sigdy2.o sigee.o sigfil.o siggam.o sigh.o sigh2.o sigh3.o sighss.o sigint.o sigkkg.o sigpl.o sigpr.o sigps.o sigqcd.o sigsse.o sigssl.o sigssy.o sigssz.o sigtc.o sigtc2.o sigtc3.o sigwh.o sigwhs.o sigww.o sigww2.o smszg.o sorttf.o sortth.o sortzg.o spchck.o sphist.o spinfo.o spline.o sprgen.o spring.o sqdiag.o sqrlam.o sqsix.o ssa0.o ssalfs.o ssb0.o ssb00.o ssb1.o ssb1f.o ssbt20.o ssbt22.o ssc0.o ssd0.o ssd27.o ssdhll.o ssdint.o ssdlam.o ssf.o ssf0.o ssfel.o ssg.o ssglbf.o ssgst.o ssgt.o ssgwq1.o ssgwq2.o ssgwt1.o ssgwt2.o ssgwt3.o ssgwt4.o ssgwt5.o ssgwt6.o ssgwt7.o ssgwt8.o ssgx1.o ssgx10.o ssgx11.o ssgx2.o ssgx3.o ssgx4.o ssgx5.o ssgx6.o ssgx7.o ssgx8.o ssgx9.o ssgzg1.o ssgzg2.o ssgzg3.o ssgzt.o ssh.o ssh0.o sshcc.o sshff.o sshff1.o sshgl.o sshgm.o sshgm1.o sshhx.o sshibf.o sshnn.o sshsf.o sshww.o sshww1.o sshww2.o ssid.o ssl1st.o sslpbf.o sslrt1.o ssm1lp.o ssmass.o ssme3.o ssmhc.o ssmhn.o ssmqcd.o ssmssm.o ssn1st.o ssnorm.o sspole.o ssqkbf.o ssrsgb.o ssrsgl.o ssrsgt.o sssave.o sssnws.o ssssxx.o ssstbf.o sssvme.o sssxxx.o sstest.o sstpbf.o sswibf.o sswwf1.o sswz2p.o sswz3p.o sswzbf.o sswzf1.o sswzf2.o sswzf3.o sswzf4.o sswzf5.o sswzf6.o sswzf7.o ssxint.o ssxlam.o sszhx.o sszibf.o sszwf1.o sszzf1.o sszzf2.o sszzf3.o sszzf4.o sszzf5.o sszzg1.o sszzg2.o sszzg3.o sszzg4.o st1cneu.o st3int.o st3mat.o stbwz1.o stradd.o strotate.o strotback.o struc.o strucw.o sualfe.o sualfs.o sug2bsg.o sugeff.o sugefffl.o sugfrz.o sugmas.o sugra.o sugrge.o surg06.o surg26.o sxxxxx.o symmtest.o szjj1.o szjj2.o szjj3.o szjj4.o szjj5.o szjj6.o szjj7.o tactiv.o tcsfmul.o thetaxy.o timer.o tql2.o tqleig.o tr3x3.o trace.o trdiag.o tred2.o triint.o tsfmul.o twojet.o twokin.o uoutcoup.o upmhcond.o upmhcond2.o upmzmhigh.o upmzmhigh2.o upsqm.o usmma.o vec2mat.o vgen.o visaje.o vssxxx.o vvssxx.o vvsxxx.o vvvxxx.o vxxxxx.o w3w3xx.o wgens.o whiggs.o wilson.o wpair.o wwkin.o wwss.o wwst.o wwtt.o wwwwxx.o wzss.o wzst.o wzsu.o wztu.o xerbla.o xhchck.o xhfill.o xhinit.o xhordr.o xhplot.o xhrnge.o xhscle.o xkaim.o xkare.o xwwww.o xwwzz.o xzzww.o xzzzz.o ygenj.o yukdiag.o zaxpy.o zcopy.o zdotc.o zdotu.o zdscal.o zerol.o zgebak.o zgebal.o zgeev.o zgehd2.o zgehrd.o zgemm.o zgemv.o zgerc.o zhseqr.o zjj.o zjj0.o zjj1.o zjj2.o zjj3.o zjj4.o zjj5.o zjj6.o zjj7.o zlacgv.o zlacpy.o zladiv.o zlahqr.o zlahr2.o zlange.o zlaqr0.o zlaqr1.o zlaqr2.o zlaqr3.o zlaqr4.o zlaqr5.o zlarf.o zlarfb.o zlarfg.o zlarft.o zlartg.o zlascl.o zlaset.o zlassq.o zlatrs.o zrot.o zscal.o zswap.o ztrevc.o ztrexc.o ztrmm.o ztrmv.o ztrsv.o zung2r.o zunghr.o zungqr.o zunm2r.o zunmhr.o zunmqr.o zzall.o zzstar.o
 
 #OBJ2 = aldata.o
 
-vpath %.a $(LIB)
+vpath %.a $(DS_LIB)
 
 #all : libisajet.a aldata.o
-all : libisajet.a
+all : libisajet.a libisajet.so
 
 #aldata.o: aldata.f
-#	$(FF) $(FOPT) -c -o $(LIB)/aldata.o aldata.f
+#	$(FF) $(FOPT) -c -o $(DS_LIB)/aldata.o aldata.f
 
 libisajet.a: $(OBJ)
-	ar r $(LIB)/libisajet.a $(OBJ)
-	ranlib $(LIB)/libisajet.a
+	ar r $(DS_LIB)/libisajet.a $(OBJ)
+	ranlib $(DS_LIB)/libisajet.a
+
+libisajet.so: $(OBJ)
+	$(FF) $(FOPT) -shared -o $(DS_LIB)/libisajet.so $(OBJ)
 
 clean:
 	rm -f *.o
diff -rupN darksusy-5.1.3/contrib/isajet781-for-darksusy/prtevt.f darksusy-5.1.3.patched/contrib/isajet781-for-darksusy/prtevt.f
--- darksusy-5.1.3/contrib/isajet781-for-darksusy/prtevt.f	2011-11-03 14:34:52.000000000 +0000
+++ darksusy-5.1.3.patched/contrib/isajet781-for-darksusy/prtevt.f	2017-02-11 20:01:26.159863534 +0000
@@ -84,8 +84,8 @@ C
       COMMON/WSIG/SIGLLQ
       SAVE /WSIG/
       REAL      SIGLLQ
-      COMMON/SEED/XSEED
-      SAVE /SEED/
+      COMMON/SEEDg/XSEED
+      SAVE /SEEDg/
       CHARACTER*24 XSEED
 C
 C          LABELS ARE CHARACTER*8
diff -rupN darksusy-5.1.3/contrib/isajet781-for-darksusy/prtlim.f darksusy-5.1.3.patched/contrib/isajet781-for-darksusy/prtlim.f
--- darksusy-5.1.3/contrib/isajet781-for-darksusy/prtlim.f	2011-11-03 14:34:52.000000000 +0000
+++ darksusy-5.1.3.patched/contrib/isajet781-for-darksusy/prtlim.f	2017-02-11 20:01:26.163863534 +0000
@@ -79,8 +79,8 @@ C          KKGravity common
       COMMON/PRTOUT/NEVPRT,NJUMP
       SAVE /PRTOUT/
       INTEGER   NEVPRT,NJUMP
-      COMMON/SEED/XSEED
-      SAVE /SEED/
+      COMMON/SEEDg/XSEED
+      SAVE /SEEDg/
       CHARACTER*24 XSEED
       INTEGER MXTYPE
       PARAMETER (MXTYPE=8)
diff -rupN darksusy-5.1.3/contrib/isajet781-for-darksusy/ranfgt.f darksusy-5.1.3.patched/contrib/isajet781-for-darksusy/ranfgt.f
--- darksusy-5.1.3/contrib/isajet781-for-darksusy/ranfgt.f	2011-11-03 14:34:52.000000000 +0000
+++ darksusy-5.1.3.patched/contrib/isajet781-for-darksusy/ranfgt.f	2017-02-11 20:01:26.163863534 +0000
@@ -1,4 +1,4 @@
 C
-      SUBROUTINE RANFGT(SEED)
+      SUBROUTINE RANFGT(SEEDg)
       RETURN
       END
diff -rupN darksusy-5.1.3/contrib/isajet781-for-darksusy/ranfst.f darksusy-5.1.3.patched/contrib/isajet781-for-darksusy/ranfst.f
--- darksusy-5.1.3/contrib/isajet781-for-darksusy/ranfst.f	2011-11-03 14:34:52.000000000 +0000
+++ darksusy-5.1.3.patched/contrib/isajet781-for-darksusy/ranfst.f	2017-02-11 20:01:26.163863534 +0000
@@ -1,4 +1,4 @@
-      SUBROUTINE RANFST(SEED)
-      DOUBLE PRECISION SEED
+      SUBROUTINE RANFST(SEEDg)
+      DOUBLE PRECISION SEEDg
       RETURN
       END
diff -rupN darksusy-5.1.3/contrib/isajet781-for-darksusy/readin.f darksusy-5.1.3.patched/contrib/isajet781-for-darksusy/readin.f
--- darksusy-5.1.3/contrib/isajet781-for-darksusy/readin.f	2011-11-03 14:34:52.000000000 +0000
+++ darksusy-5.1.3.patched/contrib/isajet781-for-darksusy/readin.f	2017-02-11 20:01:26.163863534 +0000
@@ -73,8 +73,8 @@ C          KKGravity common
       COMMON/PRTOUT/NEVPRT,NJUMP
       SAVE /PRTOUT/
       INTEGER   NEVPRT,NJUMP
-      COMMON/SEED/XSEED
-      SAVE /SEED/
+      COMMON/SEEDg/XSEED
+      SAVE /SEEDg/
       CHARACTER*24 XSEED
       INTEGER MXTYPE
       PARAMETER (MXTYPE=8)
@@ -230,7 +230,7 @@ C
       CHARACTER*8 HTYPE
       INTEGER JLIM1,JLIM2
       REAL AMLIM1,AMLIM2
-      DOUBLE PRECISION SEED
+      DOUBLE PRECISION SEEDg
 C
 C          Overlapping variable flags.
       DATA NLAP/1,2,3, 1,2,7 ,1,2,8, 1,3,5, 1,3,6, 1,3,7, 1,3,8, 1,5,7,
diff -rupN darksusy-5.1.3/contrib/isajet781-for-darksusy/reset.f darksusy-5.1.3.patched/contrib/isajet781-for-darksusy/reset.f
--- darksusy-5.1.3/contrib/isajet781-for-darksusy/reset.f	2011-11-03 14:34:52.000000000 +0000
+++ darksusy-5.1.3.patched/contrib/isajet781-for-darksusy/reset.f	2017-02-11 20:01:26.163863534 +0000
@@ -84,8 +84,8 @@ C          Jet limits
      $GOWW(25,2),ALLWW(2),GOWMOD(25,MXGOJ)
       SAVE /Q1Q2/
       LOGICAL GOQ,GOALL,GODY,STDDY,GOWW,ALLWW,GOWMOD
-      COMMON/SEED/XSEED
-      SAVE /SEED/
+      COMMON/SEEDg/XSEED
+      SAVE /SEEDg/
       CHARACTER*24 XSEED
 C          SUSY parameters
 C          AMGLSS               = gluino mass
diff -rupN darksusy-5.1.3/contrib/isajet781-for-darksusy/ssid.f darksusy-5.1.3.patched/contrib/isajet781-for-darksusy/ssid.f
--- darksusy-5.1.3/contrib/isajet781-for-darksusy/ssid.f	1970-01-01 01:00:00.000000000 +0100
+++ darksusy-5.1.3.patched/contrib/isajet781-for-darksusy/ssid.f	2017-02-11 20:01:26.167863534 +0000
@@ -0,0 +1,80 @@
+      CHARACTER*5 FUNCTION SSID(ID)
+C-----------------------------------------------------------------------
+C
+C     Return character name for ID, assuming the default IDENT codes
+C     are used in /SSTYPE/.
+C
+C     Extracted by hand from ISAJET 1.8.5's isajet.car
+C     Pat Scott Feb 2 2016
+C
+C-----------------------------------------------------------------------
+      IMPLICIT NONE
+
+      COMMON/SSLUN/LOUT,LHEOUT
+      INTEGER LOUT,LHEOUT
+      SAVE /SSLUN/
+
+      CHARACTER*5 LABEL(-120:120)
+      SAVE LABEL
+      INTEGER ID,J
+C
+      DATA LABEL(0)/'     '/
+C
+      DATA (LABEL(J),J=1,10)
+     $/'UP   ','DN   ','ST   ','CH   ','BT   ','TP   '
+     $,'ERROR','ERROR','GL   ','GM   '/
+      DATA (LABEL(J),J=-1,-10,-1)
+     $/'UB   ','DB   ','SB   ','CB   ','BB   ','TB   '
+     $,'ERROR','ERROR','ERROR','ERROR'/
+C
+      DATA (LABEL(J),J=11,20)
+     $/'NUE  ','E-   ','NUM  ','MU-  ','NUT  ','TAU- '
+     $,'ERROR','ERROR','ERROR','ERROR'/
+      DATA (LABEL(J),J=-11,-20,-1)
+     $/'ANUE ','E+   ','ANUM ','MU+  ','ANUT ','TAU+ '
+     $,'ERROR','ERROR','ERROR','ERROR'/
+C
+      DATA (LABEL(J),J=21,30)
+     $/'UPL  ','DNL  ','STL  ','CHL  ','BT1  ','TP1  '
+     $,'ERROR','ERROR','GLSS ','Z1SS '/
+      DATA (LABEL(J),J=-21,-30,-1)
+     $/'UBL  ','DBL  ','SBL  ','CBL  ','BB1  ','TB1  '
+     $,'ERROR','ERROR','ERROR','ERROR'/
+C
+      DATA (LABEL(J),J=31,40)
+     $/'NUEL ','EL-  ','NUML ','MUL- ','NUTL ','TAU1-'
+     $,'ERROR','ERROR','W1SS+','Z2SS '/
+      DATA (LABEL(J),J=-31,-40,-1)
+     $/'ANUEL','EL+  ','ANUML','MUL+ ','ANUTL','TAU1+'
+     $,'ERROR','ERROR','W1SS-','ERROR'/
+C
+      DATA (LABEL(J),J=41,50)
+     $/'UPR  ','DNR  ','STR  ','CHR  ','BT2  ','TP2  '
+     $,'ERROR','ERROR','W2SS+','Z3SS '/
+      DATA (LABEL(J),J=-41,-50,-1)
+     $/'UBR  ','DBR  ','SBR  ','CBR  ','BB2  ','TB2  '
+     $,'ERROR','ERROR','W2SS-','ERROR'/
+C
+      DATA (LABEL(J),J=51,60)
+     $/'NUER ','ER-  ','NUMR ','MUR- ','NUTR ','TAU2-'
+     $,'ERROR','ERROR','ERROR','Z4SS '/
+      DATA (LABEL(J),J=-51,-60,-1)
+     $/'ANUEL','ER+  ','ANUMR','MUR+ ','ANUTR','TAU2+'
+     $,'ERROR','ERROR','ERROR','ERROR'/
+C
+      DATA (LABEL(J),J=82,86)
+     $/'HL0  ','HH0  ','HA0  ','ERROR','H+   '/
+      DATA LABEL(-86)/'H-   '/
+C
+      DATA LABEL(80)/'W+   '/,LABEL(-80)/'W-   '/,LABEL(90)/'Z0   '/
+      DATA LABEL(91)/'GVSS '/
+      DATA LABEL(110)/'PI0  '/
+      DATA LABEL(120)/'PI+  '/,LABEL(-120)/'PI-  '/
+C
+      IF(IABS(ID).GT.120) THEN
+        WRITE(LOUT,*) 'SSID: ID = ',ID
+        STOP99
+      ENDIF
+      SSID=LABEL(ID)
+      RETURN
+      END
diff -rupN darksusy-5.1.3/contrib/TSPACK/makefile.in darksusy-5.1.3.patched/contrib/TSPACK/makefile.in
--- darksusy-5.1.3/contrib/TSPACK/makefile.in	2013-02-10 06:43:34.000000000 +0000
+++ darksusy-5.1.3.patched/contrib/TSPACK/makefile.in	2017-02-11 20:01:26.167863534 +0000
@@ -9,8 +9,7 @@ FOPT=@FOPT@
 # Dependencies and libraries
 DINC=../../include
 LIB=../../lib
-
-INC_DEP = 
+BUILD=../../build/
 
 vpath %.h $(DINC)
 
@@ -19,12 +18,11 @@ tspack = ENDSLP.f SIGS.f SNHCSH.f STORE.
 
 all: tspack
 
-tspack : $(tspack) makefile
+tspack : 
 	cat $(tspack) > tspack.f
 	$(FF) $(FOPT) -c -I$(DINC) -o tspack.o tspack.f
+	mv tspack.o $(BUILD)/
 	rm tspack.f
-	ar rv $(LIB)/libdarksusy.a tspack.o
-	ranlib $(LIB)/libdarksusy.a
 
 clean:
 	rm -f tspack.f *.o
diff -rupN darksusy-5.1.3/include/dsandwcom.h darksusy-5.1.3.patched/include/dsandwcom.h
--- darksusy-5.1.3/include/dsandwcom.h	2010-08-06 09:27:44.000000000 +0100
+++ darksusy-5.1.3.patched/include/dsandwcom.h	2017-02-11 20:01:26.167863534 +0000
@@ -23,7 +23,7 @@ c....dwcom - common block needed for the
       save /dwcom1/,/dwcom2/
 
 * partial annihilation rates
-      real*8 prtial(54)
+      real*8 prtial(114)
       common /partials/ prtial
 
 ***                                                                 ***
diff -rupN darksusy-5.1.3/include/dsascom.h darksusy-5.1.3.patched/include/dsascom.h
--- darksusy-5.1.3/include/dsascom.h	2008-06-23 22:39:47.000000000 +0100
+++ darksusy-5.1.3.patched/include/dsascom.h	2017-02-11 20:01:26.167863534 +0000
@@ -44,10 +44,10 @@ c some roundoff terms
 
 c dsasdwdcossfsf final/intermediate state arrays/variables
       real*8  cfactini,cfactfin,gg1,gg2
-      integer kp1s,kp2s,kp3in(30),kp4in(30),chcol,nsfertc,ksfertc(6),
+      integer kp1s,kp2s,kp3in(114),kp4in(114),chcol,nsfertc,ksfertc(6),
      &  nsferuc,ksferuc(6),nsfertn,ksfertn(6),nsferun,ksferun(6),
      &  kf2,kf2o,ick1,ick2
-      logical chon(30),gluonin,gammain,neutcurr,nosneutrinov
+      logical chon(114),gluonin,gammain,neutcurr,nosneutrinov
       common/aswsfsfcom/cfactini,cfactfin,gg1,gg2,kp1s,kp2s,kp3in,kp4in,
      &  chcol,nsfertc,ksfertc,nsferuc,ksferuc,nsfertn,ksfertn,nsferun,
      &  ksferun,kf2,kf2o,ick1,ick2,chon,gluonin,gammain,neutcurr,
@@ -55,10 +55,10 @@ c dsasdwdcossfsf final/intermediate stat
 
 c dsasdwdcossfchi final/intermediate state arrays/variables
       real*8  gg1c,gg2c
-      integer kp1c,kp2c,ciaux,kcfers,ncfers,kcfersv(3),ncferd,kcferd(3),
-     & ncsfert,kcsfertn(2),ncsfertc,kcsfertc(6)
+      integer kp1c,kp2c,ciaux,ncfers,kcfersv(3),ncferd,kcferd(3),
+     & ncsfert,kcsfertn(6),ncsfertc,kcsfertc(6)
       logical cgammain,cgluonin
-      common/aswsfchicom/gg1c,gg2c,kp1c,kp2c,ciaux,kcfers,ncfers,
+      common/aswsfchicom/gg1c,gg2c,kp1c,kp2c,ciaux,ncfers,
      & kcfersv,ncferd,kcferd,ncsfert,kcsfertn,ncsfertc,kcsfertc,
      & cgammain,cgluonin
 
diff -rupN darksusy-5.1.3/include/dsmssm.h darksusy-5.1.3.patched/include/dsmssm.h
--- darksusy-5.1.3/include/dsmssm.h	2013-01-31 21:46:16.000000000 +0000
+++ darksusy-5.1.3.patched/include/dsmssm.h	2017-02-11 20:01:26.167863534 +0000
@@ -140,9 +140,12 @@ c
       complex*16 neunmx(4,4),chaumx(2,2),chavmx(2,2),
      & slulmx(3,3),sldlmx(6,3),sldrmx(6,3),
      & squlmx(6,3),squrmx(6,3),sqdlmx(6,3),sqdrmx(6,3)
+      integer flavsortsqu(6),flavsortsqd(6),flavsortsl(6),
+     & flavsortsnu(3)
       common /mssmmixing/ neunmx,chaumx,chavmx,
      & slulmx,sldlmx,sldrmx,
-     & squlmx,squrmx,sqdlmx,sqdrmx,alpha,mix_stop,mix_sbot,mix_stau
+     & squlmx,squrmx,sqdlmx,sqdrmx,alpha,mix_stop,mix_sbot,mix_stau,
+     & flavsortsqu,flavsortsqd,flavsortsl,flavsortsnu ! see dsorder_flavour
 * msugra variables
       real*8 m0var,mhfvar,a0var,tgbetavar,sgnmuvar
       common/sugrainput/m0var,mhfvar,a0var,tgbetavar,sgnmuvar
diff -rupN darksusy-5.1.3/include/dswacom.h darksusy-5.1.3.patched/include/dswacom.h
--- darksusy-5.1.3/include/dswacom.h	2015-12-20 21:43:06.000000000 +0000
+++ darksusy-5.1.3.patched/include/dswacom.h	2017-02-11 20:01:26.167863534 +0000
@@ -18,30 +18,26 @@ c...to 52.
       integer wamax,walast(2),wanm
       parameter(wamax=6) ! number of tables to load simultaneously
       parameter(wanm=28) ! number of masses for tabulation
-      real*8 lb,ub,mi,thindex,zindex,dth,dz
-      real phiint,phidiff,phimixed
-      integer milow,thn,zn,yload
+      real*8 lb(14),ub(14),mi(wanm),thindex(-1:90,2),
+     &  zindex(-1:50,2),dth(-1:90),dz(-1:50)
+      real phiint(-1:90,0:50,wanm,13,2,wamax),
+     &  phidiff(-1:90,-1:50,wanm,13,2,wamax),
+     &  phimixed(-1:90,-1:50,wanm,13,2,wamax)
+      integer milow(14),thn,zn,yload(2,26)
       integer kind2ki(3)
       character*128 wadir
       character waftype
       character*40 wabase
-      common/wasim/lb(14),ub(14),mi(wanm),thindex(-1:90,2),
-     &  zindex(-1:50,2),dth(-1:90),dz(-1:50),
-     &  yload(2,26),walast,
-     &  milow(14),thn,zn,kind2ki,
+      common/wasim/lb,ub,mi,thindex,zindex,dth,dz,
+     &  yload,walast,
+     &  milow,thn,zn,kind2ki,
      &  wadir,waftype,wabase
-      common/wasim2/ phiint(-1:90,0:50,wanm,13,2,wamax),
-     &  phidiff(-1:90,-1:50,wanm,13,2,wamax),
-     &  phimixed(-1:90,-1:50,wanm,13,2,wamax)
+      common/wasim2/ phiint, phidiff, phimixed
 
 c...wagen - general stuff
       integer ch2chi(29),chi2chii(14),chii2chi(13),chi2ch(14)
       common /wagen/ch2chi,chi2chii,chii2chi,chi2ch
 
-c...wainfo - tag etc.
-      integer waerr,waistat
-      common/wainfo/waerr,waistat
-
 c...waopt - options
       real*8 wasbrmin
       common/waopt/wasbrmin
@@ -58,8 +54,7 @@ c...wabranch - annihilation branching ra
      &  wasv,wasigsip,wasigsdp,dswasetupcalled
 
 c save common block
-      save /wasim/,/wainfo/,/wasim2/,/wasim3/,/wagen/,
-     &  /wabranch/,/waopt/
+      save /wasim/,/wasim2/,/wasim3/,/wagen/,/wabranch/,/waopt/
 ***                                                                 ***
 ************************** end of muoncom.h ***************************
 
diff -rupN darksusy-5.1.3/makefile.in darksusy-5.1.3.patched/makefile.in
--- darksusy-5.1.3/makefile.in	2015-04-07 10:23:05.000000000 +0100
+++ darksusy-5.1.3.patched/makefile.in	2017-02-11 20:10:37.283871075 +0000
@@ -60,7 +60,9 @@ HBDIR=@HIGGSBOUNDSDIR@
 SLHADIR=@SLHADIR@
 TSPACKDIR=@TSPACKDIR@
 
-LIB=${DS_INSTALL}/lib
+DS_LIB=${DS_ROOT}/lib
+
+export DS_LIB
 
 ###############################################
 #### DO NOT CHANGE ANYTHING BELOW THIS LINE ###
@@ -82,7 +84,11 @@ config_paths config :
 
 darksusy_lib dslib : tspack
 	mkdir -p lib
-	cd $(DS_ROOT)/src; make all
+	cd $(DS_ROOT)/src; make libdarksusy.a
+
+darksusy_lib_shared dslib_shared : tspack libisajet_shared feynhiggs_shared higgsbounds_shared
+	mkdir -p lib
+	cd $(DS_ROOT)/src; make libdarksusy.so
 
 install : install_builds install_tables
 
@@ -139,15 +145,27 @@ install_tables :
 	cd $(DS_ROOT)/share/DarkSUSY; make all
 
 libisajet :
-	cd $(ISAJETDIR); make
+	cd $(ISAJETDIR); make libisajet.a
+
+libisajet_shared :
+	cd $(ISAJETDIR); make libisajet.so
 
 tspack:
 	cd $(TSPACKDIR); make
 
 feynhiggs :
 	cd $(FEYNHIGGSDIR); \
-	make lib ; \
-	cp -p build/libFH.a $(DS_ROOT)/lib/ ; \
+	make FC="$(FF)" FFLAGS="$(FOPT)" CFLAGS="-fPIC" lib ; \
+	cp -p build/libFH.a $(DS_LIB)/ ;
+	make copy_feynhiggs_headers
+
+feynhiggs_shared :
+	cd $(FEYNHIGGSDIR); \
+	make FC="$(FF)" FFLAGS="$(FOPT)" CFLAGS="-fPIC" lib_shared
+	make copy_feynhiggs_headers
+
+copy_feynhiggs_headers :
+	cd $(FEYNHIGGSDIR); \
 	cp -p build/include/FHCouplings.h $(DS_ROOT)/include/ ;  \
 	cp -p build/include/SLHA.h $(DS_ROOT)/include/  ; \
 	cp -p build/include/SLHADefs.h $(DS_ROOT)/include/  ; \
@@ -156,7 +174,11 @@ feynhiggs :
 higgsbounds :
 	cd $(HBDIR); \
 	make -f makefile_darksusy libHB ; \
-	cp -p libHB.a $(DS_ROOT)/lib/
+	cp -p libHB.a $(DS_LIB)/
+
+higgsbounds_shared :
+	cd $(HBDIR); \
+	make -f makefile_darksusy libHB_shared ; \
 
 # SLHA is currently not built, as feynhiggs includes slhalib
 slha :
@@ -184,7 +206,7 @@ clean :
 	cd $(DS_ROOT)/contrib/galprop/v50p; $(MAKE) clean
 	cd $(FEYNHIGGSDIR); $(MAKE) clean ; rm -fr ds
 	cd $(SLHADIR); $(MAKE) clean ; rm -fr ds
-	cd $(HBDIR); $(MAKE) -f makefile_darksusy -i veryclean; $(MAKE) -f makefile_darksusy -i hyperclean
+	cd $(HBDIR); $(MAKE) -f makefile_darksusy -i clean
 	cd $(TSPACKDIR); $(MAKE) clean
 
 
@@ -198,6 +220,11 @@ rmmore:
 	rm -f $(DS_ROOT)/lib/libFH.a
 	rm -f $(DS_ROOT)/lib/libSLHA.a
 	rm -f $(DS_ROOT)/lib/libHB.a
+	rm -f $(DS_INSTALL)/lib/libdarksusy.so
+	rm -f $(DS_INSTALL)/lib/libisajet.so
+	rm -f $(DS_INSTALL)/lib/libFH.so
+	rm -f $(DS_INSTALL)/lib/libSLHA.so
+	rm -f $(DS_INSTALL)/lib/libHB.so
 	rm -f $(DS_ROOT)/lib/aldata.o
 	rm -f $(DS_ROOT)/lib/libcfitsio.a
 	rm -f $(DS_ROOT)/share/DarkSUSY/ascii2bin
@@ -229,6 +256,7 @@ rmmore:
 # If it is, we know that DS_INSTALL must point to DS_ROOT.
 uninstall:
 	rm -f $(DS_INSTALL)/lib/libdarksusy.a
+	rm -f $(DS_INSTALL)/lib/libdarksusy.so
 	rm -f $(DS_INSTALL)/lib/aldata.o
 	if [ ! -f $(DS_INSTALL)/makefile.in ] ; then \
 		echo 'The install directory is different from DS_ROOT' ; \
diff -rupN darksusy-5.1.3/makefile.in~ darksusy-5.1.3.patched/makefile.in~
--- darksusy-5.1.3/makefile.in~	1970-01-01 01:00:00.000000000 +0100
+++ darksusy-5.1.3.patched/makefile.in~	2017-02-11 20:01:26.167863534 +0000
@@ -0,0 +1,287 @@
+# Main makefile for DarkSUSY. 
+# Technical questions about this makefile should be directed to
+# Joakim Edsjo, edsjo@physto.se
+# Date: June 23, 2006
+# Additions for FeynHiggs by Paolo Gondolo 2002/06/14.
+
+# This file will create libdarksusy.a
+# It will also create binary tables from the supplied ascii tables
+# to speed up particle yield calculations.
+# This file is created from makefile.in by running ./configure.
+# Type 'make' to make DarkSUSY
+# Type 'make install' to install (default is in /usr/local)
+
+########################################################
+### READ THROUGH AND CHANGE THE DEFAULT VALUES BELOW ###
+### BEFORE COMPILING.                                ###
+########################################################
+
+###### Compiler and compiler options                     ######
+###### DarkSUSY root directory and Feynhiggs directories ######
+
+# DS_ROOT is the root directory of DarkSUSY.
+# DS_INSTALL is the install directory. When DarkSUSY is installed, you
+# can in principle delete the DarkSUSY root directory if you wish.
+
+# Note that, on some systems (e.g. Mac OS X), the files in 
+# src/xfeynhiggs need the option -femulate-complex, so define
+# separate compilation options for these files using the variable FOPTFH. 
+# It doesn't seem necessary to compile the full FeynHiggs package with these
+# options (the compile is extremeley slow in this case).
+
+### GNU fortran g77 ###
+# NOTE: One some systems, the -ffast-math option causes problems. If this
+# is the case, please take it away, execute 'make clobber' to clean up and
+# redo the 'make'
+FF=@F77@
+FOPT=@FOPT@
+FFLAGS=$(FOPT)
+FOPTFH = @FOPT@
+
+# Determine where to install stuff (prefix is set in configure)
+prefix=@prefix@
+# DS_INSTALL is where the library and data files will be installed
+DS_INSTALL=${prefix}
+# DS_ROOT is where the root of the distribution is
+DS_ROOT=$(PWD)
+
+#### Contributed packages #####
+# The actual versions of these contributed packages to use are set
+# in configure.ac (that is transferred to configure with autoconf).
+# To change these permanently, edit configure.ac and rerun autoconf
+# To change temporarily, the preferred way is to run configure
+# giving your preferred version as an argument, e.g.on the form
+# ./configure ISAJETDIR=/data1/edsjo/DarkSUSY/library/trunk/contrib/isajet778-for-darksusy
+# You can also modify the makefile directly, but those changes will be
+# overwritten the next time you run configure.
+FEYNHIGGSDIR=@FEYNHIGGSDIR@
+ISAJETDIR=@ISAJETDIR@
+HBDIR=@HIGGSBOUNDSDIR@
+SLHADIR=@SLHADIR@
+TSPACKDIR=@TSPACKDIR@
+
+LIB=${DS_INSTALL}/lib
+
+###############################################
+#### DO NOT CHANGE ANYTHING BELOW THIS LINE ###
+###############################################
+
+#all : feynhiggs higgsbounds darksusy libisajet galprop mains_if_loc
+all : feynhiggs higgsbounds darksusy libisajet mains_if_loc
+
+default: darksusy libisajet mains_if_loc
+
+#darksusy : darksusy_lib dsgalprop inst_tab_if_loc
+darksusy : darksusy_lib inst_tab_if_loc
+
+mains :
+	cd test; make
+
+config_paths config :
+	perl $(DS_ROOT)/scr/config2.pl $(DS_ROOT) $(DS_INSTALL)
+
+darksusy_lib dslib : tspack
+	mkdir -p lib
+	cd $(DS_ROOT)/src; make libdarksusy.a
+
+darksusy_lib_shared dslib_shared : tspack libisajet_shared feynhiggs_shared higgsbounds_shared
+	mkdir -p lib
+	cd $(DS_ROOT)/src; make DS_LIB="$(DS_INSTALL)/lib" libdarksusy.so
+
+install : install_builds install_tables
+
+# This target creates binary tables and main programs right away if 
+# install is local i.e. make install not needed afterwards in this case
+inst_tab_if_loc : 
+	if [ -f $(DS_INSTALL)/makefile.in ] ; then \
+		make install_tables ; \
+	fi
+
+mains_if_loc : 
+	if [ -f $(DS_INSTALL)/makefile.in ] ; then \
+		cd test ; make ; \
+	fi
+
+
+# Only install builds if DS_INSTALL points to some other directory
+# than DS_ROOT
+install_builds:
+	if [ ! -f $(DS_INSTALL)/makefile.in ] ; then \
+		echo 'The install directory is different from DS_ROOT' ; \
+		echo 'Will install libraries and major data files.' ; \
+		mkdir -p $(DS_INSTALL) ; \
+		tar cf - lib share include --exclude .svn | (cd $(DS_INSTALL); tar xvf -) ; \
+	fi
+
+
+dsgalprop:
+	if [ `ar t $(DS_ROOT)/lib/libdarksusy.a dsgalprop.o` ] ; then \
+	cd $(DS_ROOT)/src/xgalprop ; make full ; \
+	else \
+	cd $(DS_ROOT)/src/xgalprop ; make fast ; \
+	fi
+
+cfitsio:
+	cd $(DS_ROOT)/contrib/cfitsio ; make ; \
+	cp libcfitsio.a $(DS_INSTALL)/lib/
+
+test:
+	cd $(DS_ROOT)/test; make all
+
+really_all : all install_tables
+
+check:
+	echo "this should run the test programs"
+
+installcheck:
+	echo "this should test the installation"
+
+really_all : all install_tables
+
+install_tables :
+	mkdir -p $(DS_INSTALL)/share/DarkSUSY
+	cd $(DS_ROOT)/share/DarkSUSY; make all
+
+libisajet :
+	cd $(ISAJETDIR); make libisajet.a
+
+libisajet_shared :
+	cd $(ISAJETDIR); make DS_LIB="$(DS_INSTALL)/lib" libisajet.so
+
+tspack:
+	cd $(TSPACKDIR); make
+
+feynhiggs :
+	cd $(FEYNHIGGSDIR); \
+	make FC="$(FF)" FFLAGS="$(FOPT)" CFLAGS="-fPIC" lib ; \
+	cp -p build/libFH.a $(DS_ROOT)/lib/ ; \
+	make copy_feynhiggs_headers
+
+feynhiggs_shared :
+	cd $(FEYNHIGGSDIR); \
+	make FC="$(FF)" FFLAGS="$(FOPT)" CFLAGS="-fPIC" DS_LIB="$(DS_INSTALL)/lib" lib_shared
+	make copy_feynhiggs_headers
+
+copy_feynhiggs_headers :
+	cd $(FEYNHIGGSDIR); \
+	cp -p build/include/FHCouplings.h $(DS_ROOT)/include/ ;  \
+	cp -p build/include/SLHA.h $(DS_ROOT)/include/  ; \
+	cp -p build/include/SLHADefs.h $(DS_ROOT)/include/  ; \
+	cp -p build/include/PDG.h $(DS_ROOT)/include/ 
+
+higgsbounds :
+	cd $(HBDIR); \
+	make -f makefile_darksusy libHB ; \
+	cp -p libHB.a $(DS_ROOT)/lib/
+
+higgsbounds_shared :
+	cd $(HBDIR); \
+	make -f makefile_darksusy DS_LIB="$(DS_INSTALL)/lib" libHB_shared ; \
+
+# SLHA is currently not built, as feynhiggs includes slhalib
+slha :
+	cd $(SLHADIR); \
+	make ; \
+	make install ; \
+	cp -p ds/lib/libSLHA.a $(DS_ROOT)/lib/ ; \
+	cp -p ds/include/SLHA.h $(DS_ROOT)/include/ ; \
+	cp -p ds/include/SLHADefs.h $(DS_ROOT)/include/ ; \
+	cp -p ds/include/PDG.h $(DS_ROOT)/include/ 
+
+galprop:
+	cd $(DS_ROOT)/src/xgalprop ; make full
+#	cd $(DS_ROOT)/contrib/galprop/v42.3ds; make
+	cd $(DS_ROOT)/contrib/galprop/v50p; make
+	cd $(DS_ROOT); if [ -f .no_cfitsio ]; then\
+		make cfitsio; rm .no_cfitsio; fi
+
+clean :
+	cd $(DS_ROOT)/src; $(MAKE) clean
+	cd $(DS_ROOT)/share/DarkSUSY; $(MAKE) clean
+	cd $(DS_ROOT)/docs; rm -f *.aux; rm -f *.log; rm -f *.dvi
+	cd $(ISAJETDIR); $(MAKE) clean
+#	cd $(DS_ROOT)/contrib/galprop/v42.3ds; $(MAKE) clean
+	cd $(DS_ROOT)/contrib/galprop/v50p; $(MAKE) clean
+	cd $(FEYNHIGGSDIR); $(MAKE) clean ; rm -fr ds
+	cd $(SLHADIR); $(MAKE) clean ; rm -fr ds
+	cd $(HBDIR); $(MAKE) -f makefile_darksusy -i clean
+	cd $(TSPACKDIR); $(MAKE) clean
+
+
+clobber distclean : clean rmmore
+
+# rmmore removes things added in the DarkSUSY root during configure
+# and build
+rmmore:
+	rm -f $(DS_ROOT)/lib/libdarksusy.a
+	rm -f $(DS_ROOT)/lib/libisajet.a
+	rm -f $(DS_ROOT)/lib/libFH.a
+	rm -f $(DS_ROOT)/lib/libSLHA.a
+	rm -f $(DS_ROOT)/lib/libHB.a
+	rm -f $(DS_ROOT)/lib/libdarksusy.so
+	rm -f $(DS_ROOT)/lib/libisajet.so
+	rm -f $(DS_ROOT)/lib/libFH.so
+	rm -f $(DS_ROOT)/lib/libSLHA.so
+	rm -f $(DS_ROOT)/lib/libHB.so
+	rm -f $(DS_ROOT)/lib/aldata.o
+	rm -f $(DS_ROOT)/lib/libcfitsio.a
+	rm -f $(DS_ROOT)/share/DarkSUSY/ascii2bin
+	rm -f $(DS_ROOT)/share/DarkSUSY/we-res*.bin
+	rm -f $(DS_ROOT)/share/DarkSUSY/sim*.bin
+	rm -f $(DS_ROOT)/include/{SLHA,SLHADefs,PDG}.h
+	find . -name '#*' -exec rm -f {} \;
+	find . -name '*~' -exec rm -f {} \;
+	find . -name '._*' -exec rm -f {} \;
+	find . -name '*.o' -exec rm -f {} \;
+	find test -perm +u=x -type f -exec rm -f {} \;
+	rm -f `find . -name makefile.in | sed s/\.in//`
+	rm -f `find . -name makefile_darksusy.in | sed s/\.in//`
+	rm -f config.log config.status
+	rm -fr autom4te.cache
+	rm -f src/ini/dsversion.h
+	rm -f src/ini/dsdir.h
+	rm -f contrib/galprop/v42.3ds/Configure.cc
+	rm -f contrib/galprop/v42.3ds/nuc_package.cc
+	rm -f contrib/galprop/v42.3ds/WNEWTR_FUNC_aws.f
+	rm -f .no_cfitsio
+	cd contrib/cfitsio; make -k distclean; cd $(DS_ROOT)
+#	find . -name '.[a-z,A-Z,#]*' -exec rm -f {} \;
+
+# uninstall removes things in the install directory
+# Note, we have to check if the install directory is the current working
+# directory, in which case some things should be kept
+# We do this by checking if makefile.in is in the install directory.
+# If it is, we know that DS_INSTALL must point to DS_ROOT.
+uninstall:
+	rm -f $(DS_INSTALL)/lib/libdarksusy.a
+	rm -f $(DS_INSTALL)/lib/libdarksusy.so
+	rm -f $(DS_INSTALL)/lib/aldata.o
+	if [ ! -f $(DS_INSTALL)/makefile.in ] ; then \
+		echo 'The install directory is different from DS_ROOT' ; \
+		echo 'Will clean up the install directory.' ; \
+		rm -f `find include -name '*.h' | sed s#^#${DS_INSTALL}/#` ; \
+		rm -fr $(DS_INSTALL)/share/DarkSUSY ; \
+	fi
+
+docs: pdf-manual
+
+pdf-manual pdf-Manual :
+	scr/headers2tex.pl
+	cd $(DS_ROOT)/docs; latex Manual; latex Manual; latex Manual
+	cd $(DS_ROOT)/docs; dvips -o Manual.ps Manual
+	cd $(DS_ROOT)/docs; ps2pdf Manual.ps
+
+pdf-manual-short pdf-Manual-short :
+	scr/headers2tex.pl --no-headers
+	cd $(DS_ROOT)/docs; \
+	latex Manual-short; latex Manual-short; latex Manual-short
+	cd $(DS_ROOT)/docs; dvips -o Manual-short.ps Manual-short
+	cd $(DS_ROOT)/docs; ps2pdf Manual-short.ps
+
+html-manual :
+	scr/headers2tex.pl
+	cd $(DS_ROOT)/docs; latex2html -white Manual.tex
+
+.PHONY: all config_paths darksusy_lib dslib private install_tables \
+	clean clobber uninstall rmmore libisajet pdf-manual html-manual \
+	darksusy feynhiggs higgsbounds
diff -rupN darksusy-5.1.3/misc/makefile.in darksusy-5.1.3.patched/misc/makefile.in
--- darksusy-5.1.3/misc/makefile.in	2013-02-15 17:58:12.000000000 +0000
+++ darksusy-5.1.3.patched/misc/makefile.in	2017-02-11 20:01:26.167863534 +0000
@@ -26,6 +26,10 @@ caprates : caprates.f $(LIB)/libdarksusy
 	$(FF) $(FOPT) $(INC) -L$(LIB) -o caprates caprates.f \
         -ldarksusy -lHB -lFH
 
+oh2test : oh2test.f $(LIB)/libdarksusy.a
+	$(FF) $(FOPT) $(INC) -L$(LIB) -o oh2test oh2test.f \
+        -L$(LIB)/aldata.o -ldarksusy -lisajet -lHB -lFH
+
 caprates_ea : caprates_ea.f $(LIB)/libdarksusy.a
 	$(FF) $(FOPT) $(INC) -L$(LIB) -o caprates_ea caprates_ea.f \
         -ldarksusy -lHB -lFH
diff -rupN darksusy-5.1.3/misc/oh2test.f darksusy-5.1.3.patched/misc/oh2test.f
--- darksusy-5.1.3/misc/oh2test.f	1970-01-01 01:00:00.000000000 +0100
+++ darksusy-5.1.3.patched/misc/oh2test.f	2017-02-11 20:01:26.167863534 +0000
@@ -0,0 +1,294 @@
+      program oh2test
+c
+c     This program is a sample DarkSUSY main program. It asks for model
+c     parameters interactively and calculates the relic density and
+c     various rates for each given model. This program can be used
+c     as is for quick calculations, or be modified to your liking for
+c     more advanced uses.
+c
+c     
+c-----This line is 72 columns long--------------------------------------
+c
+      implicit none
+
+      character*80 slhafile
+      real*8 xf,oh2,dsrdomega,dsabsq
+      real*8 dsandwdcosij
+      real*8 wx,dsanwx,wtot
+      real*8 iby,dsibyield
+      integer ierr,iwar,nfc,i,j,istat
+      integer knew(50)
+      logical first
+      data first/.true./
+
+      include 'dsmssm.h'
+      include 'dsio.h'
+      include 'dsidtag.h'
+c      integer flavsortsl(6),flavsortsqu(6),flavsortsqd(6),flavsortsnu(3)
+      data flavsortsl/1,2,3,4,5,6/
+      data flavsortsqu/1,2,3,4,5,6/
+      data flavsortsqd/1,2,3,4,5,6/
+      data flavsortsnu/1,2,3/
+
+c...Initial setup
+      do i=1,50
+         knew(i)=i
+      enddo
+      
+      
+      call dsinit
+
+c      slhafile='slha/GAMBIT_spectrum_all.slha2'
+c      slhafile='slha/GAMBIT_spectrum_sleptons.slha2'
+c      slhafile='slha/GAMBIT_spectrum_squarks.slha2'
+c      slhafile='slha/GAMBIT_spectrum_trilinears.slha2'
+c      slhafile='slha/slepton_wino.slha1'
+      slhafile='../slha2.dat'
+      call dsSLHAread(slhafile,0) ! 0=no warnings, 1=print warnings
+
+
+      write(*,*) ' '
+      write(*,*) '***** MODEL: ',idtag,' *****'
+
+      call dsprep
+      open (unit=30,file='dsmain1.tmp')
+      write(30,*) ' '
+      write(30,*) '***** MODEL: ',idtag,' *****'
+      call dswspectrum(30)
+      call dswvertx(30)
+      call dswwidth(30)
+      close (30)
+
+      write(*,*) pname(ksl(3))
+      write(*,*) 'mass(22) = ',mass(22),pname(22)
+      write(*,*) 'mass(23) = ',mass(23),pname(23)
+      write(*,*) 'mass(25) = ',mass(25),pname(25)
+      write(*,*) 'mass(26) = ',mass(26),pname(26)
+      write(*,*) 'mass(28) = ',mass(28),pname(28)
+      write(*,*) 'mass(29) = ',mass(29),pname(29)
+
+c      write(*,*) gl(kn(1),ksnu(1),knutau)
+c      write(*,*) gl(kn(1),ksnu(2),knutau)
+c      write(*,*) gl(kn(1),ksnu(3),knutau)
+      write(*,*) gl(kcha(1),ksl(1),knutau),pname(ksl(1))
+      write(*,*) gl(kcha(1),ksl(2),knutau),pname(ksl(2))
+      write(*,*) gl(kcha(1),ksl(3),knutau),pname(ksl(3))
+      write(*,*) gl(kcha(1),ksl(4),knutau),pname(ksl(4))
+      write(*,*) gl(kcha(1),ksl(5),knutau),pname(ksl(5))
+      write(*,*) gl(kcha(1),ksl(6),knutau),pname(ksl(6))
+
+      write(*,*) gl(ksqu(1),ksqu(1),kz),pname(ksqu(1))
+      write(*,*) gl(ksqu(3),ksqu(3),kz),pname(ksqu(3))
+      write(*,*) gr(ksqu(1),ksqu(1),kgluon),pname(ksqu(1))
+      write(*,*) gr(ksqu(3),ksqu(3),kgluon),pname(ksqu(3))
+      write(*,*) gl(ksqu(1),ksqu(1),kz),pname(ksqu(1))
+      write(*,*) gl(ksqu(3),ksqu(3),kz),pname(ksqu(3))
+      write(*,*) gr(ksqu(1),ksqu(1),kgluon),pname(ksqu(1))
+      write(*,*) gr(ksqu(3),ksqu(3),kgluon),pname(ksqu(3))
+      write(*,*) gl(kc,kc,kgluon),pname(kc)
+      write(*,*) gr(kc,kc,kgluon),pname(kc)
+
+      write(*,*) ' '
+      write(*,*) gl(kcha(1),ke,knue)
+      write(*,*) gr(kcha(1),ke,knue)
+      write(*,*) gl(kcha(1),ke,knumu)
+      write(*,*) gr(kcha(1),ke,knumu)
+
+      write(*,*) '  Neutralino mass = ',mass(kn(1))
+      write(*,*) '  Gaugino fraction = ',
+     &  dsabsq(neunmx(1,1))+dsabsq(neunmx(1,2))
+      write(*,*) '  Chargino 1 mass = ',mass(kcha(1))
+      write(*,*) '  Chargino 2 mass = ',mass(kcha(2))
+      write(*,*) '  H1 mass =  ',mass(kh1),width(kh1)
+      write(*,*) '  H2 mass =  ',mass(kh2),width(kh2)
+      write(*,*) '  H3 mass =  ',mass(kh3),width(kh3)
+      write(*,*) '  H+- mass = ',mass(khc),width(khc)
+
+      write(*,*) 'Calculating omega h^2 without coannihilations,',
+     &     ' please be patient...'
+      oh2=dsrdomega(0,1,xf,ierr,iwar,nfc)
+      write(*,*) '  without coannihilations Oh2 = ',oh2,ierr,iwar
+      write(*,*) 'Calculating omega h^2 with coannihilations,',
+     &     ' please be patient...'
+      oh2=dsrdomega(1,1,xf,ierr,iwar,nfc)
+      write(*,*) '  with coannihilations Oh2 = ',oh2,ierr,iwar
+      write(*,*) '  Chemical decoupling (freeze-out) occured at'
+      write(*,*) '  T_f = ',mass(kn(1))/xf,' GeV.'
+
+      iby=dsibyield(120.d0,152,istat)
+      write(*,*) 'IB gamma yield at 120 GeV = ',iby
+      iby=dsibyield(400.d0,152,istat)
+      write(*,*) 'IB gamma yield at 400 GeV = ',iby
+
+      wx=dsanwx(100.d0)
+      write(*,*) 'Invariant rate at 100 GeV: ',wx
+      wx=dsandwdcosij(100.d0,0.5d0,42,22)
+      write(*,*) 'chi_1^0 s_l_1, dsandwdcosij=',wx
+      wx=dsandwdcosij(100.d0,0.5d0,42,23)
+      write(*,*) 'chi_1^0 s_l_2, dsandwdcosij=',wx
+      wx=dsandwdcosij(100.d0,0.5d0,42,25)
+      write(*,*) 'chi_1^0 s_l_3, dsandwdcosij=',wx
+      wx=dsandwdcosij(100.d0,0.5d0,42,26)
+      write(*,*) 'chi_1^0 s_l_4, dsandwdcosij=',wx
+      wx=dsandwdcosij(100.d0,0.5d0,42,28)
+      write(*,*) 'chi_1^0 s_l_5, dsandwdcosij=',wx
+      wx=dsandwdcosij(100.d0,0.5d0,42,29)
+      write(*,*) 'chi_1^0 s_l_6, dsandwdcosij=',wx
+      wx=dsandwdcosij(100.d0,0.5d0,42,30)
+      write(*,*) 'chi_1^0 u~1, dsandwdcosij=',wx
+      write(*,*) ' '
+      wx=dsandwdcosij(100.d0,0.5d0,46,22)
+      write(*,*) 'chi_1^+ s_l_1, dsandwdcosij=',wx
+      wx=dsandwdcosij(100.d0,0.5d0,46,23)
+      write(*,*) 'chi_1^+ s_l_2, dsandwdcosij=',wx
+      wx=dsandwdcosij(100.d0,0.5d0,46,25)
+      write(*,*) 'chi_1^+ s_l_3, dsandwdcosij=',wx
+      wx=dsandwdcosij(100.d0,0.5d0,46,26)
+      write(*,*) 'chi_1^+ s_l_4, dsandwdcosij=',wx
+      wx=dsandwdcosij(100.d0,0.5d0,46,28)
+      write(*,*) 'chi_1^+ s_l_5, dsandwdcosij=',wx
+      wx=dsandwdcosij(100.d0,0.5d0,46,29)
+      write(*,*) 'chi_1^+ s_l_6, dsandwdcosij=',wx
+      wx=dsandwdcosij(100.d0,0.5d0,46,30)
+      write(*,*) 'chi_1^+ u~1, dsandwdcosij=',wx
+      write(*,*) ' '
+      wx=dsandwdcosij(100.d0,0.5d0,22,22)
+      write(*,*) 's_l_1 s_l_1, dsandwdcosij=',wx
+      wx=dsandwdcosij(100.d0,0.5d0,23,23)
+      write(*,*) 's_l_2 s_l_2, dsandwdcosij=',wx
+      wx=dsandwdcosij(100.d0,0.5d0,25,25)
+      write(*,*) 's_l_3 s_l_3, dsandwdcosij=',wx
+      wx=dsandwdcosij(100.d0,0.5d0,26,26)
+      write(*,*) 's_l_4 s_l_4, dsandwdcosij=',wx
+      wx=dsandwdcosij(100.d0,0.5d0,28,28)
+      write(*,*) 's_l_5 s_l_5, dsandwdcosij=',wx
+      wx=dsandwdcosij(100.d0,0.5d0,29,29)
+      write(*,*) 's_l_6 s_l_6, dsandwdcosij=',wx
+      wx=dsandwdcosij(100.d0,0.5d0,28,22)
+      write(*,*) 's_l_5 s_l_1, dsandwdcosij=',wx
+
+
+      write(*,*) ' '
+      wx=dsandwdcosij(100.d0,0.5d0,22,30)
+      write(*,*) 's_l_1 s_u_1, dsandwdcosij=',wx
+      wx=dsandwdcosij(100.d0,0.5d0,22,32)
+      write(*,*) 's_l_1 s_d_1, dsandwdcosij=',wx
+      wx=dsandwdcosij(100.d0,0.5d0,28,38)
+      write(*,*) 's_l_5 s_u_5, dsandwdcosij=',wx
+      wx=dsandwdcosij(100.d0,0.5d0,28,40)
+      write(*,*) 's_l_5 s_d_5, dsandwdcosij=',wx
+
+      write(*,*) ' '
+      wx=dsandwdcosij(100.d0,0.5d0,30,30)
+      write(*,*) 's_u_1 s_u_1, dsandwdcosij=',wx
+      wx=dsandwdcosij(100.d0,0.5d0,31,31)
+      write(*,*) 's_u_2 s_u_2, dsandwdcosij=',wx
+      wx=dsandwdcosij(100.d0,0.5d0,34,34)
+      write(*,*) 's_u_3 s_u_3, dsandwdcosij=',wx
+      wx=dsandwdcosij(100.d0,0.5d0,35,35)
+      write(*,*) 's_u_4 s_u_4, dsandwdcosij=',wx
+      wx=dsandwdcosij(100.d0,0.5d0,38,38)
+      write(*,*) 's_u_5 s_u_5, dsandwdcosij=',wx
+      wx=dsandwdcosij(100.d0,0.5d0,39,39)
+      write(*,*) 's_u_6 s_u_6, dsandwdcosij=',wx
+      write(*,*) ' '
+      wx=dsandwdcosij(100.d0,0.5d0,32,32)
+      write(*,*) 's_d_1 s_d_1, dsandwdcosij=',wx
+      wx=dsandwdcosij(100.d0,0.5d0,33,33)
+      write(*,*) 's_d_2 s_d_2, dsandwdcosij=',wx
+      wx=dsandwdcosij(100.d0,0.5d0,36,36)
+      write(*,*) 's_d_3 s_d_3, dsandwdcosij=',wx
+      wx=dsandwdcosij(100.d0,0.5d0,37,37)
+      write(*,*) 's_d_4 s_d_4, dsandwdcosij=',wx
+      wx=dsandwdcosij(100.d0,0.5d0,40,40)
+      write(*,*) 's_d_5 s_d_5, dsandwdcosij=',wx
+      wx=dsandwdcosij(100.d0,0.5d0,41,41)
+      write(*,*) 's_d_6 s_d_6, dsandwdcosij=',wx
+
+      write(*,*) ' '
+      wx=dsandwdcosij(100.d0,0.5d0,30,32)
+      write(*,*) 's_u_1 s_d_1, dsandwdcosij=',wx
+      wx=dsandwdcosij(100.d0,0.5d0,38,40)
+      write(*,*) 's_u_5 s_d_5, dsandwdcosij=',wx
+
+      write(*,*) ' '
+      wx=dsandwdcosij(100.d0,0.5d0,42,42)
+      write(*,*) 'chi_1^0 chi_1^0, dsandwdcosij=',wx
+      wx=dsandwdcosij(100.d0,0.5d0,42,43)
+      write(*,*) 'chi_1^0 chi_2^0, dsandwdcosij=',wx
+      wx=dsandwdcosij(100.d0,0.5d0,46,46)
+      write(*,*) 'chi_1^+ chi_1^+, dsandwdcosij=',wx
+      wx=dsandwdcosij(100.d0,0.5d0,42,46)
+      write(*,*) 'chi_1^0 chi_1^+, dsandwdcosij=',wx
+      
+      write(*,*) 'Now performing full test...'
+
+c...Manual reordering in other direction      
+c      flavsortsl(1)=3
+c      flavsortsl(2)=2
+c      flavsortsl(3)=1
+c      flavsortsl(4)=6
+c      flavsortsl(5)=5
+c      flavsortsl(6)=4
+
+c      flavsortsqu(1)=3
+c      flavsortsqu(2)=6
+c      flavsortsqu(3)=2
+c      flavsortsqu(4)=1
+c      flavsortsqu(5)=5
+c      flavsortsqu(6)=4
+
+c      flavsortsqd(1)=3
+c      flavsortsqd(2)=6
+c      flavsortsqd(3)=2
+c      flavsortsqd(4)=1
+c      flavsortsqd(5)=5
+c      flavsortsqd(6)=4
+
+c      flavsortsnu(1)=3
+c      flavsortsnu(2)=2
+c      flavsortsnu(3)=1
+c...Reorder knew
+c      do i=1,6         
+c         knew(ksl(i))=ksl(flavsortsl(i))
+c         knew(ksqu(i))=ksqu(flavsortsqu(i))
+c         knew(ksqd(i))=ksqd(flavsortsqd(i))
+c      enddo
+c      do i=1,3
+c         knew(ksnu(i))=ksnu(flavsortsnu(i))
+c      enddo
+      
+      
+      wtot=0.d0
+      do i=21,47 ! 30,41 ! 21,29  ! 21,47
+         do j=21,47 ! 30,41 ! 21,29 ! 21,47
+            wx=dsandwdcosij(100.d0,0.5d0,knew(i),knew(j))
+     &           +dsandwdcosij(100.d0,-0.5d0,knew(i),knew(j))
+            write(*,*) i,j,wx
+            write(47,*) i,j,wx
+            wtot=wtot+wx
+         enddo
+      enddo
+      write(*,*) 'wtot = ',wtot
+      
+
+      wx=dsandwdcosij(100.d0,0.5d0,46,21)
+      write(*,*) 'chi_1^+ snu_e wx = ',wx
+      wx=dsandwdcosij(100.d0,0.5d0,21,24)
+      write(*,*) 'snu_e snu_mu wx = ',wx
+      wx=dsandwdcosij(100.d0,0.5d0,21,25)
+      write(*,*) 'snu_e smu_1 wx = ',wx
+      wx=dsandwdcosij(100.d0,-0.5d0,21,25)
+      write(*,*) 'snu_e smu_1 wx = ',wx
+      wx=dsandwdcosij(100.d0,0.5d0,21,22)
+      write(*,*) 'snu_e se_1 wx = ',wx
+
+      write(*,*) ' '
+      wx=dsandwdcosij(100.d0,0.5d0,34,41)
+      write(*,*) 'c_1 b_1 wx = ',wx
+
+      write(*,*) ' '
+      wx=dsandwdcosij(100.d0,0.5d0,ksl(1),ksl(2))
+      write(*,*) 'sl_1 sl_2 wx = ',wx
+      
+      end
diff -rupN darksusy-5.1.3/src/as/dsaschicasea.f darksusy-5.1.3.patched/src/as/dsaschicasea.f
--- darksusy-5.1.3/src/as/dsaschicasea.f	2011-11-04 23:48:05.000000000 +0000
+++ darksusy-5.1.3.patched/src/as/dsaschicasea.f	2017-02-11 20:01:26.167863534 +0000
@@ -177,9 +177,13 @@ c....mass symbols used in form-code
           kchiu(k+2)=0
         enddo
         nchiu=2
-***** in the s-channel (1 fermion):
-        kfers(1)=kcfers
-        nfers=1
+***** in the s-channel (3 fermion): ! JE CORR 1->3
+c        kfers(1)=kcfers
+c        nfers=1
+        nfers=ncfers
+        do i=1,nfers
+           kfers(i)=kcfersv(i)
+        enddo
         goto 100
       endif
 *****
@@ -217,14 +221,14 @@ c....mass symbols used in form-code
         enddo
 ***** in the u-channel (4 neutralinos):
 ***** only when initial/final state (s)fermions are of same family
-        if(iifam(1).eq.ivfam(kfer)) then
-          do k=1,4
+c        if(iifam(1).eq.ivfam(kfer)) then
+          do k=1,4 ! JE CORR due to sfermion mixing
             kchiu(k)=kn(k)
           enddo
           nchiu=4
-	else
-          nchiu=0
-        endif
+c	else
+c          nchiu=0
+c        endif
 ***** no s-channel:
         nfers=0
         goto 100
@@ -239,15 +243,16 @@ c....mass symbols used in form-code
         nsfert=0 
 ***** in the u-channel (4 neutralinos):
 ***** only when initial/final state (s)fermions are of same family
-        if(iifam(1).eq.ivfam(kfer)) then
-          do k=1,4
+c        if(iifam(1).eq.ivfam(kfer)) then
+          do k=1,4 ! JE CORR, always include, due to sfermion mixings
             kchiu(k)=kn(k)
           enddo
           nchiu=4
-        else
-          nchiu=0
-        endif
-***** in the s-channel (1 lepton or 3 quarks):
+c        else
+c          nchiu=0
+c        endif
+        
+***** in the s-channel (3 leptons or 3 quarks):
         nfers=ncferd
         do i=1,nfers
           kfers(i)=kcferd(i)
diff -rupN darksusy-5.1.3/src/as/dsaschicaseb.f darksusy-5.1.3.patched/src/as/dsaschicaseb.f
--- darksusy-5.1.3/src/as/dsaschicaseb.f	2011-11-04 23:48:05.000000000 +0000
+++ darksusy-5.1.3.patched/src/as/dsaschicaseb.f	2017-02-11 20:01:26.167863534 +0000
@@ -171,9 +171,13 @@ c....mass symbols used in form-code
           kchiu(k+2)=0
         enddo
         nchiu=2
-***** in the s-channel (1 fermion): 
-        kfers(1)=kcfers
-        nfers=1
+***** in the s-channel (3 fermion): ! JE CORR 1->3
+c        kfers(1)=kcfers
+c        nfers=1
+        nfers=ncfers ! JE CORR 4 lines
+        do i=1,nfers
+           kfers(i)=kcfersv(i)
+        enddo
         goto 200
       endif
 *****
@@ -185,15 +189,15 @@ c....mass symbols used in form-code
 ***** no t-channel:  
         nsfert=0
 ***** in the u-channel (0 or 4 neutralinos):
-        if(iifam(1).eq.ivfam(kfer)) then
-          do k=1,4
+c        if(iifam(1).eq.ivfam(kfer)) then
+          do k=1,4 ! JE CORR due to sfermion mixing
             kchiu(k)=kn(k)
           enddo
           nchiu=4
-        else
-          nchiu=0
-        endif
-***** in the s-channel (1 lepton or 3 quarks):
+c        else
+c          nchiu=0
+c        endif
+***** in the s-channel (3 leptons or 3 quarks):
         nfers=ncferd
         do i=1,nfers
           kfers(i)=kcferd(i)
@@ -212,14 +216,14 @@ c....mass symbols used in form-code
           ksfert(i)=kcsfertc(i)
         enddo
 ***** in the u-channel (0 or 4 neutralinos):
-        if(iifam(1).eq.ivfam(kfer)) then
-          do k=1,4
+c        if(iifam(1).eq.ivfam(kfer)) then
+          do k=1,4 ! JE CORR due to sfermion mixing
             kchiu(k)=kn(k)
           enddo
           nchiu=4
-        else
-          nchiu=0
-        endif
+c        else
+c          nchiu=0
+c        endif
 ***** no s-channel:
         nfers=0
         goto 200
diff -rupN darksusy-5.1.3/src/as/dsaschicasec.f darksusy-5.1.3.patched/src/as/dsaschicasec.f
--- darksusy-5.1.3/src/as/dsaschicasec.f	2011-11-04 23:48:05.000000000 +0000
+++ darksusy-5.1.3.patched/src/as/dsaschicasec.f	2017-02-11 20:01:26.167863534 +0000
@@ -227,9 +227,13 @@ c....mass symbols used in form-code
           kchiu(k+2)=0
         enddo
         nchiu=2
-***** in the s-channel (1 fermion):
-        kfers(1)=kcfers
-        nfers=1
+***** in the s-channel (3 fermion): ! JE CORR 1->3
+c        kfers(1)=kcfers
+c        nfers=1
+        nfers=ncfers ! JE CORR 4 lines
+        do i=1,nfers
+           kfers(i)=kcfersv(i)
+        enddo
         goto 300
       endif
 *****
@@ -244,14 +248,14 @@ c....mass symbols used in form-code
           ksfert(i)=kcsfertc(i)
         enddo
 ***** in the u-channel (0 or 4 neutralinos):
-        if(iifam(1).eq.ivfam(kfer)) then
-          do k=1,4
+c        if(iifam(1).eq.ivfam(kfer)) then
+          do k=1,4 ! JE CORR due to sfermion mixing
             kchiu(k)=kn(k)
           enddo
           nchiu=4
-        else
-          nchiu=0
-        endif
+c        else
+c          nchiu=0
+c        endif
 ***** no s-channel:
         nfers=0       
         goto 300
@@ -265,15 +269,15 @@ c....mass symbols used in form-code
 ***** no t-channel:  
         nsfert=0 
 ***** in the u-channel (0 or 4 neutralinos):
-        if(iifam(1).eq.ivfam(kfer)) then
-          do k=1,4
+c        if(iifam(1).eq.ivfam(kfer)) then
+          do k=1,4 ! JE CORR, always include due to sfermion mixing
             kchiu(k)=kn(k)
           enddo
           nchiu=4
-        else
-          nchiu=0
-        endif
-***** in the s-channel (1 lepton or 3 quarks):
+c        else
+c          nchiu=0
+c        endif
+***** in the s-channel (3 leptons or 3 quarks):
         nfers=ncferd
         do i=1,nfers
           kfers(i)=kcferd(i)
diff -rupN darksusy-5.1.3/src/as/dsaschicased.f darksusy-5.1.3.patched/src/as/dsaschicased.f
--- darksusy-5.1.3/src/as/dsaschicased.f	2011-11-04 23:48:05.000000000 +0000
+++ darksusy-5.1.3.patched/src/as/dsaschicased.f	2017-02-11 20:01:26.167863534 +0000
@@ -194,9 +194,13 @@ c....mass symbols used in form-code
           kchiu(k+2)=0
         enddo
         nchiu=2
-***** in the s-channel (1 fermion):
-        kfers(1)=kcfers
-        nfers=1
+***** in the s-channel (3 fermion): ! JE CORR 1->3
+c        kfers(1)=kcfers
+c        nfers=1
+        nfers=ncfers ! JE CORR 4 lines
+        do i=1,nfers
+           kfers(i)=kcfersv(i)
+        enddo
         goto 400
       endif  
 *****
@@ -208,15 +212,15 @@ c....mass symbols used in form-code
 ***** no t-channel:
         nsfert=0
 ***** in the u-channel (0 or 4 neutralinos):
-        if(iifam(1).eq.ivfam(kfer)) then
-          do k=1,4
+c        if(iifam(1).eq.ivfam(kfer)) then
+          do k=1,4 ! JE CORR due to sfermion mixing
             kchiu(k)=kn(k)
           enddo
           nchiu=4
-        else
-          nchiu=0
-        endif
-***** in the s-channel (1 or 3 fermions):
+c        else
+c          nchiu=0
+c        endif
+***** in the s-channel (3 fermions):
         nfers=ncferd
         do i=1,nfers
           kfers(i)=kcferd(i)
@@ -235,14 +239,14 @@ c....mass symbols used in form-code
           ksfert(i)=kcsfertc(i)
         enddo
 ***** in the u-channel (0 or 4 neutralinos):
-        if(iifam(1).eq.ivfam(kfer)) then
-          do k=1,4
+c        if(iifam(1).eq.ivfam(kfer)) then
+          do k=1,4 ! JE CORR due to sfermion mixing
             kchiu(k)=kn(k)
           enddo
           nchiu=4
-        else
-          nchiu=0
-        endif 
+c        else
+c          nchiu=0
+c        endif 
 ***** no s-channel:
         nfers=0
         goto 400
diff -rupN darksusy-5.1.3/src/as/dsasdwdcossfchi.f darksusy-5.1.3.patched/src/as/dsasdwdcossfchi.f
--- darksusy-5.1.3/src/as/dsasdwdcossfchi.f	2011-11-04 23:48:05.000000000 +0000
+++ darksusy-5.1.3.patched/src/as/dsasdwdcossfchi.f	2017-02-11 20:01:26.167863534 +0000
@@ -15,6 +15,8 @@
 ***   final state quarks in selected cases, June 2006, Jan 2007      ***
 *** modified: Piero Ullio to include a new labelling of states,      ***
 ***   08-05-30                                                       ***
+*** modified: Joakim Edsjo to properly include inter-family mixing   ***
+***   2016-10-29                                                     ***
 ************************************************************************
 
       real*8 function dsasdwdcossfchi(p,costhe,kp1,kp2)
@@ -24,7 +26,7 @@
       include 'dsandwcom.h'
       include 'dsidtag.h'
       real*8 p,costhe
-      integer kp1,kp2,kp3,kp4,kp2int,i,f,fsave,icase
+      integer kp1,kp2,kp3,kp4,kp2int,i,f,icase
       real*8 w,par
       logical wok
 ************************************************************************
@@ -69,40 +71,91 @@
         do i=1,54
           prtial(i)=0.0d0
         enddo
-        if(kp1.ne.kp1c.or.kp2int.ne.kp2c) then
+        if(kp1.ne.kp1c.or.kp2int.ne.kp2c) then ! to save CPU, don't recalc
         kp1c=kp1
         kp2c=kp2int
         cgammain=.false.
         cgluonin=.false.
         ciaux=iifam(1)/10
         ciaux=iifam(1)-ciaux*10
-        do f=knue,kb
-          if(iifam(1).eq.ivfam(f)) then 
-            fsave=f
-          endif
-        enddo
-        kcfers=fsave
-        if(kcfers.le.ktau.and.kcfers.ge.knue) then
-          if(ciaux.eq.1) then
-            ncsfert=1
-            kcsfertn(1)=ksnu((fsave+1)/2)
-            ncferd=1
-            kcferd(1)=fsave+1
-          endif
-          if(ciaux.eq.2) then
-            ncsfert=2
-            kcsfertn(1)=ksl(fsave/2)
-            kcsfertn(2)=ksl(fsave/2+3)
-            ncferd=1
-            kcferd(1)=fsave-1
+c        do f=knue,kb ! not needed anymore (JE)
+c          if(iifam(1).eq.ivfam(f)) then 
+c            fsave=f
+c          endif
+c        enddo
+c        kcfers=fsave
+c...Add virtual s-channel fermions (made array by 3)
+        ncfers=3
+        if (iifam(1).eq.12.or.iifam(1).eq.22.or.iifam(1).eq.32) then
+           kcfersv(1)=ke
+           kcfersv(2)=kmu
+           kcfersv(3)=ktau
+        elseif (iifam(1).eq.11.or.iifam(1).eq.21.or.iifam(1).eq.31) then
+           kcfersv(1)=knue
+           kcfersv(2)=knumu
+           kcfersv(3)=knutau
+        elseif (iifam(1).eq.42.or.iifam(1).eq.52.or.iifam(1).eq.62) then
+           kcfersv(1)=kd
+           kcfersv(2)=ks
+           kcfersv(3)=kb
+        elseif (iifam(1).eq.41.or.iifam(1).eq.51.or.iifam(1).eq.61) then
+           kcfersv(1)=ku
+           kcfersv(2)=kc
+           kcfersv(3)=kt
+        else
+           write(*,*) 'ERROR in DS: dsasdwdcossfchi:'
+           write(*,*) 'Illegal iifam= ',iifam(1)
+           write(*,*) 'Something is wrong.'
+           stop
+        endif
+        
+        if(kcfersv(1).le.ktau.and.kcfersv(1).ge.knue) then ! slepton case
+          if(ciaux.eq.1) then ! sneutrino
+c            ncsfert=1 ! add all three?
+c            kcsfertn(1)=ksnu((fsave+1)/2)
+             ncsfert=3 ! JE CORRECTION these 4 lines
+             kcsfertn(1)=ksnu(1)
+             kcsfertn(2)=ksnu(2)
+             kcsfertn(3)=ksnu(3)
+c            ncferd=1 ! add all three
+c            kcferd(1)=fsave+1
+             ncferd=3 ! JE CORRECTION these 4 lines
+             kcferd(1)=ke
+             kcferd(2)=kmu
+             kcferd(3)=ktau
+          endif
+          if(ciaux.eq.2) then ! charged slepton
+c            ncsfert=2 ! add all six?
+c            kcsfertn(1)=ksl(fsave/2)
+c            kcsfertn(2)=ksl(fsave/2+3)
+            ncsfert=6 ! JE CORRECTION these 7 lines
+            kcsfertn(1)=ksl(1)
+            kcsfertn(2)=ksl(2)
+            kcsfertn(3)=ksl(3)
+            kcsfertn(4)=ksl(4)
+            kcsfertn(5)=ksl(5)
+            kcsfertn(6)=ksl(6)
+c            ncferd=1 ! add all three?
+c            kcferd(1)=fsave-1
+            ncferd=3 ! JE CORRECTION these 4 lines
+            kcferd(1)=knue
+            kcferd(2)=knumu
+            kcferd(3)=knutau
             cgammain=.true.
           endif
         endif
-        if(kcfers.le.kb.and.kcfers.ge.ku) then
-          if(ciaux.eq.1) then
-            ncsfert=2
-            kcsfertn(1)=ksqu((fsave-6+1)/2)
-            kcsfertn(2)=ksqu((fsave-6+1)/2+3)
+        if(kcfersv(1).le.kb.and.kcfersv(1).ge.ku) then ! squarks
+          if(ciaux.eq.1) then ! up type 
+c            ncsfert=2 ! add all 6?
+c            kcsfertn(1)=ksqu((fsave-6+1)/2)
+c            kcsfertn(2)=ksqu((fsave-6+1)/2+3)
+            ncsfert=6 ! JE CORRECTION these 7 lines
+            kcsfertn(1)=ksqu(1)
+            kcsfertn(2)=ksqu(2)
+            kcsfertn(3)=ksqu(3)
+            kcsfertn(4)=ksqu(4)
+            kcsfertn(5)=ksqu(5)
+            kcsfertn(6)=ksqu(6)
             ncferd=3
             kcferd(1)=kd
             kcferd(2)=ks
@@ -110,10 +163,17 @@
             cgammain=.true.
             cgluonin=.true.
           endif
-          if(ciaux.eq.2) then
-            ncsfert=2
-            kcsfertn(1)=ksqd((fsave-6)/2)
-            kcsfertn(2)=ksqd((fsave-6)/2+3)
+          if(ciaux.eq.2) then ! down type
+c            ncsfert=2 ! add all 6?
+c            kcsfertn(1)=ksqd((fsave-6)/2)
+c            kcsfertn(2)=ksqd((fsave-6)/2+3)
+            ncsfert=6 ! JE CORRECTION these 7 lines
+            kcsfertn(1)=ksqd(1)
+            kcsfertn(2)=ksqd(2)
+            kcsfertn(3)=ksqd(3)
+            kcsfertn(4)=ksqd(4)
+            kcsfertn(5)=ksqd(5)
+            kcsfertn(6)=ksqd(6)
             ncferd=3
             kcferd(1)=ku
             kcferd(2)=kc
@@ -126,92 +186,141 @@
         endif
 ******************************************************** sf chi^0 -> Z f
         kp3=kz
-        kp4=kcfers
         icase=1
-        call dsaschicasea(kp1,kp2,kp3,kp4,icase,par)
-        prtial(1)=par
+        do f=1,3
+c           kcfers=kcfersv(f)
+           kp4=kcfersv(f)
+           call dsaschicasea(kp1,kp2,kp3,kp4,icase,par)
+           prtial(1)=prtial(1)+par
+        enddo
+
 **************************************************** sf chi^0 -> gamma f
         if(cgammain) then
           kp3=kgamma
-          kp4=kcfers
           icase=7
-          call dsaschizero(kp1,kp2,kp3,kp4,icase,par)
-          prtial(2)=par
+          do f=1,3
+c             kcfers=kcfersv(f)
+             kp4=kcfersv(f)
+             call dsaschizero(kp1,kp2,kp3,kp4,icase,par)
+             prtial(2)=prtial(2)+par
+          enddo
         endif
 ******************************************************** sf chi^0 -> h f
         kp3=kh2
-        kp4=kcfers
         icase=1
-        call dsaschicasec(kp1,kp2,kp3,kp4,icase,par)
-        prtial(3)=par
+        do f=1,3
+c           kcfers=kcfersv(f)
+           kp4=kcfersv(f)
+           call dsaschicasec(kp1,kp2,kp3,kp4,icase,par)
+           prtial(3)=prtial(3)+par
+        enddo
 ******************************************************** sf chi^0 -> H f
         kp3=kh1
-        kp4=kcfers
         icase=1
-        call dsaschicasec(kp1,kp2,kp3,kp4,icase,par)
-        prtial(4)=par
+        do f=1,3
+c           kcfers=kcfersv(f)
+           kp4=kcfersv(f)
+           call dsaschicasec(kp1,kp2,kp3,kp4,icase,par)
+           prtial(4)=prtial(4)+par
+        enddo
 ******************************************************** sf chi^0 -> a f
         kp3=kh3
-        kp4=kcfers
         icase=2
-        call dsaschicasec(kp1,kp2,kp3,kp4,icase,par)
-        prtial(5)=par
+        do f=1,3
+c           kcfers=kcfersv(f)
+           kp4=kcfersv(f)
+           call dsaschicasec(kp1,kp2,kp3,kp4,icase,par)
+           prtial(5)=prtial(5)+par
+        enddo
 **************************************************** sf chi^0 -> gluon f
         if(cgluonin) then
           kp3=kgluon
-          kp4=kcfers
           icase=9
-          call dsaschizero(kp1,kp2,kp3,kp4,icase,par)
-          prtial(8)=par
+          do f=1,3
+c             kcfers=kcfersv(f)
+             kp4=kcfersv(f)
+             call dsaschizero(kp1,kp2,kp3,kp4,icase,par)
+             prtial(8)=prtial(8)+par
+          enddo
         endif
 ********
-        if(ciaux.eq.1) then
+c        kcfers=fsave ! FIX ME is this needed?
+        if(ciaux.eq.1) then ! up type
           prtial(6)=0.d0
           prtial(7)=0.d0
           do i=1,ncferd
             kp4=kcferd(i)
             if(kp4.le.ktau.and.kp4.ge.knue) then
-              ncsfertc=2
-              kcsfertc(1)=ksl(kp4/2)
-              kcsfertc(2)=ksl(kp4/2+3)
+c              ncsfertc=2
+c              kcsfertc(1)=ksl(kp4/2)
+c              kcsfertc(2)=ksl(kp4/2+3)
+               ncsfertc=6 ! JE CORRECTION these 7 lines
+               kcsfertc(1)=ksl(1)
+               kcsfertc(2)=ksl(2)
+               kcsfertc(3)=ksl(3)
+               kcsfertc(4)=ksl(4)
+               kcsfertc(5)=ksl(5)
+               kcsfertc(6)=ksl(6)
             else
-              ncsfertc=2
-              kcsfertc(1)=ksqd((kp4-6)/2)
-              kcsfertc(2)=ksqd((kp4-6)/2+3)
+c              ncsfertc=2
+c              kcsfertc(1)=ksqd((kp4-6)/2)
+c              kcsfertc(2)=ksqd((kp4-6)/2+3)
+               ncsfertc=6 ! JE CORRECTION these 7 lines
+               kcsfertc(1)=ksqd(1)
+               kcsfertc(2)=ksqd(2)
+               kcsfertc(3)=ksqd(3)
+               kcsfertc(4)=ksqd(4)
+               kcsfertc(5)=ksqd(5)
+               kcsfertc(6)=ksqd(6)
             endif
 *********************************************** sfu^* chi^0 -> W^- fdbar
             kp3=kw
             icase=2
+c            kcfers=kp4 ! JE CORRECTION
             call dsaschicaseb(kp1,kp2,kp3,kp4,icase,par)
             prtial(6)=prtial(6)+par   
 *********************************************** sfu^* chi^0 -> h^- fdbar
             kp3=khc
             icase=3
+c            kcfers=kp4 ! JE CORRECTION
             call dsaschicased(kp1,kp2,kp3,kp4,icase,par)
             prtial(7)=prtial(7)+par
           enddo
-        elseif(ciaux.eq.2) then  
+        elseif(ciaux.eq.2) then  ! down type
 ********
           prtial(6)=0.d0
           prtial(7)=0.d0
           do i=1,ncferd
             kp4=kcferd(i)
             if(kp4.le.ktau.and.kp4.ge.knue) then
-              ncsfertc=1
-              kcsfertc(1)=ksnu((kp4+1)/2)
+c              ncsfertc=1
+c              kcsfertc(1)=ksnu((kp4+1)/2)
+               ncsfertc=3 ! JE CORRECTION these 4 lines
+               kcsfertc(1)=ksnu(1)
+               kcsfertc(2)=ksnu(2)
+               kcsfertc(3)=ksnu(3)
             else
-              ncsfertc=2
-              kcsfertc(1)=ksqu((kp4-6+1)/2)
-              kcsfertc(2)=ksqu((kp4-6+1)/2+3)
+c              ncsfertc=2
+c              kcsfertc(1)=ksqu((kp4-6+1)/2)
+c              kcsfertc(2)=ksqu((kp4-6+1)/2+3)
+              ncsfertc=6 ! JE CORRECTION these 7 lines
+              kcsfertc(1)=ksqu(1)
+              kcsfertc(2)=ksqu(2)
+              kcsfertc(3)=ksqu(3)
+              kcsfertc(4)=ksqu(4)
+              kcsfertc(5)=ksqu(5)
+              kcsfertc(6)=ksqu(6)
             endif
 **************************************************** sfd chi^0 -> W^- fu
             kp3=kw
             icase=2
+c            kcfers=kp4+1 ! JE CORRECTION
             call dsaschicasea(kp1,kp2,kp3,kp4,icase,par)
             prtial(6)=prtial(6)+par
 **************************************************** sfd chi^0 -> h^- fu
             kp3=khc
             icase=4
+c            kcfers=kp4+1 ! JE CORRECTION
             call dsaschicasec(kp1,kp2,kp3,kp4,icase,par)
             prtial(7)=prtial(7)+par
           enddo
@@ -233,6 +342,15 @@
                                  ! or  sfd chi^0 -> h^- fu
         w=w+prtial(8)            ! sf chi^0 -> gluon f
         dsasdwdcossfchi = w      ! The weighting factor is 1
+c        write(*,*) 'sfchi, prtial(1)=',prtial(1)
+c        write(*,*) 'sfchi, prtial(2)=',prtial(2)
+c        write(*,*) 'sfchi, prtial(3)=',prtial(3)
+c        write(*,*) 'sfchi, prtial(4)=',prtial(4)
+c        write(*,*) 'sfchi, prtial(5)=',prtial(5)
+c        write(*,*) 'sfchi, prtial(6)=',prtial(6)
+c        write(*,*) 'sfchi, prtial(7)=',prtial(7)
+c        write(*,*) 'sfchi, prtial(8)=',prtial(8)
+c        write(*,*) 'sfchi, w=',w
 
 ************************************************************************
 *****
@@ -241,51 +359,124 @@
         do i=1,54
           prtial(i)=0.0d0
         enddo
-        if(kp1.ne.kp1c.or.kp2int.ne.kp2c) then
+        if(kp1.ne.kp1c.or.kp2int.ne.kp2c) then ! only recalcualte when needed
         kp1c=kp1
         kp2c=kp2int
         cgluonin=.false.
         ciaux=iifam(1)/10
         ciaux=iifam(1)-ciaux*10
-        do f=knue,kb
-          if(iifam(1).eq.ivfam(f)) then 
-            fsave=f
-          endif
-        enddo
-        kcfers=fsave
-        if(kcfers.le.ktau.and.kcfers.ge.knue) then
-          if(ciaux.eq.1) then
-            ncsfert=1
-            kcsfertn(1)=ksnu((fsave+1)/2)
-            ncfers=1
-            kcfersv(1)=kcfers
-            ncferd=1
-            kcferd(1)=fsave+1
-            ncsfertc=2
-            kcsfertc(1)=ksl((fsave+1)/2)
-            kcsfertc(2)=ksl((fsave+1)/2+3)
-          endif
-          if(ciaux.eq.2) then
-            ncsfert=2
-            kcsfertn(1)=ksl(fsave/2)
-            kcsfertn(2)=ksl(fsave/2+3)
-            ncfers=1
-            kcfersv(1)=kcfers
-            ncferd=1
-            kcferd(1)=fsave-1
-            ncsfertc=1
-            kcsfertc(1)=ksnu(fsave/2)
+c        do f=knue,kb! not needed anymore
+c          if(iifam(1).eq.ivfam(f)) then 
+c            fsave=f
+c          endif
+c        enddo
+c        kcfers=fsave
+c JE FIX. Is this enough with fsave and kcfers? Do we need to make kcfers an
+c array of dimension 3
+c...JE CORRECTION
+c...Add final state fermions to be used in this routine
+        ncfers=3
+        if (iifam(1).eq.12.or.iifam(1).eq.22.or.iifam(1).eq.32) then
+           kcfersv(1)=ke
+           kcfersv(2)=kmu
+           kcfersv(3)=ktau
+        elseif (iifam(1).eq.11.or.iifam(1).eq.21.or.iifam(1).eq.31) then
+           kcfersv(1)=knue
+           kcfersv(2)=knumu
+           kcfersv(3)=knutau
+        elseif (iifam(1).eq.42.or.iifam(1).eq.52.or.iifam(1).eq.62) then
+           kcfersv(1)=kd
+           kcfersv(2)=ks
+           kcfersv(3)=kb
+        elseif (iifam(1).eq.41.or.iifam(1).eq.51.or.iifam(1).eq.61) then
+           kcfersv(1)=ku
+           kcfersv(2)=kc
+           kcfersv(3)=kt
+        else
+           write(*,*) 'ERROR in DS: dsasdwdcossfchi:'
+           write(*,*) 'Illegal iifam= ',iifam(1)
+           write(*,*) 'Something is wrong.'
+           stop
+        endif
+
+        if(kcfersv(1).le.ktau.and.kcfersv(1).ge.knue) then
+          if(ciaux.eq.1) then ! sneutrino
+c            ncsfert=1
+c            kcsfertn(1)=ksnu((fsave+1)/2)
+            ncsfert=3 ! JE CORRECTION these 4 lines
+            kcsfertn(1)=ksnu(1)
+            kcsfertn(2)=ksnu(2)
+            kcsfertn(3)=ksnu(3)
+c            ncfers=1
+c            kcfersv(1)=kcfers
+c            ncfers=3 ! JE CORRECTION these 4 lines ! done already
+c            kcfersv(1)=kcfinal(1)
+c            kcfersv(2)=kcfinal(2)
+c            kcfersv(3)=kcfinal(3)
+c            ncferd=1
+c            kcferd(1)=fsave+1
+            ncferd=3 ! JE CORRECTION these 4 lines
+            kcferd(1)=ke
+            kcferd(2)=kmu
+            kcferd(3)=ktau
+c            ncsfertc=2
+c            kcsfertc(1)=ksl((fsave+1)/2)
+c            kcsfertc(2)=ksl((fsave+1)/2+3)
+           ncsfertc=6 ! JE CORRECTION these 7 lines
+           kcsfertc(1)=ksl(1)
+           kcsfertc(2)=ksl(2)
+           kcsfertc(3)=ksl(3)
+           kcsfertc(4)=ksl(4)
+           kcsfertc(5)=ksl(5)
+           kcsfertc(6)=ksl(6)
+          endif
+          if(ciaux.eq.2) then ! charged slepton
+c            ncsfert=2
+c            kcsfertn(1)=ksl(fsave/2)
+c            kcsfertn(2)=ksl(fsave/2+3)
+            ncsfert=6 ! JE CORRECTION these 7 lines
+            kcsfertn(1)=ksl(1)
+            kcsfertn(2)=ksl(2)
+            kcsfertn(3)=ksl(3)
+            kcsfertn(4)=ksl(4)
+            kcsfertn(5)=ksl(5)
+            kcsfertn(6)=ksl(6)
+c            ncfers=1
+c            kcfersv(1)=kcfers
+c            ncfers=3 ! JE CORRECTION these 4 lines ! done already
+c            kcfersv(1)=kcfinal(1)
+c            kcfersv(2)=kcfinal(2)
+c            kcfersv(3)=kcfinal(3)
+c            ncferd=1
+c            kcferd(1)=fsave-1
+            ncferd=3 ! JE CORRECTION these 4 lines
+            kcferd(1)=knue
+            kcferd(2)=knumu
+            kcferd(3)=knutau
+c            ncsfertc=1
+c            kcsfertc(1)=ksnu(fsave/2)
+            ncsfertc=3 ! JE CORRECTION these 4 lines
+            kcsfertc(1)=ksnu(1)
+            kcsfertc(2)=ksnu(2)
+            kcsfertc(3)=ksnu(3)
           endif
         endif
-        if(kcfers.le.kb.and.kcfers.ge.ku) then
-          if(ciaux.eq.1) then
-            ncsfert=2
-            kcsfertn(1)=ksqu((fsave-6+1)/2)
-            kcsfertn(2)=ksqu((fsave-6+1)/2+3)
-            ncfers=3
-            kcfersv(1)=ku
-            kcfersv(2)=kc
-            kcfersv(3)=kt
+        if(kcfersv(1).le.kb.and.kcfersv(1).ge.ku) then ! squarks
+          if(ciaux.eq.1) then ! up type
+c            ncsfert=2
+c            kcsfertn(1)=ksqu((fsave-6+1)/2)
+c            kcsfertn(2)=ksqu((fsave-6+1)/2+3)
+            ncsfert=6 ! JE CORRECTION these 7 lines
+            kcsfertn(1)=ksqu(1)
+            kcsfertn(2)=ksqu(2)
+            kcsfertn(3)=ksqu(3)
+            kcsfertn(4)=ksqu(4)
+            kcsfertn(5)=ksqu(5)
+            kcsfertn(6)=ksqu(6)
+c            ncfers=3 ! done already
+c            kcfersv(1)=ku
+c            kcfersv(2)=kc
+c            kcfersv(3)=kt
             ncferd=3
             kcferd(1)=kd
             kcferd(2)=ks
@@ -296,14 +487,21 @@
             enddo
             cgluonin=.true.
           endif
-          if(ciaux.eq.2) then
-            ncsfert=2
-            kcsfertn(1)=ksqd((fsave-6)/2)
-            kcsfertn(2)=ksqd((fsave-6)/2+3)
-            ncfers=3
-            kcfersv(1)=kd
-            kcfersv(2)=ks
-            kcfersv(3)=kb
+          if(ciaux.eq.2) then ! down type
+c            ncsfert=2
+c            kcsfertn(1)=ksqd((fsave-6)/2)
+c            kcsfertn(2)=ksqd((fsave-6)/2+3)
+            ncsfert=6 ! JE CORRECTION these 7 lines
+            kcsfertn(1)=ksqd(1)
+            kcsfertn(2)=ksqd(2)
+            kcsfertn(3)=ksqd(3)
+            kcsfertn(4)=ksqd(4)
+            kcsfertn(5)=ksqd(5)
+            kcsfertn(6)=ksqd(6)
+c            ncfers=3 ! done already
+c            kcfersv(1)=kd
+c            kcfersv(2)=ks
+c            kcfersv(3)=kb
             ncferd=3
             kcferd(1)=ku
             kcferd(2)=kc
@@ -318,7 +516,7 @@
 ********
         endif
 ********
-        if(ciaux.eq.1) then
+        if(ciaux.eq.1) then ! up type
 ************************************************* sfu^* chi^+ -> Z fdbar
           kp3=kz
           prtial(1)=0.d0
@@ -427,8 +625,9 @@
           w=w+prtial(10)           ! sfu^* chi^+ -> g fdbar
           dsasdwdcossfchi = w*0.5d0 ! 0.5d0 <- we should return weff for sf chi+ ann
                                     ! with sf and chi+ combined part. and anti-particle states
+          
 ********
-        elseif(ciaux.eq.2) then
+        elseif(ciaux.eq.2) then ! down type
 ****************************************************** sfd chi^+ -> Z fu
           kp3=kz
           prtial(1)=0.d0
@@ -481,6 +680,7 @@
             kp4=kcfersv(i)
 	    icase=5  
             call dsaschicasea(kp1,kp2,kp3,kp4,icase,par)
+c            write(*,*) 'sfd chi+ -> W+ fd: ',kp1,kp2,kp3,kp4,par
             prtial(6)=prtial(6)+par
           enddo
 **************************************************** sfd chi^+ -> h^+ fd
@@ -538,6 +738,16 @@
           dsasdwdcossfchi = w*0.5d0 
                ! 0.5d0 <- we should return weff for sf chi+ ann
                ! with sf and chi+ combined part. and anti-particle states
+c          write(*,*) 'sf-cha: prtial(1) = ',prtial(1)
+c          write(*,*) 'sf-cha: prtial(2) = ',prtial(2)
+c          write(*,*) 'sf-cha: prtial(3) = ',prtial(3)
+c          write(*,*) 'sf-cha: prtial(4) = ',prtial(4)
+c          write(*,*) 'sf-cha: prtial(5) = ',prtial(5)
+c          write(*,*) 'sf-cha: prtial(6) = ',prtial(6)
+c          write(*,*) 'sf-cha: prtial(7) = ',prtial(7)
+c          write(*,*) 'sf-cha: prtial(8) = ',prtial(8)
+c          write(*,*) 'sf-cha: prtial(9) = ',prtial(9)
+c          write(*,*) 'sf-cha: prtial(10)= ',prtial(10)
 ********
         else
           write(*,*) 'DS: wrong ciaux value =',ciaux
diff -rupN darksusy-5.1.3/src/as/dsasdwdcossfsf.f darksusy-5.1.3.patched/src/as/dsasdwdcossfsf.f
--- darksusy-5.1.3/src/as/dsasdwdcossfsf.f	2011-11-04 23:48:05.000000000 +0000
+++ darksusy-5.1.3.patched/src/as/dsasdwdcossfsf.f	2017-02-11 20:01:26.167863534 +0000
@@ -19,6 +19,11 @@
 *** modified: Piero Ullio to include mixing in fermion final states  ***
 ***   and a new labelling of states                                  ***
 ***   08-05-30                                                       ***
+***   Joakim Edsjo, bug fix in slepton-squark part (case 3)          ***
+***   2015-04-08                                                     ***
+***   Joakim Edsjo, made more general (full 6x6 mixing),             ***
+***   Cleaned up a bit (not as many if's needed with full 6x6        ***
+***   mixing). 2016-11-16                                            ***
 ************************************************************************
 
       real*8 function dsasdwdcossfsf(p,costhe,kp1,kp2)
@@ -64,7 +69,7 @@ c...them changed on return, let's use so
 ***** decide on type for kp1i and kp2i, i.e.:
 *****   itype(iii)=ivfam(ku) for up-type (s)quark
 *****   itype(iii)=ivfam(kd) for down-type (s)quark
-*****   itype(iii)=ivfam(iii) for (s)leptons
+*****   itype(iii)=ivfam(iii) for (s)leptons, JE CORR ivfam(ke) for (s)leptons
       itype(1)=ivtype(kp1i)
       itype(2)=ivtype(kp2i)
 
@@ -93,24 +98,28 @@ c...them changed on return, let's use so
       call dsaskinset1
 ***** 
 *****    3 cases:
+c======================================================================
+c======================================================================
 ***** 1) sfermions with same type index, i.e.:
-*****    slepton + slepton* (same family, both charged or both neutral) 
+*****    slepton + slepton* (both charged or both neutral) 
 *****    up-type-squark1 + up-type-squark2  or 
 *****    down-type-squark1 + down-type-squark2 
+c======================================================================
+c======================================================================
       if(itype(1).eq.itype(2)) then
-        do i=1,54
+        do i=1,66
           prtial(i)=0.0d0
         enddo
 ccc
 ccc check whether to reload final/intermediate state arrays/variables
 ccc
-        if(kp1i.ne.kp1s.or.kp2i.ne.kp2s) then
+        if(kp1i.ne.kp1s.or.kp2i.ne.kp2s) then ! recalculate when needed
         kp1s=kp1i
         kp2s=kp2i
 ccc
 ccc do the resetting in the various cases:
 ccc
-        do i=1,30
+        do i=1,66
           chon(i)=.false.
         enddo
         gluonin=.false.
@@ -119,30 +128,123 @@ ccc
         nosneutrinov=.true.
 ccc
         if(itype(1).ge.ivtype(knue).and.itype(1).le.ivtype(ktau)) then
+c============================================================
 ccc input:   \tilde{l}_1,2(i) \tilde{l}^*_1,2(i)
+c============================================================
 ccc
 ccc fermion channels:
 ccc
         i=0
-***** f fbar
+***** f fbar 
         do f=knue,kb
           i=i+1
           kp3in(i)=f
           kp4in(i)=f
           chon(i)=.true.
+       enddo                    ! i=1-12 now filled
+
+c..JE CORR following states added
+***** up-type quark(i), up-type antiquark(j) i,j matching initial state
+        i=12
+        do f1=1,3 ! i=13-18 filled here
+        do f2=1,3
+          kp3=ku+2*(f1-1)
+          kp4=ku+2*(f2-1)
+          if(kp3.ne.kp4) then
+          i=i+1
+c          if(iifam(1).eq.ivfam(kp3).and.iifam(2).eq.ivfam(kp4)) then ! JE CORR
+          chon(i)=.true.
+          kp3in(i)=kp3
+          kp4in(i)=kp4
+c          endif ! JE CORR
+          endif         
+        enddo
+        enddo
+c...JE CORR following states added        
+***** down-type quark(i), down-type antiquark(j) i.ne.j 
+        do f1=1,3 ! i=19-24 filled here
+        do f2=1,3 
+          kp3=kd+2*(f1-1)
+          kp4=kd+2*(f2-1)
+          if(kp3.ne.kp4) then
+          i=i+1
+          chon(i)=.true.
+          kp3in(i)=kp3
+          kp4in(i)=kp4
+          endif         
+        enddo
         enddo
-***** no up-type quark(i), up-type antiquark(j) i.ne.j 
-***** no down-type quark(i), down-type antiquark(j) i.ne.j 
+       
 ***** lepton1,  lepton2
-        i=25
-        chon(i)=.true.
-        do f=knue,ktau
-          if(itype(1).eq.ivtype(f)) then
-            kp3in(i)=f
-            kp4in(i)=f
-            fsave=f
-          endif
-        enddo      
+c...JE CORR Added all families as final states, ch 25-30
+        i=24
+        if (itype(1).eq.ivtype(knue)) then ! sneutrino
+           do f1=1,3
+              do f2=f1,3
+                 i=i+1
+                 chon(i)=.true.
+                 kp3in(i)=knu(f1)
+                 kp4in(i)=knu(f2)
+              enddo
+           enddo
+           fsave=knue           ! just for type testing later
+        else                    ! charged slepton
+           do f1=1,3
+              do f2=f1,3
+                 i=i+1
+                 chon(i)=.true.
+                 kp3in(i)=kl(f1)
+                 kp4in(i)=kl(f2)
+              enddo
+           enddo
+           fsave=ke ! just for type testing
+        endif
+        
+c..Old one family code. Replaced by code above        
+c        i=25 ! lepton_1 lepton_1 (same type)
+c        chon(i)=.true.
+c        do f=knue,ktau
+c          if(itype(1).eq.ivtype(f)) then 
+c            kp3in(i)=f
+c            kp4in(i)=f
+c            fsave=f
+c          endif
+c        enddo      
+
+c...Mixed final state lepton states (OK even w/o flavour violation
+c...for initial states with different flavours)        
+        i=54
+        do f1=1,3 ! i=55-60 filled here, nu_i nu_j 
+           do f2=1,3
+              kp3=knu(f1)
+              kp4=knu(f2)
+              if (kp3.ne.kp4) then
+                 i=i+1
+                 if (itype(1).eq.itype(2)) then ! same type (up/down)
+                    kp3in(i)=kp3 ! sl sl* ->
+                    kp4in(i)=kp4
+                    chon(i)=.true.
+                 endif
+              endif
+           enddo
+        enddo
+
+        do f1=1,3 ! i=61-66 filled here, l_i l_j
+           do f2=1,3
+              kp3=kl(f1)
+              kp4=kl(f2)
+              if (kp3.ne.kp4) then
+                 i=i+1
+                 if (itype(1).eq.itype(2)) then ! same type (up/down)
+                    kp3in(i)=kp3 ! sl sl* ->
+                    kp4in(i)=kp4
+                    chon(i)=.true.
+                 endif
+              endif
+           enddo
+        enddo
+        
+        
 ccc
 ccc gauge boson channels:
 ccc
@@ -152,24 +254,57 @@ ccc
 ccc t- and u-channels:
 ccc
         if(dabs(echarg(fsave)).gt.1.d-15) then ! for charged sleptons:
-          ksfertc(1)=ksnu(fsave/2)
-          nsfertc=1
+c          ksfertc(1)=ksnu(fsave/2)
+c          nsfertc=1
+          nsfertc=3 ! JE CORRECTION 4 lines
+          ksfertc(1)=ksnu(1)
+          ksfertc(2)=ksnu(2)
+          ksfertc(3)=ksnu(3)
           nsferuc=0
-          ksfertn(1)=ksl(fsave/2)
-          ksfertn(2)=ksl(fsave/2+3)
-          nsfertn=2
-          ksferun(1)=ksl(fsave/2)
-          ksferun(2)=ksl(fsave/2+3)
-          nsferun=2
+c          ksfertn(1)=ksl(fsave/2)
+c          ksfertn(2)=ksl(fsave/2+3)
+c          nsfertn=2
+          nsfertn=6 ! JE CORRECTION 7 lines
+          ksfertn(1)=ksl(1)
+          ksfertn(2)=ksl(2)
+          ksfertn(3)=ksl(3)
+          ksfertn(4)=ksl(4)
+          ksfertn(5)=ksl(5)
+          ksfertn(6)=ksl(6)
+c          ksferun(1)=ksl(fsave/2)
+c          ksferun(2)=ksl(fsave/2+3)
+c          nsferun=2
+          nsferun=6 ! JE CORRECTION 7 lines
+          ksferun(1)=ksl(1)
+          ksferun(2)=ksl(2)
+          ksferun(3)=ksl(3)
+          ksferun(4)=ksl(4)
+          ksferun(5)=ksl(5)
+          ksferun(6)=ksl(6)
         else ! for sneutrinos:
           nsfertc=0
-          ksferuc(1)=ksl((fsave+1)/2)
-          ksferuc(2)=ksl((fsave+1)/2+3)
-          nsferuc=2
-          ksfertn(1)=ksnu((fsave+1)/2)
-          nsfertn=1
-          ksferun(1)=ksnu((fsave+1)/2)
-          nsferun=1
+c          ksferuc(1)=ksl((fsave+1)/2)
+c          ksferuc(2)=ksl((fsave+1)/2+3)
+c          nsferuc=2
+          nsferuc=6 ! JE CORRECTION 7 lines
+          ksferuc(1)=ksl(1)
+          ksferuc(2)=ksl(2)
+          ksferuc(3)=ksl(3)
+          ksferuc(4)=ksl(4)
+          ksferuc(5)=ksl(5)
+          ksferuc(6)=ksl(6)
+c          ksfertn(1)=ksnu((fsave+1)/2)
+c          nsfertn=1
+          nsfertn=3 ! JE CORRECTION 4 lines
+          ksfertn(1)=ksnu(1)
+          ksfertn(2)=ksnu(2)
+          ksfertn(3)=ksnu(3)
+c          ksferun(1)=ksnu((fsave+1)/2)
+c          nsferun=1
+          nsferun=3 ! JE CORRECTION 4 lines
+          ksferun(1)=ksnu(1)
+          ksferun(2)=ksnu(2)
+          ksferun(3)=ksnu(3)
           nosneutrinov=.false.
         endif
 ccc
@@ -180,8 +315,11 @@ ccc
         cfactfin=3.d0
         endif
 ccc
-        if(iifam(1).eq.iifam(2).and.itype(1).eq.ivtype(ku)) then
-ccc input:   \tilde{u}_1,2(i) \tilde{u}^*_1,2(i)
+c        if(iifam(1).eq.iifam(2).and.itype(1).eq.ivtype(ku)) then
+        if(itype(1).eq.ivtype(ku)) then ! JE CORR
+c============================================================
+ccc input:   \tilde{u}_1,2(i) \tilde{u}^*_1,2(j) (all i,j)
+c============================================================
 ccc
 ccc fermion channels:
 ccc
@@ -193,172 +331,28 @@ ccc
           kp4in(i)=f
           chon(i)=.true.
         enddo
-***** no up-type quark(i), up-type antiquark(j) i.ne.j 
-        i=i+6
-***** down-type quark(i), down-type antiquark(j) i.ne.j 
-        do f1=1,3
-        do f2=1,3
-          kp3=kd+2*(f1-1)
-          kp4=kd+2*(f2-1)
-          if(kp3.ne.kp4) then
-          i=i+1
-          chon(i)=.true.
-          kp3in(i)=kp3
-          kp4in(i)=kp4
-          endif         
-        enddo
-        enddo
-***** up-type quark1, up-type quark2 
-        do f1=1,3
-        do f2=f1,3
-          kp3=ku+2*(f1-1)
-          kp4=ku+2*(f2-1)
-          i=i+1  
-          if(iifam(1).eq.ivfam(kp3).and.iifam(2).eq.ivfam(kp4).or.
-     &       iifam(1).eq.ivfam(kp4).and.iifam(2).eq.ivfam(kp3)) then
-            chon(i)=.true.
-            kp3in(i)=kp3
-            kp4in(i)=kp4
-            fsave=f1
-          endif
-        enddo
-        enddo
-ccc
-ccc boson channels:
-ccc
-        gluonin=.true.
-        gammain=.true.
-        neutcurr=.true.
-ccc
-ccc t- and u-channels:
-ccc
-        nsfertc=0 
-        do i=1,6
-          ksferuc(i)=ksqd(i)
-        enddo
-        nsferuc=6
-        ksfertn(1)=ksqu(fsave)
-        ksfertn(2)=ksqu(fsave+3)
-        nsfertn=2
-        ksferun(1)=ksqu(fsave)
-        ksferun(2)=ksqu(fsave+3)
-        nsferun=2
-ccc
-ccc degrees of freedom and color factors
-ccc
-        gg1=3.d0
-        gg2=3.d0
-        chcol=2
-        call dsascolset(chcol)
-        cfactini=1.d0  ! set inside the routine dsasfercol
-        cfactfin=1.d0
-ccc
-        endif
-ccc
-        if(iifam(1).eq.iifam(2).and.itype(1).eq.ivtype(kd)) then
-ccc input:   \tilde{d}_1,2(i) \tilde{d}^*_1,2(i)
-        i=0
-***** f fbar
-        do f=knue,kb
-          i=i+1
-          kp3in(i)=f
-          kp4in(i)=f
-          chon(i)=.true.
-        enddo
-***** up-type quark(i), up-type antiquark(j) i.ne.j 
-        do f1=1,3
-        do f2=1,3
-          kp3=ku+2*(f1-1)
-          kp4=ku+2*(f2-1)
-          if(kp3.ne.kp4) then
-          i=i+1
-          chon(i)=.true.
-          kp3in(i)=kp3
-          kp4in(i)=kp4
-          endif         
-        enddo
-        enddo
-***** no down-type quark(i), down-type antiquark(j) i.ne.j 
-        i=i+6
-***** down-type quark1, down-type quark2 
-        do f1=1,3
-        do f2=f1,3
-          kp3=kd+2*(f1-1)
-          kp4=kd+2*(f2-1)
-          i=i+1  
-          if(iifam(1).eq.ivfam(kp3).and.iifam(2).eq.ivfam(kp4).or.
-     &       iifam(1).eq.ivfam(kp4).and.iifam(2).eq.ivfam(kp3)) then
-            chon(i)=.true.
-            kp3in(i)=kp3
-            kp4in(i)=kp4
-            fsave=f1
-          endif
-        enddo
-        enddo  
-ccc
-ccc boson channels:
-ccc
-        gluonin=.true.
-        gammain=.true.
-        neutcurr=.true.
-ccc
-ccc t- and u-channels:
-ccc
-        do i=1,6
-          ksfertc(i)=ksqu(i)
-        enddo
-        nsfertc=6
-        nsferuc=0
-        ksfertn(1)=ksqd(fsave)
-        ksfertn(2)=ksqd(fsave+3)
-        nsfertn=2
-        ksferun(1)=ksqd(fsave)
-        ksferun(2)=ksqd(fsave+3)
-        nsferun=2
-ccc
-ccc degrees of freedom and color factors
-ccc
-        gg1=3.d0
-        gg2=3.d0
-        chcol=2
-        call dsascolset(chcol)
-        cfactini=1.d0  ! set inside the routine dsasfercol
-        cfactfin=1.d0
-ccc
-        endif
-ccc
-        if(iifam(1).ne.iifam(2).and.itype(1).eq.ivtype(ku)) then
-ccc input:   \tilde{u}_1,2(i) \tilde{u}^*_1,2(j)  i.ne.j
-ccc
-ccc fermion channels:
-ccc
-        i=0
-***** down-type quark(i), down-type antiquark(i) 
-        do f=1,3
-          i=kd+2*(f-1)
-          kp3in(i)=i
-          kp4in(i)=i
-          chon(i)=.true.
-        enddo
+
+c..JE CORR following states added
 ***** up-type quark(i), up-type antiquark(j) i,j matching initial state
         i=12
-        do f1=1,3
+        do f1=1,3 ! i=13-18 filled here
         do f2=1,3
           kp3=ku+2*(f1-1)
           kp4=ku+2*(f2-1)
           if(kp3.ne.kp4) then
           i=i+1
-          if(iifam(1).eq.ivfam(kp3).and.iifam(2).eq.ivfam(kp4)) then
+c          if(iifam(1).eq.ivfam(kp3).and.iifam(2).eq.ivfam(kp4)) then ! JE CORR
           chon(i)=.true.
           kp3in(i)=kp3
           kp4in(i)=kp4
-          endif
+c          endif ! JE CORR
           endif         
         enddo
         enddo
+        
 ***** down-type quark(i), down-type antiquark(j) i.ne.j 
-        do f1=1,3
-        do f2=1,3
+        do f1=1,3 ! i=19-24 filled here
+        do f2=1,3 
           kp3=kd+2*(f1-1)
           kp4=kd+2*(f2-1)
           if(kp3.ne.kp4) then
@@ -369,23 +363,28 @@ ccc
           endif         
         enddo
         enddo
+
 ***** up-type quark1, up-type quark2 
-        do f1=1,3
+        do f1=1,3 ! i=25-30 filled here
         do f2=f1,3
           kp3=ku+2*(f1-1)
           kp4=ku+2*(f2-1)
           i=i+1  
-          if(iifam(1).eq.ivfam(kp3).and.iifam(2).eq.ivfam(kp4).or.
-     &       iifam(1).eq.ivfam(kp4).and.iifam(2).eq.ivfam(kp3)) then
+c          if(iifam(1).eq.ivfam(kp3).and.iifam(2).eq.ivfam(kp4).or. ! JE CORR
+c     &       iifam(1).eq.ivfam(kp4).and.iifam(2).eq.ivfam(kp3)) then
             chon(i)=.true.
             kp3in(i)=kp3
             kp4in(i)=kp4
-          endif
+c            fsave=f1 ! JE CORR
+c          endif
         enddo
         enddo
 ccc
-ccc only w gauge boson channels:
+ccc boson channels:
 ccc
+        gluonin=.true.
+        gammain=.true.
+        neutcurr=.true.
 ccc
 ccc t- and u-channels:
 ccc
@@ -394,8 +393,26 @@ ccc
           ksferuc(i)=ksqd(i)
         enddo
         nsferuc=6
-        nsfertn=0
-        nsferun=0
+c        ksfertn(1)=ksqu(fsave)
+c        ksfertn(2)=ksqu(fsave+3)
+c        nsfertn=2
+        nsfertn=6 ! JE CORRECTION 7 lines
+        ksfertn(1)=ksqu(1)
+        ksfertn(2)=ksqu(2)
+        ksfertn(3)=ksqu(3)
+        ksfertn(4)=ksqu(4)
+        ksfertn(5)=ksqu(5)
+        ksfertn(6)=ksqu(6)
+c        ksferun(1)=ksqu(fsave)
+c        ksferun(2)=ksqu(fsave+3)
+c        nsferun=2
+        nsferun=6 ! JE CORRECTION 7 lines
+        ksferun(1)=ksqu(1)
+        ksferun(2)=ksqu(2)
+        ksferun(3)=ksqu(3)
+        ksferun(4)=ksqu(4)
+        ksferun(5)=ksqu(5)
+        ksferun(6)=ksqu(6)
 ccc
 ccc degrees of freedom and color factors
 ccc
@@ -408,21 +425,20 @@ ccc
 ccc
         endif
 ccc
-        if(iifam(1).ne.iifam(2).and.itype(1).eq.ivtype(kd)) then
-ccc input:   \tilde{d}_1,2(i) \tilde{d}^*_1,2(j)  i.ne.j
-ccc
-ccc fermion channels:
-ccc
+c        if(iifam(1).eq.iifam(2).and.itype(1).eq.ivtype(kd)) then
+        if(itype(1).eq.ivtype(kd)) then ! JE CORR
+c============================================================
+ccc input:   \tilde{d}_1,2(i) \tilde{d}^*_1,2(j) (all i,j)
+c============================================================
         i=0
-***** up-type quark(i), up-type antiquark(i) 
-        do f=1,3
-          i=ku+2*(f-1)
-          kp3in(i)=i
-          kp4in(i)=i
+***** f fbar
+        do f=knue,kb
+          i=i+1
+          kp3in(i)=f
+          kp4in(i)=f
           chon(i)=.true.
         enddo
-***** up-type quark(i), up-type antiquark(j) i.ne.j
-        i=12
+***** up-type quark(i), up-type antiquark(j) i.ne.j 
         do f1=1,3
         do f2=1,3
           kp3=ku+2*(f1-1)
@@ -435,6 +451,8 @@ ccc
           endif         
         enddo
         enddo
+
+c...JE CORR added d_i d_j final states to be more general
 ***** down-type quark(i), down-type antiquark(j) i,j matching initial state 
         do f1=1,3
         do f2=1,3
@@ -442,31 +460,36 @@ ccc
           kp4=kd+2*(f2-1)
           if(kp3.ne.kp4) then
           i=i+1
-          if(iifam(1).eq.ivfam(kp3).and.iifam(2).eq.ivfam(kp4)) then
+c          if(iifam(1).eq.ivfam(kp3).and.iifam(2).eq.ivfam(kp4)) then ! JE CORR
           chon(i)=.true.
           kp3in(i)=kp3
           kp4in(i)=kp4
-          endif
+c          endif ! JE CORR
           endif         
         enddo
         enddo
+      
 ***** down-type quark1, down-type quark2 
         do f1=1,3
         do f2=f1,3
           kp3=kd+2*(f1-1)
           kp4=kd+2*(f2-1)
-          i=i+1  
-          if(iifam(1).eq.ivfam(kp3).and.iifam(2).eq.ivfam(kp4).or.
-     &       iifam(1).eq.ivfam(kp4).and.iifam(2).eq.ivfam(kp3)) then
+          i=i+1
+c          if(iifam(1).eq.ivfam(kp3).and.iifam(2).eq.ivfam(kp4).or. ! JE CORR
+c     &       iifam(1).eq.ivfam(kp4).and.iifam(2).eq.ivfam(kp3)) then
             chon(i)=.true.
             kp3in(i)=kp3
             kp4in(i)=kp4
-          endif
-        enddo
+c            fsave=f1 ! JE COEE
+c          endif ! JE CORR
         enddo
+        enddo  
 ccc
-ccc only w gauge boson channels:
+ccc boson channels:
 ccc
+        gluonin=.true.
+        gammain=.true.
+        neutcurr=.true.
 ccc
 ccc t- and u-channels:
 ccc
@@ -475,8 +498,26 @@ ccc
         enddo
         nsfertc=6
         nsferuc=0
-        nsfertn=0
-        nsferun=0
+c        ksfertn(1)=ksqd(fsave)
+c        ksfertn(2)=ksqd(fsave+3)
+c        nsfertn=2
+        nsfertn=6 ! JE CORRECTION 7 lines
+        ksfertn(1)=ksqd(1)
+        ksfertn(2)=ksqd(2)
+        ksfertn(3)=ksqd(3)
+        ksfertn(4)=ksqd(4)
+        ksfertn(5)=ksqd(5)
+        ksfertn(6)=ksqd(6)
+c        ksferun(1)=ksqd(fsave)
+c        ksferun(2)=ksqd(fsave+3)
+c        nsferun=2
+        nsferun=6 ! JE CORRECTION 7 lines
+        ksferun(1)=ksqd(1)
+        ksferun(2)=ksqd(2)
+        ksferun(3)=ksqd(3)
+        ksferun(4)=ksqd(4)
+        ksferun(5)=ksqd(5)
+        ksferun(6)=ksqd(6)
 ccc
 ccc degrees of freedom and color factors
 ccc
@@ -489,10 +530,11 @@ ccc
 ccc
         endif
 ccc
+ccc
         endif
 *****
 ******************************************************* sf sf* -> f fbar
-        do i=1,12
+        do i=1,12 
           if(chon(i)) then
           kp3=kp3in(i)
           kp4=kp4in(i)
@@ -503,8 +545,28 @@ ccc
               result=result*cfactfin 
             endif
           elseif(chcol.eq.2) then
-            icase=1  
-            call dsasfercol(kp1i,kp2i,kp3,kp4,icase,result)
+             icase=1
+             call dsasfercol(kp1i,kp2i,kp3,kp4,icase,result)
+          else
+            write(*,*) 'chcol not set correctly, = ',chcol
+            stop
+          endif  
+          prtial(i)=result
+          endif
+        enddo  
+
+c...Add mixed slepton final states sl sl* -> ...
+        do i=55,66
+          if(chon(i)) then
+          kp3=kp3in(i)
+          kp4=kp4in(i)
+          if(chcol.eq.1) then
+            icase=3
+            call dsasfer(kp1i,kp2i,kp3,kp4,icase,result)
+          elseif(chcol.eq.2) then ! only for sleptons
+c             icase=1
+c             call dsasfercol(kp1i,kp2i,kp3,kp4,icase,result)
+             result=0.d0
           else
             write(*,*) 'chcol not set correctly, = ',chcol
             stop
@@ -512,12 +574,13 @@ ccc
           prtial(i)=result
           endif
         enddo  
+        
 ***************************************************** sf sf* -> q1 q2bar
 *****
 ***** for squark initial states, possible flavour mixing in the initial 
-***** state, not in the final state:
+***** state, not in the final state: (JE CORR: this is more general now)
 *****
-        if(chcol.eq.2) then  
+        if(chcol.eq.2) then  ! JE FIX ME. Do we want this for sleptons too?
         do i=13,24
           if(chon(i)) then
             kp3=kp3in(i)
@@ -530,19 +593,20 @@ ccc
         endif
 ************************************************* sl sl -> lepton lepton
         if(chcol.eq.1) then  
-          i=25
-          if(chon(i)) then
-            kp3=kp3in(i)
-            kp4=kp4in(i)
-            icase=1
-            call dsasfere(kp1i,kp2i,kp3,kp4,icase,result)
-            prtial(i)=result
-          endif
+          do i=25,30
+             if(chon(i)) then
+                kp3=kp3in(i)
+                kp4=kp4in(i)
+                icase=1
+                call dsasfere(kp1i,kp2i,kp3,kp4,icase,result)
+                prtial(i)=result
+             endif
+          enddo
         endif 
 ********************************************************* sf sf -> q1 q2
 *****
 ***** for squark initial states, possible flavour mixing in the initial 
-***** state, not in the final state:
+***** state, not in the final state: (JE CORR this is more general now)
 *****
         if(chcol.eq.2) then  
         do i=25,30
@@ -743,12 +807,12 @@ ccc
         w=w+prtial(22)           ! sf sf* -> s bbar
         w=w+prtial(23)           ! sf sf* -> b dbar
         w=w+prtial(24)           ! sf sf* -> b sbar
-        w=w+prtial(25)           ! sf sf -> lepton lepton or u u or d d
-        w=w+prtial(26)           ! sf sf -> u c  or  d s 
-        w=w+prtial(27)           ! sf sf -> u t  or  d b
-        w=w+prtial(28)           ! sf sf -> c c  or  s s
-        w=w+prtial(29)           ! sf sf -> c t  or  s b
-        w=w+prtial(30)           ! sf sf -> t t  or  b b
+        w=w+prtial(25)           ! sf sf -> lepton_1 lepton_1 or u u or d d
+        w=w+prtial(26)           ! sf sf -> lepton_1 lepton 2 or u c  or  d s 
+        w=w+prtial(27)           ! sf sf -> lepton_1 lepton 3 or u t  or  d b
+        w=w+prtial(28)           ! sf sf -> lepton_2 lepton_2 or c c  or  s s
+        w=w+prtial(29)           ! sf sf -> lepton_2 lepton_3 or  c t  or  s b
+        w=w+prtial(30)           ! sf sf -> lepton_3 lepton_3 or t t  or  b b
         w=w+prtial(31)           ! sf sf* ->  w+ w-
         w=w+prtial(32)           ! sf sf* -> z z
         w=w+prtial(33)           ! sf sf* -> z gamma
@@ -773,7 +837,24 @@ ccc
         w=w+prtial(52)           ! sf sf* -> gluon H
         w=w+prtial(53)           ! sf sf* -> gluon h
         w=w+prtial(54)           ! sf sf* -> gluon A
+        w=w+prtial(55)           ! sf sf* -> nu_e nu_mu-bar
+        w=w+prtial(56)           ! sf sf* -> nu_e nu_tau-bar
+        w=w+prtial(57)           ! sf sf* -> nu_mu nu_e-bar
+        w=w+prtial(58)           ! sf sf* -> nu_mu nu_tau-bar
+        w=w+prtial(59)           ! sf sf* -> nu_tau nu_e-bar
+        w=w+prtial(60)           ! sf sf* -> nu_tau nu_mu-bar
+        w=w+prtial(61)           ! sf sf* -> e- mu+
+        w=w+prtial(62)           ! sf sf* -> e- tau+
+        w=w+prtial(63)           ! sf sf* -> mu- e+
+        w=w+prtial(64)           ! sf sf* -> mu- tau+
+        w=w+prtial(65)           ! sf sf* -> tau- e+
+        w=w+prtial(66)           ! sf sf* -> tau- mu+
 
+c        do i=1,66 ! JE TMP
+c           write(*,'(A,I2,1x,I2,1x,I3,1x,E12.6,1x,E12.6,1x,L1)')
+c     &       'sfsf case 1: ',kp1,kp2,i,mass1,prtial(i),chon(i)
+c        enddo
+        
 c
 c check for large negative terms in the fermion final states
 c
@@ -788,6 +869,17 @@ c
             endif  
           endif  
         enddo
+
+        do i=55,66
+          if (prtial(i).lt.0.0d0) then
+            if (dabs(prtial(i)/w).gt.fertoll) then
+              wok=.false.
+            else
+              w=w-prtial(i)
+              prtial(i)=0.0d0
+            endif  
+          endif  
+        enddo
 c
 c write error message:
 c
@@ -797,7 +889,7 @@ c
           write(*,*) 'DS: large negative term in dsasdwdcossfsf'
           write(*,*) 'DS: called with kp1i=',kp1i,' kp2i=',kp2i
           write(*,*) 'DS: p=',p,' costh=',costhe,' w=',w
-          do i=1,54
+          do i=1,66
             write(*,*) 'DS: i=',i,' prtial=',prtial(i)
           enddo
         endif
@@ -805,12 +897,15 @@ c
 c
         dsasdwdcossfsf = w*0.5d0 ! 0.5d0 <- we should return weff for 
               ! sf sf ann with sf combined part. and anti-particle state
-************************************************************************
+c======================================================================
+c======================================================================
 *****
-***** 2) sneutrino + slepton in same family or
+***** 2) sneutrino + slepton or
 *****    up-type squark + down-type squark
+c======================================================================
+c======================================================================
       elseif(abs(itype(1)-itype(2)).eq.1) then
-        do i=1,33
+        do i=1,39
           prtial(i)=0.0d0
         enddo
 ccc
@@ -824,40 +919,95 @@ ccc
 ***** 
         gluonin=.false.
 ccc
+
         if(itype(1).ge.ivtype(knue).and.itype(1).le.ivtype(ktau)) then
-ccc input:   \tilde{nu}(i) \tilde{l}^*_1,2(i)
+c============================================================
+ccc input:   \tilde{nu}(i) \tilde{l}^*_1,2(j)
+c============================================================
 ccc
 ccc fermion channels: 
-ccc    neutrino(j) lepton^+(j) -- same family j \in (1,2,3)
+ccc    neutrino(j) lepton^+(j) -- all allowed 
 ccc    up-type quark(j) down-type antiquark(k) -- all allowed
 ccc
-ccc    neutrino(i) lepton^-(i) -- same family as in the initial state
-        i=13
-        do f=1,3
-          kp3=knue+2*(f-1)
-          kp4=ke+2*(f-1)
-          if(ivtype(kp3).eq.itype(1)) then
-            kp3in(i)=kp3
-            kp4in(i)=kp4
-            fsave=f
-          endif
+ccc    neutrino(i) lepton^-(j) -- all three families
+        i=12
+        do f1=1,3 ! JE CORR all families
+           kp3=knu(f1)
+           do f2=1,3
+              i=i+1
+              kp4=kl(f2)
+              kp3in(i)=kp3
+              kp4in(i)=kp4
+           enddo
         enddo
+
+c...Need to add mixed final states snu sl* -> nu' l-bar         
+        i=33
+        do f1=1,3 ! JE CORR all families
+           kp3=knu(f1)
+           do f2=1,3
+              kp4=kl(f2)
+              if ((ivfam(kp3)+1).ne.ivfam(kp4)) then ! new mixed state
+                 i=i+1
+                 kp3in(i)=kp3
+                 kp4in(i)=kp4
+              endif
+           enddo
+        enddo
+
+              
+c...Old code below
+c        do f=1,3
+c          kp3=knue+2*(f-1)
+c          kp4=ke+2*(f-1)
+c          if(ivtype(kp3).eq.itype(1)) then
+c            kp3in(i)=kp3
+c            kp4in(i)=kp4
+c            fsave=f 
+c          endif
+c        enddo
+
 ccc
 ccc gauge boson channels:
 ccc
 ccc
 ccc t- and u-channels:
 ccc
-        ksfertc(1)=ksl(fsave)
-        ksfertc(2)=ksl(fsave+3)
-        nsfertc=2
-        ksferuc(1)=ksnu(fsave)
-        nsferuc=1
-        ksfertn(1)=ksnu(fsave)
-        nsfertn=1
-        ksferun(1)=ksl(fsave)
-        ksferun(2)=ksl(fsave+3)
-        nsferun=2
+c        ksfertc(1)=ksl(fsave)
+c        ksfertc(2)=ksl(fsave+3)
+c        nsfertc=2
+        ksfertc(1)=ksl(1) ! JE CORR all 6 below
+        ksfertc(2)=ksl(2)
+        ksfertc(3)=ksl(3)
+        ksfertc(4)=ksl(4)
+        ksfertc(5)=ksl(5)
+        ksfertc(6)=ksl(6)
+        nsfertc=6
+
+c        ksferuc(1)=ksnu(fsave)
+c        nsferuc=1
+        ksferuc(1)=ksnu(1) ! JE CORR all 3 below
+        ksferuc(2)=ksnu(2)
+        ksferuc(3)=ksnu(3)
+        nsferuc=3
+
+c        ksfertn(1)=ksnu(fsave)
+c        nsfertn=1
+        ksfertn(1)=ksnu(1) ! JE CORR all 3 below
+        ksfertn(2)=ksnu(2)
+        ksfertn(3)=ksnu(3)
+        nsfertn=3
+
+c        ksferun(1)=ksl(fsave)
+c        ksferun(2)=ksl(fsave+3)
+c        nsferun=2
+        ksferun(1)=ksl(1) ! JE CORR all 6 below
+        ksferun(2)=ksl(2)
+        ksferun(3)=ksl(3)
+        ksferun(4)=ksl(4)
+        ksferun(5)=ksl(5)
+        ksferun(6)=ksl(6)
+        nsferun=6
 ccc
         gg1=1.d0 
         gg2=1.d0
@@ -867,7 +1017,9 @@ ccc
         endif
 ccc
         if(itype(1).ge.ivtype(ku).and.(iifam(2)-iifam(1)).eq.1) then
+c============================================================
 ccc input:   \tilde{u}_1,2(i) \tilde{d}^*_1,2(i)
+c============================================================
 ccc
 ccc fermion channels: 
 ccc    neutrino(j) lepton^+(j) -- same family j \in (1,2,3)
@@ -875,13 +1027,16 @@ ccc    up-type quark(j) down-type antiqu
 ccc
 ccc    up-type quark(i) down-type antiquark(i) -- same family 
 ccc       as in the initial state
-        do f=1,3
-          kp3=ku+2*(f-1) ! up-type quark
-          if(ivfam(kp3).eq.iifam(1)) then
-            fsave=f
-            f2save=f
-          endif
-        enddo
+
+c...JE CORR. No need to set fsave here           
+c        do f=1,3
+c          kp3=ku+2*(f-1) ! up-type quark
+c          if(ivfam(kp3).eq.iifam(1)) then
+c            fsave=f
+c            f2save=f
+c          endif
+c        enddo
+
 ccc
 ccc gauge boson channels:
 ccc
@@ -889,18 +1044,49 @@ ccc
 ccc
 ccc t- and u-channels:
 ccc
-        ksfertc(1)=ksqd(fsave)
-        ksfertc(2)=ksqd(fsave+3)
-        nsfertc=2
-        ksferuc(1)=ksqu(fsave)
-        ksferuc(2)=ksqu(fsave+3)
-        nsferuc=2
-        ksfertn(1)=ksqu(fsave)
-        ksfertn(2)=ksqu(fsave+3)
-        nsfertn=2
-        ksferun(1)=ksqd(fsave)
-        ksferun(2)=ksqd(fsave+3)
-        nsferun=2
+c        ksfertc(1)=ksqd(fsave)
+c        ksfertc(2)=ksqd(fsave+3)
+c        nsfertc=2
+        ksfertc(1)=ksqd(1) ! JE CORR all 6
+        ksfertc(2)=ksqd(2)
+        ksfertc(3)=ksqd(3)
+        ksfertc(4)=ksqd(4)
+        ksfertc(5)=ksqd(5)
+        ksfertc(6)=ksqd(6)
+        nsfertc=6
+
+c        ksferuc(1)=ksqu(fsave)
+c        ksferuc(2)=ksqu(fsave+3)
+c        nsferuc=2
+        ksferuc(1)=ksqu(1) ! JE CORR all 6
+        ksferuc(2)=ksqu(2)
+        ksferuc(3)=ksqu(3)
+        ksferuc(4)=ksqu(4)
+        ksferuc(5)=ksqu(5)
+        ksferuc(6)=ksqu(6)
+        nsferuc=6
+
+c        ksfertn(1)=ksqu(fsave)
+c        ksfertn(2)=ksqu(fsave+3)
+c        nsfertn=2
+        ksfertn(1)=ksqu(1) ! JE CORR all 6
+        ksfertn(2)=ksqu(2)
+        ksfertn(3)=ksqu(3)
+        ksfertn(4)=ksqu(4)
+        ksfertn(5)=ksqu(5)
+        ksfertn(6)=ksqu(6)
+        nsfertn=6
+
+c        ksferun(1)=ksqd(fsave)
+c        ksferun(2)=ksqd(fsave+3)
+c        nsferun=2
+        ksferun(1)=ksqd(1) ! JE CORR all 6
+        ksferun(2)=ksqd(2)
+        ksferun(3)=ksqd(3)
+        ksferun(4)=ksqd(4)
+        ksferun(5)=ksqd(5)
+        ksferun(6)=ksqd(6)
+        nsferun=6
 ccc
         gg1=3.d0
         gg2=3.d0
@@ -911,7 +1097,9 @@ ccc
         endif
 ccc
         if(itype(1).ge.ivtype(ku).and.(iifam(2)-iifam(1)).ne.1) then
+c============================================================
 ccc input:   \tilde{u}(i) \tilde{d}^*_1,2(j)  i.ne.j
+c============================================================
 ccc
 ccc fermion channels: 
 ccc    neutrino(j) lepton^+(j) -- same family j \in (1,2,3)
@@ -919,18 +1107,20 @@ ccc    up-type quark(j) down-type antiqu
 ccc
 ccc    up-type quark(i) down-type antiquark(i) -- same family 
 ccc       as in the initial state
-        do f1=1,3
-          kp3=ku+2*(f1-1) ! up-type quark
-          if(ivfam(kp3).eq.iifam(1)) then
-            fsave=f1
-          endif
-        enddo
-        do f2=1,3
-          kp4=kd+2*(f2-1) ! down-type quark
-          if(ivfam(kp4).eq.iifam(2)) then
-            f2save=f2
-          endif
-        enddo
+c...JE CORR. This is not needed           
+c        do f1=1,3
+c          kp3=ku+2*(f1-1) ! up-type quark
+c          if(ivfam(kp3).eq.iifam(1)) then
+c            fsave=f1
+c          endif
+c        enddo
+c        do f2=1,3
+c          kp4=kd+2*(f2-1) ! down-type quark
+c          if(ivfam(kp4).eq.iifam(2)) then
+c            f2save=f2
+c          endif
+c        enddo
+
 ccc
 ccc gauge boson channels:
 ccc
@@ -938,18 +1128,49 @@ ccc
 ccc
 ccc t- and u-channels:
 ccc
-        ksfertc(1)=ksqd(f2save)
-        ksfertc(2)=ksqd(f2save+3)
-        nsfertc=2
-        ksferuc(1)=ksqu(fsave)
-        ksferuc(2)=ksqu(fsave+3)
-        nsferuc=2
-        ksfertn(1)=ksqu(fsave)
-        ksfertn(2)=ksqu(fsave+3)
-        nsfertn=2
-        ksferun(1)=ksqd(f2save)
-        ksferun(2)=ksqd(f2save+3)
-        nsferun=2
+c        ksfertc(1)=ksqd(f2save)
+c        ksfertc(2)=ksqd(f2save+3)
+c        nsfertc=2
+        ksfertc(1)=ksqd(1) ! JE CORR all 6
+        ksfertc(2)=ksqd(2)
+        ksfertc(3)=ksqd(3)
+        ksfertc(4)=ksqd(4)
+        ksfertc(5)=ksqd(5)
+        ksfertc(6)=ksqd(6)
+        nsfertc=6
+        
+c        ksferuc(1)=ksqu(fsave)
+c        ksferuc(2)=ksqu(fsave+3)
+c        nsferuc=2
+        ksferuc(1)=ksqu(1) ! JE CORR all 6
+        ksferuc(2)=ksqu(2)
+        ksferuc(3)=ksqu(3)
+        ksferuc(4)=ksqu(4)
+        ksferuc(5)=ksqu(5)
+        ksferuc(6)=ksqu(6)
+        nsferuc=6
+        
+c        ksfertn(1)=ksqu(fsave)
+c        ksfertn(2)=ksqu(fsave+3)
+c        nsfertn=2
+        ksfertn(1)=ksqu(1) ! JE CORR all 6
+        ksfertn(2)=ksqu(2)
+        ksfertn(3)=ksqu(3)
+        ksfertn(4)=ksqu(4)
+        ksfertn(5)=ksqu(5)
+        ksfertn(6)=ksqu(6)
+        nsfertn=6
+
+c        ksferun(1)=ksqd(f2save)
+c        ksferun(2)=ksqd(f2save+3)
+c        nsferun=2
+        ksferun(1)=ksqd(1) ! JE CORR all 6
+        ksferun(2)=ksqd(2)
+        ksferun(3)=ksqd(3)
+        ksferun(4)=ksqd(4)
+        ksferun(5)=ksqd(5)
+        ksferun(6)=ksqd(6)
+        nsferun=6
 ccc
         gg1=3.d0
         gg2=3.d0
@@ -968,7 +1189,7 @@ ccc
 ***** state and in the final state; for sleptons flavour mixing for 
 ***** quarks in the final state:
 *****
-        if(chcol.eq.1) then
+        if(chcol.eq.1) then ! sleptons in initial state
 ***** first the lepton final states:
           do f=1,3
             kp3=knue+2*(f-1)
@@ -977,6 +1198,16 @@ ccc
             call dsasfer(kp1i,kp2i,kp3,kp4,icase,result)
             prtial(f)=result
           enddo
+
+c...Now the mixed ones
+          do i=34,39
+             kp3=kp3in(i)
+             kp4=kp4in(i)
+             icase=2
+             call dsasfer(kp1i,kp2i,kp3,kp4,icase,result)
+             prtial(i)=result
+          enddo
+
 ***** then the quark final states:
           i=0
           do f1=1,3
@@ -990,7 +1221,7 @@ ccc
             prtial(3+i)=result
           enddo
           enddo
-        else
+        else ! squarks in initial state
 ***** first the lepton final states:
           do f=1,3
             kp3=knue+2*(f-1)
@@ -1018,16 +1249,18 @@ ccc
 ***** state and in the final state
 *****
 ***** first the lepton final states:
-        if(chcol.eq.1) then
-          i=13
-          kp3=kp3in(i)
-          kp4=kp4in(i)
-          icase=2
-          call dsasfere(kp1i,kp2i,kp3,kp4,icase,result)
-          prtial(13)=result
+        if(chcol.eq.1) then     ! slepton initial state
+          do i=13,21
+             kp3=kp3in(i)
+             kp4=kp4in(i)
+             icase=2
+             call dsasfere(kp1i,kp2i,kp3,kp4,icase,result)
+
+             prtial(i)=result
+          enddo
 *****
 ***** then the quark final states:
-        else
+        else ! squark initial state
         i=0
         do f1=1,3
         do f2=1,3
@@ -1122,21 +1355,21 @@ ccc
         w=w+prtial(4)            ! sfu sfd* -> u dbar
         w=w+prtial(5)            ! sfu sfd* -> u sbar
         w=w+prtial(6)            ! sfu sfd* -> u bbar
-        w=w+prtial(7)            ! sfu sfd* -> c ubar
+        w=w+prtial(7)            ! sfu sfd* -> c dbar
         w=w+prtial(8)            ! sfu sfd* -> c sbar
         w=w+prtial(9)            ! sfu sfd* -> c bbar
         w=w+prtial(10)           ! sfu sfd* -> t dbar
         w=w+prtial(11)           ! sfu sfd* -> t sbar
         w=w+prtial(12)           ! sfu sfd* -> t bbar
-        w=w+prtial(13)           ! sfu sfd -> u d
-        w=w+prtial(14)           ! sfu sfd -> u s
-        w=w+prtial(15)           ! sfu sfd -> u b
-        w=w+prtial(16)           ! sfu sfd -> c d
-        w=w+prtial(17)           ! sfu sfd -> c s
-        w=w+prtial(18)           ! sfu sfd -> c b
-        w=w+prtial(19)           ! sfu sfd -> t d
-        w=w+prtial(20)           ! sfu sfd -> t s
-        w=w+prtial(21)           ! sfu sfd -> t b
+        w=w+prtial(13)           ! sfu sfd -> u d or nu_e e-
+        w=w+prtial(14)           ! sfu sfd -> u s or nu_e mu-
+        w=w+prtial(15)           ! sfu sfd -> u b or nu_e tau-
+        w=w+prtial(16)           ! sfu sfd -> c d or nu_mu e-
+        w=w+prtial(17)           ! sfu sfd -> c s or nu_mu mu-
+        w=w+prtial(18)           ! sfu sfd -> c b or nu_mu tau-
+        w=w+prtial(19)           ! sfu sfd -> t d or nu_tau e-
+        w=w+prtial(20)           ! sfu sfd -> t s or nu_tau mu-
+        w=w+prtial(21)           ! sfu sfd -> t b or nu_tau tau-
         w=w+prtial(22)           ! sfu sfd* -> w+ z
         w=w+prtial(23)           ! sfu sfd* -> w+ gamma
         w=w+prtial(24)           ! sfu sfd* -> w+ h
@@ -1149,8 +1382,20 @@ ccc
         w=w+prtial(31)           ! sfu sfd* -> h+ a
         w=w+prtial(32)           ! sfu sfd* -> W+ g
         w=w+prtial(33)           ! sfu sfd* -> g H+
-c
-c check for large negative terms in the fermion final states
+        w=w+prtial(34)           ! sfu sfd* -> nu_e mu+
+        w=w+prtial(35)           ! sfu sfd* -> nu_e tau+
+        w=w+prtial(36)           ! sfu sfd* -> nu_mu e+
+        w=w+prtial(37)           ! sfu sfd* -> nu_mu tau+
+        w=w+prtial(38)           ! sfu sfd* -> nu_tau e+
+        w=w+prtial(39)           ! sfu sfd* -> nu_tau mu+
+
+c        do i=1,39               ! JE TMP
+c           write(*,*) 'sfsf case 2: i=',i,prtial(i)
+c        enddo
+        
+        
+C
+C Check for large negative terms in the fermion final states
 c
         wok=.true.
         do i=1,21
@@ -1163,6 +1408,18 @@ c
             endif  
           endif  
         enddo
+
+        do i=34,39
+          if (prtial(i).lt.0.0d0) then
+            if (dabs(prtial(i)/w).gt.fertoll) then
+              wok=.false.
+            else
+              w=w-prtial(i)
+              prtial(i)=0.0d0
+            endif  
+          endif  
+        enddo
+
 c
 c write error message:
 c
@@ -1172,7 +1429,7 @@ c
           write(*,*) 'DS: large negative term in dsasdwdcossfsf'
           write(*,*) 'DS: called with kp1i=',kp1i,' kp2i=',kp2i
           write(*,*) 'DS: p=',p,' costh=',costhe,' w=',w
-          do i=1,33
+          do i=1,39
             write(*,*) 'DS: i=',i,' prtial=',prtial(i)
           enddo
         endif
@@ -1180,13 +1437,22 @@ c
 c
         dsasdwdcossfsf = w*0.5d0 ! 0.5d0 <- we should return weff for 
               ! sf sf ann with sf combined part. and anti-particle state
+c======================================================================
+c======================================================================
 ************************************************************************
 *****
-***** 3) 2 sleptons in different families or
-*****    one squark + one slepton
-      else   
+***** 3) one squark + one slepton
+***** JE CORR. Note. Before this case was used also for sleptons in
+***** different families, but this is handled above instead.
+***** This part is almost entirely rewritten by J. Edsjo
+c======================================================================
+c======================================================================
+      else
+c...The final state particles can be different for both the first
+c...and second outgoing particles.
+c...JE CORR. Changed 9 final states to 27.         
 c        write(*,*) 'Now in case 3...'
-        do i=1,12
+        do i=1,27
           prtial(i)=0.0d0
         enddo
 ccc
@@ -1195,29 +1461,48 @@ ccc
         if(kp1i.ne.kp1s.or.kp2i.ne.kp2s) then
         kp1s=kp1i
         kp2s=kp2i
-        do i=1,12
+        do i=1,27
           chon(i)=.false.
         enddo
 ***** identify particles in initial and final state
+c============================================================
+c=== up squark - slepton
+c============================================================        
 ***** the first only can be a up-type squark:
         if(itype(1).eq.ivtype(ku)) then
           i=0
-          do f=1,3
-            kp3=ku+2*(f-1)
-            if(iifam(1).eq.ivfam(kp3)) then
-              i=i+1
-              kp3in(i)=kp3
-              chon(i)=.true.
-              kp3in(i+3)=kp3
-              chon(i+3)=.true.
-            endif
+          do f1=1,3
+             kp3=ku+2*(f1-1) ! the different kinds of up quarks
+             do f2=1,3
+                i=i+1
+                if (itype(2).eq.ivtype(ksnue)) then ! sneutrino
+                   kp4=knu(f2)
+                else            ! charged slepton
+                   kp4=kl(f2)
+                endif
+                kp3in(i)=kp3 ! squ sl* -> u l-bar
+                kp4in(i)=kp4
+                chon(i)=.true.
+                kp3in(i+9)=kp3 ! squ sl -> u l
+                kp4in(i+9)=kp4
+                chon(i+9)=.true.
+             enddo
           enddo
-          i=6
-          do f=1,3
-            kp3=kd+2*(f-1)
-            i=i+1
-            kp3in(i)=kp3
-            chon(i)=.true.
+
+          i=18
+          do f1=1,3
+             kp3=kd+2*(f1-1)
+             do f2=1,3
+                i=i+1
+                if (itype(2).eq.ivtype(ksnue)) then ! sneutrino
+                   kp4=kl(f2)
+                else            ! charged slepton
+                   kp4=knu(f2)
+                endif
+                kp3in(i)=kp3
+                kp4in(i)=kp4
+                chon(i)=.true.
+             enddo
           enddo
           ick1=1
 ***** 1 squark and 1 slepton
@@ -1226,25 +1511,44 @@ ccc
           chcol=1
           cfactini=3.d0
           cfactfin=1.d0
+c============================================================
+c=== down squark - slepton
+c============================================================        
 ***** ... or a down-type squark:
         elseif(itype(1).eq.ivtype(kd)) then
           i=0
-          do f=1,3
-            kp3=kd+2*(f-1)
-            if(iifam(1).eq.ivfam(kp3)) then
-              i=i+1
-              kp3in(i)=kp3
-              chon(i)=.true.
-              kp3in(i+3)=kp3
-              chon(i+3)=.true.
-            endif
+          do f1=1,3
+             kp3=kd+2*(f1-1)
+             do f2=1,3
+                i=i+1
+                if (itype(2).eq.ivtype(ksnue)) then ! sneutrino
+                   kp4=knu(f2)
+                else            ! charged slepton
+                   kp4=kl(f2)
+                endif
+                kp3in(i)=kp3 ! sqd sl* -> d l-bar
+                kp4in(i)=kp4
+                chon(i)=.true.
+                kp3in(i+9)=kp3 ! sqd sl -> d l
+                kp4in(i+9)=kp4
+                chon(i+9)=.true.
+             enddo
           enddo
-          i=6
-          do f=1,3
-            kp3=ku+2*(f-1)
-            i=i+1
-            kp3in(i)=kp3
-            chon(i)=.true.
+
+          i=18
+          do f1=1,3             
+             kp3=ku+2*(f1-1)
+             do f2=1,3
+                i=i+1
+                if (itype(2).eq.ivtype(ksnue)) then ! sneutrino
+                   kp4=kl(f2)
+                else            ! charged slepton
+                   kp4=knu(f2)
+                endif
+                kp3in(i)=kp3
+                kp4in(i)=kp4
+                chon(i)=.true.
+             enddo
           enddo
           ick1=2
 ***** 1 squark and 1 slepton
@@ -1253,71 +1557,32 @@ ccc
           chcol=1
           cfactini=3.d0
           cfactfin=1.d0
-***** ... or it is slepton:
+        endif
+       
+***** identify the second slepton.
+        if (itype(2).eq.ivtype(knue)) then
+           ick2=1
         else
-          i=0
-          do f=1,3
-            if(itype(1).eq.ivtype(knue+2*(f-1))) then
-              kp3=knue+2*(f-1)
-              i=i+1
-              kp3in(i)=kp3
-              chon(i)=.true.
-              kp3in(i+3)=kp3
-              chon(i+3)=.true.
-              kp3=ke+2*(f-1)
-              kp3in(i+6)=kp3
-              chon(i+6)=.true.
-              ick1=1
-            elseif(itype(1).eq.ivtype(ke+2*(f-1))) then
-              kp3=ke+2*(f-1)
-              i=i+1
-              kp3in(i)=kp3
-              chon(i)=.true.
-              kp3in(i+3)=kp3
-              chon(i+3)=.true.
-              kp3=knue+2*(f-1)
-              kp3in(i+6)=kp3
-              chon(i+6)=.true.
-              ick1=2
-            endif
-          enddo 
-***** 2 sleptons
-          gg1=1.d0 
-          gg2=1.d0
-          chcol=1
-          cfactini=1.d0
-          cfactfin=3.d0
+           ick2=2
         endif
-***** identify the second slepton:
-        do f=1,3
-          if(itype(2).eq.ivtype(knue+2*(f-1))) then
-            kf2=knue+2*(f-1)
-            kf2o=ke+2*(f-1)
-            ick2=1
-          elseif(itype(2).eq.ivtype(ke+2*(f-1))) then
-            kf2=ke+2*(f-1)
-            kf2o=knue+2*(f-1)
-            ick2=2
-          endif
-        enddo
 ccc
         endif
 *****
 *************************************************** sf1 sf2* -> f1 f2bar
-        do i=1,3
+        do i=1,9
           if(chon(i)) then
             kp3=kp3in(i)
-            kp4=kf2
+            kp4=kp4in(i)
             icase=3
             call dsasfer(kp1i,kp2i,kp3,kp4,icase,result)
             prtial(i)=result*cfactini
           endif
         enddo  
 ******************************************************* sf1 sf2 -> f1 f2
-        do i=4,6
+        do i=10,18
           if(chon(i)) then
             kp3=kp3in(i)
-            kp4=kf2
+            kp4=kp4in(i)
             icase=3
             call dsasfere(kp1i,kp2i,kp3,kp4,icase,result)
             prtial(i)=result*cfactini
@@ -1325,11 +1590,11 @@ ccc
         enddo  
 *************************************************** sf1 sf2* -> f3 f4bar
 **************************************************** or sf1 sf2 -> f3 f4
-*****  f1 and f3 in the same doublet,  f2 and f4 in the same doublet
-        do i=6,9
+*****  f1 and f3 switched up/down, f2 and f4 switched up/down
+        do i=19,27
           if(chon(i)) then
             kp3=kp3in(i)
-            kp4=kf2o
+            kp4=kp4in(i)
             if(ick1.eq.ick2) then
               icase=3
               call dsasfer(kp1i,kp2i,kp3,kp4,icase,result)
@@ -1341,21 +1606,41 @@ ccc
           endif  
         enddo
 **************************************************** sum partial results
-        w=0.d0
-        w=w+prtial(1)            ! sq1(sl1) sl2* -> q1_1(l1) l2bar
-        w=w+prtial(2)            ! sq1 sl2* -> q1_2 l2bar
-        w=w+prtial(3)            ! sq1 sl2* -> q1_3 l2bar
-        w=w+prtial(4)            ! sq1(sl1) sl2 -> q1_1(l1) l2
-        w=w+prtial(5)            ! sq1 sl2 -> q1_2 l2
-        w=w+prtial(6)            ! sq1 sl2 -> q1_3 l2
-        w=w+prtial(7)            ! sf1(sl1) sf2*(sf2) -> f3_1(l3) f2bar(f2) 
-        w=w+prtial(8)            ! sf1 sf2*(sf2) -> f3_2 f2bar(f2) 
-        w=w+prtial(9)            ! sf1 sf2*(sf2) -> f3_3 f2bar(f2) 
+        w=0.d0 ! JE CORR, more states below (9->27)
+        w=w+prtial(1)           ! sq1 sl2* -> q1_1 lbar_1
+        w=w+prtial(2)           ! sq1 sl2* -> q1_1 lbar_2
+        w=w+prtial(3)           ! sq1 sl2* -> q1_1 lbar_3
+        w=w+prtial(4)           ! sq1 sl2* -> q1_2 lbar_1
+        w=w+prtial(5)           ! sq1 sl2* -> q1_2 lbar_2
+        w=w+prtial(6)           ! sq1 sl2* -> q1_2 lbar_3
+        w=w+prtial(7)           ! sq1 sl2* -> q1_3 lbar_1
+        w=w+prtial(8)           ! sq1 sl2* -> q1_3 lbar_2
+        w=w+prtial(9)           ! sq1 sl2* -> q1_3 lbar_3
+        w=w+prtial(10)          ! sq1 sl2 -> q1_1 l_1
+        w=w+prtial(11)          ! sq1 sl2 -> q1_1 l_2
+        w=w+prtial(12)          ! sq1 sl2 -> q1_1 l_3
+        w=w+prtial(13)          ! sq1 sl2 -> q1_2 l_1
+        w=w+prtial(14)          ! sq1 sl2 -> q1_2 l_2
+        w=w+prtial(15)          ! sq1 sl2 -> q1_2 l_3
+        w=w+prtial(16)          ! sq1 sl2 -> q1_3 l_1
+        w=w+prtial(17)          ! sq1 sl2 -> q1_3 l_2
+        w=w+prtial(18)          ! sq1 sl2 -> q1_3 l_3
+c...States with final states switched w.r.t initial state regarding up/down
+        w=w+prtial(19)          ! sq1 sl2* -> q1'_1 l'_1
+        w=w+prtial(20)          ! sq1 sl2* -> q1'_1 l'_2
+        w=w+prtial(21)          ! sq1 sl2* -> q1'_1 l'_3
+        w=w+prtial(22)          ! sq1 sl2* -> q1'_2 l'_1
+        w=w+prtial(23)          ! sq1 sl2* -> q1'_2 l'_2
+        w=w+prtial(24)          ! sq1 sl2* -> q1'_2 l'_3
+        w=w+prtial(25)          ! sq1 sl2* -> q1'_3 l'_1
+        w=w+prtial(26)          ! sq1 sl2* -> q1'_3 l'_2
+        w=w+prtial(27)          ! sq1 sl2* -> q1'_3 l'_3
+
 c
 c check for large negative terms in the fermion final states
 c
         wok=.true.
-        do i=1,9
+        do i=1,27
           if (prtial(i).lt.0.0d0) then
             if (dabs(prtial(i)/w).gt.fertoll) then
               wok=.false.
diff -rupN darksusy-5.1.3/src/as/dsasgbhb.f darksusy-5.1.3.patched/src/as/dsasgbhb.f
--- darksusy-5.1.3/src/as/dsasgbhb.f	2011-11-04 23:48:05.000000000 +0000
+++ darksusy-5.1.3.patched/src/as/dsasgbhb.f	2017-02-11 20:01:26.171863534 +0000
@@ -20,6 +20,9 @@
 *** added by Mia Schelke Jan 2007                          ***
 *** modified: Piero Ullio to include a new labelling of    ***
 *** states, 08-05-30                                       ***
+*** Modified: Joakim Edsjo to allow for family mixing      ***
+*** (assumptions were made on family belonging that were   ***
+*** not general enough). 2016-11-13                        ***      
 **************************************************************
 
       SUBROUTINE dsasgbhb(kp1,kp2,kp3,kp4,icase,result)
@@ -147,13 +150,14 @@ c      endif
      &          *gl(kgb,kp2,ksferuc(i))
         enddo
 ***** h^+ in s-channel ****************************************
-        if(kp1-kp2.ge.-3) then
+c        if(kp1-kp2.ge.-3) then !  JE CORR
+        ! JE CORR 161115 always include this s-channel
         khs=khc
         A1=A1-2.d0*dsasdepro(Svar,khs)*gl(khs,kp2,kp1)
      &          *gl(kgb,khb,khs)
         A2=A2-2.d0*dsasdepro(Svar,khs)*gl(khs,kp2,kp1)
      &          *gl(kgb,khb,khs)
-        endif
+c        endif ! JE CORR
 ***** W^+ in s-channel ****************************************
         kgs=kw
         Aaux=gl(kgs,kp2,kp1)*mass(kw)*gl(khb,kgb,kgs)
@@ -181,13 +185,14 @@ c      endif
         enddo
         endif
 ***** h^+ in s-channel ****************************************
-        if(kp1-kp2.ge.-3) then
+c        if(kp1-kp2.ge.-3) then ! JE CORR
+        ! JE CORR 161115 always include this s-channel
         khs=khc
         A1=A1-2.d0*dsasdepro(Svar,khs)*gl(khs,kp2,kp1)
      &          *gl(kgb,khb,khs)
         A2=A2-2.d0*dsasdepro(Svar,khs)*gl(khs,kp2,kp1)
      &          *gl(kgb,khb,khs)
-        endif
+c        endif ! JE CORR
         goto 600
       endif
 *****
@@ -202,7 +207,7 @@ c      endif
           A2=A2+2.d0*dsasdepro(Uvar,ksferuc(i))*gl(khb,kp1,ksferuc(i))
      &          *gl(kgb,ksferuc(i),kp2)       
         enddo   
-        if(abs(kp1-kp2).le.1) then
+c        if(abs(kp1-kp2).le.1) then ! JE CORR
 ***** h1 in s-channel  ****************************************
         khs=kh1
         A1=A1-2.d0*dsasdepro(Svar,khs)*gl(khs,kp2,kp1)
@@ -222,7 +227,7 @@ c      endif
      &          *gl(kgb,khb,khs)
           A2=A2-2.d0*dsasdepro(Svar,khs)*gl(khs,kp2,kp1)
      &          *gl(kgb,khb,khs)
-        endif
+c        endif ! JE CORR
         endif
         goto 600
       endif
@@ -238,7 +243,7 @@ c      endif
           A1=A1-2.d0*dsasdepro(Tvar,ksfertc(i))*gl(khb,kp2,ksfertc(i))
      &          *gl(kgb,ksfertc(i),kp1)
         enddo
-        if(abs(kp1-kp2).le.1) then
+c        if(abs(kp1-kp2).le.1) then ! JE CORR
 ***** h1 in s-channel  ****************************************
         khs=kh1
         A1=A1-2.d0*dsasdepro(Svar,khs)*gl(khs,kp2,kp1)
@@ -257,7 +262,7 @@ c      endif
      &        *gl(kgb,khb,khs)
         A2=A2-2.d0*dsasdepro(Svar,khs)*gl(khs,kp2,kp1)
      &        *gl(kgb,khb,khs)
-        endif
+c        endif ! JE CORR
         goto 600
       endif
 *****
@@ -298,7 +303,7 @@ c      endif
           A2=A2+2.d0*dsasdepro(Uvar,ksferun(i))*gl(khb,ksferun(i),kp1)
      &          *gl(kgb,kp2,ksferun(i))
         enddo
-        if(abs(kp1-kp2).le.1) then
+c        if(abs(kp1-kp2).le.1) then ! JE CORR
         if(nosneutrinov) then
 ***** (H^0_3 can not couple to a pair of sneutrinos as far as there 
 *****  are no right-handed sneutrinos)
@@ -315,7 +320,7 @@ c      endif
      &        *dsasdepro(Svar,kgs)
         A1=A1+(1.d0-(mass1**2-mass2**2)/mass(kgs)**2)*Aaux
         A2=A2+(-1.d0-(mass1**2-mass2**2)/mass(kgs)**2)*Aaux
-        endif
+c        endif ! JE CORR
         goto 600
       endif
 *****
@@ -338,7 +343,7 @@ c      endif
      &          *gl(kgb,kp2,ksferun(i))
         enddo
         endif
-        if(abs(kp1-kp2).le.1) then
+c        if(abs(kp1-kp2).le.1) then ! JE CORR
 ***** h1 in s-channel  ****************************************
         khs=kh1
         A1=A1-2.d0*dsasdepro(Svar,khs)*gl(khs,kp2,kp1)
@@ -351,7 +356,7 @@ c      endif
      &          *gl(kgb,khb,khs)
         A2=A2-2.d0*dsasdepro(Svar,khs)*gl(khs,kp2,kp1)
      &          *gl(kgb,khb,khs)
-        endif
+c        endif ! JE CORR
         goto 600
       endif
 *****
diff -rupN darksusy-5.1.3/src/ib/dsIBffdxdy.f darksusy-5.1.3.patched/src/ib/dsIBffdxdy.f
--- darksusy-5.1.3/src/ib/dsIBffdxdy.f	2011-11-04 23:48:05.000000000 +0000
+++ darksusy-5.1.3.patched/src/ib/dsIBffdxdy.f	2017-02-11 20:01:26.171863534 +0000
@@ -259,14 +259,14 @@ c       endif
 
 c...check that result is positive
       if (0.gt.tmpresult) then
-        if (m0**2*tmpresult.lt.(-1D-12)
-     -     .and.(idtag.ne.memory)) then
-          write(*,*) '*****'
-          write (*,*) 'Error in dsIBffdxdy (channel:',IBch,
-     -                '): negative |M|^2 for model ',idtag,'.'
-          write (*,*) 'Setting corresponding contributions to zero...'
-          write(*,*) '*****'
-        endif
+c        if (m0**2*tmpresult.lt.(-1D-12)
+c     -     .and.(idtag.ne.memory)) then
+c          write(*,*) '*****'
+c          write (*,*) 'Error in dsIBffdxdy (channel:',IBch,
+c     -                '): negative |M|^2 for model ',idtag,'.'
+c          write (*,*) 'Setting corresponding contributions to zero...'
+c          write(*,*) '*****'
+c        endif
         return
       endif
 
diff -rupN darksusy-5.1.3/src/ib/dsIBfsrdxdy.f darksusy-5.1.3.patched/src/ib/dsIBfsrdxdy.f
--- darksusy-5.1.3/src/ib/dsIBfsrdxdy.f	2011-11-04 23:48:05.000000000 +0000
+++ darksusy-5.1.3.patched/src/ib/dsIBfsrdxdy.f	2017-02-11 20:01:26.171863534 +0000
@@ -62,10 +62,10 @@ c... from a full analytical calculation
 
 c...check that result is positive
       if (0.gt.fsrtmp) then
-        write(*,*) '*****'
-        write (*,*) 'Error in dsIBfsrdxdy: negative |M|^2 !'
-        write (*,*) 'Setting corresponding contributions to zero...'
-        write(*,*) '*****'
+c        write(*,*) '*****'
+c        write (*,*) 'Error in dsIBfsrdxdy: negative |M|^2 !'
+c        write (*,*) 'Setting corresponding contributions to zero...'
+c        write(*,*) '*****'
         dsIBfsrdxdy=0d0
         return
       endif
diff -rupN darksusy-5.1.3/src/ib/dsIBhhdxdy.f darksusy-5.1.3.patched/src/ib/dsIBhhdxdy.f
--- darksusy-5.1.3/src/ib/dsIBhhdxdy.f	2011-11-04 23:48:05.000000000 +0000
+++ darksusy-5.1.3.patched/src/ib/dsIBhhdxdy.f	2017-02-11 20:01:26.171863534 +0000
@@ -80,15 +80,15 @@ c...import full IB expression for |M|**2
 
 c...check that the result is positive
       if (0.gt.tmpresult) then
-        if (m0**2*tmpresult.lt.(-1D-15)
-     -     .and.(idtag.ne.memory)) then
-          write(*,*) '*****'
-          write (*,*) 'Error in dsIBhhdxdy: ',
-     -                'negative |M|^2 for model ',
-     -                 idtag,'.'
-          write (*,*) ' Setting corresponding contributions to zero...'
-          write(*,*) '*****'
-        endif
+c        if (m0**2*tmpresult.lt.(-1D-15)
+c     -     .and.(idtag.ne.memory)) then
+c          write(*,*) '*****'
+c          write (*,*) 'Error in dsIBhhdxdy: ',
+c     -                'negative |M|^2 for model ',
+c     -                 idtag,'.'
+c          write (*,*) ' Setting corresponding contributions to zero...'
+c          write(*,*) '*****'
+c        endif
         return
       endif
 
diff -rupN darksusy-5.1.3/src/ib/dsIBwhdxdy.f darksusy-5.1.3.patched/src/ib/dsIBwhdxdy.f
--- darksusy-5.1.3/src/ib/dsIBwhdxdy.f	2011-11-04 23:48:05.000000000 +0000
+++ darksusy-5.1.3.patched/src/ib/dsIBwhdxdy.f	2017-02-11 20:01:26.171863534 +0000
@@ -205,14 +205,14 @@ c       endif
 
 c...check that result is positive
       if (0.gt.tmpresult) then
-        if (m0**2*tmpresult.lt.(-1D-10)
-     -     .and.(idtag.ne.memory)) then
-          write(*,*) '*****'
-          write (*,*) 'Error in dsIBwhdxdy: ',
-     -                'negative |M|^2 for model ',idtag,'.'
-          write (*,*) 'Setting corresponding contributions to zero...'
-          write(*,*) '*****'
-        endif
+c        if (m0**2*tmpresult.lt.(-1D-10)
+c     -     .and.(idtag.ne.memory)) then
+c          write(*,*) '*****'
+c          write (*,*) 'Error in dsIBwhdxdy: ',
+c     -                'negative |M|^2 for model ',idtag,'.'
+c          write (*,*) 'Setting corresponding contributions to zero...'
+c          write(*,*) '*****'
+c        endif
         return
       endif
 
diff -rupN darksusy-5.1.3/src/ib/dsIBwwdxdy.f darksusy-5.1.3.patched/src/ib/dsIBwwdxdy.f
--- darksusy-5.1.3/src/ib/dsIBwwdxdy.f	2011-11-04 23:48:05.000000000 +0000
+++ darksusy-5.1.3.patched/src/ib/dsIBwwdxdy.f	2017-02-11 20:01:26.171863534 +0000
@@ -137,14 +137,14 @@ c       endif
 
 c...check that result is positive
       if (0.gt.tmpresult) then
-        if (m0**2*tmpresult.lt.(-1D-10)
-     -     .and.(idtag.ne.memory)) then
-          write(*,*) '*****'
-          write (*,*) 'Error in dsIBwwdxdy:',
-     -                ' negative |M|^2 for model ',idtag,'.'
-          write (*,*) 'Setting corresponding contributions to zero...'
-          write(*,*) '*****'
-        endif
+c        if (m0**2*tmpresult.lt.(-1D-10)
+c     -     .and.(idtag.ne.memory)) then
+c          write(*,*) '*****'
+c          write (*,*) 'Error in dsIBwwdxdy:',
+c     -                ' negative |M|^2 for model ',idtag,'.'
+c          write (*,*) 'Setting corresponding contributions to zero...'
+c          write(*,*) '*****'
+c        endif
         return
       endif
 
diff -rupN darksusy-5.1.3/src/ini/dsdirname.c.in darksusy-5.1.3.patched/src/ini/dsdirname.c.in
--- darksusy-5.1.3/src/ini/dsdirname.c.in	2008-02-21 16:08:34.000000000 +0000
+++ darksusy-5.1.3.patched/src/ini/dsdirname.c.in	1970-01-01 01:00:00.000000000 +0100
@@ -1,25 +0,0 @@
-/* #include "../../config.h" */
-#include <string.h>
-
-#define DSROOTNAME "@prefix@"
-
-void dsdirname(char*name)
-{
-  name[0]='\0';
-  strcpy(name,DSROOTNAME);
-  return;
-}
-
-void dsdirname_(char*name)
-{
-  name[0]='\0';
-  strcpy(name,DSROOTNAME);
-  return;
-}
-
-void dsdirname__(char*name)
-{
-  name[0]='\0';
-  strcpy(name,DSROOTNAME);
-  return;
-}
diff -rupN darksusy-5.1.3/src/ini/dsinit.f darksusy-5.1.3.patched/src/ini/dsinit.f
--- darksusy-5.1.3/src/ini/dsinit.f	2013-02-10 06:43:34.000000000 +0000
+++ darksusy-5.1.3.patched/src/ini/dsinit.f	2017-02-11 20:01:26.171863534 +0000
@@ -299,16 +299,27 @@ c... numbers are conventional, no physic
       ivtype(ksnue)=11
       ivtype(kse1)=12
       ivtype(kse2)=12
-      ivtype(knumu)=21
-      ivtype(kmu)=22
-      ivtype(ksnumu)=21
-      ivtype(ksmu1)=22
-      ivtype(ksmu2)=22
-      ivtype(knutau)=31
-      ivtype(ktau)=32
-      ivtype(ksnutau)=31
-      ivtype(kstau1)=32
-      ivtype(kstau2)=32
+c      ivtype(knumu)=21
+c      ivtype(kmu)=22
+c      ivtype(ksnumu)=21
+c      ivtype(ksmu1)=22
+c      ivtype(ksmu2)=22
+c      ivtype(knutau)=31
+c      ivtype(ktau)=32
+c      ivtype(ksnutau)=31
+c      ivtype(kstau1)=32
+c      ivtype(kstau2)=32
+      ivtype(knumu)=11 ! JE CORRECTION
+      ivtype(kmu)=12
+      ivtype(ksnumu)=11
+      ivtype(ksmu1)=12
+      ivtype(ksmu2)=12
+      ivtype(knutau)=11
+      ivtype(ktau)=12
+      ivtype(ksnutau)=11
+      ivtype(kstau1)=12
+      ivtype(kstau2)=12
+
       ivtype(ku)=41
       ivtype(kd)=42
       ivtype(ksu1)=41
diff -rupN darksusy-5.1.3/src/ini/dssetdsinstall.f darksusy-5.1.3.patched/src/ini/dssetdsinstall.f
--- darksusy-5.1.3/src/ini/dssetdsinstall.f	2011-11-04 23:48:05.000000000 +0000
+++ darksusy-5.1.3.patched/src/ini/dssetdsinstall.f	1970-01-01 01:00:00.000000000 +0100
@@ -1,17 +0,0 @@
-      subroutine dssetdsinstall
-      implicit none
-      integer i
-      character*300 name
-      include 'dsdirver.h'
-      call dsdirname(name)
-      i=1
- 10   if (name(i:i).eq.'\000') goto 20
-      i=i+1
-      goto 10
- 20   i=i-1
-c      write (*,*) 'i=',i
-cccc      dsinstall=name(:i)//'/'
-      write (*,*) 'dssetdsinstall: cannot reset dsinstall'
-      stop
-c      write (*,*) dsinstall
-      end
diff -rupN darksusy-5.1.3/src/ini/dssetdsversion.f darksusy-5.1.3.patched/src/ini/dssetdsversion.f
--- darksusy-5.1.3/src/ini/dssetdsversion.f	2008-02-21 16:08:34.000000000 +0000
+++ darksusy-5.1.3.patched/src/ini/dssetdsversion.f	1970-01-01 01:00:00.000000000 +0100
@@ -1,15 +0,0 @@
-      subroutine dssetdsversion
-      implicit none
-      integer i
-      character*300 name
-      include 'dsdirver.h'
-      call dsvername(name)
-      i=1
- 10   if (name(i:i).eq.'\000') goto 20
-      i=i+1
-      goto 10
- 20   i=i-1
-c      write (*,*) 'i=',i
-      dsversion=name(:i)
-c      write (*,*) dsversion
-      end
diff -rupN darksusy-5.1.3/src/ini/dsvername.c.in darksusy-5.1.3.patched/src/ini/dsvername.c.in
--- darksusy-5.1.3/src/ini/dsvername.c.in	2008-02-21 16:08:34.000000000 +0000
+++ darksusy-5.1.3.patched/src/ini/dsvername.c.in	1970-01-01 01:00:00.000000000 +0100
@@ -1,25 +0,0 @@
-/* #include "../../config.h" */
-#include <string.h>
-
-#define DSVERNAME "@DSVERSION@@DSREV@"
-
-void dsvername(char*name)
-{
-  name[0]='\0';
-  strcpy(name,DSVERNAME);
-  return;
-}
-
-void dsvername_(char*name)
-{
-  name[0]='\0';
-  strcpy(name,DSVERNAME);
-  return;
-}
-
-void dsvername__(char*name)
-{
-  name[0]='\0';
-  strcpy(name,DSVERNAME);
-  return;
-}
diff -rupN darksusy-5.1.3/src/ini/makefile.in darksusy-5.1.3.patched/src/ini/makefile.in
--- darksusy-5.1.3/src/ini/makefile.in	2011-11-04 23:48:05.000000000 +0000
+++ darksusy-5.1.3.patched/src/ini/makefile.in	2017-02-11 20:01:26.171863534 +0000
@@ -22,7 +22,7 @@ dswacom.h
 vpath %.h $(DINC)
 
 SRC = dscval.f dsfval.f dsinit.f dsival.f dskillsp.f dslowcase.f \
-dslval.f dsreadnuclides.f dsreadpar.f dssetdsinstall.f dssetdsversion.f
+dslval.f dsreadnuclides.f dsreadpar.f
 
 OBJ = $(patsubst %.f,$(DOBJ)/%.o,$(SRC))
 
diff -rupN darksusy-5.1.3/src/makefile.in darksusy-5.1.3.patched/src/makefile.in
--- darksusy-5.1.3/src/makefile.in	2015-04-07 10:23:05.000000000 +0100
+++ darksusy-5.1.3.patched/src/makefile.in	2017-02-11 20:04:21.463865933 +0000
@@ -10,14 +10,16 @@
 #### DO NOT CHANGE ANYTHING BELOW THIS LINE ###
 ###############################################
 
+FF=@F77@
+FOPT=@FOPT@
+
 # Here we set where the library goes and where include files are.
 
-LIB=../lib
 INC=../include
 TSPACKDIR=@TSPACKDIR@
 BUILD=../build
 
-vpath %.a $(LIB)
+vpath %.a $(DS_LIB)
 
 DIRS = ac bsg an an1l anstu as dd ep	\
 ge ha hm hr ib ini mh wa nt pb db rd rge rn su ucmh xcern	\
@@ -32,18 +34,22 @@ all-local : make-lib
 make-lib :
 	cd ..; make dslib
 
-all : libdarksusy.a
+all : libdarksusy.a libdarksusy.so
 
 libdarksusy.a : $(DOBJ)
-	ar rS $(LIB)/libdarksusy.a $(BUILD)/*.o
-	ranlib $(LIB)/libdarksusy.a
+	ar rS $(DS_LIB)/libdarksusy.a $(BUILD)/*.o
+	ranlib $(DS_LIB)/libdarksusy.a
+
+libdarksusy.so : $(DOBJ)
+	 $(FF) $(FOPT) -shared $(BUILD)/*.o $(DS_LIB)/libFH.so $(DS_LIB)/libHB.so $(DS_LIB)/libisajet.so -o $(DS_LIB)/libdarksusy.so 
 
 $(DOBJ) : 
 	cd $(@:_obj=) ; make all
 
 .PHONY: clean distclean $(DOBJ)
 distclean : clean
-	rm $(LIB)/libdarksusy.a
+	rm $(DS_LIB)/libdarksusy.a
+	rm $(DS_LIB)/libdarksusy.so
 clean : 
 	rm -f $(BUILD)/*.o
 
diff -rupN darksusy-5.1.3/src/makefile.in~ darksusy-5.1.3.patched/src/makefile.in~
--- darksusy-5.1.3/src/makefile.in~	1970-01-01 01:00:00.000000000 +0100
+++ darksusy-5.1.3.patched/src/makefile.in~	2017-02-11 20:01:26.171863534 +0000
@@ -0,0 +1,56 @@
+# Makefile for the DarkSUSY library
+# Technical questions about this makefile should be directed to
+# Joakim Edsjo, edsjo@physto.se
+# Date: August 29, 2000.
+
+# You shouldn't have to change anything in this file.
+# You should only change in the makefile in the DarkSUSY root directory.
+
+###############################################
+#### DO NOT CHANGE ANYTHING BELOW THIS LINE ###
+###############################################
+
+FF=@F77@
+FOPT=@FOPT@
+
+# Here we set where the library goes and where include files are.
+
+INC=../include
+TSPACKDIR=@TSPACKDIR@
+BUILD=../build
+
+vpath %.a $(LIB)
+
+DIRS = ac bsg an an1l anstu as dd ep	\
+ge ha hm hr ib ini mh wa nt pb db rd rge rn su ucmh xcern	\
+xcmlib ep2 xdiag xfeynhiggs xhiggsbounds slha
+
+
+DOBJ = $(DIRS:%=%_obj)
+
+# Trick to call main makefile in case make is called in src directory.
+all-local : make-lib
+
+make-lib :
+	cd ..; make dslib
+
+all : libdarksusy.a libdarksusy.so
+
+libdarksusy.a : $(DOBJ)
+	ar rS $(LIB)/libdarksusy.a $(BUILD)/*.o
+	ranlib $(LIB)/libdarksusy.a
+
+libdarksusy.so : $(DOBJ)
+	 $(FF) $(FOPT) -shared $(BUILD)/*.o $(DS_LIB)/libFH.so $(DS_LIB)/libHB.so $(DS_LIB)/libisajet.so -o $(DS_LIB)/libdarksusy.so 
+
+$(DOBJ) : 
+	cd $(@:_obj=) ; make all
+
+.PHONY: clean distclean $(DOBJ)
+distclean : clean
+	rm $(LIB)/libdarksusy.a
+	rm $(LIB)/libdarksusy.so
+clean : 
+	rm -f $(BUILD)/*.o
+
+
diff -rupN darksusy-5.1.3/src/nt/dsntmuonyield.f darksusy-5.1.3.patched/src/nt/dsntmuonyield.f
--- darksusy-5.1.3/src/nt/dsntmuonyield.f	2013-01-31 21:46:16.000000000 +0000
+++ darksusy-5.1.3.patched/src/nt/dsntmuonyield.f	2017-02-11 20:01:26.171863534 +0000
@@ -78,21 +78,16 @@ c      call wirate(6,6,1)
          stop
       endif
          
-      waistat=0
-
       yield = 0.d0
       if (ptype.eq.1 .or. ptype.eq.3) then
         yield=dswayield(wamwimp,emu,theta,wh,kind,t1,istat)
-        waistat=or(waistat,istat)
       endif
 
       if (ptype.eq.2 .or. ptype.eq.3) then
         yield=yield+dswayield(wamwimp,emu,theta,wh,kind,t2,istat)
-        waistat=or(waistat,istat)
       endif
       
       dsntmuonyield=yield
-      istat=waistat
 
       end
 
diff -rupN darksusy-5.1.3/src/slha/dsfromslha.F darksusy-5.1.3.patched/src/slha/dsfromslha.F
--- darksusy-5.1.3/src/slha/dsfromslha.F	2013-01-31 21:46:16.000000000 +0000
+++ darksusy-5.1.3.patched/src/slha/dsfromslha.F	2017-02-11 20:01:26.171863534 +0000
@@ -8,6 +8,7 @@
 ***         More options on how to treat redundant information, e.g.
 ***         should Yukawas from SLHA file be used instead of letting
 ***         DarkSUSY run them (as is currently done).
+*** Modified: 2016-11-11 Joakim Edsjo, fixed lsp setting      
 **********************************************************************
       subroutine dsfromSLHA
       implicit none
@@ -465,6 +466,12 @@ c...Block VMIX - V matrix for chargino m
          enddo
       enddo
 
+c...JE CORR 161111, make sue we set lsp correctly with SLHA read masses
+      lsp = kn(kln)
+      do i=21,48
+         if (abs(mass(i)).lt.abs(mass(lsp))) lsp = i
+      enddo
+      
 c...BLOCK alpha
       call dssetfromslha(Alpha_Alpha,alpha,0,'')
 
@@ -768,6 +775,7 @@ c...are added. In particular, we need to
 c...widths. In the future, we should read these from the SLHA file instead
 c...and only calculate here if they are not present in the file.
 
+      call dsorder_flavour ! Order flavours, still needed for IB routines
       call dsvertx
       call dshigwid
       call dsspwid
@@ -775,4 +783,3 @@ c...and only calculate here if they are
 
       return
       end
-
diff -rupN darksusy-5.1.3/src/su/dsorder_flavour.f darksusy-5.1.3.patched/src/su/dsorder_flavour.f
--- darksusy-5.1.3/src/su/dsorder_flavour.f	1970-01-01 01:00:00.000000000 +0100
+++ darksusy-5.1.3.patched/src/su/dsorder_flavour.f	2017-02-11 20:01:26.171863534 +0000
@@ -0,0 +1,277 @@
+*******************************************************************************
+*** This routine orders all sfermions according to flavour. For sleptons,   ***
+*** e.g. this implies the following for the internal particle code ksl:     ***
+***                                                                         ***
+***       ksl(1) = kse(1) = lightest selectron-like sfermion                ***
+***       ksl(2) = ksmu(1) = lightest smuon-like sfermion                   ***
+***       ksl(3) = kstau(1) = lightest stau-like sfermion                   ***
+***       ksl(4) = kse(2) = heavier selectron-like sfermion                 ***
+***       ksl(5) = ksmu(2) = heavier smuon-like sfermion                    ***
+***       ksl(6) = kstau(2) = heavier stau-like sfermion                    ***
+***                                                                         ***
+*** Here, the two "most selectron-like" particles are defined as those that ***
+*** mix strongest with the light- and right-handed selectron, respectively. ***
+*** For squarks, the analogous applies, while for sneutrinos only the first ***
+*** 3 entries in the above table exist.                                     ***
+***                                                                         ***
+***       output: translation from new to old channel numbers (1..6) is     ***                                                                  
+***               stored in common block variables flavsortsl etc.        ***
+***                                                                         ***
+*** NB: This routine assumes that both the mixing and mass common blocks    ***
+***     have already been set, but it must be called ONCE, *before*         ***
+***     initializing the vertex rules.                                      ***
+***                                                                         ***
+*** date:   2016-11-15                                                      ***
+*** author: torsten.bringmannl@fys.uio.no,                                  ***
+*******************************************************************************
+
+      subroutine dsorder_flavour
+      implicit none
+
+      include 'dsmssm.h'
+      
+      integer i, j, ktmp, kflav(6)
+      real*8 masstmp(6), mixtmpl(6,3), mixtmpr(6,3)
+
+c...FIXME. If the re-order arrays are to be used, this routine should only
+c...be called once for each model. This is currently not checked for. The
+c...reordering will work even if the routine is called many times, but the
+c...reordering arrays will be meaningless if the routine is called many times.
+      
+ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+ccc re-order down-type sleptons as i -> kflav(i)
+ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+      do i=1,6
+        kflav(i)=1
+      enddo  
+
+      do i=2,6                                                        ! find the slepton that
+        if (abs(sldlmx(i,1)).gt.abs(sldlmx(kflav(1),1))) kflav(1) = i ! looks most like a left-
+      enddo                                                           ! handed selectron
+      do i=2,6                                               
+        if ((i.ne.kflav(1)).and.                           ! find the (remaining!) slepton 
+     &      (abs(sldrmx(i,1)).gt.abs(sldrmx(kflav(4),1)))) ! that looks most like a right- 
+     &      kflav(4) = i                                   ! handed selectron
+      enddo                                                          
+
+      do i=2,6 ! now repeat this for smuons
+        if ((i.ne.kflav(1).and.i.ne.kflav(4)).and.                         
+     &     (abs(sldlmx(i,2)).gt.abs(sldlmx(kflav(2),2)))) kflav(2) = i 
+      enddo                                                           
+      do i=2,6                                               
+        if ((i.ne.kflav(1).and.i.ne.kflav(4).and.i.ne.kflav(2)).and.                            
+     &      (abs(sldrmx(i,2)).gt.abs(sldrmx(kflav(5),2)))) kflav(5) = i                                   
+      enddo                                                          
+
+      i=0 ! the remaining ones must be stau-like... 
+ 10   i = i+1
+      if (i.eq.kflav(1).or.i.eq.kflav(2).or.i.eq.kflav(4).or.
+     &      i.eq.kflav(5)) goto 10
+      kflav(3) = i
+ 20   i = i+1
+      if (i.eq.kflav(1).or.i.eq.kflav(2).or.i.eq.kflav(3).or.
+     &      i.eq.kflav(4).or.i.eq.kflav(5)) goto 20 
+      kflav(6) = i     
+
+      do i=1,3 ! change mass order if necessary
+        if (mass(ksl(kflav(i+3))).lt.mass(ksl(kflav(i)))) then 
+          ktmp = kflav(i)
+          kflav(i) = kflav(i+3)
+          kflav(i+3) = ktmp
+        endif
+      enddo
+
+c... we write this translation from old to new ordering to common blocks
+      do i=1,6
+        flavsortsl(i) = kflav(i)
+      enddo
+ 
+c... now we have to update the masses and mixing matrices to these new conventions:
+      do i=1,6
+        masstmp(i) = mass(ksl(i)) 
+        do j=1,3
+          mixtmpl(i,j) = sldlmx(i,j)
+          mixtmpr(i,j) = sldrmx(i,j)
+        enddo
+      enddo
+      do i=1,6         
+        mass(ksl(i)) = masstmp(kflav(i))
+        do j=1,3
+          sldlmx(i,j) = mixtmpl(kflav(i),j)
+          sldrmx(i,j) = mixtmpr(kflav(i),j)
+        enddo
+      enddo
+  
+ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+ccc re-order sneutrinos as i -> kflav(i)
+ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+      do i=1,3
+        kflav(i)=1
+      enddo  
+
+      do i=2,3 ! find the sneutrino that looks most like a snu_e
+        if (abs(slulmx(i,1)).gt.abs(slulmx(kflav(1),1))) kflav(1) = i
+      enddo  
+      do i=2,3 ! find the sneutrino that looks most like a snu_mu
+        if ((i.ne.kflav(1)).and.                         
+     &     (abs(slulmx(i,2)).gt.abs(slulmx(kflav(2),2)))) kflav(2) = i 
+      enddo                                                           
+      do i=2,3 ! find the sneutrino that looks most like a snu_tau 
+        if (i.ne.kflav(1).and.i.ne.kflav(2)) kflav(3) = i  
+      enddo
+c... we write this translation from old to new ordering to common blocks
+      do i=1,3
+        flavsortsnu(i) = kflav(i)
+      enddo
+c... now we have to update the masses and mixing matrices to these new conventions:
+      do i=1,3
+        masstmp(i) = mass(ksnu(i)) 
+        do j=1,3
+          mixtmpl(i,j) = slulmx(i,j)
+        enddo
+      enddo
+      do i=1,3         
+        mass(ksnu(i)) = masstmp(kflav(i))
+        do j=1,3
+          slulmx(i,j) = mixtmpl(kflav(i),j)
+        enddo
+      enddo
+
+ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+ccc re-order down-type squarks as i -> kflav(i)
+ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+      do i=1,6
+        kflav(i)=1
+      enddo  
+
+      do i=2,6                                                        ! find the squark that
+        if (abs(sqdlmx(i,1)).gt.abs(sqdlmx(kflav(1),1))) kflav(1) = i ! looks most like a left-
+      enddo                                                           ! handed down-squark
+      do i=2,6                                               
+        if ((i.ne.kflav(1)).and.                           ! find the (remaining!) squark 
+     &      (abs(sqdrmx(i,1)).gt.abs(sqdrmx(kflav(4),1)))) ! that looks most like a right- 
+     &      kflav(4) = i                                   ! handed down-squark
+      enddo                                                          
+
+      do i=2,6 ! now repeat this for s-strange
+        if ((i.ne.kflav(1).and.i.ne.kflav(4)).and.                         
+     &     (abs(sqdlmx(i,2)).gt.abs(sqdlmx(kflav(2),2)))) kflav(2) = i 
+      enddo                                                           
+      do i=2,6                                               
+        if ((i.ne.kflav(1).and.i.ne.kflav(4).and.i.ne.kflav(2)).and.                            
+     &      (abs(sqdrmx(i,2)).gt.abs(sqdrmx(kflav(5),2)))) kflav(5) = i                                   
+      enddo                                                          
+
+      i=0 ! the remaining ones must be sbottom-like...  
+ 30   i = i+1
+      if (i.eq.kflav(1).or.i.eq.kflav(2).or.i.eq.kflav(4).or.
+     &      i.eq.kflav(5)) goto 30
+      kflav(3) = i
+ 40   i = i+1
+      if (i.eq.kflav(1).or.i.eq.kflav(2).or.i.eq.kflav(3).or.
+     &      i.eq.kflav(4).or.i.eq.kflav(5)) goto 40 
+      kflav(6) = i     
+
+      do i=1,3 ! change mass order if necessary
+        if (mass(ksqd(kflav(i+3))).lt.mass(ksqd(kflav(i)))) then 
+          ktmp = kflav(i)
+          kflav(i) = kflav(i+3)
+          kflav(i+3) = ktmp
+        endif
+      enddo
+ 
+c... we write this translation from old to new ordering to common blocks
+      do i=1,6
+        flavsortsqd(i) = kflav(i)
+      enddo
+
+c... now we have to update the masses and mixing matrices to these new conventions:
+      do i=1,6
+        masstmp(i) = mass(ksqd(i)) 
+        do j=1,3
+          mixtmpl(i,j) = sqdlmx(i,j)
+          mixtmpr(i,j) = sqdrmx(i,j)
+        enddo
+      enddo
+      do i=1,6         
+        mass(ksqd(i)) = masstmp(kflav(i))
+        do j=1,3
+          sqdlmx(i,j) = mixtmpl(kflav(i),j)
+          sqdrmx(i,j) = mixtmpr(kflav(i),j)
+        enddo
+      enddo
+  
+ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+ccc re-order up-type squarks as i -> kflav(i)
+ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+      do i=1,6
+        kflav(i)=1
+      enddo  
+
+      do i=2,6                                                        ! find the squark that
+        if (abs(squlmx(i,1)).gt.abs(squlmx(kflav(1),1))) kflav(1) = i ! looks most like a left-
+      enddo                                                           ! handed up-squark
+      do i=2,6                                               
+        if ((i.ne.kflav(1)).and.                           ! find the (remaining!) squark 
+     &      (abs(squrmx(i,1)).gt.abs(squrmx(kflav(4),1)))) ! that looks most like a right- 
+     &      kflav(4) = i                                   ! handed up-squark
+      enddo                                                          
+
+      do i=2,6 ! now repeat this for charm-squark
+        if ((i.ne.kflav(1).and.i.ne.kflav(4)).and.                         
+     &     (abs(squlmx(i,2)).gt.abs(squlmx(kflav(2),2)))) kflav(2) = i 
+      enddo                                                           
+      do i=2,6                                               
+        if ((i.ne.kflav(1).and.i.ne.kflav(4).and.i.ne.kflav(2)).and.                            
+     &      (abs(squrmx(i,2)).gt.abs(squrmx(kflav(5),2)))) kflav(5) = i                                   
+      enddo                                                          
+
+      i=0 ! the remaining ones must be stau-like...  
+ 50   i = i+1
+      if (i.eq.kflav(1).or.i.eq.kflav(2).or.i.eq.kflav(4).or.
+     &      i.eq.kflav(5)) goto 50
+      kflav(3) = i
+ 60   i = i+1
+      if (i.eq.kflav(1).or.i.eq.kflav(2).or.i.eq.kflav(3).or.
+     &      i.eq.kflav(4).or.i.eq.kflav(5)) goto 60 
+      kflav(6) = i     
+
+      do i=1,3 ! change mass order if necessary
+        if (mass(ksqu(kflav(i+3))).lt.mass(ksqu(kflav(i)))) then 
+          ktmp = kflav(i)
+          kflav(i) = kflav(i+3)
+          kflav(i+3) = ktmp
+        endif
+      enddo
+ 
+c... we write this translation from old to new ordering to common blocks
+      do i=1,6
+        flavsortsqu(i) = kflav(i)
+      enddo
+
+c... now we have to update the masses and mixing matrices to these new conventions:
+      do i=1,6
+        masstmp(i) = mass(ksqu(i)) 
+        do j=1,3
+          mixtmpl(i,j) = squlmx(i,j)
+          mixtmpr(i,j) = squrmx(i,j)
+        enddo
+      enddo
+      do i=1,6         
+        mass(ksqu(i)) = masstmp(kflav(i))
+        do j=1,3
+          squlmx(i,j) = mixtmpl(kflav(i),j)
+          squrmx(i,j) = mixtmpr(kflav(i),j)
+        enddo
+      enddo
+  
+
+      return
+      end
+
+
+
+
+
+        
+
diff -rupN darksusy-5.1.3/src/su/dssuconst_yukawa_running.f darksusy-5.1.3.patched/src/su/dssuconst_yukawa_running.f
--- darksusy-5.1.3/src/su/dssuconst_yukawa_running.f	2011-11-04 23:48:05.000000000 +0000
+++ darksusy-5.1.3.patched/src/su/dssuconst_yukawa_running.f	2017-02-11 20:01:26.171863534 +0000
@@ -20,6 +20,9 @@ c=======================================
       mscale=2.d0*mass(lsp)
       alph3=dsralph3(mscale)
       g3stro=sqrt(4.d0*pi*alph3)
+c      write(*,*) 'lsp = ',lsp
+c      write(*,*) 'mass(lsp) = ',mass(lsp)
+c      write(*,*) 'mscale=',mscale
 c      write(*,*) 'alpha3=',alph3,' alph3mz=',alph3mz
       aux = g2weak/dsqrt(2.d0)/mass(kw)
       yukawa(ktau)= aux*dsrmq(mscale,ktau)/cosbe
diff -rupN darksusy-5.1.3/src/su/dsvertx1.f darksusy-5.1.3.patched/src/su/dsvertx1.f
--- darksusy-5.1.3/src/su/dsvertx1.f	2011-11-04 23:48:05.000000000 +0000
+++ darksusy-5.1.3.patched/src/su/dsvertx1.f	2017-02-11 20:01:26.171863534 +0000
@@ -616,11 +616,11 @@ c       neutrinos
           gjll=-(g2weak*neunmx(j,2)-gyweak*neunmx(j,1))/sqrt(2.0d0)
           do k=1,3
             gl(ksnu(k),kn(j),knu(g))=conjg(gjll)*slulmx(k,g)
-            gl(kn(j),ksnu(g),knu(g))=gl(ksnu(g),kn(j),knu(g))
-            gl(kn(j),knu(g),ksnu(g))=gl(ksnu(g),kn(j),knu(g))
+            gl(kn(j),ksnu(k),knu(g))=gl(ksnu(k),kn(j),knu(g)) !JE corr 161030
+            gl(kn(j),knu(g),ksnu(k))=gl(ksnu(k),kn(j),knu(g)) !JE corr 161030
             gr(ksnu(k),knu(g),kn(j))=conjg(gl(ksnu(k),kn(j),knu(g)))
-            gr(knu(g),ksnu(g),kn(j))=gr(ksnu(g),knu(g),kn(j))
-            gr(knu(g),kn(j),ksnu(g))=gr(ksnu(g),knu(g),kn(j))
+            gr(knu(g),ksnu(k),kn(j))=gr(ksnu(k),knu(g),kn(j)) !JE corr 161030
+            gr(knu(g),kn(j),ksnu(k))=gr(ksnu(k),knu(g),kn(j)) !JE corr 161030
           enddo
 
 c       charged leptons
diff -rupN darksusy-5.1.3/src/su/makefile.in darksusy-5.1.3.patched/src/su/makefile.in
--- darksusy-5.1.3/src/su/makefile.in	2013-01-31 21:46:16.000000000 +0000
+++ darksusy-5.1.3.patched/src/su/makefile.in	2017-02-11 20:01:26.171863534 +0000
@@ -32,7 +32,7 @@ dsrmq4loop.f dssfesct.f dsspectrum.f dss
 dssuconst_ckm.f dssuconst_couplings.f dssuconst_higgs.f \
 dssuconst_yukawa.f dssuconst_yukawa_running.f dssusy.f dsvertx.f \
 dsvertx1.f dsvertx3.f dswhwarn.f dswspectrum.f dswunph.f dswvertx.f \
-dswwidth.f g4p.f dsgive_model25.f
+dswwidth.f g4p.f dsgive_model25.f dsorder_flavour.f
 
 OBJ = $(patsubst %.f,$(DOBJ)/%.o,$(SRC))
 
diff -rupN darksusy-5.1.3/src/ucmh/dsucmh_aontsq.f darksusy-5.1.3.patched/src/ucmh/dsucmh_aontsq.f
--- darksusy-5.1.3/src/ucmh/dsucmh_aontsq.f	2015-04-07 14:12:14.000000000 +0100
+++ darksusy-5.1.3.patched/src/ucmh/dsucmh_aontsq.f	2017-02-11 20:01:26.171863534 +0000
@@ -6,37 +6,42 @@
 !Date: 2011
 !
 !Input:   z       redshift    (dimensionless)
-!Output:  aontsq  a^2/(ct)^2  (Mpc^-2)	
+!Output:  aontsq  a^2/(ct)^2  (Mpc^-2)
 
       double precision function dsucmh_aontsq(z)
 
       implicit none
-      
+
       include 'dsmpconst.h'
 
       double precision, intent(IN) :: z
+      integer, parameter :: nz = 7
       double precision, parameter ::
-     &     zs(7) = (/50.d0, 100.d0, 130.d0, 150.d0, 200.d0,
+     &     zs(nz) = (/50.d0, 100.d0, 130.d0, 150.d0, 200.d0,
      &     500.d0, 1000.d0/)
       double precision, parameter ::
-     &     aontsqs(7) = (/1.78826666d-6, 3.6648633d-6,
+     &     aontsqs(nz) = (/1.78826666d-6, 3.6648633d-6,
      &     4.84663373d-6, 5.65783754d-6, 7.816d-6, 2.274d-5, 5.57d-5/)
       double precision :: weight
       integer :: zlow_index
 
       !Less accurate at high z.
-      !double precision :: ct, dsageatz 
+      !double precision :: ct, dsageatz
       !ct = dsageatz(z) * c_light / mperkpc ! Mpc
       !dsucmh_aontsq = (ct*(z+1.d0))**(-2)
 
       !More accurate for high z.
-      if (z .lt. zs(1) .or. z .gt. zs(7)) then
+      if (z .lt. zs(1) .or. z .gt. zs(nz)) then
         write(*,*) 'z_c = ', z, ' outside permitted range in dsumch_aontsq.'
         stop
       endif
-      call dshunt(zs,7,z,zlow_index)
-      weight = (zs(zlow_index+1) - z) / (zs(zlow_index+1) - zs(zlow_index))
-      dsucmh_aontsq = exp(weight*log(aontsqs(zlow_index)) + (1.d0 - weight)*log(aontsqs(zlow_index+1)))
+      call dshunt(zs,nz,z,zlow_index)
+      if (zlow_index .eq. nz) then
+        dsucmh_aontsq = aontsqs(nz)
+      else
+        weight = (zs(zlow_index+1) - z) / (zs(zlow_index+1) - zs(zlow_index))
+        dsucmh_aontsq = exp(weight*log(aontsqs(zlow_index)) + (1.d0 - weight)*log(aontsqs(zlow_index+1)))
+      endif
 
       end function dsucmh_aontsq
 
diff -rupN darksusy-5.1.3/src/wa/dswadydth.f darksusy-5.1.3.patched/src/wa/dswadydth.f
--- darksusy-5.1.3/src/wa/dswadydth.f	2015-12-20 21:43:06.000000000 +0000
+++ darksusy-5.1.3.patched/src/wa/dswadydth.f	2017-02-11 20:01:26.171863534 +0000
@@ -8,7 +8,6 @@
       real*8 function dswadydth(cth, phim0,phim1,phim2,phie0,phieth,phithm,
      & phichi,phiwh,phifk,phifv)
       implicit none
-      include 'dswacom.h'
 
 c------------------------ variables ------------------------------------
 
diff -rupN darksusy-5.1.3/src/wa/dswaemean.f darksusy-5.1.3.patched/src/wa/dswaemean.f
--- darksusy-5.1.3/src/wa/dswaemean.f	2009-03-30 13:08:08.000000000 +0100
+++ darksusy-5.1.3.patched/src/wa/dswaemean.f	2017-02-11 20:01:26.171863534 +0000
@@ -8,8 +8,6 @@
 
       real*8 function dswaemean(e0,m0,m1,m2)
       implicit none
-      include 'dswacom.h'
-      include 'dsidtag.h'
 
 c------------------------ variables ------------------------------------
 
diff -rupN darksusy-5.1.3/src/wa/dswaifind.f darksusy-5.1.3.patched/src/wa/dswaifind.f
--- darksusy-5.1.3/src/wa/dswaifind.f	2008-04-07 22:27:47.000000000 +0100
+++ darksusy-5.1.3.patched/src/wa/dswaifind.f	2017-02-11 20:01:26.171863534 +0000
@@ -6,7 +6,6 @@
       subroutine dswaifind(value,array,ipl,ii,imin,imax)
       implicit none
 
-      include 'dswacom.h'
       include 'dsidtag.h'
 
       integer imin,imax,i,inew,imint,imaxt,iold,ii
diff -rupN darksusy-5.1.3/src/wa/dswainit.f darksusy-5.1.3.patched/src/wa/dswainit.f
--- darksusy-5.1.3/src/wa/dswainit.f	2013-01-27 15:37:53.000000000 +0000
+++ darksusy-5.1.3.patched/src/wa/dswainit.f	2017-02-11 20:01:26.171863534 +0000
@@ -271,9 +271,9 @@ c     &            k,mfi
 
 c...Create mixed tables, differential in energy, integrated in theta
                 do l=0,zn-1
-                  tmpy=0.d0
+                  tmpy=0.e0
                   do m=0,thn
-                     tmpy=tmpy+phidiff(m,l,k,j,i,yli)*dth(m)
+                     tmpy=tmpy+phidiff(m,l,k,j,i,yli)*real(dth(m))
                      phimixed(m,l,k,j,i,yli)=tmpy
                   enddo
                 enddo
@@ -338,7 +338,6 @@ c     &   10.0d0,80.3d0,91.2d0,5*10.d0/
      &  1500.0d0,2000.0d0,3000.0d0,5000.0d0,7500.0d0,10000.0d0/
 c...Lowest mass index for the 14 channels chi
       data milow/1,1,1,1,4,16,1,12,13,1,1,1,1,1/
-      data waerr/0/
       data waftype/'b'/
 c      data wabase/'we-res-b-full'/
 c      data wabase/'we-res-may2012'/
diff -rupN darksusy-5.1.3/src/wa/dswayield.f darksusy-5.1.3.patched/src/wa/dswayield.f
--- darksusy-5.1.3/src/wa/dswayield.f	2011-05-24 09:54:48.000000000 +0100
+++ darksusy-5.1.3.patched/src/wa/dswayield.f	2017-02-11 20:01:26.171863534 +0000
@@ -59,8 +59,6 @@
       real*8 function dswayield(mneu,e,theta,wh,kind,type,istat)
       implicit none
       include 'dswacom.h'
-      include 'dsidtag.h'
-      include 'dsio.h'
 
 c------------------------ variables ------------------------------------
 
diff -rupN darksusy-5.1.3/src/wa/dswayieldf.f darksusy-5.1.3.patched/src/wa/dswayieldf.f
--- darksusy-5.1.3/src/wa/dswayieldf.f	2015-12-20 21:43:06.000000000 +0000
+++ darksusy-5.1.3.patched/src/wa/dswayieldf.f	2017-02-11 20:01:26.171863534 +0000
@@ -52,11 +52,13 @@
 
       real*8 function dswayieldf(mwimp,e,theta,chi,wh,kind,
      &  type,istat)
+      use omp_lib
       implicit none
       include 'dswacom.h'
       include 'dsidtag.h'
       include 'dsio.h'
 
+
 c------------------------ variables ------------------------------------
 
       real*8 mwimp,e,theta,phi1,phi2,mp1,mp2,zpl,thpl,mn,z,th,
@@ -64,7 +66,7 @@ c------------------------ variables ----
       integer chi,istat,zi,thi,m1i,m2i,whi,kind,type,yli,chii,ii
       character*2 wh
       logical wb
-      external dswacom, slog ! set up common block variables
+      external slog
 
 c-----------------------------------------------------------------------
 
@@ -73,8 +75,11 @@ c---------------------------------------
 
 c...Safecheck
       if (yli.eq.0) then
-         call dswainit(kind,type)
-         yli=yload(kind,type)
+        if (omp_get_thread_num() .eq. 0) then
+          call dswainit(kind,type)
+        endif
+!$omp barrier
+        yli=yload(kind,type)
       endif
 
       dswayieldf=0.0d0
diff -rupN darksusy-5.1.3/src/wa/dswayieldfth.f darksusy-5.1.3.patched/src/wa/dswayieldfth.f
--- darksusy-5.1.3/src/wa/dswayieldfth.f	2015-12-20 21:43:06.000000000 +0000
+++ darksusy-5.1.3.patched/src/wa/dswayieldfth.f	2017-02-11 20:01:26.171863534 +0000
@@ -6,7 +6,7 @@
 *****************************************************************************
 
       real*8 function dswayieldfth(e0,m0,mp1,mp2,emuthr,thmax,chi,wh,
-     &  kind,type,istat)
+     &  kind,type,istat,waerror)
       implicit none
       include 'dswacom.h'
       include 'dsidtag.h'
@@ -16,7 +16,7 @@ c------------------------ variables ----
 
       real*8 e0,m0,mp1,mp2,emuthr,thmax,m00,e00,thu
       real*8 mp1t,mp2t
-      integer chi,istat,kind,type
+      integer chi,istat,kind,type,waerror
       character*2 wh
 
       real*8 sum,emax,emin,e1cm,pi
@@ -149,9 +149,9 @@ c          endif
 
       if (wb) then
         if (wh.eq.'su'.or.wh.eq.'SU') then
-          sum=dswayield_int(dswadydth,cos(thu),1.0d0,chi,1,m00,mp1t,mp2t,e00,emuthr,thmax,kind,type)
+          sum=dswayield_int(dswadydth,cos(thu),1.0d0,chi,1,m00,mp1t,mp2t,e00,emuthr,thmax,kind,type,waerror)
         else
-          sum=dswayield_int(dswadydth,cos(thu),1.0d0,chi,2,m00,mp1t,mp2t,e00,emuthr,thmax,kind,type)
+          sum=dswayield_int(dswadydth,cos(thu),1.0d0,chi,2,m00,mp1t,mp2t,e00,emuthr,thmax,kind,type,waerror)
         endif
         dswayieldfth=sum*1.0d-15
       endif
diff -rupN darksusy-5.1.3/src/wa/dswayield_int.f darksusy-5.1.3.patched/src/wa/dswayield_int.f
--- darksusy-5.1.3/src/wa/dswayield_int.f	2015-12-20 21:43:06.000000000 +0000
+++ darksusy-5.1.3.patched/src/wa/dswayield_int.f	2017-02-11 20:01:26.171863534 +0000
@@ -1,5 +1,5 @@
       real*8 function dswayield_int(f,a,b,phichi,phiwh,phim0,phim1,phim2,
-     & phie0,phieth,phithm,phifk,phifv)        
+     & phie0,phieth,phithm,phifk,phifv,waerror)        
 
 c_______________________________________________________________________
 c  integrate function f between a and b
@@ -10,14 +10,13 @@ c  author: joakim edsjo (edsjo@physto.se
 c  based on paolo gondolos wxint.f routine.
 c=======================================================================
       implicit none
-      include 'dswacom.h'
       real*8 f,a,b,tot,eps,st,os,ost,del,sum,x
       real*8 phim0,phim1,phim2,phie0,phieth,phithm
       integer phichi,phiwh,phifk,phifv   ! phiwh=1 - sun, 2 - earth
-      integer jmax,it,l,j,nfcn,jdid
+      integer jmax,it,l,j,nfcn,jdid,waerror
       external f
 c      parameter (a=-1.0,b=1.0,eps=1.0d-4,jmax=20)
-      parameter (eps=1.0d-2,jmax=30)  ! je change in eps ps change in jmax
+      parameter (eps=1.0d-2,jmax=22)  ! je change in eps ps change in jmax
       dswayield_int=0.d0
       del=b-a
       ost=0.5*del*(f(a,phim0,phim1,phim2,phie0,phieth,phithm,phichi,phiwh,phifk,phifv)+
@@ -50,8 +49,11 @@ c      parameter (a=-1.0,b=1.0,eps=1.0d-
 c        type *,'jdid',jdid,' os',os, 'ost',ost
       enddo
 
+!$omp critical (stdout)
       write(*,*) 'DS WARNING: too many steps in dswayield_int.'
-      waerr=1
+!$omp end critical (stdout)
+
+      waerror=1
       dswayield_int=0.0d0
 
       end
diff -rupN darksusy-5.1.3/src/wa/dswayieldone.f darksusy-5.1.3.patched/src/wa/dswayieldone.f
--- darksusy-5.1.3/src/wa/dswayieldone.f	2013-01-31 21:46:16.000000000 +0000
+++ darksusy-5.1.3.patched/src/wa/dswayieldone.f	2017-02-11 20:01:26.171863534 +0000
@@ -105,16 +105,16 @@
 *****************************************************************************
 
       real*8 function dswayieldone(mneu,e,theta,ch,wh,kind,type,istat)
+      use omp_lib
       implicit none
       include 'dswacom.h'
       include 'dsidtag.h'
-      include 'dsio.h'
 
 c------------------------ variables ------------------------------------
 
       real*8 mneu,e,theta,flx
       real*8 mp1,mp2,e1,e2
-      integer ch,chi,istat,i,kind,type
+      integer ch,chi,istat,waerror,i,kind,type
       character*2 wh
 
       logical chok
@@ -134,7 +134,7 @@ c---------------------------------------
 c      write(*,*) 'dswayieldone called with ',kind,type
 
       istat=0
-      waerr=0
+      waerror=0
       mp1=0.d0
       mp2=0.d0
 
@@ -142,19 +142,24 @@ c      write(*,*) 'dswayieldone called w
 
 c--------------------------------------- if first call, load yield tables
 
-
       if (first) then
-        do i=1,26
-           yload(1,i)=0
-           yload(2,i)=0
-        enddo
-        walast(1)=0 ! last index for integrated yields stored in memory
-        walast(2)=0 ! last index for differential yields stored in memory
-        first=.false.
+        if (omp_get_thread_num() .eq. 0) then
+          do i=1,26
+             yload(1,i)=0
+             yload(2,i)=0
+          enddo
+          walast(1)=0 ! last index for integrated yields stored in memory
+          walast(2)=0 ! last index for differential yields stored in memory
+          first=.false.
+        endif
+!$omp barrier
       endif
 
       if (yload(kind2ki(kind),type).eq.0) then
-        call dswainit(kind,type)
+        if (omp_get_thread_num() .eq. 0) then
+          call dswainit(kind,type)
+        endif
+!$omp barrier
       endif
 
 c-----------------------------------------------------------------------
@@ -233,59 +238,59 @@ c...check different annihilation channel
 
 c---------- S10 S10 channel ----------
           if (ch.eq.1) then
-            flx=flx+2.d0*dswayields(e1,e,theta,1,wh,kind,type,istat)
+            flx=flx+2.d0*dswayields(e1,e,theta,1,wh,kind,type,istat,waerror)
 
 c---------- S10 S20 channel ----------
           elseif (ch.eq.2) then
-            flx=flx+dswayields(e1,e,theta,1,wh,kind,type,istat)
-            flx=flx+dswayields(e2,e,theta,2,wh,kind,type,istat)
+            flx=flx+dswayields(e1,e,theta,1,wh,kind,type,istat,waerror)
+            flx=flx+dswayields(e2,e,theta,2,wh,kind,type,istat,waerror)
 
 c---------- S20 S20 channel ----------
           elseif (ch.eq.3) then
-            flx=flx+2.d0*dswayields(e1,e,theta,2,wh,kind,type,istat)
+            flx=flx+2.d0*dswayields(e1,e,theta,2,wh,kind,type,istat,waerror)
 
 c---------- S30 S30 channel ----------
           elseif (ch.eq.4) then
-            flx=flx+2.d0*dswayields(e1,e,theta,3,wh,kind,type,istat)
+            flx=flx+2.d0*dswayields(e1,e,theta,3,wh,kind,type,istat,waerror)
 
 c---------- S10 S30 channel ----------
           elseif (ch.eq.5) then
-            flx=flx+dswayields(e1,e,theta,1,wh,kind,type,istat)
-            flx=flx+dswayields(e2,e,theta,3,wh,kind,type,istat)
+            flx=flx+dswayields(e1,e,theta,1,wh,kind,type,istat,waerror)
+            flx=flx+dswayields(e2,e,theta,3,wh,kind,type,istat,waerror)
 
 c---------- S20 S30 channel ----------
           elseif (ch.eq.6) then
-            flx=flx+dswayields(e1,e,theta,2,wh,kind,type,istat)
-            flx=flx+dswayields(e2,e,theta,3,wh,kind,type,istat)
+            flx=flx+dswayields(e1,e,theta,2,wh,kind,type,istat,waerror)
+            flx=flx+dswayields(e2,e,theta,3,wh,kind,type,istat,waerror)
 
 c---------- S+ S- channel ----------
           elseif (ch.eq.7) then
-            flx=flx+2.d0*dswayields(e1,e,theta,4,wh,kind,type,istat)
+            flx=flx+2.d0*dswayields(e1,e,theta,4,wh,kind,type,istat,waerror)
 
 c---------- Z0 S10 channel ----------
           elseif (ch.eq.8) then
             flx=flx+0.5d0*dswayieldf(e1,e,theta,9,wh,
      &        kind,type,istat)
-            flx=flx+dswayields(e2,e,theta,1,wh,kind,type,istat)
+            flx=flx+dswayields(e2,e,theta,1,wh,kind,type,istat,waerror)
 
 c---------- Z0 S20 channel ----------
           elseif (ch.eq.9) then
             flx=flx+0.5d0*dswayieldf(e1,e,theta,9,wh,
      &        kind,type,istat)
-            flx=flx+dswayields(e2,e,theta,2,wh,kind,type,istat)
+            flx=flx+dswayields(e2,e,theta,2,wh,kind,type,istat,waerror)
 
 c---------- Z0 S30 channel ----------
           elseif (ch.eq.10) then
             flx=flx+0.5d0*dswayieldf(e1,e,theta,9,wh,
      &        kind,type,istat)
-            flx=flx+dswayields(e2,e,theta,3,wh,kind,type,istat)
+            flx=flx+dswayields(e2,e,theta,3,wh,kind,type,istat,waerror)
 
 c---------- w+h- w-h+ channel ----------
 c...this calculation gives a mean of the two channels w+h- & w-h+
           elseif (ch.eq.11) then
             flx=flx+0.5d0*dswayieldf(e1,e,theta,8,wh,
      &        kind,type,istat)
-            flx=flx+dswayields(e2,e,theta,4,wh,kind,type,istat)
+            flx=flx+dswayields(e2,e,theta,4,wh,kind,type,istat,waerror)
 
 c---------- z0 gamma channel ----------
           elseif (ch.eq.29) then
@@ -307,14 +312,15 @@ c          endif
 
       endif
 
-      if (waerr.gt.0) then
+      if (waerror.gt.0) then
+!$omp critical (stdout)
         write(*,*) 'DS WARNING in dswayieldone for model ',idtag,
      &    ', yield type ',type,' and channel ',ch
         write(*,*) '  the integration over scalar decay angles ran',
      &    ' into numerical problems.'
         write(*,*) '  The results can only be trusted as a lower',
      &    'bound.'
-        waistat=ibset(waistat,2)
+!$omp end critical (stdout)
         istat=ibset(istat,2)
       endif
 
diff -rupN darksusy-5.1.3/src/wa/dswayields2.f darksusy-5.1.3.patched/src/wa/dswayields2.f
--- darksusy-5.1.3/src/wa/dswayields2.f	2009-05-08 09:54:47.000000000 +0100
+++ darksusy-5.1.3.patched/src/wa/dswayields2.f	2017-02-11 20:01:26.171863534 +0000
@@ -8,14 +8,14 @@
 *****************************************************************************
 
       real*8 function dswayields2(eh,emuth,thmax,hno,wh,kind,
-     &  type,istat)
+     &  type,istat,waerror)
       implicit none
       include 'dswacom.h'
 
 c------------------------ variables ------------------------------------
 
       real*8 eh,emuth,thmax
-      integer hno,istat,kind,type,chi
+      integer hno,istat,waerror,kind,type,chi
       character*2 wh
 
       real*8 e1,e2,yield
@@ -39,7 +39,7 @@ c..."fundamental" channels
           if (was0br(chi2ch(chi),hno).gt.0.0d0) then
             yield=yield+was0br(chi2ch(chi),hno)*2.0d0*
      &        dswayieldfth(eh,was0m(hno),map(chi),map(chi),emuth,thmax,
-     &          chi,wh,kind,type,istat)
+     &          chi,wh,kind,type,istat,waerror)
           endif
   100   continue
 
@@ -47,95 +47,95 @@ c..."complex" channels
         if (was0br(1,hno).gt.0.0d0) then    ! S10 S10 channel
           e1=dswaemean(eh,was0m(hno),was0m(1),was0m(1))
           yield=yield+2.0*was0br(1,hno)*dswayields3(e1,emuth,thmax,
-     &      1,wh,kind,type,istat)
+     &      1,wh,kind,type,istat,waerror)
         endif
 
         if (was0br(2,hno).gt.0.0d0) then    ! S10 S20 channel
           e1=dswaemean(eh,was0m(hno),was0m(1),was0m(2))
           yield=yield+was0br(2,hno)*dswayields3(e1,emuth,thmax,
-     &      1,wh,kind,type,istat)
+     &      1,wh,kind,type,istat,waerror)
           e2=dswaemean(eh,was0m(hno),was0m(2),was0m(1))
           yield=yield+was0br(2,hno)*dswayields3(e2,emuth,thmax,
-     &      2,wh,kind,type,istat)
+     &      2,wh,kind,type,istat,waerror)
         endif
 
         if (was0br(3,hno).gt.0.0d0) then    ! S20 S20 channel
           e1=dswaemean(eh,was0m(hno),was0m(2),was0m(2))
           yield=yield+2.0*was0br(3,hno)*dswayields3(e1,emuth,thmax,
-     &      2,wh,kind,type,istat)
+     &      2,wh,kind,type,istat,waerror)
         endif
 
         if (was0br(4,hno).gt.0.0d0) then    ! S30 S30 channel
           e1=dswaemean(eh,was0m(hno),was0m(3),was0m(3))
           yield=yield+2.0*was0br(4,hno)*dswayields3(e1,emuth,thmax,
-     &      3,wh,kind,type,istat)
+     &      3,wh,kind,type,istat,waerror)
         endif
 
         if (was0br(5,hno).gt.0.0d0) then    ! S10 S30 channel
           e1=dswaemean(eh,was0m(hno),was0m(1),was0m(3))
           yield=yield+was0br(5,hno)*dswayields3(e1,emuth,thmax,
-     &      1,wh,kind,type,istat)
+     &      1,wh,kind,type,istat,waerror)
           e2=dswaemean(eh,was0m(hno),was0m(3),was0m(1))
           yield=yield+was0br(5,hno)*dswayields3(e2,emuth,thmax,
-     &      3,wh,kind,type,istat)
+     &      3,wh,kind,type,istat,waerror)
         endif
 
         if (was0br(6,hno).gt.0.0d0) then    ! S20 S30 channel
           e1=dswaemean(eh,was0m(hno),was0m(2),was0m(3))
           yield=yield+was0br(6,hno)*dswayields3(e1,emuth,thmax,
-     &      2,wh,kind,type,istat)
+     &      2,wh,kind,type,istat,waerror)
           e2=dswaemean(eh,was0m(hno),was0m(3),was0m(2))
           yield=yield+was0br(6,hno)*dswayields3(e2,emuth,thmax,
-     &      3,wh,kind,type,istat)
+     &      3,wh,kind,type,istat,waerror)
         endif
 
         if (was0br(7,hno).gt.0.0d0) then    ! S+ S- channel
           e1=dswaemean(eh,was0m(hno),wascm,wascm)
           yield=yield+2.0*
      &      was0br(7,hno)*dswayields3(e1,emuth,thmax,4,wh,
-     &        kind,type,istat)
+     &        kind,type,istat,waerror)
         endif
 
         if (was0br(8,hno).gt.0.0d0) then    ! z0 S10 channel
           e2=dswaemean(eh,was0m(hno),was0m(1),map(9))
           yield=yield+was0br(8,hno)*
      +    dswayieldfth(eh,was0m(hno),map(9),was0m(1),emuth,thmax,
-     &      9,wh,kind,type,istat)
+     &      9,wh,kind,type,istat,waerror)
           yield=yield+was0br(8,hno)*dswayields3(e2,emuth,thmax,
-     &      1,wh,kind,type,istat)
+     &      1,wh,kind,type,istat,waerror)
         endif
 
         if (was0br(9,hno).gt.0.0d0) then    ! z0 S20 channel
           e2=dswaemean(eh,was0m(hno),was0m(2),map(9))
           yield=yield+was0br(9,hno)*
      +    dswayieldfth(eh,was0m(hno),map(9),was0m(2),emuth,thmax,
-     &      9,wh,kind,type,istat)
+     &      9,wh,kind,type,istat,waerror)
           yield=yield+was0br(9,hno)*dswayields3(e2,emuth,thmax,
-     &      2,wh,kind,type,istat)
+     &      2,wh,kind,type,istat,waerror)
         endif
 
         if (was0br(10,hno).gt.0.0d0) then    ! z0 S30 channel
           e2=dswaemean(eh,was0m(hno),was0m(3),map(9))
           yield=yield+was0br(10,hno)*
      +    dswayieldfth(eh,was0m(hno),map(9),was0m(3),emuth,thmax,
-     &      9,wh,kind,type,istat)
+     &      9,wh,kind,type,istat,waerror)
           yield=yield+was0br(10,hno)*dswayields3(e2,emuth,thmax,
-     &      3,wh,kind,type,istat)
+     &      3,wh,kind,type,istat,waerror)
         endif
 
         if (was0br(11,hno).gt.0.0d0) then    ! w-S+ w+S- channel
           e2=dswaemean(eh,was0m(hno),wascm,map(8))
           yield=yield+was0br(11,hno)*
      +    dswayieldfth(eh,was0m(hno),map(8),wascm,emuth,thmax,
-     &      8,wh,kind,type,istat)
+     &      8,wh,kind,type,istat,waerror)
           yield=yield+was0br(11,hno)*dswayields3(e2,emuth,thmax,
-     &      4,wh,kind,type,istat)
+     &      4,wh,kind,type,istat,waerror)
         endif
 
         if (was0br(29,hno).gt.0.0d0) then    ! Z0 gamma
           yield=yield+was0br(29,hno)*
      +    dswayieldfth(eh,was0m(hno),map(9),0.0d0,emuth,thmax,
-     &      9,wh,kind,type,istat)
+     &      9,wh,kind,type,istat,waerror)
         endif
 
 c---------- charged scalar bosons ----------
@@ -144,118 +144,118 @@ c---------- charged scalar bosons ------
         if (wascbr(1).gt.0.0d0) then ! u d-bar
            yield=yield+wascbr(1)*
      &    dswayieldfth(eh,wascm,map(1),map(2),emuth,thmax,
-     &      1,wh,kind,type,istat)
+     &      1,wh,kind,type,istat,waerror)
           yield=yield+wascbr(1)*
      &    dswayieldfth(eh,wascm,map(2),map(1),emuth,thmax,
-     &      2,wh,kind,type,istat)
+     &      2,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(2).gt.0.0d0) then ! u s-bar
            yield=yield+wascbr(2)*
      &    dswayieldfth(eh,wascm,map(3),map(2),emuth,thmax,
-     &      3,wh,kind,type,istat)
+     &      3,wh,kind,type,istat,waerror)
           yield=yield+wascbr(2)*
      &    dswayieldfth(eh,wascm,map(2),map(3),emuth,thmax,
-     &      2,wh,kind,type,istat)
+     &      2,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(3).gt.0.0d0) then ! u b-bar
           yield=yield+wascbr(3)*
      &    dswayieldfth(eh,wascm,map(5),map(2),emuth,thmax,
-     &      5,wh,kind,type,istat)
+     &      5,wh,kind,type,istat,waerror)
           yield=yield+wascbr(3)*
      &    dswayieldfth(eh,wascm,map(2),map(5),emuth,thmax,
-     &      2,wh,kind,type,istat)
+     &      2,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(4).gt.0.0d0) then ! c d-bar
           yield=yield+wascbr(4)*
      &    dswayieldfth(eh,wascm,map(4),map(1),emuth,thmax,
-     &      4,wh,kind,type,istat)
+     &      4,wh,kind,type,istat,waerror)
           yield=yield+wascbr(4)*
      &    dswayieldfth(eh,wascm,map(1),map(4),emuth,thmax,
-     &      1,wh,kind,type,istat)
+     &      1,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(5).gt.0.0d0) then ! c s-bar
           yield=yield+wascbr(5)*
      &    dswayieldfth(eh,wascm,map(4),map(3),emuth,thmax,
-     &    4,wh,kind,type,istat)
+     &    4,wh,kind,type,istat,waerror)
           yield=yield+wascbr(5)*
      &    dswayieldfth(eh,wascm,map(3),map(4),emuth,thmax,
-     &    3,wh,kind,type,istat)
+     &    3,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(6).gt.0.0d0) then ! c b-bar
           yield=yield+wascbr(6)*
      &    dswayieldfth(eh,wascm,map(4),map(5),emuth,thmax,
-     &    4,wh,kind,type,istat)
+     &    4,wh,kind,type,istat,waerror)
           yield=yield+wascbr(6)*
      &    dswayieldfth(eh,wascm,map(5),map(4),emuth,thmax,
-     &    5,wh,kind,type,istat)
+     &    5,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(7).gt.0.0d0) then ! t d-bar
           yield=yield+wascbr(7)*
      &    dswayieldfth(eh,wascm,map(6),map(1),emuth,thmax,
-     &    6,wh,kind,type,istat)
+     &    6,wh,kind,type,istat,waerror)
           yield=yield+wascbr(7)*
      &    dswayieldfth(eh,wascm,map(1),map(6),emuth,thmax,
-     &    1,wh,kind,type,istat)
+     &    1,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(8).gt.0.0d0) then ! t s-bar
           yield=yield+wascbr(8)*
      &    dswayieldfth(eh,wascm,map(6),map(3),emuth,thmax,
-     &    6,wh,kind,type,istat)
+     &    6,wh,kind,type,istat,waerror)
           yield=yield+wascbr(8)*
      &    dswayieldfth(eh,wascm,map(3),map(6),emuth,thmax,
-     &    3,wh,kind,type,istat)
+     &    3,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(9).gt.0.0d0) then ! t b-bar
           yield=yield+wascbr(9)*
      &    dswayieldfth(eh,wascm,map(6),map(5),emuth,thmax,
-     &    6,wh,kind,type,istat)
+     &    6,wh,kind,type,istat,waerror)
           yield=yield+wascbr(9)*
      &    dswayieldfth(eh,wascm,map(5),map(6),emuth,thmax,
-     &    5,wh,kind,type,istat)
+     &    5,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(12).gt.0.0d0) then ! tau nu_tau
           yield=yield+wascbr(12)*
      &    dswayieldfth(eh,wascm,map(11),map(14),emuth,thmax,
-     &    11,wh,kind,type,istat)
+     &    11,wh,kind,type,istat,waerror)
           yield=yield+wascbr(12)*
      &    dswayieldfth(eh,wascm,map(14),map(11),emuth,thmax,
-     &    14,wh,kind,type,istat)
+     &    14,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(13).gt.0.0d0) then ! w+ h1
           yield=yield+wascbr(13)*
      &    dswayieldfth(eh,wascm,map(8),was0m(1),emuth,thmax,
-     &    8,wh,kind,type,istat)
+     &    8,wh,kind,type,istat,waerror)
           e2=dswaemean(eh,wascm,was0m(1),map(8))
           yield=yield+wascbr(13)*
-     &      dswayields3(e2,emuth,thmax,1,wh,kind,type,istat)
+     &      dswayields3(e2,emuth,thmax,1,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(14).gt.0.0d0) then ! w+ h2
           yield=yield+wascbr(14)*
      &    dswayieldfth(eh,wascm,map(8),was0m(2),emuth,thmax,
-     &    8,wh,kind,type,istat)
+     &    8,wh,kind,type,istat,waerror)
           e2=dswaemean(eh,wascm,was0m(2),map(8))
           yield=yield+wascbr(14)*
-     &      dswayields3(e2,emuth,thmax,2,wh,kind,type,istat)
+     &      dswayields3(e2,emuth,thmax,2,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(15).gt.0.0d0) then ! w+ h3
           yield=yield+wascbr(15)*
      &    dswayieldfth(eh,wascm,map(8),was0m(3),emuth,thmax,
-     &    8,wh,kind,type,istat)
+     &    8,wh,kind,type,istat,waerror)
           e2=dswaemean(eh,wascm,was0m(3),map(8))
           yield=yield+wascbr(15)*
-     &      dswayields3(e2,emuth,thmax,3,wh,kind,type,istat)
+     &      dswayields3(e2,emuth,thmax,3,wh,kind,type,istat,waerror)
         endif
 
       endif
diff -rupN darksusy-5.1.3/src/wa/dswayields3.f darksusy-5.1.3.patched/src/wa/dswayields3.f
--- darksusy-5.1.3/src/wa/dswayields3.f	2009-05-08 09:54:47.000000000 +0100
+++ darksusy-5.1.3.patched/src/wa/dswayields3.f	2017-02-11 20:01:26.175863534 +0000
@@ -8,14 +8,14 @@
 *****************************************************************************
 
       real*8 function dswayields3(eh,emuth,thmax,hno,wh,kind,
-     &  type,istat)
+     &  type,istat,waerror)
       implicit none
       include 'dswacom.h'
 
 c------------------------ variables ------------------------------------
 
       real*8 eh,emuth,thmax
-      integer hno,istat,kind,type,chi
+      integer hno,istat,waerror,kind,type,chi
       character*2 wh
 
       real*8 e1,e2,yield
@@ -39,7 +39,7 @@ c..."fundamental" channels
           if (was0br(chi2ch(chi),hno).gt.0.0d0) then
             yield=yield+was0br(chi2ch(chi),hno)*2.0d0*
      &        dswayieldfth(eh,was0m(hno),map(chi),map(chi),emuth,thmax,
-     &          chi,wh,kind,type,istat)
+     &          chi,wh,kind,type,istat,waerror)
           endif
   100   continue
 
@@ -47,95 +47,95 @@ c..."complex" channels
         if (was0br(1,hno).gt.0.0d0) then    ! S10 S10 channel
           e1=dswaemean(eh,was0m(hno),was0m(1),was0m(1))
           yield=yield+2.0*was0br(1,hno)*dswayields4(e1,emuth,thmax,
-     &      1,wh,kind,type,istat)
+     &      1,wh,kind,type,istat,waerror)
         endif
 
         if (was0br(2,hno).gt.0.0d0) then    ! S10 S20 channel
           e1=dswaemean(eh,was0m(hno),was0m(1),was0m(2))
           yield=yield+was0br(2,hno)*dswayields4(e1,emuth,thmax,
-     &      1,wh,kind,type,istat)
+     &      1,wh,kind,type,istat,waerror)
           e2=dswaemean(eh,was0m(hno),was0m(2),was0m(1))
           yield=yield+was0br(2,hno)*dswayields4(e2,emuth,thmax,
-     &      2,wh,kind,type,istat)
+     &      2,wh,kind,type,istat,waerror)
         endif
 
         if (was0br(3,hno).gt.0.0d0) then    ! S20 S20 channel
           e1=dswaemean(eh,was0m(hno),was0m(2),was0m(2))
           yield=yield+2.0*was0br(3,hno)*dswayields4(e1,emuth,thmax,
-     &      2,wh,kind,type,istat)
+     &      2,wh,kind,type,istat,waerror)
         endif
 
         if (was0br(4,hno).gt.0.0d0) then    ! S30 S30 channel
           e1=dswaemean(eh,was0m(hno),was0m(3),was0m(3))
           yield=yield+2.0*was0br(4,hno)*dswayields4(e1,emuth,thmax,
-     &      3,wh,kind,type,istat)
+     &      3,wh,kind,type,istat,waerror)
         endif
 
         if (was0br(5,hno).gt.0.0d0) then    ! S10 S30 channel
           e1=dswaemean(eh,was0m(hno),was0m(1),was0m(3))
           yield=yield+was0br(5,hno)*dswayields4(e1,emuth,thmax,
-     &      1,wh,kind,type,istat)
+     &      1,wh,kind,type,istat,waerror)
           e2=dswaemean(eh,was0m(hno),was0m(3),was0m(1))
           yield=yield+was0br(5,hno)*dswayields4(e2,emuth,thmax,
-     &      3,wh,kind,type,istat)
+     &      3,wh,kind,type,istat,waerror)
         endif
 
         if (was0br(6,hno).gt.0.0d0) then    ! S20 S30 channel
           e1=dswaemean(eh,was0m(hno),was0m(2),was0m(3))
           yield=yield+was0br(6,hno)*dswayields4(e1,emuth,thmax,
-     &      2,wh,kind,type,istat)
+     &      2,wh,kind,type,istat,waerror)
           e2=dswaemean(eh,was0m(hno),was0m(3),was0m(2))
           yield=yield+was0br(6,hno)*dswayields4(e2,emuth,thmax,
-     &      3,wh,kind,type,istat)
+     &      3,wh,kind,type,istat,waerror)
         endif
 
         if (was0br(7,hno).gt.0.0d0) then    ! S+ S- channel
           e1=dswaemean(eh,was0m(hno),wascm,wascm)
           yield=yield+2.0*
      &      was0br(7,hno)*dswayields4(e1,emuth,thmax,4,wh,
-     &        kind,type,istat)
+     &        kind,type,istat,waerror)
         endif
 
         if (was0br(8,hno).gt.0.0d0) then    ! z0 S10 channel
           e2=dswaemean(eh,was0m(hno),was0m(1),map(9))
           yield=yield+was0br(8,hno)*
      +    dswayieldfth(eh,was0m(hno),map(9),was0m(1),emuth,thmax,
-     &      9,wh,kind,type,istat)
+     &      9,wh,kind,type,istat,waerror)
           yield=yield+was0br(8,hno)*dswayields4(e2,emuth,thmax,
-     &      1,wh,kind,type,istat)
+     &      1,wh,kind,type,istat,waerror)
         endif
 
         if (was0br(9,hno).gt.0.0d0) then    ! z0 S20 channel
           e2=dswaemean(eh,was0m(hno),was0m(2),map(9))
           yield=yield+was0br(9,hno)*
      +    dswayieldfth(eh,was0m(hno),map(9),was0m(2),emuth,thmax,
-     &      9,wh,kind,type,istat)
+     &      9,wh,kind,type,istat,waerror)
           yield=yield+was0br(9,hno)*dswayields4(e2,emuth,thmax,
-     &      2,wh,kind,type,istat)
+     &      2,wh,kind,type,istat,waerror)
         endif
 
         if (was0br(10,hno).gt.0.0d0) then    ! z0 S30 channel
           e2=dswaemean(eh,was0m(hno),was0m(3),map(9))
           yield=yield+was0br(10,hno)*
      +    dswayieldfth(eh,was0m(hno),map(9),was0m(3),emuth,thmax,
-     &      9,wh,kind,type,istat)
+     &      9,wh,kind,type,istat,waerror)
           yield=yield+was0br(10,hno)*dswayields4(e2,emuth,thmax,
-     &      3,wh,kind,type,istat)
+     &      3,wh,kind,type,istat,waerror)
         endif
 
         if (was0br(11,hno).gt.0.0d0) then    ! w-S+ w+S- channel
           e2=dswaemean(eh,was0m(hno),wascm,map(8))
           yield=yield+was0br(11,hno)*
      +    dswayieldfth(eh,was0m(hno),map(8),wascm,emuth,thmax,
-     &      8,wh,kind,type,istat)
+     &      8,wh,kind,type,istat,waerror)
           yield=yield+was0br(11,hno)*dswayields4(e2,emuth,thmax,
-     &      4,wh,kind,type,istat)
+     &      4,wh,kind,type,istat,waerror)
         endif
 
         if (was0br(29,hno).gt.0.0d0) then    ! Z0 gamma
           yield=yield+was0br(29,hno)*
      +    dswayieldfth(eh,was0m(hno),map(9),0.0d0,emuth,thmax,
-     &      9,wh,kind,type,istat)
+     &      9,wh,kind,type,istat,waerror)
         endif
 
 c---------- charged scalar bosons ----------
@@ -144,118 +144,118 @@ c---------- charged scalar bosons ------
         if (wascbr(1).gt.0.0d0) then ! u d-bar
            yield=yield+wascbr(1)*
      &    dswayieldfth(eh,wascm,map(1),map(2),emuth,thmax,
-     &      1,wh,kind,type,istat)
+     &      1,wh,kind,type,istat,waerror)
           yield=yield+wascbr(1)*
      &    dswayieldfth(eh,wascm,map(2),map(1),emuth,thmax,
-     &      2,wh,kind,type,istat)
+     &      2,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(2).gt.0.0d0) then ! u s-bar
            yield=yield+wascbr(2)*
      &    dswayieldfth(eh,wascm,map(3),map(2),emuth,thmax,
-     &      3,wh,kind,type,istat)
+     &      3,wh,kind,type,istat,waerror)
           yield=yield+wascbr(2)*
      &    dswayieldfth(eh,wascm,map(2),map(3),emuth,thmax,
-     &      2,wh,kind,type,istat)
+     &      2,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(3).gt.0.0d0) then ! u b-bar
           yield=yield+wascbr(3)*
      &    dswayieldfth(eh,wascm,map(5),map(2),emuth,thmax,
-     &      5,wh,kind,type,istat)
+     &      5,wh,kind,type,istat,waerror)
           yield=yield+wascbr(3)*
      &    dswayieldfth(eh,wascm,map(2),map(5),emuth,thmax,
-     &      2,wh,kind,type,istat)
+     &      2,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(4).gt.0.0d0) then ! c d-bar
           yield=yield+wascbr(4)*
      &    dswayieldfth(eh,wascm,map(4),map(1),emuth,thmax,
-     &      4,wh,kind,type,istat)
+     &      4,wh,kind,type,istat,waerror)
           yield=yield+wascbr(4)*
      &    dswayieldfth(eh,wascm,map(1),map(4),emuth,thmax,
-     &      1,wh,kind,type,istat)
+     &      1,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(5).gt.0.0d0) then ! c s-bar
           yield=yield+wascbr(5)*
      &    dswayieldfth(eh,wascm,map(4),map(3),emuth,thmax,
-     &    4,wh,kind,type,istat)
+     &    4,wh,kind,type,istat,waerror)
           yield=yield+wascbr(5)*
      &    dswayieldfth(eh,wascm,map(3),map(4),emuth,thmax,
-     &    3,wh,kind,type,istat)
+     &    3,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(6).gt.0.0d0) then ! c b-bar
           yield=yield+wascbr(6)*
      &    dswayieldfth(eh,wascm,map(4),map(5),emuth,thmax,
-     &    4,wh,kind,type,istat)
+     &    4,wh,kind,type,istat,waerror)
           yield=yield+wascbr(6)*
      &    dswayieldfth(eh,wascm,map(5),map(4),emuth,thmax,
-     &    5,wh,kind,type,istat)
+     &    5,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(7).gt.0.0d0) then ! t d-bar
           yield=yield+wascbr(7)*
      &    dswayieldfth(eh,wascm,map(6),map(1),emuth,thmax,
-     &    6,wh,kind,type,istat)
+     &    6,wh,kind,type,istat,waerror)
           yield=yield+wascbr(7)*
      &    dswayieldfth(eh,wascm,map(1),map(6),emuth,thmax,
-     &    1,wh,kind,type,istat)
+     &    1,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(8).gt.0.0d0) then ! t s-bar
           yield=yield+wascbr(8)*
      &    dswayieldfth(eh,wascm,map(6),map(3),emuth,thmax,
-     &    6,wh,kind,type,istat)
+     &    6,wh,kind,type,istat,waerror)
           yield=yield+wascbr(8)*
      &    dswayieldfth(eh,wascm,map(3),map(6),emuth,thmax,
-     &    3,wh,kind,type,istat)
+     &    3,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(9).gt.0.0d0) then ! t b-bar
           yield=yield+wascbr(9)*
      &    dswayieldfth(eh,wascm,map(6),map(5),emuth,thmax,
-     &    6,wh,kind,type,istat)
+     &    6,wh,kind,type,istat,waerror)
           yield=yield+wascbr(9)*
      &    dswayieldfth(eh,wascm,map(5),map(6),emuth,thmax,
-     &    5,wh,kind,type,istat)
+     &    5,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(12).gt.0.0d0) then ! tau nu_tau
           yield=yield+wascbr(12)*
      &    dswayieldfth(eh,wascm,map(11),map(14),emuth,thmax,
-     &    11,wh,kind,type,istat)
+     &    11,wh,kind,type,istat,waerror)
           yield=yield+wascbr(12)*
      &    dswayieldfth(eh,wascm,map(14),map(11),emuth,thmax,
-     &    14,wh,kind,type,istat)
+     &    14,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(13).gt.0.0d0) then ! w+ h1
           yield=yield+wascbr(13)*
      &    dswayieldfth(eh,wascm,map(8),was0m(1),emuth,thmax,
-     &    8,wh,kind,type,istat)
+     &    8,wh,kind,type,istat,waerror)
           e2=dswaemean(eh,wascm,was0m(1),map(8))
           yield=yield+wascbr(13)*
-     &      dswayields4(e2,emuth,thmax,1,wh,kind,type,istat)
+     &      dswayields4(e2,emuth,thmax,1,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(14).gt.0.0d0) then ! w+ h2
           yield=yield+wascbr(14)*
      &    dswayieldfth(eh,wascm,map(8),was0m(2),emuth,thmax,
-     &    8,wh,kind,type,istat)
+     &    8,wh,kind,type,istat,waerror)
           e2=dswaemean(eh,wascm,was0m(2),map(8))
           yield=yield+wascbr(14)*
-     &      dswayields4(e2,emuth,thmax,2,wh,kind,type,istat)
+     &      dswayields4(e2,emuth,thmax,2,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(15).gt.0.0d0) then ! w+ h3
           yield=yield+wascbr(15)*
      &    dswayieldfth(eh,wascm,map(8),was0m(3),emuth,thmax,
-     &    8,wh,kind,type,istat)
+     &    8,wh,kind,type,istat,waerror)
           e2=dswaemean(eh,wascm,was0m(3),map(8))
           yield=yield+wascbr(15)*
-     &      dswayields4(e2,emuth,thmax,3,wh,kind,type,istat)
+     &      dswayields4(e2,emuth,thmax,3,wh,kind,type,istat,waerror)
         endif
 
       endif
diff -rupN darksusy-5.1.3/src/wa/dswayields4.f darksusy-5.1.3.patched/src/wa/dswayields4.f
--- darksusy-5.1.3/src/wa/dswayields4.f	2009-05-08 09:54:47.000000000 +0100
+++ darksusy-5.1.3.patched/src/wa/dswayields4.f	2017-02-11 20:01:26.175863534 +0000
@@ -8,7 +8,7 @@
 *****************************************************************************
 
       real*8 function dswayields4(eh,emuth,thmax,hno,wh,
-     &  kind,type,istat)
+     &  kind,type,istat,waerror)
       implicit none
       include 'dswacom.h'
       include 'dsidtag.h'
@@ -16,7 +16,7 @@
 c------------------------ variables ------------------------------------
 
       real*8 eh,emuth,thmax
-      integer hno,istat,kind,type
+      integer hno,istat,waerror,kind,type
       character*2 wh
 
       real*8 yield
@@ -40,7 +40,7 @@ c..."fundamental" channels
           if (was0br(chi2ch(chi),hno).gt.0.0d0) then
             yield=yield+was0br(chi2ch(chi),hno)*2.0d0*
      &        dswayieldfth(eh,was0m(hno),map(chi),map(chi),emuth,thmax,
-     &          chi,wh,kind,type,istat)
+     &          chi,wh,kind,type,istat,waerror)
           endif
   100   continue
 
@@ -51,91 +51,91 @@ c---------- charged scalar bosons ------
         if (wascbr(1).gt.0.0d0) then ! u d-bar
            yield=yield+wascbr(1)*
      &    dswayieldfth(eh,wascm,map(1),map(2),emuth,thmax,
-     &      1,wh,kind,type,istat)
+     &      1,wh,kind,type,istat,waerror)
           yield=yield+wascbr(1)*
      &    dswayieldfth(eh,wascm,map(2),map(1),emuth,thmax,
-     &      2,wh,kind,type,istat)
+     &      2,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(2).gt.0.0d0) then ! u s-bar
            yield=yield+wascbr(2)*
      &    dswayieldfth(eh,wascm,map(3),map(2),emuth,thmax,
-     &      3,wh,kind,type,istat)
+     &      3,wh,kind,type,istat,waerror)
           yield=yield+wascbr(2)*
      &    dswayieldfth(eh,wascm,map(2),map(3),emuth,thmax,
-     &      2,wh,kind,type,istat)
+     &      2,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(3).gt.0.0d0) then ! u b-bar
           yield=yield+wascbr(3)*
      &    dswayieldfth(eh,wascm,map(5),map(2),emuth,thmax,
-     &      5,wh,kind,type,istat)
+     &      5,wh,kind,type,istat,waerror)
           yield=yield+wascbr(3)*
      &    dswayieldfth(eh,wascm,map(2),map(5),emuth,thmax,
-     &      2,wh,kind,type,istat)
+     &      2,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(4).gt.0.0d0) then ! c d-bar
           yield=yield+wascbr(4)*
      &    dswayieldfth(eh,wascm,map(4),map(1),emuth,thmax,
-     &      4,wh,kind,type,istat)
+     &      4,wh,kind,type,istat,waerror)
           yield=yield+wascbr(4)*
      &    dswayieldfth(eh,wascm,map(1),map(4),emuth,thmax,
-     &      1,wh,kind,type,istat)
+     &      1,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(5).gt.0.0d0) then ! c s-bar
           yield=yield+wascbr(5)*
      &    dswayieldfth(eh,wascm,map(4),map(3),emuth,thmax,
-     &    4,wh,kind,type,istat)
+     &    4,wh,kind,type,istat,waerror)
           yield=yield+wascbr(5)*
      &    dswayieldfth(eh,wascm,map(3),map(4),emuth,thmax,
-     &    3,wh,kind,type,istat)
+     &    3,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(6).gt.0.0d0) then ! c b-bar
           yield=yield+wascbr(6)*
      &    dswayieldfth(eh,wascm,map(4),map(5),emuth,thmax,
-     &    4,wh,kind,type,istat)
+     &    4,wh,kind,type,istat,waerror)
           yield=yield+wascbr(6)*
      &    dswayieldfth(eh,wascm,map(5),map(4),emuth,thmax,
-     &    5,wh,kind,type,istat)
+     &    5,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(7).gt.0.0d0) then ! t d-bar
           yield=yield+wascbr(7)*
      &    dswayieldfth(eh,wascm,map(6),map(1),emuth,thmax,
-     &    6,wh,kind,type,istat)
+     &    6,wh,kind,type,istat,waerror)
           yield=yield+wascbr(7)*
      &    dswayieldfth(eh,wascm,map(1),map(6),emuth,thmax,
-     &    1,wh,kind,type,istat)
+     &    1,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(8).gt.0.0d0) then ! t s-bar
           yield=yield+wascbr(8)*
      &    dswayieldfth(eh,wascm,map(6),map(3),emuth,thmax,
-     &    6,wh,kind,type,istat)
+     &    6,wh,kind,type,istat,waerror)
           yield=yield+wascbr(8)*
      &    dswayieldfth(eh,wascm,map(3),map(6),emuth,thmax,
-     &    3,wh,kind,type,istat)
+     &    3,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(9).gt.0.0d0) then ! t b-bar
           yield=yield+wascbr(9)*
      &    dswayieldfth(eh,wascm,map(6),map(5),emuth,thmax,
-     &    6,wh,kind,type,istat)
+     &    6,wh,kind,type,istat,waerror)
           yield=yield+wascbr(9)*
      &    dswayieldfth(eh,wascm,map(5),map(6),emuth,thmax,
-     &    5,wh,kind,type,istat)
+     &    5,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(12).gt.0.0d0) then ! tau nu_tau
           yield=yield+wascbr(12)*
      &    dswayieldfth(eh,wascm,map(11),map(14),emuth,thmax,
-     &    11,wh,kind,type,istat)
+     &    11,wh,kind,type,istat,waerror)
           yield=yield+wascbr(12)*
      &    dswayieldfth(eh,wascm,map(14),map(11),emuth,thmax,
-     &    14,wh,kind,type,istat)
+     &    14,wh,kind,type,istat,waerror)
         endif
 
       endif
diff -rupN darksusy-5.1.3/src/wa/dswayields.f darksusy-5.1.3.patched/src/wa/dswayields.f
--- darksusy-5.1.3/src/wa/dswayields.f	2009-05-08 09:54:47.000000000 +0100
+++ darksusy-5.1.3.patched/src/wa/dswayields.f	2017-02-11 20:01:26.175863534 +0000
@@ -8,14 +8,14 @@
 *****************************************************************************
 
       real*8 function dswayields(eh,emuth,thmax,hno,wh,kind,
-     &  type,istat)
+     &  type,istat,waerror)
       implicit none
       include 'dswacom.h'
 
 c------------------------ variables ------------------------------------
 
       real*8 eh,emuth,thmax
-      integer hno,istat,kind,type,chi
+      integer hno,istat,waerror,kind,type,chi
       character*2 wh
 
       real*8 e1,e2,yield
@@ -38,7 +38,7 @@ c..."fundamental" channels
           if (was0br(chi2ch(chi),hno).gt.0.0d0) then
             yield=yield+was0br(chi2ch(chi),hno)*2.0d0*
      &        dswayieldfth(eh,was0m(hno),map(chi),map(chi),emuth,thmax,
-     &          chi,wh,kind,type,istat)
+     &          chi,wh,kind,type,istat,waerror)
           endif
   100   continue
 
@@ -46,95 +46,95 @@ c..."complex" channels
         if (was0br(1,hno).gt.0.0d0) then    ! S10 S10 channel
           e1=dswaemean(eh,was0m(hno),was0m(1),was0m(1))
           yield=yield+2.0*was0br(1,hno)*dswayields2(e1,emuth,thmax,
-     &      1,wh,kind,type,istat)
+     &      1,wh,kind,type,istat,waerror)
         endif
 
         if (was0br(2,hno).gt.0.0d0) then    ! S10 S20 channel
           e1=dswaemean(eh,was0m(hno),was0m(1),was0m(2))
           yield=yield+was0br(2,hno)*dswayields2(e1,emuth,thmax,
-     &      1,wh,kind,type,istat)
+     &      1,wh,kind,type,istat,waerror)
           e2=dswaemean(eh,was0m(hno),was0m(2),was0m(1))
           yield=yield+was0br(2,hno)*dswayields2(e2,emuth,thmax,
-     &      2,wh,kind,type,istat)
+     &      2,wh,kind,type,istat,waerror)
         endif
 
         if (was0br(3,hno).gt.0.0d0) then    ! S20 S20 channel
           e1=dswaemean(eh,was0m(hno),was0m(2),was0m(2))
           yield=yield+2.0*was0br(3,hno)*dswayields2(e1,emuth,thmax,
-     &      2,wh,kind,type,istat)
+     &      2,wh,kind,type,istat,waerror)
         endif
 
         if (was0br(4,hno).gt.0.0d0) then    ! S30 S30 channel
           e1=dswaemean(eh,was0m(hno),was0m(3),was0m(3))
           yield=yield+2.0*was0br(4,hno)*dswayields2(e1,emuth,thmax,
-     &      3,wh,kind,type,istat)
+     &      3,wh,kind,type,istat,waerror)
         endif
 
         if (was0br(5,hno).gt.0.0d0) then    ! S10 S30 channel
           e1=dswaemean(eh,was0m(hno),was0m(1),was0m(3))
           yield=yield+was0br(5,hno)*dswayields2(e1,emuth,thmax,
-     &      1,wh,kind,type,istat)
+     &      1,wh,kind,type,istat,waerror)
           e2=dswaemean(eh,was0m(hno),was0m(3),was0m(1))
           yield=yield+was0br(5,hno)*dswayields2(e2,emuth,thmax,
-     &      3,wh,kind,type,istat)
+     &      3,wh,kind,type,istat,waerror)
         endif
 
         if (was0br(6,hno).gt.0.0d0) then    ! S20 S30 channel
           e1=dswaemean(eh,was0m(hno),was0m(2),was0m(3))
           yield=yield+was0br(6,hno)*dswayields2(e1,emuth,thmax,
-     &      2,wh,kind,type,istat)
+     &      2,wh,kind,type,istat,waerror)
           e2=dswaemean(eh,was0m(hno),was0m(3),was0m(2))
           yield=yield+was0br(6,hno)*dswayields2(e2,emuth,thmax,
-     &      3,wh,kind,type,istat)
+     &      3,wh,kind,type,istat,waerror)
         endif
 
         if (was0br(7,hno).gt.0.0d0) then    ! S+ S- channel
           e1=dswaemean(eh,was0m(hno),wascm,wascm)
           yield=yield+2.0*
      &      was0br(7,hno)*dswayields2(e1,emuth,thmax,4,wh,
-     &        kind,type,istat)
+     &        kind,type,istat,waerror)
         endif
 
         if (was0br(8,hno).gt.0.0d0) then    ! z0 S10 channel
           e2=dswaemean(eh,was0m(hno),was0m(1),map(9))
           yield=yield+was0br(8,hno)*
      +    dswayieldfth(eh,was0m(hno),map(9),was0m(1),emuth,thmax,
-     &      9,wh,kind,type,istat)
+     &      9,wh,kind,type,istat,waerror)
           yield=yield+was0br(8,hno)*dswayields2(e2,emuth,thmax,
-     &      1,wh,kind,type,istat)
+     &      1,wh,kind,type,istat,waerror)
         endif
 
         if (was0br(9,hno).gt.0.0d0) then    ! z0 S20 channel
           e2=dswaemean(eh,was0m(hno),was0m(2),map(9))
           yield=yield+was0br(9,hno)*
      +    dswayieldfth(eh,was0m(hno),map(9),was0m(2),emuth,thmax,
-     &      9,wh,kind,type,istat)
+     &      9,wh,kind,type,istat,waerror)
           yield=yield+was0br(9,hno)*dswayields2(e2,emuth,thmax,
-     &      2,wh,kind,type,istat)
+     &      2,wh,kind,type,istat,waerror)
         endif
 
         if (was0br(10,hno).gt.0.0d0) then    ! z0 S30 channel
           e2=dswaemean(eh,was0m(hno),was0m(3),map(9))
           yield=yield+was0br(10,hno)*
      +    dswayieldfth(eh,was0m(hno),map(9),was0m(3),emuth,thmax,
-     &      9,wh,kind,type,istat)
+     &      9,wh,kind,type,istat,waerror)
           yield=yield+was0br(10,hno)*dswayields2(e2,emuth,thmax,
-     &      3,wh,kind,type,istat)
+     &      3,wh,kind,type,istat,waerror)
         endif
 
         if (was0br(11,hno).gt.0.0d0) then    ! w-S+ w+S- channel
           e2=dswaemean(eh,was0m(hno),wascm,map(8))
           yield=yield+was0br(11,hno)*
      +    dswayieldfth(eh,was0m(hno),map(8),wascm,emuth,thmax,
-     &      8,wh,kind,type,istat)
+     &      8,wh,kind,type,istat,waerror)
           yield=yield+was0br(11,hno)*dswayields2(e2,emuth,thmax,
-     &      4,wh,kind,type,istat)
+     &      4,wh,kind,type,istat,waerror)
         endif
 
         if (was0br(29,hno).gt.0.0d0) then    ! Z0 gamma
           yield=yield+was0br(29,hno)*
      +    dswayieldfth(eh,was0m(hno),map(9),0.0d0,emuth,thmax,
-     &      9,wh,kind,type,istat)
+     &      9,wh,kind,type,istat,waerror)
         endif
 c        write(*,*) '   ...after complex: ',yield
 
@@ -144,118 +144,118 @@ c---------- charged scalar bosons ------
         if (wascbr(1).gt.0.0d0) then ! u d-bar
            yield=yield+wascbr(1)*
      &    dswayieldfth(eh,wascm,map(1),map(2),emuth,thmax,
-     &      1,wh,kind,type,istat)
+     &      1,wh,kind,type,istat,waerror)
           yield=yield+wascbr(1)*
      &    dswayieldfth(eh,wascm,map(2),map(1),emuth,thmax,
-     &      2,wh,kind,type,istat)
+     &      2,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(2).gt.0.0d0) then ! u s-bar
            yield=yield+wascbr(2)*
      &    dswayieldfth(eh,wascm,map(3),map(2),emuth,thmax,
-     &      3,wh,kind,type,istat)
+     &      3,wh,kind,type,istat,waerror)
           yield=yield+wascbr(2)*
      &    dswayieldfth(eh,wascm,map(2),map(3),emuth,thmax,
-     &      2,wh,kind,type,istat)
+     &      2,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(3).gt.0.0d0) then ! u b-bar
           yield=yield+wascbr(3)*
      &    dswayieldfth(eh,wascm,map(5),map(2),emuth,thmax,
-     &      5,wh,kind,type,istat)
+     &      5,wh,kind,type,istat,waerror)
           yield=yield+wascbr(3)*
      &    dswayieldfth(eh,wascm,map(2),map(5),emuth,thmax,
-     &      2,wh,kind,type,istat)
+     &      2,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(4).gt.0.0d0) then ! c d-bar
           yield=yield+wascbr(4)*
      &    dswayieldfth(eh,wascm,map(4),map(1),emuth,thmax,
-     &      4,wh,kind,type,istat)
+     &      4,wh,kind,type,istat,waerror)
           yield=yield+wascbr(4)*
      &    dswayieldfth(eh,wascm,map(1),map(4),emuth,thmax,
-     &      1,wh,kind,type,istat)
+     &      1,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(5).gt.0.0d0) then ! c s-bar
           yield=yield+wascbr(5)*
      &    dswayieldfth(eh,wascm,map(4),map(3),emuth,thmax,
-     &    4,wh,kind,type,istat)
+     &    4,wh,kind,type,istat,waerror)
           yield=yield+wascbr(5)*
      &    dswayieldfth(eh,wascm,map(3),map(4),emuth,thmax,
-     &    3,wh,kind,type,istat)
+     &    3,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(6).gt.0.0d0) then ! c b-bar
           yield=yield+wascbr(6)*
      &    dswayieldfth(eh,wascm,map(4),map(5),emuth,thmax,
-     &    4,wh,kind,type,istat)
+     &    4,wh,kind,type,istat,waerror)
           yield=yield+wascbr(6)*
      &    dswayieldfth(eh,wascm,map(5),map(4),emuth,thmax,
-     &    5,wh,kind,type,istat)
+     &    5,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(7).gt.0.0d0) then ! t d-bar
           yield=yield+wascbr(7)*
      &    dswayieldfth(eh,wascm,map(6),map(1),emuth,thmax,
-     &    6,wh,kind,type,istat)
+     &    6,wh,kind,type,istat,waerror)
           yield=yield+wascbr(7)*
      &    dswayieldfth(eh,wascm,map(1),map(6),emuth,thmax,
-     &    1,wh,kind,type,istat)
+     &    1,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(8).gt.0.0d0) then ! t s-bar
           yield=yield+wascbr(8)*
      &    dswayieldfth(eh,wascm,map(6),map(3),emuth,thmax,
-     &    6,wh,kind,type,istat)
+     &    6,wh,kind,type,istat,waerror)
           yield=yield+wascbr(8)*
      &    dswayieldfth(eh,wascm,map(3),map(6),emuth,thmax,
-     &    3,wh,kind,type,istat)
+     &    3,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(9).gt.0.0d0) then ! t b-bar
           yield=yield+wascbr(9)*
      &    dswayieldfth(eh,wascm,map(6),map(5),emuth,thmax,
-     &    6,wh,kind,type,istat)
+     &    6,wh,kind,type,istat,waerror)
           yield=yield+wascbr(9)*
      &    dswayieldfth(eh,wascm,map(5),map(6),emuth,thmax,
-     &    5,wh,kind,type,istat)
+     &    5,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(12).gt.0.0d0) then ! tau nu_tau
           yield=yield+wascbr(12)*
      &    dswayieldfth(eh,wascm,map(11),map(14),emuth,thmax,
-     &    11,wh,kind,type,istat)
+     &    11,wh,kind,type,istat,waerror)
           yield=yield+wascbr(12)*
      &    dswayieldfth(eh,wascm,map(14),map(11),emuth,thmax,
-     &    14,wh,kind,type,istat)
+     &    14,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(13).gt.0.0d0) then ! w+ h1
           yield=yield+wascbr(13)*
      &    dswayieldfth(eh,wascm,map(8),was0m(1),emuth,thmax,
-     &    8,wh,kind,type,istat)
+     &    8,wh,kind,type,istat,waerror)
           e2=dswaemean(eh,wascm,was0m(1),map(8))
           yield=yield+wascbr(13)*
-     &      dswayields2(e2,emuth,thmax,1,wh,kind,type,istat)
+     &      dswayields2(e2,emuth,thmax,1,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(14).gt.0.0d0) then ! w+ h2
           yield=yield+wascbr(14)*
      &    dswayieldfth(eh,wascm,map(8),was0m(2),emuth,thmax,
-     &    8,wh,kind,type,istat)
+     &    8,wh,kind,type,istat,waerror)
           e2=dswaemean(eh,wascm,was0m(2),map(8))
           yield=yield+wascbr(14)*
-     &      dswayields2(e2,emuth,thmax,2,wh,kind,type,istat)
+     &      dswayields2(e2,emuth,thmax,2,wh,kind,type,istat,waerror)
         endif
 
         if (wascbr(15).gt.0.0d0) then ! w+ h3
           yield=yield+wascbr(15)*
      &    dswayieldfth(eh,wascm,map(8),was0m(3),emuth,thmax,
-     &    8,wh,kind,type,istat)
+     &    8,wh,kind,type,istat,waerror)
           e2=dswaemean(eh,wascm,was0m(3),map(8))
           yield=yield+wascbr(15)*
-     &      dswayields2(e2,emuth,thmax,3,wh,kind,type,istat)
+     &      dswayields2(e2,emuth,thmax,3,wh,kind,type,istat,waerror)
         endif
 
       endif
