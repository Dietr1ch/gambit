diff --git a/include/thermodynamics.h b/include/thermodynamics.h
index 7338af64..022cf6fc 100755
--- a/include/thermodynamics.h
+++ b/include/thermodynamics.h
@@ -64,7 +64,8 @@ enum energy_deposition_function {
   No_deposition, /**< No energy deposition is considered. Useful for pedagogic illustration. */
   Analytical_approximation, /**< Analytical energy deposition treatment, introduced in 1209.0247 and corrected in 1612.05644 */
   DarkAges,  /**< f(z) functions computed in the DarkAges modules following the work by Slatyer, introduced in 1211.0283 and updated in 1506.03812 */
-  function_from_file /**<  File specified by the user with the option "energy deposition function file"*/
+  function_from_file, /**<  File specified by the user with the option "energy deposition function file"*/
+  GAMBIT /**< f(z) will be calculated by Gambit. */
 };
 
 /**
diff --git a/source/input.c b/source/input.c
index 77cf1202..e2bf86f2 100644
--- a/source/input.c
+++ b/source/input.c
@@ -792,7 +792,7 @@ int input_read_parameters(
       pba->Omega_ini_dcdm = param1;
     if (flag2 == _TRUE_)
       pba->Omega_ini_dcdm = param2/pba->h/pba->h;
-
+  }
     /* Read Gamma in same units as H0, i.e. km/(s Mpc)*/
     class_call(parser_read_double(pfc,"Gamma_dcdm",&param1,&flag1,errmsg),
                errmsg,
@@ -816,7 +816,6 @@ int input_read_parameters(
       pba->Gamma_dcdm = 1/(param2/(1e9*365*24*3600))/1.02e-3*(1.e3 / _c_); //1 km s^-1 Mpc-^1 = 1.02* 10^-3 Gyr^-1
       pba->tau_dcdm = param2;
     }
-  }
 
   /** - non-cold relics (ncdm) */
   class_read_int("N_ncdm",N_ncdm);
@@ -1601,6 +1600,12 @@ int input_read_parameters(
         pth->has_on_the_spot = _FALSE_;
 	flag3=_TRUE_;
       }
+      if (strcmp(string1,"GAMBIT") == 0) {
+	pth->energy_deposition_function=GAMBIT;
+	pth->energy_repart_coefficient = no_factorization;
+	pth->has_on_the_spot = _FALSE_;
+	flag3=_TRUE_;
+      }
       if (strcmp(string1,"from_file") == 0) {
 	pth->energy_deposition_function=function_from_file;
 	class_call(parser_read_string(pfc,"energy deposition function file",&string1,&flag1,errmsg),
diff --git a/source/thermodynamics.c b/source/thermodynamics.c
index ddc40b2e..7d527e74 100755
--- a/source/thermodynamics.c
+++ b/source/thermodynamics.c
@@ -1305,7 +1305,7 @@ int thermodynamics_annihilation_coefficients_init(
      heat, excitation of lyman-alpha level, Hydrogen ionisation, Helium ionisation, photons below 10.2 eV unseeable by the IGM.
 
   */
-
+if (pth->energy_deposition_function != GAMBIT) {
   /* BEGIN: Add switch (1) */
   if (pth->energy_deposition_function == function_from_file || pth->energy_repart_coefficient == GSVI || pth->energy_repart_coefficient == chi_from_file) {
     class_open(fA,ppr->energy_injec_coeff_file, "r",pth->error_message);
@@ -1401,7 +1401,7 @@ int thermodynamics_annihilation_coefficients_init(
     class_test(status != 0., pth->error_message, "The attempt to launch the external command was not successful. Maybe the output of the external command is not in the right format.");
   }
   /* END */
-
+}
   /* spline in one dimension */
   class_call(array_spline_table_lines(pth->annihil_coef_xe,
                                       num_lines,
@@ -2291,7 +2291,7 @@ int thermodynamics_energy_injection(
             // fprintf(stdout, "energy_rate %e preco->f_eff %e\n", result,preco->f_eff);
       }
       // // /***********************************************************************************************************************/
-      else if(preco->energy_deposition_function == DarkAges){
+      else if(preco->energy_deposition_function == DarkAges || preco->energy_deposition_function == GAMBIT){
 
             class_call(thermodynamics_onthespot_energy_injection(ppr,pba,preco,z,&result,error_message),
                       error_message,
@@ -3967,7 +3967,7 @@ int thermodynamics_recombination_with_cosmorec(
         }
   }
   // // /***********************************************************************************************************************/
-  else if(preco->energy_deposition_function == DarkAges){
+  else if(preco->energy_deposition_function == DarkAges || preco->energy_deposition_function == GAMBIT){
       class_call(thermodynamics_annihilation_coefficients_interpolate(ppr,pba,pth,600),
                      pth->error_message,
                      pth->error_message);
@@ -4262,9 +4262,9 @@ class_stop(pth->error_message,
            if(pth->energy_deposition_function==Analytical_approximation) {
              hyrec_data.cosmo->inj_params->energy_deposition_treatment = 0;
            }
-           else if(pth->energy_deposition_function==function_from_file || pth->energy_deposition_function==DarkAges) {
-             hyrec_data.cosmo->inj_params->energy_deposition_treatment = 1;
-           }
+	   else if(pth->energy_deposition_function==function_from_file || pth->energy_deposition_function==DarkAges || preco->energy_deposition_function == GAMBIT) {
+	     hyrec_data.cosmo->inj_params->energy_deposition_treatment = 1;
+	   }
            if(pth->energy_repart_coefficient==no_factorization) hyrec_data.cosmo->inj_params->energy_repart_coefficient = 0;
            else if(pth->energy_repart_coefficient==GSVI || pth->energy_repart_coefficient ==chi_from_file) hyrec_data.cosmo->inj_params->energy_repart_coefficient = 1;
            else if(pth->energy_repart_coefficient==SSCK) hyrec_data.cosmo->inj_params->energy_repart_coefficient = 2;
