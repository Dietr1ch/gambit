diff -rupN susyhit-1.5.pristine/hdecay.f installed/susyhit/1.5/hdecay.f
--- susyhit-1.5.pristine/hdecay.f	2015-02-22 18:14:22.000000000 +0000
+++ installed/susyhit/1.5/hdecay.f	2016-10-15 16:46:56.988008060 +0100
@@ -164,7 +164,7 @@ c end change susyhit
       COMMON/SLHA_vals_HDEC/islhai,islhao
 
       CALL READ_HDEC(TGBET,AMABEG,AMAEND,NMA)
-      if(islhao.ne.1) then
+      if(islhao.eq.0) then                       !Modified by GAMBIT.
          CALL HEAD_HDEC(TGBET,AMABEG)
       endif
 
@@ -182,7 +182,7 @@ c       CALL WRITE_HDEC(TGBET)
 c end change susyhit
  9999  CONTINUE
 
-      CALL CLOSE_HDEC
+      if(islhao.eq.0) CALL CLOSE_HDEC            !Modified by GAMBIT.
 
 c change susyhit
 c      STOP
@@ -327,8 +327,8 @@ c -- given by the slhaspectrum.in file -
 c -- parameters to be defined which are not given by the --
 c -- slhaspectrum.in file --
 
-      islhai  = 1
-      islhao  = 1
+      islhai  = 2                                !Modified by GAMBIT.
+      islhao  = 2                                !Modified by GAMBIT.
       ihiggs  = 5
       imodel  = 1
       nnlo    = 1
@@ -350,11 +350,13 @@ c -- initialization of the check array -
          check(i1) = 0
       end do
 
-      if(islhai.eq.1) then
+      if(islhai.ge.1) then                       !Added by GAMBIT.
+        if(islhai.eq.1) then
 c change susyhit
          open(ninlha,file='slhaspectrum.in')
 c end change susyhit
          call SLHA_read_leshouches_HDEC(ninlha)
+        endif                                    !Added by GAMBIT.
 
 c -- G_F --
          if(smval(2).ne.0.D0) then
@@ -503,8 +505,9 @@ c -- the mass mb(mb)_MSbar --
       fmtau = amtau
       fms = ams
       fmc = amc
+      if(ishai.eq.2) fmb = massval(34)           !Added by GAMBIT.
 c -- calculation of the mb pole mass from mb(mb)_MSbar --
-      if(smval(5).ne.0.D0) then
+      if(smval(5).ne.0.D0 .and. ishai.ne.2) then !Modified by GAMBIT.
        del = 1.d-10
        mbl = mbmsbar
        mbu = 2*mbmsbar
@@ -2342,7 +2345,7 @@ c ----------------------------- c
 
        close(nout)
 
-      else
+      elseif (islhao .eq. 0) then                !Modified by GAMBIT.
 
       IF(IHIGGS.EQ.0)THEN
       WRITE(NSA,20)AMSM,SMBRB,SMBRL,SMBRM,SMBRS,SMBRC,SMBRT
@@ -5620,8 +5623,8 @@ c>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        WHHSB(I,J)=3*GF*AMZ**4/2.D0/DSQRT(2.D0)/PI*GHBB(I,J)**2*
      .       LAMB_HDEC(AMSB(I)**2/AMH**2,AMSB(J)**2/AMH**2)/AMH
      .      *SUSY
-       write(6,*)'H -> sbot: ',I,J,AMH,AMSB(I),AMSB(J),SUSY-1,
-     .           WHHSB(I,J)/SUSY,WHHSB(I,J)
+c       write(6,*)'H -> sbot: ',I,J,AMH,AMSB(I),AMSB(J),SUSY-1, !Commented out by GAMBIT
+c     .           WHHSB(I,J)/SUSY,WHHSB(I,J)                    !Commented out by GAMBIT
 c      write(6,*)'H -> sbot: ',I,J,AMH,AMSB(I),AMSB(J),SUSY-1
       ELSE
       WHHSB(I,J)=0.D0
@@ -9753,6 +9756,18 @@ c     * /(1.+deltamt)**4.
      * /(1.+deltamb)**4.
         MTOP2 = DSQRT(MTOP4)
         MBOT2 = DSQRT(MBOT4)
+c>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
+c>>> Imported from HDECAY 6.51 for stability at large deltamt/b (high 
+c>>> MSUSY) in GAMBIT.
+c>>> Pat Scott 27/9/2016
+        mtop2 = rmtop**2*(1+bt2*tt- al2*tt/2 - 2*deltamt)
+c     * /(1+deltamt)**2
+        mbot2 = mb**2*(1+bb2*tb - al1*tb/2)
+     * /(1+deltamb)**2
+        mtop4 = mtop2**2
+        mbot4 = mbot2**2
+c       write(6,*)'gfun: ',mtop2,mbot2,rmtop,bt2,al2,deltamt,tt,tb
+c>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
         mb = mb/(1+deltamb)
 
         VH1(1,1) = 1./TANBST
@@ -10051,6 +10066,17 @@ c     * /(1.+deltamt)**4.
      * /(1.+deltamb)**4.
         MTOP2 = DSQRT(MTOP4)
 	MBOT2 = DSQRT(MBOT4)
+c>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
+c>>> Imported from HDECAY 6.51 for stability at large deltamt/b (high 
+c>>> MSUSY) in GAMBIT.
+c>>> Pat Scott 27/9/2016
+        mtop2 = rmtop**2*(1+bt2*tt- al2*tt/2 - 2*deltamt)
+c     * /(1+deltamt)**2
+        mbot2 = mb**2*(1+bb2*tb - al1*tb/2)
+     * /(1+deltamb)**2
+        mtop4 = mtop2**2
+        mbot4 = mbot2**2
+c>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
 
         STOP12 = (MQ2 + MUR2)*.5 + MTOP2 
      *   +1./8.*(G2**2+G1**2)*(H1T**2-H2T**2)
@@ -10124,6 +10150,17 @@ c     * /(1.+deltamt)**4.
      * /(1.+deltamb)**4.
         MTOP2 = DSQRT(MTOP4)
 	MBOT2 = DSQRT(MBOT4)
+c>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
+c>>> Imported from HDECAY 6.51 for stability at large deltamt/b (high 
+c>>> MSUSY) in GAMBIT.
+c>>> Pat Scott 27/9/2016
+        mtop2 = rmtop**2*(1+bt2*tt- al2*tt/2 - 2*deltamt)
+c     * /(1+deltamt)**2
+        mbot2 = mb**2*(1+bb2*tb - al1*tb/2)
+     * /(1+deltamb)**2
+        mtop4 = mtop2**2
+        mbot4 = mbot2**2
+c>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
 
         STOP12 = (MQ2 + MUR2)*.5 + MTOP2 
      *   +1./8.*(G2**2+G1**2)*(H1T**2-H2T**2)
Binary files susyhit-1.5.pristine/libsusyhit.so and installed/susyhit/1.5/libsusyhit.so differ
diff -rupN susyhit-1.5.pristine/lightst3bod.f installed/susyhit/1.5/lightst3bod.f
--- susyhit-1.5.pristine/lightst3bod.f	2015-02-22 18:14:22.000000000 +0000
+++ installed/susyhit/1.5/lightst3bod.f	2016-10-15 16:46:56.988008060 +0100
@@ -13,7 +13,7 @@ cccccccccccccccccccccccccccccccccccccccc
       double precision sdgf,amz,amw,pi,g2
       double precision width_bchiW, width_jchiw, width_tot3bod
       double precision amt, amb, amtau, mfd(3), mfu(3), mfe(3)
-      double precision DcharL(3,6,2), EcharR(3,6,2), 
+      double precision DcharL(3,6,6), EcharR(3,6,6),         !Modified by GAMBIT 
      . cchaneutL(4,2), cchaneutR(4,2), ccharl(3,6,2), fcharr(3,6,2)
       double precision gneutul(3,4,6), 
      . gneutur(3,4,6), gneutdl(3,4,6), gneutdr(3,4,6)
@@ -53,7 +53,7 @@ c---- end ramona changed
 
 c---- common block for parameters entering the couplings
       COMMON/flavviolation/vckm, msq2, msd2, msu2, td, 
-     .tu, usqmix, ifavvio, dsqmix
+     .tu, usqmix, dsqmix, ifavvio
       COMMON/SD_mixmat/uu,vv,zz,zp
       COMMON/SD_mixang/alp_mssm,tanbeta
       COMMON/SD_coupewsb/alsew,g2ew,g1ew
@@ -251,7 +251,7 @@ CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      . stbchiwchib, stbchiwbt, stbchiwchit
       double precision xmuw, xmut(3), xmub, xmuneut, xmuchar(2),
      . xmusb(6)
-      double precision DcharL(3,6,2), EcharR(3,6,2), 
+      double precision DcharL(3,6,6), EcharR(3,6,6),         !Modified by GAMBIT 
      . cchaneutL(4,2), cchaneutR(4,2), ccharl(3,6,2), fcharr(3,6,2)
       double precision gneutul(3,4,6), 
      . gneutur(3,4,6), gneutdl(3,4,6), gneutdr(3,4,6)
@@ -277,7 +277,7 @@ c----- end ramona changed
       common/Wcharneutcoup/CchaneutL, CchaneutR
       common/squarkWcoup/gsqsqW
       COMMON/flavviolation/vckm, msq2, msd2, msu2, td, 
-     .tu, usqmix, ifavvio, dsqmix
+     .tu, usqmix, dsqmix, ifavvio
       COMMON/SD_coupewsb/alsew,g2ew,g1ew
       COMMON/SD_mwmzpole/amwp,amzp
       common/ratio3bod/ratiotopcharg
@@ -560,7 +560,7 @@ CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      . stjchiwchib, stjchiwbt, stjchiwchit
       double precision xmuw, xmut(3), xmub, xmuneut, xmuchar(2),
      . xmusb(6)
-      double precision DcharL(3,6,2), EcharR(3,6,2), 
+      double precision DcharL(3,6,6), EcharR(3,6,6),         !Modified by GAMBIT 
      . cchaneutL(4,2), cchaneutR(4,2), ccharl(3,6,2), fcharr(3,6,2)
       double precision gneutul(3,4,6), 
      . gneutur(3,4,6), gneutdl(3,4,6), gneutdr(3,4,6)
@@ -585,7 +585,7 @@ c----- end ramona changed
       common/Wcharneutcoup/CchaneutL, CchaneutR
       common/squarkWcoup/gsqsqW
       COMMON/flavviolation/vckm, msq2, msd2, msu2, td, 
-     .tu, usqmix, ifavvio, dsqmix
+     .tu, usqmix, dsqmix, ifavvio
       COMMON/SD_coupewsb/alsew,g2ew,g1ew
       COMMON/SD_mwmzpole/amwp,amzp
 c---- ramona cahnged 2/2/15
diff -rupN susyhit-1.5.pristine/lightst4bod.f installed/susyhit/1.5/lightst4bod.f
--- susyhit-1.5.pristine/lightst4bod.f	2015-02-22 18:14:22.000000000 +0000
+++ installed/susyhit/1.5/lightst4bod.f	2016-10-15 16:46:56.992008060 +0100
@@ -34,7 +34,7 @@ c----- end ramona added
      .msd2(3,3), td(3,3), tu(3,3),
      . usqmix(6,6), dsqmix(6,6)
       double precision sinbeta,alsew,g2ew,g1ew, time
-      double precision sigma, DcharL(3,6,2), EcharR(3,6,2), 
+      double precision sigma, DcharL(3,6,6), EcharR(3,6,6),         !Modified by GAMBIT 
      . cchaneutL(4,2), cchaneutR(4,2) 
       double precision sigbtau
       double precision mfin(100),pfout(4,100), etot,  wt, ampwchabtau
@@ -95,7 +95,7 @@ c----- end ramona added
 
       COMMON/SD_param/sdgf,amz,amw,pi,g2
       COMMON/flavviolation/vckm, msq2, msd2, msu2, td, 
-     .tu, usqmix, ifavvio, dsqmix
+     .tu, usqmix, dsqmix, ifavvio
       COMMON/msfermion/ amsupq, amsdownq, amslepton, amsneutrino
       COMMON/SD_weinberg/sw,cw
       COMMON/SD_mixang/alp_mssm,tanbeta
@@ -532,7 +532,7 @@ cccccccccccccccccccccccccccccccccccccccc
       double precision ampSMfer, ampcharsup
       double precision matrixelements
       double precision alsew,g2ew,g1ew
-       double precision DcharL(3,6,2), EcharR(3,6,2), 
+       double precision DcharL(3,6,6), EcharR(3,6,6),         !Modified by GAMBIT 
      . cchaneutL(4,2), cchaneutR(4,2) 
       double precision ampcharslepton, ampintslepsneut, ampintwslep
        double precision gXb2R, gXc2L, gXc2R,gbd3R, gcd3L, gxb2l,
@@ -584,7 +584,7 @@ c------ end ramona added
       common/charneutchaHicoup/QchncL, QchncR
       COMMON/SD_coupewsb/alsew,g2ew,g1ew
       COMMON/flavviolation/vckm, msq2, msd2, msu2, td, 
-     .tu, usqmix, ifavvio, dsqmix
+     .tu, usqmix, dsqmix, ifavvio
       COMMON/SD_hmass/ama,aml,amh,amch,amar
 c----- ramona added 4/11/14
       COMMON/SD_mwmzpole/amwp,amzp
@@ -1715,7 +1715,7 @@ cccccccccccccccccccccccccccccccccccccccc
       double precision ampSMfer, ampcharsup
       double precision matrixelements
       double precision alsew,g2ew,g1ew
-       double precision DcharL(3,6,2), EcharR(3,6,2), 
+       double precision DcharL(3,6,6), EcharR(3,6,6),         !Modified by GAMBIT 
      . cchaneutL(4,2), cchaneutR(4,2) 
       double precision ampcharslepton, ampintslepsneut, ampintwslep
        double precision gXb2R, gXc2L, gXc2R,gbd3R, gcd3L, gxb2l,
@@ -1768,7 +1768,7 @@ c----- end ramona added
       common/charneutchaHicoup/QchncL, QchncR
       COMMON/SD_coupewsb/alsew,g2ew,g1ew
       COMMON/flavviolation/vckm, msq2, msd2, msu2, td, 
-     .tu, usqmix, ifavvio, dsqmix
+     .tu, usqmix, dsqmix, ifavvio
       COMMON/SD_hmass/ama,aml,amh,amch,amar
 c----- ramona added 4/11/14
       COMMON/SD_mwmzpole/amwp,amzp
@@ -2942,7 +2942,7 @@ cccccccccccccccccccccccccccccccccccccccc
       double precision ampSMfer, ampcharsup
       double precision matrixelements
       double precision alsew,g2ew,g1ew
-       double precision DcharL(3,6,2), EcharR(3,6,2), 
+       double precision DcharL(3,6,6), EcharR(3,6,6),         !Modified by GAMBIT 
      . cchaneutL(4,2), cchaneutR(4,2) 
       double precision ampcharslepton, ampintslepsneut, ampintwslep
        double precision gXb2R, gXc2L, gXc2R,gbd3R, gcd3L, gxb2l,
@@ -2995,7 +2995,7 @@ c----- end ramona added
       common/charneutchaHicoup/QchncL, QchncR
       COMMON/SD_coupewsb/alsew,g2ew,g1ew
       COMMON/flavviolation/vckm, msq2, msd2, msu2, td, 
-     .tu, usqmix, ifavvio, dsqmix
+     .tu, usqmix, dsqmix, ifavvio
       COMMON/SD_hmass/ama,aml,amh,amch,amar
 c----- ramona added 4/11/14
       COMMON/SD_mwmzpole/amwp,amzp
@@ -3429,7 +3429,7 @@ cccccccccccccccccccccccccccccccccccccccc
       double precision ampSMfer, ampcharsup
       double precision matrixelements
       double precision alsew,g2ew,g1ew
-       double precision DcharL(3,6,2), EcharR(3,6,2), 
+       double precision DcharL(3,6,6), EcharR(3,6,6),         !Modified by GAMBIT 
      . cchaneutL(4,2), cchaneutR(4,2) 
       double precision ampcharslepton, ampintslepsneut, ampintwslep
        double precision gXb2R, gXc2L, gXc2R,gbd3R, gcd3L, gxb2l,
@@ -3482,7 +3482,7 @@ c----- end ramona added
       common/charneutchaHicoup/QchncL, QchncR
       COMMON/SD_coupewsb/alsew,g2ew,g1ew
       COMMON/flavviolation/vckm, msq2, msd2, msu2, td, 
-     .tu, usqmix, ifavvio, dsqmix
+     .tu, usqmix, dsqmix, ifavvio
       COMMON/SD_hmass/ama,aml,amh,amch,amar
 c----- ramona added 4/11/14
       COMMON/SD_mwmzpole/amwp,amzp
@@ -3917,7 +3917,7 @@ cccccccccccccccccccccccccccccccccccccccc
       double precision ampSMfer, ampcharsup
       double precision matrixelements
       double precision alsew,g2ew,g1ew
-       double precision DcharL(3,6,2), EcharR(3,6,2), 
+       double precision DcharL(3,6,6), EcharR(3,6,6),         !Modified by GAMBIT 
      . cchaneutL(4,2), cchaneutR(4,2) 
       double precision ampcharslepton, ampintslepsneut, ampintwslep
        double precision gXb2R, gXc2L, gXc2R,gbd3R, gcd3L, gxb2l,
@@ -3970,7 +3970,7 @@ c----- end ramona added
       common/charneutchaHicoup/QchncL, QchncR
       COMMON/SD_coupewsb/alsew,g2ew,g1ew
       COMMON/flavviolation/vckm, msq2, msd2, msu2, td, 
-     .tu, usqmix, ifavvio, dsqmix
+     .tu, usqmix, dsqmix, ifavvio
       COMMON/SD_hmass/ama,aml,amh,amch,amar
 c----- ramona added 4/11/14
       COMMON/SD_mwmzpole/amwp,amzp
@@ -4418,7 +4418,7 @@ cccccccccccccccccccccccccccccccccccccccc
       double precision ampSMfer, ampcharsup
       double precision matrixelements
       double precision alsew,g2ew,g1ew
-       double precision DcharL(3,6,2), EcharR(3,6,2), 
+       double precision DcharL(3,6,6), EcharR(3,6,6),         !Modified by GAMBIT 
      . cchaneutL(4,2), cchaneutR(4,2) 
       double precision ampcharslepton, ampintslepsneut, ampintwslep
        double precision gXb2R, gXc2L, gXc2R,gbd3R, gcd3L, gxb2l,
@@ -4468,7 +4468,7 @@ c----- end ramona changed
       common/charneutchaHicoup/QchncL, QchncR
       COMMON/SD_coupewsb/alsew,g2ew,g1ew
       COMMON/flavviolation/vckm, msq2, msd2, msu2, td, 
-     .tu, usqmix, ifavvio, dsqmix
+     .tu, usqmix, dsqmix, ifavvio
       COMMON/SD_hmass/ama,aml,amh,amch,amar
 c----- ramona added 4/11/14
       COMMON/SD_mwmzpole/amwp,amzp
@@ -4793,7 +4793,7 @@ cccccccccccccccccccccccccccccccccccccccc
       double precision ampSMfer, ampcharsup
       double precision matrixelements
       double precision alsew,g2ew,g1ew
-       double precision DcharL(3,6,2), EcharR(3,6,2), 
+       double precision DcharL(3,6,6), EcharR(3,6,6),         !Modified by GAMBIT 
      . cchaneutL(4,2), cchaneutR(4,2) 
       double precision ampcharslepton, ampintslepsneut, ampintwslep
        double precision gXb2R, gXc2L, gXc2R,gbd3R, gcd3L, gxb2l,
@@ -4846,7 +4846,7 @@ c----- end ramona added
       common/charneutchaHicoup/QchncL, QchncR
       COMMON/SD_coupewsb/alsew,g2ew,g1ew
       COMMON/flavviolation/vckm, msq2, msd2, msu2, td, 
-     .tu, usqmix, ifavvio, dsqmix
+     .tu, usqmix, dsqmix, ifavvio
       COMMON/SD_hmass/ama,aml,amh,amch,amar
 c----- ramona added 4/11/14
       COMMON/SD_mwmzpole/amwp,amzp
@@ -5866,7 +5866,7 @@ cccccccccccccccccccccccccccccccccccccccc
       double precision ampSMfer, ampcharsup
       double precision matrixelements
       double precision alsew,g2ew,g1ew
-       double precision DcharL(3,6,2), EcharR(3,6,2), 
+       double precision DcharL(3,6,6), EcharR(3,6,6),         !Modified by GAMBIT 
      . cchaneutL(4,2), cchaneutR(4,2) 
       double precision ampcharslepton, ampintslepsneut, ampintwslep
        double precision gXb2R, gXc2L, gXc2R,gbd3R, gcd3L, gxb2l,
@@ -5919,7 +5919,7 @@ c----- end ramona added
       common/charneutchaHicoup/QchncL, QchncR
       COMMON/SD_coupewsb/alsew,g2ew,g1ew
       COMMON/flavviolation/vckm, msq2, msd2, msu2, td, 
-     .tu, usqmix, ifavvio, dsqmix
+     .tu, usqmix, dsqmix, ifavvio
       COMMON/SD_hmass/ama,aml,amh,amch,amar
 c----- ramona added 4/11/14
       COMMON/SD_mwmzpole/amwp,amzp
@@ -7156,7 +7156,7 @@ cccccccccccccccccccccccccccccccccccccccc
       double precision ampSMfer, ampcharsup, zwi2
       double precision matrixelements
       double precision alsew,g2ew,g1ew
-       double precision DcharL(3,6,2), EcharR(3,6,2), 
+       double precision DcharL(3,6,6), EcharR(3,6,6),         !Modified by GAMBIT 
      . cchaneutL(4,2), cchaneutR(4,2) 
       double precision ampcharslepton, ampintslepsneut, ampintwslep
        double precision gXb2R, gXc2L, gXc2R,gbd3R, gcd3L, gxb2l,
@@ -7209,7 +7209,7 @@ c----- end ramona added
       common/charneutchaHicoup/QchncL, QchncR
       COMMON/SD_coupewsb/alsew,g2ew,g1ew
       COMMON/flavviolation/vckm, msq2, msd2, msu2, td, 
-     .tu, usqmix, ifavvio, dsqmix
+     .tu, usqmix, dsqmix, ifavvio
       COMMON/SD_hmass/ama,aml,amh,amch,amar
 c----- ramona added 4/11/14
       COMMON/SD_mwmzpole/amwp,amzp
@@ -7591,7 +7591,7 @@ cccccccccccccccccccccccccccccccccccccccc
       double precision ampSMfer, ampcharsup, zwi2
       double precision matrixelements
       double precision alsew,g2ew,g1ew
-       double precision DcharL(3,6,2), EcharR(3,6,2), 
+       double precision DcharL(3,6,6), EcharR(3,6,6),         !Modified by GAMBIT 
      . cchaneutL(4,2), cchaneutR(4,2) 
       double precision ampcharslepton, ampintslepsneut, ampintwslep
        double precision gXb2R, gXc2L, gXc2R,gbd3R, gcd3L, gxb2l,
@@ -7645,7 +7645,7 @@ c----- end ramona added
       common/charneutchaHicoup/QchncL, QchncR
       COMMON/SD_coupewsb/alsew,g2ew,g1ew
       COMMON/flavviolation/vckm, msq2, msd2, msu2, td, 
-     .tu, usqmix, ifavvio, dsqmix
+     .tu, usqmix, dsqmix, ifavvio
       COMMON/SD_hmass/ama,aml,amh,amch,amar
 c----- ramona added 4/11/14
       COMMON/SD_mwmzpole/amwp,amzp
@@ -8102,7 +8102,7 @@ cccccccccccccccccccccccccccccccccccccccc
       double precision ampSMfer, ampcharsup, zwi2
       double precision matrixelements
       double precision alsew,g2ew,g1ew
-       double precision DcharL(3,6,2), EcharR(3,6,2), 
+       double precision DcharL(3,6,6), EcharR(3,6,6),         !Modified by GAMBIT 
      . cchaneutL(4,2), cchaneutR(4,2) 
       double precision ampcharslepton, ampintslepsneut, ampintwslep
        double precision gXb2R, gXc2L, gXc2R,gbd3R, gcd3L, gxb2l,
@@ -8155,7 +8155,7 @@ c----- end ramona added
       common/charneutchaHicoup/QchncL, QchncR
       COMMON/SD_coupewsb/alsew,g2ew,g1ew
       COMMON/flavviolation/vckm, msq2, msd2, msu2, td, 
-     .tu, usqmix, ifavvio, dsqmix
+     .tu, usqmix, dsqmix, ifavvio
       COMMON/SD_hmass/ama,aml,amh,amch,amar
 c----- ramona added 4/11/14
       COMMON/SD_mwmzpole/amwp,amzp
@@ -8616,7 +8616,7 @@ cccccccccccccccccccccccccccccccccccccccc
       double precision ampSMfer, ampcharsup, zwi2
       double precision matrixelements
       double precision alsew,g2ew,g1ew
-       double precision DcharL(3,6,2), EcharR(3,6,2), 
+       double precision DcharL(3,6,6), EcharR(3,6,6),         !Modified by GAMBIT 
      . cchaneutL(4,2), cchaneutR(4,2) 
       double precision ampcharslepton, ampintslepsneut, ampintwslep
        double precision gXb2R, gXc2L, gXc2R,gbd3R, gcd3L, gxb2l,
@@ -8669,7 +8669,7 @@ c----- end ramona added
       common/charneutchaHicoup/QchncL, QchncR
       COMMON/SD_coupewsb/alsew,g2ew,g1ew
       COMMON/flavviolation/vckm, msq2, msd2, msu2, td, 
-     .tu, usqmix, ifavvio, dsqmix
+     .tu, usqmix, dsqmix, ifavvio
       COMMON/SD_hmass/ama,aml,amh,amch,amar
 c----- ramona added 4/11/14
       COMMON/SD_mwmzpole/amwp,amzp
diff -rupN susyhit-1.5.pristine/makefile installed/susyhit/1.5/makefile
--- susyhit-1.5.pristine/makefile	2015-02-22 18:14:22.000000000 +0000
+++ installed/susyhit/1.5/makefile	2016-10-15 16:46:56.992008060 +0100
@@ -2,13 +2,19 @@ OBJS1 = bsg.o twoloophiggs.o suspect2.o
 OBJS2 = sdecay.o lightst4bod.o Xvegas.o lightst3bod.o
 OBJS3 = susylha.o hgaga.o hdecay.o
 
-FC=gfortran
+FF=gfortran
+
+FC=$(FF)
+FFLAGS= -O2 -fPIC
 
 .f.o: 
-	$(FC) -c -finit-local-zero -fbacktrace -fno-align-commons $*.f
+	$(FC) $(FFLAGS) -c $*.f
 
 susyhit:$(OBJS1) $(OBJS2) $(OBJS3) 
 	$(FC) $(OBJS1) $(OBJS2) $(OBJS3) -o run
 
+libsusyhit.so:$(OBJS1) $(OBJS2) $(OBJS3)
+	$(FC) -shared -o $@ $(OBJS1) $(OBJS2) $(OBJS3)
+
 clean: 
-	rm -f *.o
\ No newline at end of file
+	rm -f *.o
diff -rupN susyhit-1.5.pristine/sdecay.f installed/susyhit/1.5/sdecay.f
--- susyhit-1.5.pristine/sdecay.f	2015-02-22 18:14:22.000000000 +0000
+++ installed/susyhit/1.5/sdecay.f	2016-10-15 17:01:57.596029865 +0100
@@ -98,7 +98,12 @@ c  file.]
 c                                                                      c
 c cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc c
 
-      program sdecay
+      !Added by GAMBIT to make 100% sure 'unlikely' matches the fortran value.
+      double precision function s_hit_unlikely()
+        s_hit_unlikely = -123456789D0
+      end
+
+      subroutine sdecay                          !Modified by GAMBIT.
 
       implicit double precision (a-h,m,o-z)
       double precision neutwchar,neutzneut,neuthcchar,neuthlneut,
@@ -117,6 +122,9 @@ c cccccccccccccccccccccccccccccccccccccc
      .       aeval(3,3),yuval(3,3),ydval(3,3),yeval(3,3),qvalue(1:22),
      .       extval(0:100),m_softval(1:100)
       double precision nl,nq
+      logical qcdcorrstok(2),qcdcorrsbok(2),qcdcorrchok(2)           !Added by GAMBIT
+      logical qcdcorrneok(4),qcdcorrglok                             !Added by GAMBIT
+      logical qcdcorrsulok, qcdcorrsurok, qcdcorrsdlok, qcdcorrsdrok !Added by GAMBIT
       integer nx1t,ny1t,nnlo,imod(1:2)
 c--- ramona chnaged on 6/6/13 size of array check
       integer check(1:30)
@@ -280,10 +288,10 @@ c--- ramona chnaged on 6/6/13 size of ar
       dimension whlgd(4),whcgd(2),whhgd(4),whagd(4),bhlgd(4),bhhgd(4),
      .          bhagd(4),bhcgd(2)
 c--- ramona changed 18/3/13
-           double precision vckm(3,3), msq2(3,3), msu2(3,3), 
+           double precision vckm(3,3), msq2(3,3), msu2(3,3),
      .msd2(3,3), td(3,3), tu(3,3),
      . usqmix(6,6), dsqmix(6,6)
-	double precision amsupq(6), amsdownq(6), amslepton(6), 
+	double precision amsupq(6), amsdownq(6), amslepton(6),
      .amsneutrino(3)
 c------ end ramona changed
 c---- ramona changed 20/8/14
@@ -330,7 +338,7 @@ c ------- common blocks of the couplings
       COMMON/SD_coup5/ale,altau,alsne,blsne,alsnt,blsnt
       COMMON/SD_coup6/alsto,aksto,alsbo,aksbo
       COMMON/SD_coup7/alup,aldo
-      COMMON/SD_coup8/ae,be,atau,btau,anu,bnu,antau,bntau      
+      COMMON/SD_coup8/ae,be,atau,btau,anu,bnu,antau,bntau
       COMMON/SD_coup9/atop,btop,abo,bbo
       COMMON/SD_coup10/aup,bup,ado,bdo
       COMMON/SD_coup11/gltt,ghtt,gatt
@@ -420,7 +428,7 @@ c -- useful when SDECAY is linked to oth
      .         brneuthhgrav,brneuthagrav
       COMMON/SD_neut3body/brneutup,brneutdow,brneutch,brneutst,
      .         brneutbot,brneuttop,brneutel,brneutmu,brneuttau,
-     .         brneutnue,brneutnumu,brneutnutau,brchubd,brchcbs, 
+     .         brneutnue,brneutnumu,brneutnutau,brchubd,brchcbs,
      .         brchtbb,brchelne,brchmunmu,brchtauntau,brglup,brgldo,
      .         brglch,brglst,brgltop,brglbot
       COMMON/SD_neutloop/brnraddec
@@ -448,7 +456,7 @@ c -- useful when SDECAY is linked to oth
       COMMON/SD_stoploop/brgamma,brgammaup,brgammagluino
       COMMON/SD_stop4body/brgamma4bod,brgammaup4bod,brgammagluino4bod,
      .          br4bodoffshelltau
-      COMMON/SD_stopwidth/stoptot4
+      COMMON/SD_stopwidth/stoptot4,stoptot       !Modified by GAMBIT
       COMMON/SD_sbot2body/brsb1neutt,brsb2neutt,brsb1chart,brsb2chart,
      .          brsb1hcst,brsb2hcst,brsb1wst,brsb2wst,brsb1glui,
      .          brsb2glui,brsb2hl,brsb2hh,brsb2ha,brsb2zbot
@@ -473,8 +481,8 @@ c -- useful when SDECAY is linked to oth
       COMMON/SD_top2body/brtopbw,brtopbh,brtopneutrstop
       COMMON/SD_topwidth/toptot2
 c---- ramona changed 18/3/2013
-      COMMON/flavviolation/vckm, msq2, msd2, msu2, td, 
-     .tu, usqmix, ifavvio, dsqmix
+      COMMON/flavviolation/vckm, msq2, msd2, msu2, td,
+     .tu, usqmix, dsqmix, ifavvio
       COMMON/msfermion/ amsupq, amsdownq, amslepton, amsneutrino
 c------ end ramona changed
 c----- ramona added for alex output 25/11/14
@@ -508,12 +516,14 @@ c----- end ramona added
 c----- ramona added 20/2/15
 c----- if iflag4bod3bod=1 3 body for amstop-amneut> amw+amb+flagdiff3bod4bod
 c----- if iflag3bod2bod=0 3 body decay above top threshold
-c----- if iflag3bod2bod=2 2 body decay stop-> top neutralino above threshold 
+c----- if iflag3bod2bod=2 2 body decay stop-> top neutralino above threshold
        iflag3bod2bod=1
        flagdiff2bod3bod=30d0
 c----- end ramona added
 
 
+      if (.false.) then                          !Added by GAMBIT.
+
       open(ninshs,file='susyhit.in',status='unknown')
 
 c -- read in susyhit.in --
@@ -547,12 +557,390 @@ c-----ramona chnaged 7/6/13
       read(ninshs,*)
       read(ninshs,*)
       read(ninshs,*)i4bod
-      
+
       if(ifavvio.eq.1)then
       print*, "flavour violation only for light stop decay implemented"
       print*, "output only in SLHA2 format"
       flagoutput=1d0
       flagshsin=2d0
+      endif                                      !Added by GAMBIT.
+
+      else                                       !This whole clause added by GAMBIT.
+
+        !Internal SUSY-HIT operational flags
+        flagshsin=0d0
+        flagoutput=2d0
+        i4bod=1
+
+        !SUSY-HIT common blocks already initialised by GAMBIT:
+        !checkfavvio
+        !flavviolation
+        !susyhitin
+        !sd_leshouches1
+        !sd_leshouches2
+        !slha_leshouches1_hdec
+        !slha_leshouches2_hdec
+        !sd_mbmb
+        !sd_selectron
+
+        !HDECAY widths and branching fractions needing initialisation to zero.
+        abrb = 0.d0
+        abrl = 0.d0
+        abrm = 0.d0
+        abrs = 0.d0
+        abrc = 0.d0
+        abrt = 0.d0
+        abrg = 0.d0
+        abrga = 0.d0
+        abrzga = 0.d0
+        abrz = 0.d0
+        awdth = 0.d0
+        hlbrb = 0.d0
+        hlbrl = 0.d0
+        hlbrm = 0.d0
+        hlbrs = 0.d0
+        hlbrc = 0.d0
+        hlbrt = 0.d0
+        hlbrg = 0.d0
+        hlbrga = 0.d0
+        hlbrzga = 0.d0
+        hlbrw = 0.d0
+        hlbrz = 0.d0
+        hlbra = 0.d0
+        hlbraz = 0.d0
+        hlbrhw = 0.d0
+        hlwdth = 0.d0
+        hhbrb = 0.d0
+        hhbrl = 0.d0
+        hhbrm = 0.d0
+        hhbrs = 0.d0
+        hhbrc = 0.d0
+        hhbrt = 0.d0
+        hhbrg = 0.d0
+        hhbrga = 0.d0
+        hhbrzga = 0.d0
+        hhbrw = 0.d0
+        hhbrz = 0.d0
+        hhbrh = 0.d0
+        hhbra = 0.d0
+        hhbraz = 0.d0
+        hhbrhw = 0.d0
+        hhwdth = 0.d0
+        hcbrb = 0.d0
+        hcbrl = 0.d0
+        hcbrm = 0.d0
+        hcbrbu = 0.d0
+        hcbrs = 0.d0
+        hcbrc = 0.d0
+        hcbrt = 0.d0
+        hcbrw = 0.d0
+        hcbra = 0.d0
+        hcwdth = 0.d0
+        hlbrsc = 0.d0
+        hlbrsn = 0.d0
+        hhbrsc = 0.d0
+        hhbrsn = 0.d0
+        habrsc = 0.d0
+        habrsn = 0.d0
+        hcbrsu = 0.d0
+        hlbrcht = 0.d0
+        hhbrcht = 0.d0
+        habrcht = 0.d0
+        hlbrnet = 0.d0
+        hhbrnet = 0.d0
+        habrnet = 0.d0
+        hcbrcnt = 0.d0
+        hlbrsl = 0.d0
+        hhbrsl = 0.d0
+        hcbrsl = 0.d0
+        habrsl = 0.d0
+        habrst = 0.d0
+        habrsb = 0.d0
+        hhbrsq = 0.d0
+        hhbrst = 0.d0
+        hhbrsb = 0.d0
+        hhbrsqt = 0.d0
+        hcbrsq = 0.d0
+        hcbrstb = 0.d0
+        hcbrsqt = 0.d0
+        hlbrsq = 0.d0
+        hlbrsqt = 0.d0
+        bhlslnl = 0.d0
+        bhlslel = 0.d0
+        bhlsler = 0.d0
+        bhlsqul = 0.d0
+        bhlsqur = 0.d0
+        bhlsqdl = 0.d0
+        bhlsqdr = 0.d0
+        bhlst = 0.d0
+        bhlsb = 0.d0
+        bhlstau = 0.d0
+        bhhslnl = 0.d0
+        bhhslel = 0.d0
+        bhhsler = 0.d0
+        bhhsqul = 0.d0
+        bhhsqur = 0.d0
+        bhhsqdl = 0.d0
+        bhhsqdr = 0.d0
+        bhhst = 0.d0
+        bhhsb = 0.d0
+        bhhstau = 0.d0
+        bhastau = 0.d0
+        bhasb = 0.d0
+        bhast = 0.d0
+        bhcsl00 = 0.d0
+        bhcsl11 = 0.d0
+        bhcsl21 = 0.d0
+        bhcsq = 0.d0
+        bhcstb = 0.d0
+        whlgd = 0.d0
+        whhgd = 0.d0
+        whagd = 0.d0
+        whcgd = 0.d0
+
+        !SDECAY widths and branching fractions needing initialisation to zero.
+        brcharst1 = 0.d0
+        brcharst2 = 0.d0
+        brcharsb1 = 0.d0
+        brcharsb2 = 0.d0
+        brcharsupl = 0.d0
+        brcharsupr = 0.d0
+        brcharsdownl = 0.d0
+        brcharsdownr = 0.d0
+        brcharsnel = 0.d0
+        brcharsn1 = 0.d0
+        brcharsn2 = 0.d0
+        brcharsell = 0.d0
+        brcharselr = 0.d0
+        brcharstau1 = 0.d0
+        brcharstau2 = 0.d0
+        brcharhcneut = 0.d0
+        brcharwneut = 0.d0
+        brcharzchic = 0.d0
+        brcharhlchic = 0.d0
+        brcharhhchic = 0.d0
+        brcharhachic = 0.d0
+        brcharwgravitino = 0.d0
+        brcharhcgravitino = 0.d0
+        brntaunut = 0.d0
+        brnelnue = 0.d0
+        brnmunumu = 0.d0
+        brnupdb = 0.d0
+        brnchsb = 0.d0
+        brntopbb = 0.d0
+        brglupdb = 0.d0
+        brglchsb = 0.d0
+        brgltopbb = 0.d0
+        brchee = 0.d0
+        brchmumu = 0.d0
+        brchtautau = 0.d0
+        brchnene = 0.d0
+        brchnmunmu = 0.d0
+        brchntauntau = 0.d0
+        brchupup = 0.d0
+        brchdodo = 0.d0
+        brchchch = 0.d0
+        brchstst = 0.d0
+        brchtoptop = 0.d0
+        brchbotbot = 0.d0
+        chartot = 0.d0
+        brneutst1 = 0.d0
+        brneutst2 = 0.d0
+        brneutsb1 = 0.d0
+        brneutsb2 = 0.d0
+        brneutsupl = 0.d0
+        brneutsupr = 0.d0
+        brneutsdownl = 0.d0
+        brneutsdownr = 0.d0
+        brneutsnel = 0.d0
+        brneutsn1 = 0.d0
+        brneutsn2 = 0.d0
+        brneutsell = 0.d0
+        brneutselr = 0.d0
+        brneutstau1 = 0.d0
+        brneutstau2 = 0.d0
+        brneutwchar = 0.d0
+        brneuthcchar = 0.d0
+        brneutzneut = 0.d0
+        brneuthlneut = 0.d0
+        brneuthhneut = 0.d0
+        brneuthaneut = 0.d0
+        brneutgamgrav = 0.d0
+        brneutzgrav = 0.d0
+        brneuthlgrav = 0.d0
+        brneuthhgrav = 0.d0
+        brneuthagrav = 0.d0
+        brneutup = 0.d0
+        brneutdow = 0.d0
+        brneutch = 0.d0
+        brneutst = 0.d0
+        brneutbot = 0.d0
+        brneuttop = 0.d0
+        brneutel = 0.d0
+        brneutmu = 0.d0
+        brneuttau = 0.d0
+        brneutnue = 0.d0
+        brneutnumu = 0.d0
+        brneutnutau = 0.d0
+        brchubd = 0.d0
+        brchcbs = 0.d0
+        brchtbb = 0.d0
+        brchelne = 0.d0
+        brchmunmu = 0.d0
+        brchtauntau = 0.d0
+        brglup = 0.d0
+        brgldo = 0.d0
+        brglch = 0.d0
+        brglst = 0.d0
+        brgltop = 0.d0
+        brglbot = 0.d0
+        brnraddec = 0.d0
+        neuttot = 0.d0
+        brgst1 = 0.d0
+        brgst2 = 0.d0
+        brgsb1 = 0.d0
+        brgsb2 = 0.d0
+        brgsupl = 0.d0
+        brgsupr = 0.d0
+        brgsdownl = 0.d0
+        brgsdownr = 0.d0
+        brgoup = 0.d0
+        brgoch = 0.d0
+        brgodn = 0.d0
+        brgost = 0.d0
+        brgotp = 0.d0
+        brgobt = 0.d0
+        brgoud = 0.d0
+        brgocs = 0.d0
+        brgotb = 0.d0
+        brhcst1b = 0.d0
+        brwst1b = 0.d0
+        brglnjgluon = 0.d0
+        gluitot = 0.d0
+        brsuplnup = 0.d0
+        brsuplcdow = 0.d0
+        brsuplglui = 0.d0
+        brsuprnup = 0.d0
+        brsuprcdow = 0.d0
+        brsuprglui = 0.d0
+        supltot2 = 0.d0
+        suprtot2 = 0.d0
+        brsdowlndow = 0.d0
+        brsdowlchup = 0.d0
+        brsdowlglui = 0.d0
+        brsdowrndow = 0.d0
+        brsdowrchup = 0.d0
+        brsdowrglui = 0.d0
+        sdowltot2 = 0.d0
+        sdowrtot2 = 0.d0
+        brst1neutt = 0.d0
+        brst2neutt = 0.d0
+        brst1charb = 0.d0
+        brst1hcsb = 0.d0
+        brst1wsb = 0.d0
+        brst2charb = 0.d0
+        brst2hcsb = 0.d0
+        brst2wsb = 0.d0
+        brst1glui = 0.d0
+        brst2glui = 0.d0
+        brst2hl = 0.d0
+        brst2hh = 0.d0
+        brst2ha = 0.d0
+        brst2ztop = 0.d0
+        brstopw = 0.d0
+        brstoph = 0.d0
+        brststau = 0.d0
+        brstsntau = 0.d0
+        brstsel = 0.d0
+        brstbsbst = 0.d0
+        brstbbsbt = 0.d0
+        brsttausbnu = 0.d0
+        brstelsbnu = 0.d0
+        brstupsbdow = 0.d0
+        brstsnel = 0.d0
+        brst2st1tt = 0.d0
+        brst2st1startt = 0.d0
+        brst2st1bb = 0.d0
+        brst2st1uu = 0.d0
+        brst2st1dd = 0.d0
+        brst2st1ee = 0.d0
+        brst2st1nunu = 0.d0
+        brst2st1tautau = 0.d0
+        brgamma = 0.d0
+        brgammaup = 0.d0
+        brgammagluino = 0.d0
+        brgamma4bod = 0.d0
+        brgammaup4bod = 0.d0
+        brgammagluino4bod = 0.d0
+        br4bodoffshelltau = 0.d0
+        stoptot4 = 0.d0
+        stoptot = 0.d0
+        brsb1neutt = 0.d0
+        brsb2neutt = 0.d0
+        brsb1chart = 0.d0
+        brsb2chart = 0.d0
+        brsb1hcst = 0.d0
+        brsb2hcst = 0.d0
+        brsb1wst = 0.d0
+        brsb2wst = 0.d0
+        brsb1glui = 0.d0
+        brsb2glui = 0.d0
+        brsb2hl = 0.d0
+        brsb2hh = 0.d0
+        brsb2ha = 0.d0
+        brsb2zbot = 0.d0
+        brsbstau = 0.d0
+        brsbsntau = 0.d0
+        brsbsel = 0.d0
+        brsbtstsb = 0.d0
+        brsbtbstb = 0.d0
+        brsbtaustnu = 0.d0
+        brsbelstnu = 0.d0
+        brsbupstdow = 0.d0
+        brsbsnel = 0.d0
+        brsb2sb1bb = 0.d0
+        brsb2sb1starbb = 0.d0
+        brsb2sb1tt = 0.d0
+        brsb2sb1uu = 0.d0
+        brsb2sb1dd = 0.d0
+        brsb2sb1ee = 0.d0
+        brsb2sb1nunu = 0.d0
+        brsb2sb1tautau = 0.d0
+        sbottot = 0.d0
+        brsellneute = 0.d0
+        brsellcharnue = 0.d0
+        brselrneute = 0.d0
+        brselrcharnue = 0.d0
+        selltot2 = 0.d0
+        selrtot2 = 0.d0
+        brsnellneut = 0.d0
+        brsnellchar = 0.d0
+        sneltot2 = 0.d0
+        brstau1neut = 0.d0
+        brstau2neut = 0.d0
+        brstau1char = 0.d0
+        brstau1hcsn = 0.d0
+        brstau1wsn = 0.d0
+        brstau2char = 0.d0
+        brstau2hcsn = 0.d0
+        brstau2wsn = 0.d0
+        brstau2hl = 0.d0
+        brstau2hh = 0.d0
+        brstau2ha = 0.d0
+        brstau2ztau = 0.d0
+        brstautaugrav = 0.d0
+        stau1tot2 = 0.d0
+        stau2tot2 = 0.d0
+        brsntauneut = 0.d0
+        brsntauchar = 0.d0
+        brsntau1wstau = 0.d0
+        brsntau1hcstau = 0.d0
+        sntautot2 = 0.d0
+        brtopbw = 0.d0
+        brtopbh = 0.d0
+        brtopneutrstop = 0.d0
+        toptot2 = 0.d0
+
       endif
 c---- end ramona chnaged
 c -- The following flags are not read in any more but hard-coded for - c
@@ -569,7 +957,7 @@ c -- format.
       flagmulti       = 1.D0
       flagloop        = 1.D0
       flagsusytop     = 1.D0
-c flagnlspgmsb will be set to 1 in case it is a GMSB model after the 
+c flagnlspgmsb will be set to 1 in case it is a GMSB model after the
 c setting of the parameters read in in SD_common_ini
       flagnlspgmsb    = 0.D0
       idrbar          = 1
@@ -629,7 +1017,7 @@ c    ramona chnaged 7/6/13
       call hdecay
       endif
 !      call hdecay
-c--- end ramona chaged     
+c--- end ramona chaged
 
 c ------------- initializing the couplings needed in sdecay ---------- c
       call SD_couplings
@@ -670,9 +1058,9 @@ c---- end ramona changed
          charsupr(i)   = 0.D0
          charsdownl(i) = 0.D0
          charsdownr(i) = 0.D0
-         charsnel(i)   = 0.D0 
+         charsnel(i)   = 0.D0
          charsn1(i)    = 0.D0
-         charsn2(i)    = 0.D0 
+         charsn2(i)    = 0.D0
          charsell(i)   = 0.D0
          charselr(i)   = 0.D0
          charstau1(i)  = 0.D0
@@ -747,7 +1135,11 @@ c -- the 2-body decays and 2-body total
          do i=1,2,1
             chartot2nlo(i) = chartot2lo(i)+qcdcharst1(i)+qcdcharst2(i)+
      .           qcdcharsb1(i)+qcdcharsb2(i)+2.D0*(qcdcharsupl(i)+
-     .           qcdcharsupr(i)+qcdcharsdownl(i)+qcdcharsdownr(i)) 
+     .           qcdcharsupr(i)+qcdcharsdownl(i)+qcdcharsdownr(i))
+c --- PS added: when QCD corrections are <-100%, use as 1/(1-correction) instead of 1+correction
+            qcdcorrchok(i) = chartot2nlo(i) .ge. 0.D0
+            if (.not.qcdcorrchok(i)) chartot2nlo(i) =
+     .       chartot2lo(i) / (2.D0 - chartot2nlo(i) / chartot2lo(i))
          end do
       endif
 
@@ -821,6 +1213,46 @@ c ------------------------ the total wid
 
 c -------------------- the chargino branching ratios ----------------- c
 
+c --- PS added: when QCD corrections are <-100%, get 2-body BFs at tree-level
+      do i=1,2,1
+         if(.not.qcdcorrchok(i)) then
+            brcharst1(i)    = charst1(i)/chartot2lo(i)
+            brcharst2(i)    = charst2(i)/chartot2lo(i)
+            brcharsb1(i)    = charsb1(i)/chartot2lo(i)
+            brcharsb2(i)    = charsb2(i)/chartot2lo(i)
+            brcharsupl(i)   = charsupl(i)/chartot2lo(i)
+            brcharsupr(i)   = charsupr(i)/chartot2lo(i)
+            brcharsdownl(i) = charsdownl(i)/chartot2lo(i)
+            brcharsdownr(i) = charsdownr(i)/chartot2lo(i)
+            brcharsnel(i)   = charsnel(i)/chartot2lo(i)
+            brcharsn1(i)    = charsn1(i)/chartot2lo(i)
+            brcharsn2(i)    = charsn2(i)/chartot2lo(i)
+            brcharsell(i)   = charsell(i)/chartot2lo(i)
+            brcharselr(i)   = charselr(i)/chartot2lo(i)
+            brcharstau1(i)  = charstau1(i)/chartot2lo(i)
+            brcharstau2(i)  = charstau2(i)/chartot2lo(i)
+            do j=1,4,1
+               brcharhcneut(i,j) = charhcneut(i,j)/chartot2lo(i)
+               brcharwneut(i,j)  = charwneut(i,j)/chartot2lo(i)
+            end do
+        endif
+      end do
+      if(.not.qcdcorrchok(2)) then
+         brcharzchic  = char2zchic1/chartot2lo(2)
+         brcharhlchic = char2hlchic1/chartot2lo(2)
+         brcharhhchic = char2hhchic1/chartot2lo(2)
+         brcharhachic = char2hachic1/chartot2lo(2)
+      endif
+
+      if(flagnlspgmsb.eq.1.D0) then
+         do i=1,2,1
+            if(.not.qcdcorrchok(i)) then
+               brcharwgravitino(i)  = charwgravitino(i)/chartot2lo(i)
+               brcharhcgravitino(i) = charhcgravitino(i)/chartot2lo(i)
+            endif
+         end do
+      endif
+
 c -- for the 2-body decays --
 
       if(flagqcd.eq.1.D0)  then
@@ -837,6 +1269,7 @@ c -- for the 2-body decays --
       endif
 
       do i=1,2,1
+         if(qcdcorrchok(i)) then                                     !Added by GAMBIT
          brcharst1(i)    = charst1(i)/chartot(i)
          brcharst2(i)    = charst2(i)/chartot(i)
          brcharsb1(i)    = charsb1(i)/chartot(i)
@@ -852,20 +1285,27 @@ c -- for the 2-body decays --
          brcharselr(i)   = charselr(i)/chartot(i)
          brcharstau1(i)  = charstau1(i)/chartot(i)
          brcharstau2(i)  = charstau2(i)/chartot(i)
+         endif                                                       !Added by GAMBIT
          do j=1,4,1
+         if(qcdcorrchok(i)) then                                     !Added by GAMBIT
             brcharhcneut(i,j) = charhcneut(i,j)/chartot(i)
             brcharwneut(i,j)  = charwneut(i,j)/chartot(i)
+         endif                                                       !Added by GAMBIT
          end do
       end do
+      if(qcdcorrchok(2)) then                                        !Added by GAMBIT
       brcharzchic  = char2zchic1/chartot(2)
       brcharhlchic = char2hlchic1/chartot(2)
       brcharhhchic = char2hhchic1/chartot(2)
       brcharhachic = char2hachic1/chartot(2)
+      endif                                                          !Added by GAMBIT
 
       if(flagnlspgmsb.eq.1.D0) then
          do i=1,2,1
+         if(qcdcorrchok(i)) then                                     !Added by GAMBIT
             brcharwgravitino(i)  = charwgravitino(i)/chartot(i)
             brcharhcgravitino(i) = charhcgravitino(i)/chartot(i)
+         endif                                                       !Added by GAMBIT
          end do
       endif
 
@@ -935,7 +1375,7 @@ c -- initialization --
          neutstau1(i)    = 0.D0
          neutstau2(i)    = 0.D0
          neuthcchar(i,1) = 0.D0
-         neuthcchar(i,2) = 0.D0 
+         neuthcchar(i,2) = 0.D0
          neutwchar(i,1)  = 0.D0
          neutwchar(i,2)  = 0.D0
          do j=1,4,1
@@ -997,7 +1437,7 @@ c -- the 2-body decays and 2-body total
      .     neutsb1,neutsb2,neutsupl,neutsupr,neutsdownl,neutsdownr,
      .     qcdneutst1,qcdneutst2,qcdneutsb1,qcdneutsb2,qcdneutsupl,
      .     qcdneutsupr,qcdneutsdownl,qcdneutsdownr)
-   
+
       if(flagnlspgmsb.eq.1.D0) then
          call SD_gmsb2bod(neutgammagravitino,neutZgravitino,
      .                       neuthlgravitino,neuthhgravitino,
@@ -1032,6 +1472,10 @@ c -- the 2-body decays and 2-body total
      .           qcdneutsb1(i)+qcdneutsb2(i)+2.D0*qcdneutsupl(i)+2.D0*
      .           qcdneutsupr(i)+2.D0*qcdneutsdownl(i)+2.D0*
      .           qcdneutsdownr(i)) + neuttot2lo(i)
+c --- PS added: when QCD corrections are <-100%, use as 1/(1-correction) instead of 1+correction
+            qcdcorrneok(i) = neuttot2nlo(i) .ge. 0.D0
+            if (.not.qcdcorrneok(i)) neuttot2nlo(i) =
+     .       neuttot2lo(i) / (2.D0 - neuttot2nlo(i) / neuttot2lo(i))
          end do
       endif
 
@@ -1080,7 +1524,7 @@ c -- the 3-body decays and 3-body total
 
 c--------------------------------------------------------------------- c
 
-c -- the loop decays neutralino_i -> neutralino_j + photon and 
+c -- the loop decays neutralino_i -> neutralino_j + photon and
 c -- the loop total widths --
 
       do ni = 1,4,1
@@ -1134,12 +1578,56 @@ c ------------------------ the total wid
       if(flagnlspgmsb.eq.1.D0) then
          do i=1,4,1
             if(neuttotmulti(i).eq.0.D0) flagneut3bod(i) = 0.D0
-            neuttot(i) = neuttot(i) + neutgrav2bod(i) 
+            neuttot(i) = neuttot(i) + neutgrav2bod(i)
          end do
       endif
 
 c ------------------- the neutralino branching ratios ---------------- c
 
+c --- PS added: when QCD corrections are <-100%, get 2-body BFs at tree-level
+      do i=1,4,1
+         if(.not.qcdcorrneok(i)) then
+           brneutst1(i)    = neutst1(i)/neuttot2lo(i)
+           brneutst2(i)    = neutst2(i)/neuttot2lo(i)
+           brneutsb1(i)    = neutsb1(i)/neuttot2lo(i)
+           brneutsb2(i)    = neutsb2(i)/neuttot2lo(i)
+           brneutsupl(i)   = neutsupl(i)/neuttot2lo(i)
+           brneutsupr(i)   = neutsupr(i)/neuttot2lo(i)
+           brneutsdownl(i) = neutsdownl(i)/neuttot2lo(i)
+           brneutsdownr(i) = neutsdownr(i)/neuttot2lo(i)
+           brneutsnel(i)   = neutsnel(i)/neuttot2lo(i)
+           brneutsn1(i)    = neutsn1(i)/neuttot2lo(i)
+           brneutsn2(i)    = neutsn2(i)/neuttot2lo(i)
+           brneutsell(i)   = neutsell(i)/neuttot2lo(i)
+           brneutselr(i)   = neutselr(i)/neuttot2lo(i)
+           brneutstau1(i)  = neutstau1(i)/neuttot2lo(i)
+           brneutstau2(i)  = neutstau2(i)/neuttot2lo(i)
+           do j=1,2,1
+              brneutwchar(i,j)  = neutwchar(i,j)/neuttot2lo(i)
+              brneuthcchar(i,j) = neuthcchar(i,j)/neuttot2lo(i)
+           end do
+           do j=1,4,1
+              brneutzneut(i,j)  = neutzneut(i,j)/neuttot2lo(i)
+              brneuthlneut(i,j) = neuthlneut(i,j)/neuttot2lo(i)
+              brneuthhneut(i,j) = neuthhneut(i,j)/neuttot2lo(i)
+              brneuthaneut(i,j) = neuthaneut(i,j)/neuttot2lo(i)
+           end do
+         endif
+      end do
+
+      if(flagnlspgmsb.eq.1.D0) then
+         do i=1,4,1
+           if(.not.qcdcorrneok(i)) then
+              brneutgamgrav(i) = neutgammagravitino(i)/neuttot(i)
+              brneutzgrav(i)   = neutZgravitino(i)/neuttot(i)
+              brneuthlgrav(i)  = neuthlgravitino(i)/neuttot(i)
+              brneuthhgrav(i)  = neuthhgravitino(i)/neuttot(i)
+              brneuthagrav(i)  = neuthagravitino(i)/neuttot(i)
+           endif
+         end do
+      endif
+
+
 c -- for the 2-body decays --
 
       if(flagqcd.eq.1.D0) then
@@ -1160,40 +1648,44 @@ c -- for the 2-body decays --
       endif
 
       do i=1,4,1
-         brneutst1(i)    = neutst1(i)/neuttot(i)
-         brneutst2(i)    = neutst2(i)/neuttot(i)
-         brneutsb1(i)    = neutsb1(i)/neuttot(i)
-         brneutsb2(i)    = neutsb2(i)/neuttot(i)
-         brneutsupl(i)   = neutsupl(i)/neuttot(i)
-         brneutsupr(i)   = neutsupr(i)/neuttot(i)
-         brneutsdownl(i) = neutsdownl(i)/neuttot(i)
-         brneutsdownr(i) = neutsdownr(i)/neuttot(i)
-         brneutsnel(i)   = neutsnel(i)/neuttot(i)
-         brneutsn1(i)    = neutsn1(i)/neuttot(i)
-         brneutsn2(i)    = neutsn2(i)/neuttot(i)
-         brneutsell(i)   = neutsell(i)/neuttot(i)
-         brneutselr(i)   = neutselr(i)/neuttot(i)
-         brneutstau1(i)  = neutstau1(i)/neuttot(i)
-         brneutstau2(i)  = neutstau2(i)/neuttot(i)
-         do j=1,2,1
-            brneutwchar(i,j)  = neutwchar(i,j)/neuttot(i)
-            brneuthcchar(i,j) = neuthcchar(i,j)/neuttot(i)
-         end do
-         do j=1,4,1
-            brneutzneut(i,j)  = neutzneut(i,j)/neuttot(i)
-            brneuthlneut(i,j) = neuthlneut(i,j)/neuttot(i)
-            brneuthhneut(i,j) = neuthhneut(i,j)/neuttot(i)
-            brneuthaneut(i,j) = neuthaneut(i,j)/neuttot(i)
-         end do
+         if(qcdcorrneok(i)) then                                     !Added by GAMBIT
+           brneutst1(i)    = neutst1(i)/neuttot(i)
+           brneutst2(i)    = neutst2(i)/neuttot(i)
+           brneutsb1(i)    = neutsb1(i)/neuttot(i)
+           brneutsb2(i)    = neutsb2(i)/neuttot(i)
+           brneutsupl(i)   = neutsupl(i)/neuttot(i)
+           brneutsupr(i)   = neutsupr(i)/neuttot(i)
+           brneutsdownl(i) = neutsdownl(i)/neuttot(i)
+           brneutsdownr(i) = neutsdownr(i)/neuttot(i)
+           brneutsnel(i)   = neutsnel(i)/neuttot(i)
+           brneutsn1(i)    = neutsn1(i)/neuttot(i)
+           brneutsn2(i)    = neutsn2(i)/neuttot(i)
+           brneutsell(i)   = neutsell(i)/neuttot(i)
+           brneutselr(i)   = neutselr(i)/neuttot(i)
+           brneutstau1(i)  = neutstau1(i)/neuttot(i)
+           brneutstau2(i)  = neutstau2(i)/neuttot(i)
+           do j=1,2,1
+              brneutwchar(i,j)  = neutwchar(i,j)/neuttot(i)
+              brneuthcchar(i,j) = neuthcchar(i,j)/neuttot(i)
+           end do
+           do j=1,4,1
+              brneutzneut(i,j)  = neutzneut(i,j)/neuttot(i)
+              brneuthlneut(i,j) = neuthlneut(i,j)/neuttot(i)
+              brneuthhneut(i,j) = neuthhneut(i,j)/neuttot(i)
+              brneuthaneut(i,j) = neuthaneut(i,j)/neuttot(i)
+           end do
+         endif                                                       !Added by GAMBIT
       end do
 
       if(flagnlspgmsb.eq.1.D0) then
          do i=1,4,1
-            brneutgamgrav(i) = neutgammagravitino(i)/neuttot(i)
-            brneutzgrav(i)   = neutZgravitino(i)/neuttot(i)
-            brneuthlgrav(i)  = neuthlgravitino(i)/neuttot(i)
-            brneuthhgrav(i)  = neuthhgravitino(i)/neuttot(i)
-            brneuthagrav(i)  = neuthagravitino(i)/neuttot(i)
+            if(qcdcorrneok(i)) then                                  !Added by GAMBIT
+              brneutgamgrav(i) = neutgammagravitino(i)/neuttot(i)
+              brneutzgrav(i)   = neutZgravitino(i)/neuttot(i)
+              brneuthlgrav(i)  = neuthlgravitino(i)/neuttot(i)
+              brneuthhgrav(i)  = neuthhgravitino(i)/neuttot(i)
+              brneuthagrav(i)  = neuthagravitino(i)/neuttot(i)
+            endif                                                    !Added by GAMBIT
          end do
       endif
 
@@ -1235,7 +1727,7 @@ c -- for the 3-body and loop decays --
       do i=1,4,1
          if(neuttot2(i).eq.0.D0.and.flagloop.eq.1.D0) then
             do j=1,4,1
-               brnraddec(i,j)   = nraddec(i,j)/neuttot(i) 
+               brnraddec(i,j)   = nraddec(i,j)/neuttot(i)
             end do
          endif
       end do
@@ -1253,7 +1745,7 @@ c -- initialization --
       gluitot2nlo = 0.D0
       gluitotmulti= 0.D0
       gluitotrad  = 0.D0
- 
+
       gst1    = 0.D0
       gst2    = 0.D0
       gsb1    = 0.D0
@@ -1307,6 +1799,11 @@ c -- the 2-body decays and 2-body total
      .                   +2.D0*qcdgsupr+2.D0*qcdgsdownl+2.D0*qcdgsdownr)
      .            + gluitot2lo
 
+c --- PS added: when QCD corrections are <-100%, use as 1/(1-correction) instead of 1+correction
+      qcdcorrglok = gluitot2nlo .ge. 0.D0
+      if (.not.qcdcorrglok) gluitot2nlo =
+     . gluitot2lo / (2.D0 - gluitot2nlo / gluitot2lo)
+
       if(flagqcd.eq.0.D0) then
          gluitot2 = gluitot2lo
       elseif(flagqcd.eq.1.D0) then
@@ -1320,7 +1817,7 @@ c -- the 3-body decays and 3-body total
       if(gluitot2.eq.0.D0.and.flagmulti.eq.1.D0) then
          call SD_xinteggo(xintegoup,xintegodn,xintegotp,xintegobt,
      .                    xintegoud,xintegotb,xinteghcst1b,xintegwst1b,
-     .                    xintegocc) 
+     .                    xintegocc)
       endif
 
       if(gluitot2.eq.0.D0.and.flagmulti.eq.1.D0) then
@@ -1338,7 +1835,7 @@ c -- the 3-body decays and 3-body total
 
 c -------------------------------------------------------------------- c
 
-c -- the loop decays gluino -> neutralino_i + gluon and 
+c -- the loop decays gluino -> neutralino_i + gluon and
 c -- the loop total width --
 
       if(gluitot2.eq.0.D0.and.flagloop.eq.1.D0) then
@@ -1380,6 +1877,18 @@ c ------------------------ the total wid
 
 c -------------------- the gluino branching ratios ------------------- c
 
+c --- PS added: when QCD corrections are <-100%, get 2-body BFs at tree-level
+      if(.not.qcdcorrglok) then
+        brgst1    = gst1/gluitot2lo
+        brgst2    = gst2/gluitot2lo
+        brgsb1    = gsb1/gluitot2lo
+        brgsb2    = gsb2/gluitot2lo
+        brgsupl   = gsupl/gluitot2lo
+        brgsupr   = gsupr/gluitot2lo
+        brgsdownl = gsdownl/gluitot2lo
+        brgsdownr = gsdownr/gluitot2lo
+      endif
+
 c -- for the 2-body decays --
 
       if(flagqcd.eq.1.D0) then
@@ -1393,14 +1902,14 @@ c -- for the 2-body decays --
          gsdownr = gsdownr+qcdgsdownr
       endif
 
-      brgst1    = gst1/gluitot
-      brgst2    = gst2/gluitot
-      brgsb1    = gsb1/gluitot
-      brgsb2    = gsb2/gluitot
-      brgsupl   = gsupl/gluitot
-      brgsupr   = gsupr/gluitot
-      brgsdownl = gsdownl/gluitot
-      brgsdownr = gsdownr/gluitot
+      if (qcdcorrglok) brgst1    = gst1/gluitot      !Modified by GAMBIT
+      if (qcdcorrglok) brgst2    = gst2/gluitot      !Modified by GAMBIT
+      if (qcdcorrglok) brgsb1    = gsb1/gluitot      !Modified by GAMBIT
+      if (qcdcorrglok) brgsb2    = gsb2/gluitot      !Modified by GAMBIT
+      if (qcdcorrglok) brgsupl   = gsupl/gluitot     !Modified by GAMBIT
+      if (qcdcorrglok) brgsupr   = gsupr/gluitot     !Modified by GAMBIT
+      if (qcdcorrglok) brgsdownl = gsdownl/gluitot   !Modified by GAMBIT
+      if (qcdcorrglok) brgsdownr = gsdownr/gluitot   !Modified by GAMBIT
 
       if(flagnlspgmsb.eq.1.D0) then
          brggravgl = ggravgl/gluitot
@@ -1424,7 +1933,7 @@ c -- for the 3-body and loop decays --
          end do
          brhcst1b = xinteghcst1b/gluitot
          brwst1b  = xintegwst1b/gluitot
-      endif     
+      endif
 
       if(gluitot2.eq.0.D0.and.flagloop.eq.1.D0) then
          do i=1,4,1
@@ -1465,7 +1974,7 @@ c -- initialization --
       qcdsuprglui = 0.D0
 
 c ------------------------------------------------------------------- c
- 
+
       call SD_sup2bod(suplneutup,suprneutup,suplchardow,suprchardow,
      .                suplglui,suprglui,qcdsuplneutup,qcdsuprneutup,
      .                qcdsuplchardow,qcdsuprchardow,qcdsuplglui,
@@ -1487,6 +1996,14 @@ c --------------------------------------
      .            + qcdsuprneutup(3)+qcdsuprneutup(4)+qcdsuprchardow(1)
      .            + qcdsuprchardow(2)+qcdsuprglui
 
+c --- PS added: when QCD corrections are <-100%, use as 1/(1-correction) instead of 1+correction
+      qcdcorrsulok = supltot2nlo .ge. 0.D0
+      qcdcorrsurok = suprtot2nlo .ge. 0.D0
+      if (.not.qcdcorrsulok) supltot2nlo =
+     . supltot2lo / (2.D0 - supltot2nlo / supltot2lo)
+      if (.not.qcdcorrsurok) suprtot2nlo =
+     . suprtot2lo / (2.D0 - suprtot2nlo / suprtot2lo)
+
       if(flagqcd.eq.0.D0) then
          supltot2 = supltot2lo
          suprtot2 = suprtot2lo
@@ -1495,6 +2012,29 @@ c --------------------------------------
          suprtot2 = suprtot2nlo
       endif
 
+c --- PS added: when QCD corrections are <-100%, get 2-body BFs at tree-level
+      if(.not.qcdcorrsulok) then
+        do i=1,4,1
+           brsuplnup(i) = suplneutup(i)/supltot2lo
+        end do
+        do i=1,2,1
+           brsuplcdow(i) = suplchardow(i)/supltot2lo
+        end do
+        brsuplglui = suplglui/supltot2lo
+      endif
+
+c --- PS added: when QCD corrections are <-100%, get 2-body BFs at tree-level
+      if(.not.qcdcorrsurok) then
+        do i=1,4,1
+           brsuprnup(i) = suprneutup(i)/suprtot2lo
+        end do
+        do i=1,2,1
+           brsuprcdow(i) = suprchardow(i)/suprtot2lo
+        end do
+        brsuprglui = suprglui/suprtot2lo
+      endif
+
+
       if(flagqcd.eq.1.D0) then
          do i=1,4,1
             suplneutup(i) = suplneutup(i)+qcdsuplneutup(i)
@@ -1509,16 +2049,16 @@ c --------------------------------------
       endif
 
       do i=1,4,1
-         brsuplnup(i) = suplneutup(i)/supltot2
-         brsuprnup(i) = suprneutup(i)/suprtot2
+         if(qcdcorrsulok) brsuplnup(i) = suplneutup(i)/supltot2      !Modified by GAMBIT
+         if(qcdcorrsurok) brsuprnup(i) = suprneutup(i)/suprtot2      !Modified by GAMBIT
       end do
       do i=1,2,1
-         brsuplcdow(i) = suplchardow(i)/supltot2
-         brsuprcdow(i) = suprchardow(i)/suprtot2
+         if(qcdcorrsulok) brsuplcdow(i) = suplchardow(i)/supltot2    !Modified by GAMBIT
+         if(qcdcorrsurok) brsuprcdow(i) = suprchardow(i)/suprtot2    !Modified by GAMBIT
       end do
-      brsuplglui = suplglui/supltot2
-      brsuprglui = suprglui/suprtot2
-    
+      if(qcdcorrsulok) brsuplglui = suplglui/supltot2                !Modified by GAMBIT
+      if(qcdcorrsurok) brsuprglui = suprglui/suprtot2                !Modified by GAMBIT
+
 c -------------------------------------------------------------------- c
 c                         sdown 2-body decays                          c
 c -------------------------------------------------------------------- c
@@ -1561,7 +2101,7 @@ c --------------------------------------
       sdowltot2lo = sdowlneutdow(1)+sdowlneutdow(2)+sdowlneutdow(3)+
      .              sdowlneutdow(4)+sdowlcharup(1)+sdowlcharup(2)+
      .              sdowlglui
- 
+
       sdowrtot2lo = sdowrneutdow(1)+sdowrneutdow(2)+sdowrneutdow(3)+
      .              sdowrneutdow(4)+sdowrcharup(1)+sdowrcharup(2)+
      .              sdowrglui
@@ -1570,12 +2110,20 @@ c --------------------------------------
      .               qcdsdowlneutdow(2)+qcdsdowlneutdow(3)+
      .               qcdsdowlneutdow(4)+qcdsdowlcharup(1)+
      .               qcdsdowlcharup(2)+qcdsdowlglui
- 
+
       sdowrtot2nlo = sdowrtot2lo + qcdsdowrneutdow(1)+
      .               qcdsdowrneutdow(2)+qcdsdowrneutdow(3)+
      .               qcdsdowrneutdow(4)+qcdsdowrcharup(1)+
      .               qcdsdowrcharup(2)+qcdsdowrglui
 
+c --- PS added: when QCD corrections are <-100%, use as 1/(1-correction) instead of 1+correction
+      qcdcorrsdlok = sdowltot2nlo .ge. 0.D0
+      qcdcorrsdrok = sdowrtot2nlo .ge. 0.D0
+      if (.not.qcdcorrsdlok) sdowltot2nlo =
+     . sdowltot2lo / (2.D0 - sdowltot2nlo / sdowltot2lo)
+      if (.not.qcdcorrsdrok) sdowrtot2nlo =
+     . sdowrtot2lo / (2.D0 - sdowrtot2nlo / sdowrtot2lo)
+
       if(flagqcd.eq.0.D0) then
          sdowltot2 = sdowltot2lo
          sdowrtot2 = sdowrtot2lo
@@ -1584,6 +2132,28 @@ c --------------------------------------
          sdowrtot2 = sdowrtot2nlo
       endif
 
+c --- PS added: when QCD corrections are <-100%, get 2-body BFs at tree-level
+      if(.not.qcdcorrsdlok) then
+        do i=1,4,1
+           brsdowlndow(i) = sdowlneutdow(i)/sdowltot2lo
+        end do
+        do i=1,2,1
+           brsdowlchup(i) = sdowlcharup(i)/sdowltot2lo
+        end do
+        brsdowlglui = sdowlglui/sdowltot2lo
+      endif
+
+c --- PS added: when QCD corrections are <-100%, get 2-body BFs at tree-level
+      if(.not.qcdcorrsdrok) then
+        do i=1,4,1
+           brsdowrndow(i) = sdowrneutdow(i)/sdowrtot2lo
+        end do
+        do i=1,2,1
+           brsdowrchup(i) = sdowrcharup(i)/sdowrtot2lo
+        end do
+        brsdowrglui = sdowrglui/sdowrtot2lo
+      endif
+
       if(flagqcd.eq.1.D0) then
          do i=1,4,1
             sdowlneutdow(i) = sdowlneutdow(i)+qcdsdowlneutdow(i)
@@ -1598,15 +2168,15 @@ c --------------------------------------
       endif
 
       do i=1,4,1
-         brsdowlndow(i) = sdowlneutdow(i)/sdowltot2
-         brsdowrndow(i) = sdowrneutdow(i)/sdowrtot2
+         if(qcdcorrsdlok) brsdowlndow(i) = sdowlneutdow(i)/sdowltot2 !Modified by GAMBIT
+         if(qcdcorrsdrok) brsdowrndow(i) = sdowrneutdow(i)/sdowrtot2 !Modified by GAMBIT
       end do
       do i=1,2,1
-         brsdowlchup(i) = sdowlcharup(i)/sdowltot2
-         brsdowrchup(i) = sdowrcharup(i)/sdowrtot2
+         if(qcdcorrsdlok) brsdowlchup(i) = sdowlcharup(i)/sdowltot2  !Modified by GAMBIT
+         if(qcdcorrsdrok) brsdowrchup(i) = sdowrcharup(i)/sdowrtot2  !Modified by GAMBIT
       end do
-      brsdowlglui = sdowlglui/sdowltot2
-      brsdowrglui = sdowrglui/sdowrtot2
+      if(qcdcorrsdlok) brsdowlglui = sdowlglui/sdowltot2             !Modified by GAMBIT
+      if(qcdcorrsdrok) brsdowrglui = sdowrglui/sdowrtot2             !Modified by GAMBIT
 
 c -------------------------------------------------------------------- c
 c                 stop1 and stop2 2- and 3-body decays                 c
@@ -1714,6 +2284,14 @@ c -- the 2-body decays and 2-body total
      .            qcdst2hl+qcdst2hh+qcdst2ha+qcdst2ztop+qcdst2wsb(1)+
      .            qcdst2wsb(2)
 
+c --- PS added: when QCD corrections are <-100%, use as 1/(1-correction) instead of 1+correction
+      do i = 1,2,1
+         qcdcorrstok(i) = stoptot2nlo(i) .ge. 0.D0
+         if (.not.qcdcorrstok(i)) stoptot2nlo(i) =
+     .    stoptot2lo(i) / (2.D0 - stoptot2nlo(i) / stoptot2lo(i))
+      enddo
+
+
       if(flagqcd.eq.0.D0) then
          do i=1,2,1
             stoptot2(i) = stoptot2lo(i)
@@ -1733,7 +2311,7 @@ c -- the 3-body decays and 3-body total
      .     xintegstbbsbt,xintegsttausbnu,xintegstelsbnu,
      .     xintegstupsbdow,xintegst2st1tt,xintegst2st1bb,
      .     xintegst2st1uu,xintegst2st1dd,xintegst2st1ee,
-     .     xintegst2st1nunu,xintegst2st1tautau,xintegst2st1startt)  
+     .     xintegst2st1nunu,xintegst2st1tautau,xintegst2st1startt)
 
 
       do i=1,2,1
@@ -1779,11 +2357,11 @@ c -- the loop decays and the total width
 
 c -------------------------------------------------------------------- c
 
-c -- the stop1 4-body decays                        
+c -- the stop1 4-body decays
 
       if(flagmulti.eq.1.D0.and.stoptot2(1).eq.0.D0.and.
      .stoptotmulti(1).eq.0.D0) then
-      
+
          call SD_rstart(12,34,56,78)
 
          call SD_st4bod(ast1,sigmato,sigmasn,sigmaw,sigmah,ainter,
@@ -1818,7 +2396,8 @@ c ------------------------ the total wid
             if(stoptotmulti(1).ne.0.D0) then
                stoptot(1) = stoptotmulti(1)+stoptotrad(1)
             else
-               stoptot(1) = sigma4bodtot+stoptotrad(1)
+               stoptot(1) = stoptotrad(1)
+               if (sigma4bodtot.gt.0.D0) stoptot(1) = stoptot(1) + sigma4bodtot
             endif
          else
             stoptot(1) = stoptot2(1)
@@ -1837,6 +2416,39 @@ c ------------------------ the total wid
 
 c ---------------------- the stop branching ratios ------------------- c
 
+c --- PS added: when QCD corrections are <-100%, get 2-body BFs at tree-level
+      if(.not.qcdcorrstok(1)) then
+
+        do i=1,4,1
+           brst1neutt(i) = st1neutt(i)/stoptot2lo(1)
+        end do
+        do i=1,2,1
+           brst1charb(i) = st1charb(i)/stoptot2lo(1)
+           brst1hcsb(i)  = st1hcsb(i)/stoptot2lo(1)
+           brst1wsb(i)   = st1wsb(i)/stoptot2lo(1)
+        end do
+        brst1glui = st1glui/stoptot2lo(1)
+
+      endif
+
+      if(.not.qcdcorrstok(2)) then
+
+        do i=1,4,1
+           brst2neutt(i) = st2neutt(i)/stoptot2lo(2)
+        end do
+        do i=1,2,1
+           brst2charb(i) = st2charb(i)/stoptot2lo(2)
+           brst2hcsb(i)  = st2hcsb(i)/stoptot2lo(2)
+           brst2wsb(i)   = st2wsb(i)/stoptot2lo(2)
+        end do
+        brst2glui = st2glui/stoptot2lo(2)
+        brst2hl   = st2hl/stoptot2lo(2)
+        brst2hh   = st2hh/stoptot2lo(2)
+        brst2ha   = st2ha/stoptot2lo(2)
+        brst2ztop = st2ztop/stoptot2lo(2)
+
+      endif
+
 c -- for the 2-body decays --
 
       if(flagqcd.eq.1.D0) then
@@ -1861,23 +2473,23 @@ c -- for the 2-body decays --
       endif
 
       do i=1,4,1
-         brst1neutt(i) = st1neutt(i)/stoptot(1)
-         brst2neutt(i) = st2neutt(i)/stoptot(2)
+         if(qcdcorrstok(1)) brst1neutt(i) = st1neutt(i)/stoptot(1)   !Modified by GAMBIT
+         if(qcdcorrstok(2)) brst2neutt(i) = st2neutt(i)/stoptot(2)   !Modified by GAMBIT
       end do
       do i=1,2,1
-         brst1charb(i) = st1charb(i)/stoptot(1)
-         brst1hcsb(i)  = st1hcsb(i)/stoptot(1)
-         brst1wsb(i)   = st1wsb(i)/stoptot(1)
-         brst2charb(i) = st2charb(i)/stoptot(2)
-         brst2hcsb(i)  = st2hcsb(i)/stoptot(2)
-         brst2wsb(i)   = st2wsb(i)/stoptot(2)
-      end do
-      brst1glui = st1glui/stoptot(1)
-      brst2glui = st2glui/stoptot(2)
-      brst2hl   = st2hl/stoptot(2)
-      brst2hh   = st2hh/stoptot(2)
-      brst2ha   = st2ha/stoptot(2)
-      brst2ztop = st2ztop/stoptot(2)
+         if(qcdcorrstok(1)) brst1charb(i) = st1charb(i)/stoptot(1)   !Modified by GAMBIT
+         if(qcdcorrstok(1)) brst1hcsb(i)  = st1hcsb(i)/stoptot(1)    !Modified by GAMBIT
+         if(qcdcorrstok(1)) brst1wsb(i)   = st1wsb(i)/stoptot(1)     !Modified by GAMBIT
+         if(qcdcorrstok(2)) brst2charb(i) = st2charb(i)/stoptot(2)   !Modified by GAMBIT
+         if(qcdcorrstok(2)) brst2hcsb(i)  = st2hcsb(i)/stoptot(2)    !Modified by GAMBIT
+         if(qcdcorrstok(2)) brst2wsb(i)   = st2wsb(i)/stoptot(2)     !Modified by GAMBIT
+      end do
+      if(qcdcorrstok(1)) brst1glui = st1glui/stoptot(1)              !Modified by GAMBIT
+      if(qcdcorrstok(2)) brst2glui = st2glui/stoptot(2)              !Modified by GAMBIT
+      if(qcdcorrstok(2)) brst2hl   = st2hl/stoptot(2)                !Modified by GAMBIT
+      if(qcdcorrstok(2)) brst2hh   = st2hh/stoptot(2)                !Modified by GAMBIT
+      if(qcdcorrstok(2)) brst2ha   = st2ha/stoptot(2)                !Modified by GAMBIT
+      if(qcdcorrstok(2)) brst2ztop = st2ztop/stoptot(2)              !Modified by GAMBIT
 
 c -- for the 3-body and loop decays --
 
@@ -1900,7 +2512,7 @@ c -- for the 3-body and loop decays --
             brstsnel(i)    = xintegstsnel(i)/stoptot(i)
          endif
       end do
- 
+
 
 
       if(stoptot2(2).eq.0.D0.and.flagmulti.eq.1.D0) then
@@ -2043,6 +2655,14 @@ c -- the 2-body decays and 2-body total
      .               qcdsb2hcst(2)+qcdsb2hl+qcdsb2hh+qcdsb2ha +
      .               qcdsb2zbot+qcdsb2wst(1)+qcdsb2wst(2)
 
+c --- PS added: when QCD corrections are <-100%, use as 1/(1-correction) instead of 1+correction
+      do i = 1,2,1
+         qcdcorrsbok(i) = sbottot2nlo(i) .ge. 0.D0
+         if (.not.qcdcorrsbok(i)) sbottot2nlo(i) =
+     .    sbottot2lo(i) / (2.D0 - sbottot2nlo(i) / sbottot2lo(2))
+      enddo
+
+
       if(flagqcd.eq.0.D0) then
          do i=1,2,1
             sbottot2(i) = sbottot2lo(i)
@@ -2084,7 +2704,7 @@ c -- the 3-body decays and the 3-body to
             endif
          endif
       enddo
-      
+
 c ------------------------ the total widths -------------------------- c
 
       do i=1,2,1
@@ -2101,6 +2721,39 @@ c ------------------------ the total wid
 
 c --------------------- the sbottom branching ratios ----------------- c
 
+c --- PS added: when QCD corrections are <-100%, get 2-body BFs at tree-level
+      if(.not.qcdcorrsbok(1)) then
+
+        do i=1,4,1
+           brsb1neutt(i) = sb1neutt(i)/sbottot2lo(1)
+        end do
+        do i=1,2,1
+           brsb1chart(i) = sb1chart(i)/sbottot2lo(1)
+           brsb1hcst(i)  = sb1hcst(i)/sbottot2lo(1)
+           brsb1wst(i)   = sb1wst(i)/sbottot2lo(1)
+        end do
+        brsb1glui = sb1glui/sbottot2lo(1)
+
+      endif
+
+      if(.not.qcdcorrsbok(2)) then
+
+        do i=1,4,1
+           brsb2neutt(i) = sb2neutt(i)/sbottot2lo(2)
+        end do
+        do i=1,2,1
+           brsb2chart(i) = sb2chart(i)/sbottot2lo(2)
+           brsb2hcst(i)  = sb2hcst(i)/sbottot2lo(2)
+           brsb2wst(i)   = sb2wst(i)/sbottot2lo(2)
+        end do
+        brsb2glui = sb2glui/sbottot2lo(2)
+        brsb2hl   = sb2hl/sbottot2lo(2)
+        brsb2hh   = sb2hh/sbottot2lo(2)
+        brsb2ha   = sb2ha/sbottot2lo(2)
+        brsb2zbot = sb2zbot/sbottot2lo(2)
+
+      endif
+
 c -- for the 2-body decays --
 
       if(flagqcd.eq.1.D0) then
@@ -2125,23 +2778,23 @@ c -- for the 2-body decays --
       endif
 
       do i=1,4,1
-         brsb1neutt(i)=sb1neutt(i)/sbottot2(1)
-         brsb2neutt(i)=sb2neutt(i)/sbottot2(2)
+         if(qcdcorrsbok(1)) brsb1neutt(i)=sb1neutt(i)/sbottot2(1)    !Modified by GAMBIT
+         if(qcdcorrsbok(2)) brsb2neutt(i)=sb2neutt(i)/sbottot2(2)    !Modified by GAMBIT
       end do
       do i=1,2,1
-         brsb1chart(i) = sb1chart(i)/sbottot2(1)
-         brsb2chart(i) = sb2chart(i)/sbottot2(2)
-         brsb1hcst(i)  = sb1hcst(i)/sbottot2(1)
-         brsb2hcst(i)  = sb2hcst(i)/sbottot2(2)
-         brsb1wst(i)   = sb1wst(i)/sbottot2(1)
-         brsb2wst(i)   = sb2wst(i)/sbottot2(2)
-      end do
-      brsb1glui = sb1glui/sbottot2(1)
-      brsb2glui = sb2glui/sbottot2(2)
-      brsb2hl   = sb2hl/sbottot2(2)
-      brsb2hh   = sb2hh/sbottot2(2)
-      brsb2ha   = sb2ha/sbottot2(2)
-      brsb2zbot = sb2zbot/sbottot2(2)
+         if(qcdcorrsbok(1)) brsb1chart(i) = sb1chart(i)/sbottot2(1)  !Modified by GAMBIT
+         if(qcdcorrsbok(2)) brsb2chart(i) = sb2chart(i)/sbottot2(2)  !Modified by GAMBIT
+         if(qcdcorrsbok(1)) brsb1hcst(i)  = sb1hcst(i)/sbottot2(1)   !Modified by GAMBIT
+         if(qcdcorrsbok(2)) brsb2hcst(i)  = sb2hcst(i)/sbottot2(2)   !Modified by GAMBIT
+         if(qcdcorrsbok(1)) brsb1wst(i)   = sb1wst(i)/sbottot2(1)    !Modified by GAMBIT
+         if(qcdcorrsbok(2)) brsb2wst(i)   = sb2wst(i)/sbottot2(2)    !Modified by GAMBIT
+      end do
+      if(qcdcorrsbok(1)) brsb1glui = sb1glui/sbottot2(1)             !Modified by GAMBIT
+      if(qcdcorrsbok(2)) brsb2glui = sb2glui/sbottot2(2)             !Modified by GAMBIT
+      if(qcdcorrsbok(2)) brsb2hl   = sb2hl/sbottot2(2)               !Modified by GAMBIT
+      if(qcdcorrsbok(2)) brsb2hh   = sb2hh/sbottot2(2)               !Modified by GAMBIT
+      if(qcdcorrsbok(2)) brsb2ha   = sb2ha/sbottot2(2)               !Modified by GAMBIT
+      if(qcdcorrsbok(2)) brsb2zbot = sb2zbot/sbottot2(2)             !Modified by GAMBIT
 
 c -- for the 3-body decays --
 
@@ -2245,7 +2898,7 @@ c --------------------------------------
 
 c -- initialization --
 
-      stau1tot2 = 0.D0 
+      stau1tot2 = 0.D0
       stau2tot2 = 0.D0
 
       do j=1,4,1
@@ -2263,7 +2916,7 @@ c -- initialization --
          stau2wsn(i)  = 0.D0
       end do
 
-      stau2hl   = 0.D0 
+      stau2hl   = 0.D0
       stau2hh   = 0.D0
       stau2ha   = 0.D0
       stau2ztau = 0.D0
@@ -2351,7 +3004,7 @@ c --------------------------------------
 c -- initialization --
 
       toptot2 = 0.D0
-      
+
       topbw = 0.D0
       topbh = 0.D0
 
@@ -2365,14 +3018,14 @@ c --------------------------------------
 
       if(flagsusytop.eq.1.D0) then
          call SD_top2bod(topbw,topbh,topneutrstop)
-         
+
          toptot2 = topbw+topbh
          do i=1,4,1
             do j=1,2,1
                toptot2 = toptot2 + topneutrstop(i,j)
             end do
          end do
-         
+
          brtopbw        = topbw/toptot2
          brtopbh        = topbh/toptot2
          do i=1,4,1
@@ -2389,9 +3042,9 @@ c-- --- ramona changed 27/5/13
 c---- ramona changed 2/2/15
       if(amsupq(1)-amneut(1).gt.samt)then
       call SD_FVstop2bod(st1neuttopFV)
- 
 
-      call SD_lightstop3bod(width_lightstoptot3bod,width_bchiW, 
+
+      call SD_lightstop3bod(width_lightstoptot3bod,width_bchiW,
      .                            width_jchiw)
 
 c---- ramona changed 20/2/15
@@ -2414,7 +3067,7 @@ c---- ramona changed 20/2/15
 
       brlightstneuttop=width_lightstoptot3bod/totlightstop
 
-      
+
       else
 
       totlightstop=st1neuttopFV+stopcneut+stopuneut
@@ -2422,11 +3075,11 @@ c---- ramona changed 20/2/15
       brlightstopcneut=stopcneut/totlightstop
       brlightstopuneut=stopuneut/totlightstop
       brlightstneuttop=st1neuttopFV/totlightstop
-   
+
 
       Print*, "STOP DECAY TO TOP NEUTRALINO IN THE FV SUSY-HIT VERSION
      .AT THE MOMENT ONLY AT TREE LEVEL AVAILABLE"
- 
+
       endif
 
       else
@@ -2450,7 +3103,7 @@ c----- ramona changed 25/11/14
 
       if(iflag4bod3bod.eq.1)then
       if(amsupq(1)-amneut(1)-sdmw-samb.gt.flagdiff3bod4bod)then
-      call SD_lightstop3bod(width_lightstoptot3bod,width_bchiW, 
+      call SD_lightstop3bod(width_lightstoptot3bod,width_bchiW,
      .                            width_jchiw)
 
 
@@ -2470,20 +3123,20 @@ c----- ramona changed 25/11/14
      .                  +width4bodjetmu+width4bodjetelec
 
       endif
-      
+
       elseif(iflag4bod3bod.eq.0)then
-      
+
             call SD_lightstop4bod(sigma,width4bodbtau,width4bodbbjet,
      .width4bodbjets,width4bodbmu,width4bodbelec,width4bodjettau,
      .width4bodjetb,width4bodjetjet,width4bodjetmu,width4bodjetelec)
-      
+
       decwidth3bod_bchiW=width4bodbtau+width4bodbbjet+width4bodbjets
      .                  +width4bodbmu+width4bodbelec
       decwidth3bod_jchiW=width4bodjettau+width4bodjetb+width4bodjetjet
      .                  +width4bodjetmu+width4bodjetelec
 
-      elseif(iflag4bod3bod.eq.2)then 
-            call SD_lightstop3bod(width_lightstoptot3bod,width_bchiW, 
+      elseif(iflag4bod3bod.eq.2)then
+            call SD_lightstop3bod(width_lightstoptot3bod,width_bchiW,
      .                            width_jchiw)
 
       decwidth3bod_bchiW=width_bchiW
@@ -2500,9 +3153,9 @@ c----- ramona changed 25/11/14
       brlightstopuneut=stopuneut/totlightstop
       brlightstbchiw=decwidth3bod_bchiw/totlightstop
       brlightstjchiw=decwidth3bod_jchiw/totlightstop
-      
+
       else
-c----- end ramona changed 
+c----- end ramona changed
 
       call SD_lightstop4bod(sigma,width4bodbtau,width4bodbbjet,
      .width4bodbjets,width4bodbmu,width4bodbelec,width4bodjettau,
@@ -2513,16 +3166,16 @@ c----- end ramona changed
       brlightstopuneut=stopuneut/totlightstop
       br4bodlightstop=sigma/totlightstop
       br4bodbtau=width4bodbtau/totlightstop
-      br4bodbbjet=width4bodbbjet/totlightstop   
+      br4bodbbjet=width4bodbbjet/totlightstop
       br4bodbjets=width4bodbjets/totlightstop
       br4bodbmu=width4bodbmu/totlightstop
       br4bodbelec=width4bodbelec/totlightstop
-      br4bodjettau=width4bodjettau/totlightstop      
+      br4bodjettau=width4bodjettau/totlightstop
       br4bodjetb=width4bodjetb/totlightstop
       br4bodjetjet=width4bodjetjet/totlightstop
       br4bodjetmu=width4bodjetmu/totlightstop
-      br4bodjetelec=width4bodjetelec/totlightstop 
-      
+      br4bodjetelec=width4bodjetelec/totlightstop
+
       endif
       endif
 c---- end ramona chnaged
@@ -2533,8 +3186,8 @@ c --------------------------------------
 
 
 c---- ramona chnaged 27/5/13--- flavour violation only with SLHA Output so far
-      if((flagoutput.eq.1.D0).or.(ifavvio.eq.1)) then
-!      if(flagoutput.eq.1.D0) then
+c      if((flagoutput.eq.1.D0).or.(ifavvio.eq.1)) then !Commented out by GAMBIT.
+      if(flagoutput.eq.1.D0) then                !Reinstated by GAMBIT.
 c---- end ramona changed
 c ------------------ output a la Les Houches accord ------------------ c
 
@@ -2590,13 +3243,13 @@ c ------------------ output a la Les Hou
       ic1 =1000024
       ic2 =1000037
 
-      intau1=1000016 
-      intau2=2000016 
+      intau1=1000016
+      intau2=2000016
       inel  =1000012
       iner  =2000012
       inmul =1000014
       inmur =2000014
-      
+
       isell =1000011
       iselr =2000011
       ismul =1000013
@@ -2608,7 +3261,7 @@ c ------------------ output a la Les Hou
 
 c maggie comment: This is not a PDG code:
       if1 = 3000001
-      if2 = 4000001 
+      if2 = 4000001
 
       write(nout,105)
       write(nout,50) "                             =====================
@@ -2649,7 +3302,7 @@ c------ ramona changed 20/8/14
      . decays        |'
       write(nout,50)'             |  implemented by R.Groeber, M. Muehll
      .eitner,        |'
-      write(nout,50)'             |  Eva Popenda and Alexander Wlotzka. 
+      write(nout,50)'             |  Eva Popenda and Alexander Wlotzka.
      .               |'
       write(nout,50)'             |  In case of problems with these deca
      .ys email to    |'
@@ -2660,7 +3313,7 @@ c------ ramona changed 20/8/14
       write(nout,50)'             --------------------------------------
      .----------------'
       write(nout,105)
-      
+
       endif
 c---- end ramona changed
 
@@ -2670,40 +3323,40 @@ c---- end ramona changed
      .trum + Decays  |'
       write(nout,50)'             |              based on the decay prog
      .rams           |'
-      write(nout,50)'             |                                     
+      write(nout,50)'             |
      .               |'
       write(nout,50)'             |                     SDECAY 1.5
      .               |'
-      write(nout,50)'             |                                     
+      write(nout,50)'             |
      .               |'
       write(nout,50)'             |  Authors: M.Muhlleitner, A.Djouadi a
      .nd Y.Mambrini  |'
       write(nout,50)'             |  Ref.:    Comput.Phys.Commun.168(200
      .5)46           |'
-      write(nout,50)'             |           [hep-ph/0311167]          
+      write(nout,50)'             |           [hep-ph/0311167]
      .               |'
-      write(nout,50)'             |                                     
+      write(nout,50)'             |
      .               |'
-      write(nout,50)'             |                     HDECAY 3.4      
+      write(nout,50)'             |                     HDECAY 3.4
      .               |'
-      write(nout,50)'             |                                     
+      write(nout,50)'             |
      .               |'
       write(nout,50)'             |  By: A.Djouadi,J.Kalinowski,M.Muhlle
      .itner,M.Spira  |'
       write(nout,50)'             |  Ref.:    Comput.Phys.Commun.108(199
      .8)56           |'
-      write(nout,50)'             |           [hep-ph/9704448]          
+      write(nout,50)'             |           [hep-ph/9704448]
      .               |'
-      write(nout,50)'             |                                     
+      write(nout,50)'             |
      .               |'
-      write(nout,50)'             |                                     
+      write(nout,50)'             |
      .               |'
       write(nout,50)'             |  If not stated otherwise all DRbar c
      .ouplings and   |'
       write(nout,49)'             |  soft SUSY breaking masses are given
      . at the scale  |'
       write(nout,49)'             |  Q=',scaleofewsb
-      write(nout,50)'             |                                     
+      write(nout,50)'             |
      .               |'
       write(nout,50)'             --------------------------------------
      .----------------'
@@ -2712,7 +3365,7 @@ c---- end ramona changed
       if(check(2).ne.1) then
          write(nout,105)
          write(nout,50)'WARNING: The Block SMINPUTS has not been given.'
-         write(nout,50)'At least mb(mb)_MSbar is needed in SDECAY 
+         write(nout,50)'At least mb(mb)_MSbar is needed in SDECAY
      .however.'
       endif
 
@@ -2731,19 +3384,19 @@ c---- end ramona changed
 
       if(check(4).ne.1.and.check(16).ne.1) then
          write(nout,105)
-         write(nout,50)'WARNING: AU has not been given. It is needed in 
+         write(nout,50)'WARNING: AU has not been given. It is needed in
      .SDECAY however.'
       endif
 
       if(check(4).ne.1.and.check(17).ne.1) then
          write(nout,105)
-         write(nout,50)'WARNING: AD has not been given. It is needed in 
+         write(nout,50)'WARNING: AD has not been given. It is needed in
      .SDECAY however.'
       endif
 
       if(check(4).ne.1.and.check(18).ne.1) then
          write(nout,105)
-         write(nout,50)'WARNING: AE has not been given. It is needed in 
+         write(nout,50)'WARNING: AE has not been given. It is needed in
      .SDECAY however.'
       endif
 
@@ -2791,7 +3444,7 @@ c---- end ramona changed
 
       if(check(12).ne.1) then
          write(nout,105)
-         write(nout,50)'WARNING: The Block ALPHA has not been given. It 
+         write(nout,50)'WARNING: The Block ALPHA has not been given. It
      .is needed in SDECAY however.'
       endif
 
@@ -2811,19 +3464,19 @@ c---- end ramona changed
 
       if(check(19).ne.1) then
          write(nout,105)
-         write(nout,50)'WARNING: The Block YU has not been given. It is 
+         write(nout,50)'WARNING: The Block YU has not been given. It is
      .needed in SDECAY however.'
       endif
 
       if(check(20).ne.1) then
          write(nout,105)
-         write(nout,50)'WARNING: The Block YD has not been given. It is 
+         write(nout,50)'WARNING: The Block YD has not been given. It is
      .needed in SDECAY however.'
       endif
 
       if(check(21).ne.1) then
          write(nout,105)
-         write(nout,50)'WARNING: The Block YE has not been given. It is 
+         write(nout,50)'WARNING: The Block YE has not been given. It is
      .needed in SDECAY however.'
       endif
 
@@ -2844,9 +3497,9 @@ c---- end ramona changed
 
       if(warning(2).eq.1.D0) then
          write(nout,105)
-         write(nout,50)'WARNING: For the gauge couplings g1 and g2 the 
+         write(nout,50)'WARNING: For the gauge couplings g1 and g2 the
      .DRbar values at the scale Q are not given.'
-         write(nout,50)'They are calculated instead from alpha_ew_MSbar 
+         write(nout,50)'They are calculated instead from alpha_ew_MSbar
      .at M_Z.'
          write(nout,50)'The decay widths and the QCD corrections cannot
      .be calculated consistently.'
@@ -3001,20 +3654,20 @@ c----- ramona changed 27/05/13
       write(nout,52) isul,amsupq(1),'~u_1'
       write(nout,52) iscl,amsupq(2),'~u_2'
       write(nout,52) ist1,amsupq(3),'~u_3'
-      write(nout,52) isur,amsupq(4),'~u_4'   
+      write(nout,52) isur,amsupq(4),'~u_4'
       write(nout,52) iscr,amsupq(5),'~u_5'
-      write(nout,52) ist2,amsupq(6),'~u_6' 
+      write(nout,52) ist2,amsupq(6),'~u_6'
       write(nout,52) isell,amslepton(1),'~e_1'
       write(nout,52) ismul,amslepton(2),'~e_2'
       write(nout,52) istau1,amslepton(3),'~e_3'
-      write(nout,52) iselr,amslepton(4),'~e_4'          
+      write(nout,52) iselr,amslepton(4),'~e_4'
       write(nout,52) ismur,amslepton(5),'~e_5'
       write(nout,52) istau2,amslepton(6),'~e_6'
       write(nout,52) inel,asne1,'~nu_eL'
-      write(nout,52) inmul,asne1,'~nu_muL'          
+      write(nout,52) inmul,asne1,'~nu_muL'
       write(nout,52) intau1,asntau1,'~nu_tauL'
       endif
-c---- end ramona chnaged 
+c---- end ramona chnaged
       write(nout,52) iglo,mgluino,'~g'
       write(nout,52) in1,xmneut(1),'~chi_10'
       write(nout,52) in2,xmneut(2),'~chi_20'
@@ -3030,7 +3683,7 @@ c---- end ramona chnaged
 c ------------------------------------------------------------------- c
 c The neutralino mixing matrix N and the chargino mixing matrices U,V c
 c ------------------------------------------------------------------- c
-      
+
       if(check(6).eq.1) then
       write(nout,105)
       write(nout,51) 'NMIX','Neutralino Mixing Matrix'
@@ -3143,7 +3796,7 @@ c--- ramona chnaged 27/5/13
       write(nout,53) 4,6,USQMix(4,6),'USQMIX(4,6)'
       write(nout,53) 5,6,USQMix(5,6),'USQMIX(5,6)'
       write(nout,53) 6,6,USQMix(6,6),'USQMIX(6,6)'
-      end if 
+      end if
             if(check(28).eq.1) then
       write(nout,105)
       write(nout,51) 'DSQMIX', 'Mixing Matrix in the sdown-sector'
@@ -3183,9 +3836,9 @@ c--- ramona chnaged 27/5/13
       write(nout,53) 4,6,DSQMix(4,6),'DSQMIX(4,6)'
       write(nout,53) 5,6,DSQMix(5,6),'DSQMIX(5,6)'
       write(nout,53) 6,6,DSQMix(6,6),'DSQMIX(6,6)'
-      end if 
+      end if
       endif
-c----end ramona changed 
+c----end ramona changed
 c ------------------------------------------------------------------- c
 c The angle alpha in the Higgs sector and the Higgs mixing parameters c
 c ------------------------------------------------------------------- c
@@ -3216,7 +3869,7 @@ c ------------------- c
 c The gauge couplings c
 c ------------------- c
 
-      write(nout,105)      
+      write(nout,105)
       write(nout,54) 'GAUGE Q=',scaleofewsb,'The gauge couplings'
       if(gaugeval(1).ne.0.D0) then
          write(nout,55) 1,g1ew,'gprime(Q) DRbar'
@@ -3228,15 +3881,15 @@ c ------------------- c
             write(nout,55) 3,dsqrt(4.D0*pi*alsew),'g3(Q) DRbar'
       elseif(scalechoice.eq.2.D0) then
          if(idrbar.eq.1) then
-            write(nout,56) 3,'g3(Q) DRbar depends on the scale Q = mass 
+            write(nout,56) 3,'g3(Q) DRbar depends on the scale Q = mass
      .of the decaying particle'
          elseif(idrbar.eq.0) then
-            write(nout,56) 3,'g3(Q) MSbar depends on the scale Q = mass 
+            write(nout,56) 3,'g3(Q) MSbar depends on the scale Q = mass
      .of the decaying particle'
          endif
       elseif(scalechoice.eq.3.D0) then
          tmpals = SD_alphascall(scaleofcoupling,inumloop)
-         if(idrbar.eq.1) then 
+         if(idrbar.eq.1) then
             write(nout,57) 3,dsqrt(4.D0*pi*tmpals),
      .           'g3(Q) DRbar, Q=',scaleofcoupling
          elseif(idrbar.eq.0) then
@@ -3317,12 +3970,12 @@ c---- end ramona chnaged
          write(nout,53) 1,1,yuval(1,1),'y_u(Q) DRbar'
          write(nout,53) 2,2,yuval(2,2),'y_c(Q) DRbar'
          write(nout,53) 3,3,yt,'y_t(Q) DRbar'
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          if(idrbar.eq.1) then
-            write(nout,58) 3,3,'y_t DRbar depends on the scale Q = mass 
+            write(nout,58) 3,3,'y_t DRbar depends on the scale Q = mass
      .of the decaying particle'
          elseif(idrbar.eq.0) then
-            write(nout,58) 3,3,'y_t MSbar depends on the scale Q = mass 
+            write(nout,58) 3,3,'y_t MSbar depends on the scale Q = mass
      .of the decaying particle'
          endif
       elseif(scalechoice.eq.3.D0) then
@@ -3334,7 +3987,7 @@ c---- end ramona chnaged
             write(nout,59) 3,3,SD_yuk(1,runmt),'y_t(Q) MSbar/g^2, Q=',
      .                  scaleofcoupling
          endif
-      endif 
+      endif
       endif
 
       if(check(20).eq.1) then
@@ -3344,12 +3997,12 @@ c---- end ramona chnaged
          write(nout,53) 1,1,ydval(1,1),'y_d(Q) DRbar'
          write(nout,53) 2,2,ydval(2,2),'y_s(Q) DRbar'
          write(nout,53) 3,3,yb,'y_b(Q) DRbar'
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          if(idrbar.eq.1) then
-            write(nout,58) 3,3,'y_b DRbar depends on the scale Q = mass 
+            write(nout,58) 3,3,'y_b DRbar depends on the scale Q = mass
      .of the decaying particle'
          elseif(idrbar.eq.0) then
-            write(nout,58) 3,3,'y_b MSbar depends on the scale Q = mass 
+            write(nout,58) 3,3,'y_b MSbar depends on the scale Q = mass
      .of the decaying particle'
          endif
       elseif(scalechoice.eq.3.D0) then
@@ -3361,7 +4014,7 @@ c---- end ramona chnaged
             write(nout,59) 3,3,SD_yuk(2,runmb),'y_b(Q) MSbar/g^2, Q=',
      .                  scaleofcoupling
          endif
-      endif 
+      endif
       endif
 
       if(check(21).eq.1) then
@@ -3371,11 +4024,11 @@ c---- end ramona chnaged
          write(nout,53) 1,1,yeval(1,1),'y_e(Q) DRbar'
          write(nout,53) 2,2,yeval(2,2),'y_mu(Q) DRbar'
          write(nout,53) 3,3,ytau,'y_tau(Q) DRbar'
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          write(nout,53) 3,3,ytau,'y_tau(Q) DRbar'
       elseif(scalechoice.eq.3.D0) then
          write(nout,53) 3,3,ytau,'y_tau(Q) DRbar'
-      endif 
+      endif
       endif
 c---- ramona changed 6/6/13
       endif
@@ -3504,7 +4157,7 @@ c ---------- c
       endif
       else
          write(nout,99)
-         write(nout,100) it,0.000000000E+00,'top decays' 
+         write(nout,100) it,0.000000000E+00,'top decays'
       endif
       endif
 
@@ -3910,26 +4563,26 @@ c ------------ c
      ._2     tau+ nu_tau)'
       endif
       if(brstelsbnu(1,1).ne.0.D0) then
-      write(nout,104) brstelsbnu(1,1),3,isb1,-ie,ine,  'BR(~t_1 -> ~b_1 
+      write(nout,104) brstelsbnu(1,1),3,isb1,-ie,ine,  'BR(~t_1 -> ~b_1
      .    e+   nu_e)'
       endif
       if(brstelsbnu(1,2).ne.0.D0) then
-      write(nout,104) brstelsbnu(1,2),3,isb2,-ie,ine,  'BR(~t_1 -> ~b_2 
+      write(nout,104) brstelsbnu(1,2),3,isb2,-ie,ine,  'BR(~t_1 -> ~b_2
      .    e+   nu_e)'
       endif
       if(brstelsbnu(1,1).ne.0.D0) then
-      write(nout,104) brstelsbnu(1,1),3,isb1,-imu,inmu,'BR(~t_1 -> ~b_1 
+      write(nout,104) brstelsbnu(1,1),3,isb1,-imu,inmu,'BR(~t_1 -> ~b_1
      .    mu+  nu_mu)'
       endif
       if(brstelsbnu(1,2).ne.0.D0) then
-      write(nout,104) brstelsbnu(1,2),3,isb2,-imu,inmu,'BR(~t_1 -> ~b_2 
+      write(nout,104) brstelsbnu(1,2),3,isb2,-imu,inmu,'BR(~t_1 -> ~b_2
      .    mu+  nu_mu)'
       endif
       else
          if(stoptot4.ne.0.D0) then
             write(nout,107)
             if(br4bodoffshelltau.ne.0.D0) then
-            write(nout,106) br4bodoffshelltau,4,in1,ib,if1,if2,'BR(~t_1 
+            write(nout,106) br4bodoffshelltau,4,in1,ib,if1,if2,'BR(~t_1
      .-> chi_10 b f fbarprime)'
          endif
          endif
@@ -4065,7 +4718,7 @@ c ------------ c
       write(nout,104) brstsel(2,2),3,-iselr,ib,ine,    'BR(~t_2 -> ~e_R+
      .    b  nu_e)'
       endif
-      if(brstsel(2,1).ne.0.D0) then      
+      if(brstsel(2,1).ne.0.D0) then
       write(nout,104) brstsel(2,1),3,-ismul,ib,inmu,   'BR(~t_2 -> ~mu_L
      .+   b  nu_mu)'
       endif
@@ -4114,19 +4767,19 @@ c ------------ c
      ._2     tau+ nu_tau)'
       endif
       if(brstelsbnu(2,1).ne.0.D0) then
-      write(nout,104) brstelsbnu(2,1),3,isb1,-ie,ine,  'BR(~t_2 -> ~b_1 
+      write(nout,104) brstelsbnu(2,1),3,isb1,-ie,ine,  'BR(~t_2 -> ~b_1
      .    e+   nu_e)'
       endif
       if(brstelsbnu(2,2).ne.0.D0) then
-      write(nout,104) brstelsbnu(2,2),3,isb2,-ie,ine,  'BR(~t_2 -> ~b_2 
+      write(nout,104) brstelsbnu(2,2),3,isb2,-ie,ine,  'BR(~t_2 -> ~b_2
      .    e+   nu_e)'
       endif
       if(brstelsbnu(2,1).ne.0.D0) then
-      write(nout,104) brstelsbnu(2,1),3,isb1,-imu,inmu,'BR(~t_2 -> ~b_1 
+      write(nout,104) brstelsbnu(2,1),3,isb1,-imu,inmu,'BR(~t_2 -> ~b_1
      .    mu+  nu_mu)'
       endif
       if(brstelsbnu(2,2).ne.0.D0) then
-      write(nout,104) brstelsbnu(2,2),3,isb2,-imu,inmu,'BR(~t_2 -> ~b_2 
+      write(nout,104) brstelsbnu(2,2),3,isb2,-imu,inmu,'BR(~t_2 -> ~b_2
      .    mu+  nu_mu)'
       endif
       if(brst2st1tt.ne.0.D0) then
@@ -4194,7 +4847,7 @@ c --------------- c
          flagcondsbot(i) = flagsbottot2(i)+flagmulti
       end do
 
-      write(nout,105)      
+      write(nout,105)
 
       if(flagcondsbot(1).eq.10.D0) then
          write(nout,99)
@@ -4295,19 +4948,19 @@ c --------------- c
      .     tb   b)'
       endif
       if(brsbupstdow(1,1).ne.0.D0) then
-      write(nout,104) brsbupstdow(1,1),3,ist1,iub,id,  'BR(~b_1 -> ~t_1 
+      write(nout,104) brsbupstdow(1,1),3,ist1,iub,id,  'BR(~b_1 -> ~t_1
      .     ub   d)'
       endif
       if(brsbupstdow(1,2).ne.0.D0) then
-      write(nout,104) brsbupstdow(1,2),3,ist2,iub,id,  'BR(~b_1 -> ~t_2 
+      write(nout,104) brsbupstdow(1,2),3,ist2,iub,id,  'BR(~b_1 -> ~t_2
      .     ub   d)'
       endif
       if(brsbupstdow(1,1).ne.0.D0) then
-      write(nout,104) brsbupstdow(1,1),3,ist1,icb,is,  'BR(~b_1 -> ~t_1 
+      write(nout,104) brsbupstdow(1,1),3,ist1,icb,is,  'BR(~b_1 -> ~t_1
      .     cb   s)'
       endif
       if(brsbupstdow(1,2).ne.0.D0) then
-      write(nout,104) brsbupstdow(1,2),3,ist2,icb,is,  'BR(~b_1 -> ~t_2 
+      write(nout,104) brsbupstdow(1,2),3,ist2,icb,is,  'BR(~b_1 -> ~t_2
      .     cb   s)'
       endif
       if(brsbtaustnu(1,1).ne.0.D0) then
@@ -4458,19 +5111,19 @@ c --------------- c
      .     tb     b)'
       endif
       if(brsbupstdow(2,1).ne.0.D0) then
-      write(nout,104) brsbupstdow(2,1),3,ist1,iub,id,  'BR(~b_2 -> ~t_1 
+      write(nout,104) brsbupstdow(2,1),3,ist1,iub,id,  'BR(~b_2 -> ~t_1
      .     ub     d)'
       endif
       if(brsbupstdow(2,2).ne.0.D0) then
-      write(nout,104) brsbupstdow(2,2),3,ist2,iub,id,  'BR(~b_2 -> ~t_2 
+      write(nout,104) brsbupstdow(2,2),3,ist2,iub,id,  'BR(~b_2 -> ~t_2
      .     ub     d)'
       endif
       if(brsbupstdow(2,1).ne.0.D0) then
-      write(nout,104) brsbupstdow(2,1),3,ist1,icb,is,  'BR(~b_2 -> ~t_1 
+      write(nout,104) brsbupstdow(2,1),3,ist1,icb,is,  'BR(~b_2 -> ~t_1
      .     cb     s)'
       endif
       if(brsbupstdow(2,2).ne.0.D0) then
-      write(nout,104) brsbupstdow(2,2),3,ist2,icb,is,  'BR(~b_2 -> ~t_2 
+      write(nout,104) brsbupstdow(2,2),3,ist2,icb,is,  'BR(~b_2 -> ~t_2
      .     cb     s)'
       endif
       if(brsbtaustnu(2,1).ne.0.D0) then
@@ -4495,10 +5148,10 @@ c --------------- c
       endif
       if(brsbelstnu(2,2).ne.0.D0) then
       write(nout,104) brsbelstnu(2,2),3,ist1,imu,-inmu,'BR(~b_2 -> ~t_2
-     .     mu-    nu_mub)' 
+     .     mu-    nu_mub)'
       endif
       if(brsb2sb1bb.ne.0.D0) then
-      write(nout,104) brsb2sb1bb,3,isb1,ib,ibb,        'BR(~b_2 -> ~b_1 
+      write(nout,104) brsb2sb1bb,3,isb1,ib,ibb,        'BR(~b_2 -> ~b_1
      .     b      bb)'
       endif
       if(brsb2sb1starbb.ne.0.D0) then
@@ -4506,48 +5159,48 @@ c --------------- c
      .     b      b)'
       endif
       if(brsb2sb1tt.ne.0.D0) then
-      write(nout,104) brsb2sb1tt,3,isb1,it,itb,        'BR(~b_2 -> ~b_1 
+      write(nout,104) brsb2sb1tt,3,isb1,it,itb,        'BR(~b_2 -> ~b_1
      .     t      tb)'
       endif
       if(brsb2sb1uu.ne.0.D0) then
-      write(nout,104) brsb2sb1uu,3,isb1,iu,iub,        'BR(~b_2 -> ~b_1 
+      write(nout,104) brsb2sb1uu,3,isb1,iu,iub,        'BR(~b_2 -> ~b_1
      .     u      ub)'
       endif
       if(brsb2sb1dd.ne.0.D0) then
-      write(nout,104) brsb2sb1dd,3,isb1,id,idb,        'BR(~b_2 -> ~b_1 
+      write(nout,104) brsb2sb1dd,3,isb1,id,idb,        'BR(~b_2 -> ~b_1
      .     d      db)'
       endif
       if(brsb2sb1uu.ne.0.D0) then
-      write(nout,104) brsb2sb1uu,3,isb1,ic,icb,        'BR(~b_2 -> ~b_1 
+      write(nout,104) brsb2sb1uu,3,isb1,ic,icb,        'BR(~b_2 -> ~b_1
      .     c      cb)'
       endif
       if(brsb2sb1dd.ne.0.D0) then
-      write(nout,104) brsb2sb1dd,3,isb1,is,isb,        'BR(~b_2 -> ~b_1 
+      write(nout,104) brsb2sb1dd,3,isb1,is,isb,        'BR(~b_2 -> ~b_1
      .     s      sb)'
       endif
       if(brsb2sb1ee.ne.0.D0) then
-      write(nout,104) brsb2sb1ee,3,isb1,ie,-ie,        'BR(~b_2 -> ~b_1 
+      write(nout,104) brsb2sb1ee,3,isb1,ie,-ie,        'BR(~b_2 -> ~b_1
      .     e-     e+)'
-      write(nout,104) brsb2sb1ee,3,isb1,imu,-imu,      'BR(~b_2 -> ~b_1 
+      write(nout,104) brsb2sb1ee,3,isb1,imu,-imu,      'BR(~b_2 -> ~b_1
      .     mu-    mu+)'
       endif
       if(brsb2sb1tautau.ne.0.D0) then
-      write(nout,104) brsb2sb1tautau,3,isb1,itau,-itau,'BR(~b_2 -> ~b_1 
+      write(nout,104) brsb2sb1tautau,3,isb1,itau,-itau,'BR(~b_2 -> ~b_1
      .     tau-   tau+)'
       endif
       if(brsb2sb1nunu.ne.0.D0) then
-      write(nout,104) brsb2sb1nunu,3,isb1,ine,-ine,    'BR(~b_2 -> ~b_1 
+      write(nout,104) brsb2sb1nunu,3,isb1,ine,-ine,    'BR(~b_2 -> ~b_1
      .     nu_e   nu_eb)'
-      write(nout,104) brsb2sb1nunu,3,isb1,inmu,-inmu,  'BR(~b_2 -> ~b_1 
+      write(nout,104) brsb2sb1nunu,3,isb1,inmu,-inmu,  'BR(~b_2 -> ~b_1
      .     nu_mu  nu_mub)'
-      write(nout,104) brsb2sb1nunu,3,isb1,intau,-intau,'BR(~b_2 -> ~b_1 
+      write(nout,104) brsb2sb1nunu,3,isb1,intau,-intau,'BR(~b_2 -> ~b_1
      .     nu_tau nu_taub)'
       endif
 
       elseif(sbottot2(2).eq.0.D0) then
          write(nout,99)
          write(nout,100) 2000005,0.000000000E+00,'sbottom2 decays'
-      endif 
+      endif
       endif
 
 c ------------ c
@@ -4639,7 +5292,7 @@ c -------------- c
       write(nout,100) 1000001,sdowltot2,'sdown_L decays'
 
       write(nout,101)
-      
+
       if(brsdowlndow(1).ne.0.D0) then
       write(nout,102) brsdowlndow(1),2,in1,id  ,'BR(~d_L -> ~chi_10 d)'
       endif
@@ -4763,7 +5416,7 @@ c --------------- c
       if(brsuprnup(2).ne.0.D0) then
       write(nout,102) brsuprnup(2),2,in2,ic   ,'BR(~c_R -> ~chi_20 c)'
       endif
-      if(brsuprnup(3).ne.0.D0) then      
+      if(brsuprnup(3).ne.0.D0) then
       write(nout,102) brsuprnup(3),2,in3,ic   ,'BR(~c_R -> ~chi_30 c)'
       endif
       if(brsuprnup(4).ne.0.D0) then
@@ -4975,11 +5628,11 @@ c -------------- c
      .'
       endif
       if(brsellcharnue(1).ne.0.D0) then
-      write(nout,102) brsellcharnue(1),2,-ic1,inmu,'BR(~mu_L -> ~chi_1- 
+      write(nout,102) brsellcharnue(1),2,-ic1,inmu,'BR(~mu_L -> ~chi_1-
      .nu_mu)'
       endif
       if(brsellcharnue(2).ne.0.D0) then
-      write(nout,102) brsellcharnue(2),2,-ic2,inmu,'BR(~mu_L -> ~chi_2- 
+      write(nout,102) brsellcharnue(2),2,-ic2,inmu,'BR(~mu_L -> ~chi_2-
      .nu_mu)'
       endif
 
@@ -5017,11 +5670,11 @@ c ------------------ c
      .'
       endif
       if(brselrcharnue(1).ne.0.D0) then
-      write(nout,102) brselrcharnue(1),2,-ic1,inmu,'BR(~mu_R -> ~chi_1- 
+      write(nout,102) brselrcharnue(1),2,-ic1,inmu,'BR(~mu_R -> ~chi_1-
      .nu_mu)'
       endif
       if(brselrcharnue(2).ne.0.D0) then
-      write(nout,102) brselrcharnue(2),2,-ic2,inmu,'BR(~mu_R -> ~chi_2- 
+      write(nout,102) brselrcharnue(2),2,-ic2,inmu,'BR(~mu_R -> ~chi_2-
      .nu_mu)'
       endif
 
@@ -5043,27 +5696,27 @@ c ------------- c
 
       write(nout,101)
       if(brstau1neut(1).ne.0.D0) then
-      write(nout,102) brstau1neut(1),2,in1,itau,  'BR(~tau_1 -> ~chi_10 
+      write(nout,102) brstau1neut(1),2,in1,itau,  'BR(~tau_1 -> ~chi_10
      . tau-)'
       endif
       if(brstau1neut(2).ne.0.D0) then
-      write(nout,102) brstau1neut(2),2,in2,itau,  'BR(~tau_1 -> ~chi_20 
+      write(nout,102) brstau1neut(2),2,in2,itau,  'BR(~tau_1 -> ~chi_20
      . tau-)'
       endif
       if(brstau1neut(3).ne.0.D0) then
-      write(nout,102) brstau1neut(3),2,in3,itau,  'BR(~tau_1 -> ~chi_30 
+      write(nout,102) brstau1neut(3),2,in3,itau,  'BR(~tau_1 -> ~chi_30
      . tau-)'
       endif
       if(brstau1neut(4).ne.0.D0) then
-      write(nout,102) brstau1neut(4),2,in4,itau,  'BR(~tau_1 -> ~chi_40 
+      write(nout,102) brstau1neut(4),2,in4,itau,  'BR(~tau_1 -> ~chi_40
      . tau-)'
       endif
       if(brstau1char(1).ne.0.D0) then
-      write(nout,102) brstau1char(1),2,-ic1,intau,'BR(~tau_1 -> ~chi_1- 
+      write(nout,102) brstau1char(1),2,-ic1,intau,'BR(~tau_1 -> ~chi_1-
      . nu_tau)'
       endif
       if(brstau1char(2).ne.0.D0) then
-      write(nout,102) brstau1char(2),2,-ic2,intau,'BR(~tau_1 -> ~chi_2- 
+      write(nout,102) brstau1char(2),2,-ic2,intau,'BR(~tau_1 -> ~chi_2-
      . nu_tau)'
       endif
       if(brstau1hcsn(1).ne.0.D0) then
@@ -5076,7 +5729,7 @@ c ------------- c
       endif
       if(flagnlspgmsb.eq.1.D0) then
          if(brstautaugrav.ne.0.D0) then
-      write(nout,102) brstautaugrav,2,igrav,itau, 'BR(~tau_1 -> ~G      
+      write(nout,102) brstautaugrav,2,igrav,itau, 'BR(~tau_1 -> ~G
      . tau-)'
       endif
       endif
@@ -5099,27 +5752,27 @@ c ------------- c
 
       write(nout,101)
       if(brstau2neut(1).ne.0.D0) then
-      write(nout,102) brstau2neut(1),2,in1,itau,  'BR(~tau_2 -> ~chi_10 
+      write(nout,102) brstau2neut(1),2,in1,itau,  'BR(~tau_2 -> ~chi_10
      . tau-)'
       endif
       if(brstau2neut(2).ne.0.D0) then
-      write(nout,102) brstau2neut(2),2,in2,itau,  'BR(~tau_2 -> ~chi_20 
+      write(nout,102) brstau2neut(2),2,in2,itau,  'BR(~tau_2 -> ~chi_20
      . tau-)'
       endif
       if(brstau2neut(3).ne.0.D0) then
-      write(nout,102) brstau2neut(3),2,in3,itau,  'BR(~tau_2 -> ~chi_30 
+      write(nout,102) brstau2neut(3),2,in3,itau,  'BR(~tau_2 -> ~chi_30
      . tau-)'
       endif
       if(brstau2neut(4).ne.0.D0) then
-      write(nout,102) brstau2neut(4),2,in4,itau,  'BR(~tau_2 -> ~chi_40 
+      write(nout,102) brstau2neut(4),2,in4,itau,  'BR(~tau_2 -> ~chi_40
      . tau-)'
       endif
       if(brstau2char(1).ne.0.D0) then
-      write(nout,102) brstau2char(1),2,-ic1,intau,'BR(~tau_2 -> ~chi_1- 
+      write(nout,102) brstau2char(1),2,-ic1,intau,'BR(~tau_2 -> ~chi_1-
      . nu_tau)'
       endif
       if(brstau2char(2).ne.0.D0) then
-      write(nout,102) brstau2char(2),2,-ic2,intau,'BR(~tau_2 -> ~chi_2- 
+      write(nout,102) brstau2char(2),2,-ic2,intau,'BR(~tau_2 -> ~chi_2-
      . nu_tau)'
       endif
       if(brstau2hcsn(1).ne.0.D0) then
@@ -5207,27 +5860,27 @@ c ---------------- c
 
       write(nout,101)
       if(brsnellneut(1).ne.0.D0) then
-      write(nout,102) brsnellneut(1),2,in1,inmu, 'BR(~nu_muL -> ~chi_10 
+      write(nout,102) brsnellneut(1),2,in1,inmu, 'BR(~nu_muL -> ~chi_10
      .nu_mu)'
       endif
       if(brsnellneut(2).ne.0.D0) then
-      write(nout,102) brsnellneut(2),2,in2,inmu, 'BR(~nu_muL -> ~chi_20 
+      write(nout,102) brsnellneut(2),2,in2,inmu, 'BR(~nu_muL -> ~chi_20
      .nu_mu)'
       endif
       if(brsnellneut(3).ne.0.D0) then
-      write(nout,102) brsnellneut(3),2,in3,inmu, 'BR(~nu_muL -> ~chi_30 
+      write(nout,102) brsnellneut(3),2,in3,inmu, 'BR(~nu_muL -> ~chi_30
      .nu_mu)'
       endif
       if(brsnellneut(4).ne.0.D0) then
-      write(nout,102) brsnellneut(4),2,in4,inmu, 'BR(~nu_muL -> ~chi_40 
+      write(nout,102) brsnellneut(4),2,in4,inmu, 'BR(~nu_muL -> ~chi_40
      .nu_mu)'
       endif
       if(brsnellchar(1).ne.0.D0) then
-      write(nout,102) brsnellchar(1),2,ic1,imu,  'BR(~nu_muL -> ~chi_1+ 
+      write(nout,102) brsnellchar(1),2,ic1,imu,  'BR(~nu_muL -> ~chi_1+
      .mu-)'
       endif
       if(brsnellchar(2).ne.0.D0) then
-      write(nout,102) brsnellchar(2),2,ic2,imu,  'BR(~nu_muL -> ~chi_2+ 
+      write(nout,102) brsnellchar(2),2,ic2,imu,  'BR(~nu_muL -> ~chi_2+
      .mu-)'
       endif
 
@@ -5319,57 +5972,57 @@ c ---------------- c
 
       write(nout,101)
       if(brcharsupl(1).ne.0.D0) then
-      write(nout,102) brcharsupl(1),2,isul,idb,  'BR(~chi_1+ -> ~u_L  
+      write(nout,102) brcharsupl(1),2,isul,idb,  'BR(~chi_1+ -> ~u_L
      . db)'
       endif
       if(brcharsupr(1).ne.0.D0) then
-      write(nout,102) brcharsupr(1),2,isur,idb,  'BR(~chi_1+ -> ~u_R  
+      write(nout,102) brcharsupr(1),2,isur,idb,  'BR(~chi_1+ -> ~u_R
      . db)'
       endif
       if(brcharsdownl(1).ne.0.D0) then
-      write(nout,102) brcharsdownl(1),2,-isdl,iu,'BR(~chi_1+ -> ~d_L* 
+      write(nout,102) brcharsdownl(1),2,-isdl,iu,'BR(~chi_1+ -> ~d_L*
      . u )'
       endif
       if(brcharsdownr(1).ne.0.D0) then
-      write(nout,102) brcharsdownr(1),2,-isdr,iu,'BR(~chi_1+ -> ~d_R* 
+      write(nout,102) brcharsdownr(1),2,-isdr,iu,'BR(~chi_1+ -> ~d_R*
      . u )'
       endif
       if(brcharsupl(1).ne.0.D0) then
-      write(nout,102) brcharsupl(1),2,iscl,isb,  'BR(~chi_1+ -> ~c_L  
+      write(nout,102) brcharsupl(1),2,iscl,isb,  'BR(~chi_1+ -> ~c_L
      . sb)'
       endif
       if(brcharsupr(1).ne.0.D0) then
-      write(nout,102) brcharsupr(1),2,iscr,isb,  'BR(~chi_1+ -> ~c_R  
+      write(nout,102) brcharsupr(1),2,iscr,isb,  'BR(~chi_1+ -> ~c_R
      . sb)'
       endif
       if(brcharsdownl(1).ne.0.D0) then
-      write(nout,102) brcharsdownl(1),2,-issl,ic,'BR(~chi_1+ -> ~s_L* 
+      write(nout,102) brcharsdownl(1),2,-issl,ic,'BR(~chi_1+ -> ~s_L*
      . c )'
       endif
       if(brcharsdownr(1).ne.0.D0) then
-      write(nout,102) brcharsdownr(1),2,-issr,ic,'BR(~chi_1+ -> ~s_R* 
+      write(nout,102) brcharsdownr(1),2,-issr,ic,'BR(~chi_1+ -> ~s_R*
      . c )'
       endif
       if(brcharst1(1).ne.0.D0) then
-      write(nout,102) brcharst1(1),2,ist1,ibb,   'BR(~chi_1+ -> ~t_1  
+      write(nout,102) brcharst1(1),2,ist1,ibb,   'BR(~chi_1+ -> ~t_1
      . bb)'
       endif
       if(brcharst2(1).ne.0.D0) then
-      write(nout,102) brcharst2(1),2,ist2,ibb,   'BR(~chi_1+ -> ~t_2  
+      write(nout,102) brcharst2(1),2,ist2,ibb,   'BR(~chi_1+ -> ~t_2
      . bb)'
       endif
       if(brcharsb1(1).ne.0.D0) then
-      write(nout,102) brcharsb1(1),2,-isb1,it,   'BR(~chi_1+ -> ~b_1* 
+      write(nout,102) brcharsb1(1),2,-isb1,it,   'BR(~chi_1+ -> ~b_1*
      . t )'
       endif
       if(brcharsb2(1).ne.0.D0) then
-      write(nout,102) brcharsb2(1),2,-isb2,it,   'BR(~chi_1+ -> ~b_2* 
+      write(nout,102) brcharsb2(1),2,-isb2,it,   'BR(~chi_1+ -> ~b_2*
      . t )'
       endif
       if(brcharsnel(1).ne.0.D0) then
-      write(nout,102) brcharsnel(1),2,inel,-ie,  'BR(~chi_1+ -> ~nu_eL 
+      write(nout,102) brcharsnel(1),2,inel,-ie,  'BR(~chi_1+ -> ~nu_eL
      . e+  )'
-      write(nout,102) brcharsnel(1),2,inmul,-imu,'BR(~chi_1+ -> ~nu_muL 
+      write(nout,102) brcharsnel(1),2,inmul,-imu,'BR(~chi_1+ -> ~nu_muL
      . mu+ )'
       endif
       if(brcharsn1(1).ne.0.D0) then
@@ -5377,19 +6030,19 @@ c ---------------- c
      .1 tau+)'
       endif
       if(brcharsell(1).ne.0.D0) then
-      write(nout,102) brcharsell(1),2,-isell,ine,'BR(~chi_1+ -> ~e_L+   
+      write(nout,102) brcharsell(1),2,-isell,ine,'BR(~chi_1+ -> ~e_L+
      . nu_e)'
       endif
       if(brcharselr(1).ne.0.D0) then
-      write(nout,102) brcharselr(1),2,-iselr,ine,'BR(~chi_1+ -> ~e_R+   
+      write(nout,102) brcharselr(1),2,-iselr,ine,'BR(~chi_1+ -> ~e_R+
      . nu_e)'
       endif
       if(brcharsell(1).ne.0.D0) then
-      write(nout,102) brcharsell(1),2,-ismul,inmu,'BR(~chi_1+ -> ~mu_L+ 
+      write(nout,102) brcharsell(1),2,-ismul,inmu,'BR(~chi_1+ -> ~mu_L+
      .  nu_mu)'
       endif
       if(brcharselr(1).ne.0.D0) then
-      write(nout,102) brcharselr(1),2,-ismur,inmu,'BR(~chi_1+ -> ~mu_R+ 
+      write(nout,102) brcharselr(1),2,-ismur,inmu,'BR(~chi_1+ -> ~mu_R+
      .  nu_mu)'
       endif
       if(brcharstau1(1).ne.0.D0) then
@@ -5594,57 +6247,57 @@ c ---------------- c
 
       write(nout,101)
       if(brcharsupl(2).ne.0.D0) then
-      write(nout,102) brcharsupl(2),2,isul,idb,  'BR(~chi_2+ -> ~u_L  
+      write(nout,102) brcharsupl(2),2,isul,idb,  'BR(~chi_2+ -> ~u_L
      . db)'
       endif
       if(brcharsupr(2).ne.0.D0) then
-      write(nout,102) brcharsupr(2),2,isur,idb,  'BR(~chi_2+ -> ~u_R  
+      write(nout,102) brcharsupr(2),2,isur,idb,  'BR(~chi_2+ -> ~u_R
      . db)'
       endif
       if(brcharsdownl(2).ne.0.D0) then
-      write(nout,102) brcharsdownl(2),2,-isdl,iu,'BR(~chi_2+ -> ~d_L* 
+      write(nout,102) brcharsdownl(2),2,-isdl,iu,'BR(~chi_2+ -> ~d_L*
      . u )'
       endif
       if(brcharsdownr(2).ne.0.D0) then
-      write(nout,102) brcharsdownr(2),2,-isdr,iu,'BR(~chi_2+ -> ~d_R* 
+      write(nout,102) brcharsdownr(2),2,-isdr,iu,'BR(~chi_2+ -> ~d_R*
      . u )'
       endif
       if(brcharsupl(2).ne.0.D0) then
-      write(nout,102) brcharsupl(2),2,iscl,isb,  'BR(~chi_2+ -> ~c_L  
+      write(nout,102) brcharsupl(2),2,iscl,isb,  'BR(~chi_2+ -> ~c_L
      . sb)'
       endif
       if(brcharsupr(2).ne.0.D0) then
-      write(nout,102) brcharsupr(2),2,iscr,isb,  'BR(~chi_2+ -> ~c_R  
+      write(nout,102) brcharsupr(2),2,iscr,isb,  'BR(~chi_2+ -> ~c_R
      . sb)'
       endif
       if(brcharsdownl(2).ne.0.D0) then
-      write(nout,102) brcharsdownl(2),2,-issl,ic,'BR(~chi_2+ -> ~s_L* 
+      write(nout,102) brcharsdownl(2),2,-issl,ic,'BR(~chi_2+ -> ~s_L*
      . c )'
       endif
       if(brcharsdownr(2).ne.0.D0) then
-      write(nout,102) brcharsdownr(2),2,-issr,ic,'BR(~chi_2+ -> ~s_R* 
+      write(nout,102) brcharsdownr(2),2,-issr,ic,'BR(~chi_2+ -> ~s_R*
      . c )'
       endif
       if(brcharst1(2).ne.0.D0) then
-      write(nout,102) brcharst1(2),2,ist1,ibb,   'BR(~chi_2+ -> ~t_1  
+      write(nout,102) brcharst1(2),2,ist1,ibb,   'BR(~chi_2+ -> ~t_1
      . bb)'
       endif
       if(brcharst2(2).ne.0.D0) then
-      write(nout,102) brcharst2(2),2,ist2,ibb,   'BR(~chi_2+ -> ~t_2  
+      write(nout,102) brcharst2(2),2,ist2,ibb,   'BR(~chi_2+ -> ~t_2
      . bb)'
       endif
       if(brcharsb1(2).ne.0.D0) then
-      write(nout,102) brcharsb1(2),2,-isb1,it,   'BR(~chi_2+ -> ~b_1* 
+      write(nout,102) brcharsb1(2),2,-isb1,it,   'BR(~chi_2+ -> ~b_1*
      . t )'
       endif
       if(brcharsb2(2).ne.0.D0) then
-      write(nout,102) brcharsb2(2),2,-isb2,it,   'BR(~chi_2+ -> ~b_2* 
+      write(nout,102) brcharsb2(2),2,-isb2,it,   'BR(~chi_2+ -> ~b_2*
      . t )'
       endif
       if(brcharsnel(2).ne.0.D0) then
-      write(nout,102) brcharsnel(2),2,inel,-ie,  'BR(~chi_2+ -> ~nu_eL 
+      write(nout,102) brcharsnel(2),2,inel,-ie,  'BR(~chi_2+ -> ~nu_eL
      . e+  )'
-      write(nout,102) brcharsnel(2),2,inmul,-imu,'BR(~chi_2+ -> ~nu_muL 
+      write(nout,102) brcharsnel(2),2,inmul,-imu,'BR(~chi_2+ -> ~nu_muL
      . mu+ )'
       endif
       if(brcharsn1(2).ne.0.D0) then
@@ -5652,19 +6305,19 @@ c ---------------- c
      .1 tau+)'
       endif
       if(brcharsell(2).ne.0.D0) then
-      write(nout,102) brcharsell(2),2,-isell,ine,'BR(~chi_2+ -> ~e_L+   
+      write(nout,102) brcharsell(2),2,-isell,ine,'BR(~chi_2+ -> ~e_L+
      . nu_e)'
       endif
       if(brcharselr(2).ne.0.D0) then
-      write(nout,102) brcharselr(2),2,-iselr,ine,'BR(~chi_2+ -> ~e_R+   
+      write(nout,102) brcharselr(2),2,-iselr,ine,'BR(~chi_2+ -> ~e_R+
      . nu_e)'
       endif
       if(brcharsell(2).ne.0.D0) then
-      write(nout,102) brcharsell(2),2,-ismul,inmu,'BR(~chi_2+ -> ~mu_L+ 
+      write(nout,102) brcharsell(2),2,-ismul,inmu,'BR(~chi_2+ -> ~mu_L+
      .  nu_mu)'
       endif
       if(brcharselr(2).ne.0.D0) then
-      write(nout,102) brcharselr(2),2,-ismur,inmu,'BR(~chi_2+ -> ~mu_R+ 
+      write(nout,102) brcharselr(2),2,-ismur,inmu,'BR(~chi_2+ -> ~mu_R+
      .  nu_mu)'
       endif
       if(brcharstau1(2).ne.0.D0) then
@@ -5677,7 +6330,7 @@ c ---------------- c
       endif
       if(brcharzchic.ne.0.D0) then
       write(nout,102) brcharzchic,2,ic1,iz          ,'BR(~chi_2+ -> ~chi
-     ._1+  Z )' 
+     ._1+  Z )'
       endif
       if(brcharwneut(2,1).ne.0.D0) then
       write(nout,102) brcharwneut(2,1),2,in1,iwc,    'BR(~chi_2+ -> ~chi
@@ -6054,13 +6707,13 @@ c ------------------ c
       endif
       if(brneutsell(1).ne.0.D0) then
       write(nout,102) brneutsell(1),2,ismul,-imu,      'BR(~chi_10 -> ~m
-     .u_L-    mu+)' 
+     .u_L-    mu+)'
       write(nout,102) brneutsell(1),2,-ismul,imu,      'BR(~chi_10 -> ~m
-     .u_L+    mu-)' 
+     .u_L+    mu-)'
       endif
       if(brneutselr(1).ne.0.D0) then
       write(nout,102) brneutselr(1),2,ismur,-imu,      'BR(~chi_10 -> ~m
-     .u_R-    mu+)' 
+     .u_R-    mu+)'
       write(nout,102) brneutselr(1),2,-ismur,imu,      'BR(~chi_10 -> ~m
      .u_R+    mu-)'
       endif
@@ -6153,7 +6806,7 @@ c
       write(nout,104) brchubd(1,1),3,-ic1,idb,iu,      'BR(~chi_10 -> ~c
      .hi_1- db      u)'
       endif
-      if(brchubd(1,2).ne.0.D0) then      
+      if(brchubd(1,2).ne.0.D0) then
       write(nout,104) brchubd(1,2),3,ic2,iub,id,       'BR(~chi_10 -> ~c
      .hi_2+ ub      d)'
       write(nout,104) brchubd(1,2),3,-ic2,idb,iu,      'BR(~chi_10 -> ~c
@@ -6391,13 +7044,13 @@ c ------------------ c
       endif
       if(brneutsell(2).ne.0.D0) then
       write(nout,102) brneutsell(2),2,ismul,-imu,      'BR(~chi_20 -> ~m
-     .u_L-    mu+)' 
+     .u_L-    mu+)'
       write(nout,102) brneutsell(2),2,-ismul,imu,      'BR(~chi_20 -> ~m
-     .u_L+    mu-)' 
+     .u_L+    mu-)'
       endif
       if(brneutselr(2).ne.0.D0) then
       write(nout,102) brneutselr(2),2,ismur,-imu,      'BR(~chi_20 -> ~m
-     .u_R-    mu+)' 
+     .u_R-    mu+)'
       write(nout,102) brneutselr(2),2,-ismur,imu,      'BR(~chi_20 -> ~m
      .u_R+    mu-)'
       endif
@@ -6801,13 +7454,13 @@ c ------------------ c
       endif
       if(brneutsell(3).ne.0.D0) then
       write(nout,102) brneutsell(3),2,ismul,-imu,      'BR(~chi_30 -> ~m
-     .u_L-    mu+)' 
+     .u_L-    mu+)'
       write(nout,102) brneutsell(3),2,-ismul,imu,      'BR(~chi_30 -> ~m
-     .u_L+    mu-)' 
+     .u_L+    mu-)'
       endif
       if(brneutselr(3).ne.0.D0) then
       write(nout,102) brneutselr(3),2,ismur,-imu,      'BR(~chi_30 -> ~m
-     .u_R-    mu+)' 
+     .u_R-    mu+)'
       write(nout,102) brneutselr(3),2,-ismur,imu,      'BR(~chi_30 -> ~m
      .u_R+    mu-)'
       endif
@@ -7278,13 +7931,13 @@ c ------------------ c
       endif
       if(brneutsell(4).ne.0.D0) then
       write(nout,102) brneutsell(4),2,ismul,-imu,      'BR(~chi_40 -> ~m
-     .u_L-    mu+)' 
+     .u_L-    mu+)'
       write(nout,102) brneutsell(4),2,-ismul,imu,      'BR(~chi_40 -> ~m
-     .u_L+    mu-)' 
+     .u_L+    mu-)'
       endif
-      if(brneutselr(4).ne.0.D0) then      
+      if(brneutselr(4).ne.0.D0) then
       write(nout,102) brneutselr(4),2,ismur,-imu,      'BR(~chi_40 -> ~m
-     .u_R-    mu+)' 
+     .u_R-    mu+)'
       write(nout,102) brneutselr(4),2,-ismur,imu,      'BR(~chi_40 -> ~m
      .u_R+    mu-)'
       endif
@@ -7385,7 +8038,7 @@ c
 c
             if(flagmulti.eq.1.D0) then
       if(flagneut3bod(4).eq.1.D0) then
-      write(nout,103) 
+      write(nout,103)
       endif
       if(brneutup(4,1).ne.0.D0) then
       write(nout,104) brneutup(4,1),3,in1,iub,iu,      'BR(~chi_40 -> ~c
@@ -7661,70 +8314,70 @@ c -------- c
       write(nout,102) hlbrc,2,ic,icb        ,'BR(h -> c       cb     )'
       endif
       if(hlbrt.ne.0.D0) then
-      write(nout,102) hlbrt,2,it,itb        ,'BR(h -> t       tb     )' 
+      write(nout,102) hlbrt,2,it,itb        ,'BR(h -> t       tb     )'
       endif
       if(hlbrg.ne.0.D0) then
-      write(nout,102) hlbrg,2,igl,igl       ,'BR(h -> g       g      )' 
+      write(nout,102) hlbrg,2,igl,igl       ,'BR(h -> g       g      )'
       endif
       if(hlbrga.ne.0.D0) then
-      write(nout,102) hlbrga,2,iga,iga      ,'BR(h -> gam     gam    )' 
+      write(nout,102) hlbrga,2,iga,iga      ,'BR(h -> gam     gam    )'
       endif
       if(hlbrzga.ne.0.D0) then
-      write(nout,102) hlbrzga,2,iga,iz      ,'BR(h -> Z       gam    )' 
+      write(nout,102) hlbrzga,2,iga,iz      ,'BR(h -> Z       gam    )'
       endif
       if(hlbrw.ne.0.D0) then
-      write(nout,102) hlbrw,2,iwc,-iwc      ,'BR(h -> W+      W-     )' 
+      write(nout,102) hlbrw,2,iwc,-iwc      ,'BR(h -> W+      W-     )'
       endif
       if(hlbrz.ne.0.D0) then
-      write(nout,102) hlbrz,2,iz,iz         ,'BR(h -> Z       Z      )' 
+      write(nout,102) hlbrz,2,iz,iz         ,'BR(h -> Z       Z      )'
       endif
       if(hlbrsc(1,1).ne.0.D0) then
-      write(nout,102) hlbrsc(1,1),2,ic1,-ic1,'BR(h -> ~chi_1+ ~chi_1-)' 
+      write(nout,102) hlbrsc(1,1),2,ic1,-ic1,'BR(h -> ~chi_1+ ~chi_1-)'
       endif
       if(hlbrsc(2,2).ne.0.D0) then
-      write(nout,102) hlbrsc(2,2),2,ic2,-ic2,'BR(h -> ~chi_2+ ~chi_2-)' 
+      write(nout,102) hlbrsc(2,2),2,ic2,-ic2,'BR(h -> ~chi_2+ ~chi_2-)'
       endif
       if(hlbrsc(1,2).ne.0.D0) then
-      write(nout,102) hlbrsc(1,2),2,ic1,-ic2,'BR(h -> ~chi_1+ ~chi_2-)' 
+      write(nout,102) hlbrsc(1,2),2,ic1,-ic2,'BR(h -> ~chi_1+ ~chi_2-)'
       endif
       if(hlbrsc(2,1).ne.0.D0) then
-      write(nout,102) hlbrsc(2,1),2,ic2,-ic1,'BR(h -> ~chi_2+ ~chi_1-)' 
+      write(nout,102) hlbrsc(2,1),2,ic2,-ic1,'BR(h -> ~chi_2+ ~chi_1-)'
       endif
-      hlbrsn1(1,2) = 2.D0*hlbrsn(1,2) 
-      hlbrsn1(1,3) = 2.D0*hlbrsn(1,3) 
+      hlbrsn1(1,2) = 2.D0*hlbrsn(1,2)
+      hlbrsn1(1,3) = 2.D0*hlbrsn(1,3)
       hlbrsn1(1,4) = 2.D0*hlbrsn(1,4)
-      hlbrsn1(2,3) = 2.D0*hlbrsn(2,3) 
-      hlbrsn1(2,4) = 2.D0*hlbrsn(2,4)  
-      hlbrsn1(3,4) = 2.D0*hlbrsn(3,4)  
+      hlbrsn1(2,3) = 2.D0*hlbrsn(2,3)
+      hlbrsn1(2,4) = 2.D0*hlbrsn(2,4)
+      hlbrsn1(3,4) = 2.D0*hlbrsn(3,4)
       if(hlbrsn(1,1).ne.0.D0) then
-      write(nout,102) hlbrsn(1,1),2,in1,in1 ,'BR(h -> ~chi_10 ~chi_10)' 
+      write(nout,102) hlbrsn(1,1),2,in1,in1 ,'BR(h -> ~chi_10 ~chi_10)'
       endif
       if(hlbrsn(2,2).ne.0.D0) then
-      write(nout,102) hlbrsn(2,2),2,in2,in2 ,'BR(h -> ~chi_20 ~chi_20)' 
+      write(nout,102) hlbrsn(2,2),2,in2,in2 ,'BR(h -> ~chi_20 ~chi_20)'
       endif
       if(hlbrsn(3,3).ne.0.D0) then
-      write(nout,102) hlbrsn(3,3),2,in3,in3 ,'BR(h -> ~chi_30 ~chi_30)' 
+      write(nout,102) hlbrsn(3,3),2,in3,in3 ,'BR(h -> ~chi_30 ~chi_30)'
       endif
       if(hlbrsn(4,4).ne.0.D0) then
-      write(nout,102) hlbrsn(4,4),2,in4,in4 ,'BR(h -> ~chi_40 ~chi_40)' 
+      write(nout,102) hlbrsn(4,4),2,in4,in4 ,'BR(h -> ~chi_40 ~chi_40)'
       endif
       if(hlbrsn(1,2).ne.0.D0) then
-      write(nout,102) hlbrsn1(1,2),2,in1,in2,'BR(h -> ~chi_10 ~chi_20)' 
+      write(nout,102) hlbrsn1(1,2),2,in1,in2,'BR(h -> ~chi_10 ~chi_20)'
       endif
       if(hlbrsn(1,3).ne.0.D0) then
-      write(nout,102) hlbrsn1(1,3),2,in1,in3,'BR(h -> ~chi_10 ~chi_30)' 
+      write(nout,102) hlbrsn1(1,3),2,in1,in3,'BR(h -> ~chi_10 ~chi_30)'
       endif
       if(hlbrsn(1,4).ne.0.D0) then
-      write(nout,102) hlbrsn1(1,4),2,in1,in4,'BR(h -> ~chi_10 ~chi_40)' 
+      write(nout,102) hlbrsn1(1,4),2,in1,in4,'BR(h -> ~chi_10 ~chi_40)'
       endif
       if(hlbrsn(2,3).ne.0.D0) then
-      write(nout,102) hlbrsn1(2,3),2,in2,in3,'BR(h -> ~chi_20 ~chi_30)' 
+      write(nout,102) hlbrsn1(2,3),2,in2,in3,'BR(h -> ~chi_20 ~chi_30)'
       endif
       if(hlbrsn(2,4).ne.0.D0) then
-      write(nout,102) hlbrsn1(2,4),2,in2,in4,'BR(h -> ~chi_20 ~chi_40)' 
+      write(nout,102) hlbrsn1(2,4),2,in2,in4,'BR(h -> ~chi_20 ~chi_40)'
       endif
       if(hlbrsn(3,4).ne.0.D0) then
-      write(nout,102) hlbrsn1(3,4),2,in3,in4,'BR(h -> ~chi_30 ~chi_40)' 
+      write(nout,102) hlbrsn1(3,4),2,in3,in4,'BR(h -> ~chi_30 ~chi_40)'
       endif
       bhlslnl1 = bhlslnl/3.D0
       bhlslel1 = bhlslel/2.D0
@@ -7810,9 +8463,9 @@ c -------- c
      .u_1+)'
       endif
       if(bhlslnl1.ne.0.D0) then
-      write(nout,102) bhlslnl1,2,inel,-inel  ,'BR(h -> ~nu_eL  ~nu_eL*  
+      write(nout,102) bhlslnl1,2,inel,-inel  ,'BR(h -> ~nu_eL  ~nu_eL*
      . )'
-      write(nout,102) bhlslnl1,2,inmul,-inmul,'BR(h -> ~nu_muL ~nu_muL* 
+      write(nout,102) bhlslnl1,2,inmul,-inmul,'BR(h -> ~nu_muL ~nu_muL*
      . )'
       write(nout,102) bhlslnl1,2,intau1,-intau1,'BR(h -> ~nu_tauL ~nu_ta
      .uL*)'
@@ -7856,83 +8509,83 @@ c -------- c
       write(nout,102) hhbrc,2,ic,icb        ,'BR(H -> c       cb     )'
       endif
       if(hhbrt.ne.0.D0) then
-      write(nout,102) hhbrt,2,it,itb        ,'BR(H -> t       tb     )' 
+      write(nout,102) hhbrt,2,it,itb        ,'BR(H -> t       tb     )'
       endif
       if(hhbrg.ne.0.D0) then
-      write(nout,102) hhbrg,2,igl,igl       ,'BR(H -> g       g      )' 
+      write(nout,102) hhbrg,2,igl,igl       ,'BR(H -> g       g      )'
       endif
       if(hhbrga.ne.0.D0) then
-      write(nout,102) hhbrga,2,iga,iga      ,'BR(H -> gam     gam    )' 
+      write(nout,102) hhbrga,2,iga,iga      ,'BR(H -> gam     gam    )'
       endif
       if(hhbrzga.ne.0.D0) then
-      write(nout,102) hhbrzga,2,iz,iga      ,'BR(H -> Z       gam    )' 
+      write(nout,102) hhbrzga,2,iz,iga      ,'BR(H -> Z       gam    )'
       endif
       if(hhbrw.ne.0.D0) then
-      write(nout,102) hhbrw,2,iwc,-iwc      ,'BR(H -> W+      W-     )' 
+      write(nout,102) hhbrw,2,iwc,-iwc      ,'BR(H -> W+      W-     )'
       endif
       if(hhbrz.ne.0.D0) then
-      write(nout,102) hhbrz,2,iz,iz         ,'BR(H -> Z       Z      )' 
+      write(nout,102) hhbrz,2,iz,iz         ,'BR(H -> Z       Z      )'
       endif
       if(hhbrh.ne.0.D0) then
-      write(nout,102) hhbrh,2,ihl,ihl       ,'BR(H -> h       h      )' 
+      write(nout,102) hhbrh,2,ihl,ihl       ,'BR(H -> h       h      )'
       endif
       if(hhbra.ne.0.D0) then
-      write(nout,102) hhbra,2,iha,iha       ,'BR(H -> A       A      )' 
+      write(nout,102) hhbra,2,iha,iha       ,'BR(H -> A       A      )'
       endif
       if(hhbraz.ne.0.D0) then
-      write(nout,102) hhbraz,2,iz,iha       ,'BR(H -> Z       A      )' 
+      write(nout,102) hhbraz,2,iz,iha       ,'BR(H -> Z       A      )'
       endif
       if(hhbrhw.ne.0.D0) then
       write(nout,102) hhbrhw/2.D0,2,iwc,-ihc,'BR(H -> W+      H-     )'
       write(nout,102) hhbrhw/2.D0,2,-iwc,ihc,'BR(H -> W-      H+     )'
       endif
       if(hhbrsc(1,1).ne.0.D0) then
-      write(nout,102) hhbrsc(1,1),2,ic1,-ic1,'BR(H -> ~chi_1+ ~chi_1-)' 
+      write(nout,102) hhbrsc(1,1),2,ic1,-ic1,'BR(H -> ~chi_1+ ~chi_1-)'
       endif
       if(hhbrsc(2,2).ne.0.D0) then
-      write(nout,102) hhbrsc(2,2),2,ic2,-ic2,'BR(H -> ~chi_2+ ~chi_2-)' 
+      write(nout,102) hhbrsc(2,2),2,ic2,-ic2,'BR(H -> ~chi_2+ ~chi_2-)'
       endif
       if(hhbrsc(1,2).ne.0.D0) then
-      write(nout,102) hhbrsc(1,2),2,ic1,-ic2,'BR(H -> ~chi_1+ ~chi_2-)' 
+      write(nout,102) hhbrsc(1,2),2,ic1,-ic2,'BR(H -> ~chi_1+ ~chi_2-)'
       endif
       if(hhbrsc(2,1).ne.0.D0) then
-      write(nout,102) hhbrsc(2,1),2,ic2,-ic1,'BR(H -> ~chi_2+ ~chi_1-)' 
+      write(nout,102) hhbrsc(2,1),2,ic2,-ic1,'BR(H -> ~chi_2+ ~chi_1-)'
       endif
       if(hhbrsn(1,1).ne.0.D0) then
-      write(nout,102) hhbrsn(1,1),2,in1,in1 ,'BR(H -> ~chi_10 ~chi_10)' 
+      write(nout,102) hhbrsn(1,1),2,in1,in1 ,'BR(H -> ~chi_10 ~chi_10)'
       endif
       if(hhbrsn(2,2).ne.0.D0) then
-      write(nout,102) hhbrsn(2,2),2,in2,in2 ,'BR(H -> ~chi_20 ~chi_20)' 
+      write(nout,102) hhbrsn(2,2),2,in2,in2 ,'BR(H -> ~chi_20 ~chi_20)'
       endif
       if(hhbrsn(3,3).ne.0.D0) then
-      write(nout,102) hhbrsn(3,3),2,in3,in3 ,'BR(H -> ~chi_30 ~chi_30)' 
+      write(nout,102) hhbrsn(3,3),2,in3,in3 ,'BR(H -> ~chi_30 ~chi_30)'
       endif
       if(hhbrsn(4,4).ne.0.D0) then
-      write(nout,102) hhbrsn(4,4),2,in4,in4 ,'BR(H -> ~chi_40 ~chi_40)' 
+      write(nout,102) hhbrsn(4,4),2,in4,in4 ,'BR(H -> ~chi_40 ~chi_40)'
       endif
-      hhbrsn1(1,2) = 2.D0*hhbrsn(1,2) 
-      hhbrsn1(1,3) = 2.D0*hhbrsn(1,3) 
+      hhbrsn1(1,2) = 2.D0*hhbrsn(1,2)
+      hhbrsn1(1,3) = 2.D0*hhbrsn(1,3)
       hhbrsn1(1,4) = 2.D0*hhbrsn(1,4)
-      hhbrsn1(2,3) = 2.D0*hhbrsn(2,3) 
-      hhbrsn1(2,4) = 2.D0*hhbrsn(2,4)  
-      hhbrsn1(3,4) = 2.D0*hhbrsn(3,4)  
+      hhbrsn1(2,3) = 2.D0*hhbrsn(2,3)
+      hhbrsn1(2,4) = 2.D0*hhbrsn(2,4)
+      hhbrsn1(3,4) = 2.D0*hhbrsn(3,4)
       if(hhbrsn1(1,2).ne.0.D0) then
-      write(nout,102) hhbrsn1(1,2),2,in1,in2,'BR(H -> ~chi_10 ~chi_20)' 
+      write(nout,102) hhbrsn1(1,2),2,in1,in2,'BR(H -> ~chi_10 ~chi_20)'
       endif
       if(hhbrsn1(1,3).ne.0.D0) then
-      write(nout,102) hhbrsn1(1,3),2,in1,in3,'BR(H -> ~chi_10 ~chi_30)' 
+      write(nout,102) hhbrsn1(1,3),2,in1,in3,'BR(H -> ~chi_10 ~chi_30)'
       endif
       if(hhbrsn1(1,4).ne.0.D0) then
-      write(nout,102) hhbrsn1(1,4),2,in1,in4,'BR(H -> ~chi_10 ~chi_40)' 
+      write(nout,102) hhbrsn1(1,4),2,in1,in4,'BR(H -> ~chi_10 ~chi_40)'
       endif
       if(hhbrsn1(2,3).ne.0.D0) then
-      write(nout,102) hhbrsn1(2,3),2,in2,in3,'BR(H -> ~chi_20 ~chi_30)' 
+      write(nout,102) hhbrsn1(2,3),2,in2,in3,'BR(H -> ~chi_20 ~chi_30)'
       endif
       if(hhbrsn1(2,4).ne.0.D0) then
-      write(nout,102) hhbrsn1(2,4),2,in2,in4,'BR(H -> ~chi_20 ~chi_40)' 
+      write(nout,102) hhbrsn1(2,4),2,in2,in4,'BR(H -> ~chi_20 ~chi_40)'
       endif
       if(hhbrsn1(3,4).ne.0.D0) then
-      write(nout,102) hhbrsn1(3,4),2,in3,in4,'BR(H -> ~chi_30 ~chi_40)' 
+      write(nout,102) hhbrsn1(3,4),2,in3,in4,'BR(H -> ~chi_30 ~chi_40)'
       endif
       bhhslnl1 = bhhslnl/3.D0
       bhhslel1 = bhhslel/2.D0
@@ -8018,9 +8671,9 @@ c -------- c
      .u_1+)'
       endif
       if(bhhslnl1.ne.0.D0) then
-      write(nout,102) bhhslnl1,2,inel,-inel  ,'BR(H -> ~nu_eL  ~nu_eL*  
+      write(nout,102) bhhslnl1,2,inel,-inel  ,'BR(H -> ~nu_eL  ~nu_eL*
      . )'
-      write(nout,102) bhhslnl1,2,inmul,-inmul,'BR(H -> ~nu_muL ~nu_muL* 
+      write(nout,102) bhhslnl1,2,inmul,-inmul,'BR(H -> ~nu_muL ~nu_muL*
      . )'
       write(nout,102) bhhslnl1,2,intau1,-intau1,'BR(H -> ~nu_tauL ~nu_ta
      .uL*)'
@@ -8032,7 +8685,7 @@ c -------- c
 
       endif
 
-c      write(nout,102) bhhgd(1),2,in1,igrav  ,'BR(H -> ~chi_10 ~G     ) 
+c      write(nout,102) bhhgd(1),2,in1,igrav  ,'BR(H -> ~chi_10 ~G     )
 c      write(nout,102) bhhgd(2),2,in2,igrav  ,'BR(H -> ~chi_20 ~G     )'
 c      write(nout,102) bhhgd(3),2,in3,igrav  ,'BR(H -> ~chi_30 ~G     )'
 c      write(nout,102) bhhgd(4),2,in4,igrav  ,'BR(H -> ~chi_40 ~G     )'
@@ -8064,67 +8717,67 @@ c -------- c
       write(nout,102) abrc,2,ic,icb         ,'BR(A -> c       cb     )'
       endif
       if(abrt.ne.0.D0) then
-      write(nout,102) abrt,2,it,itb         ,'BR(A -> t       tb     )' 
+      write(nout,102) abrt,2,it,itb         ,'BR(A -> t       tb     )'
       endif
       if(abrg.ne.0.D0) then
-      write(nout,102) abrg,2,igl,igl        ,'BR(A -> g       g      )' 
+      write(nout,102) abrg,2,igl,igl        ,'BR(A -> g       g      )'
       endif
       if(abrga.ne.0.D0) then
-      write(nout,102) abrga,2,iga,iga       ,'BR(A -> gam     gam    )' 
+      write(nout,102) abrga,2,iga,iga       ,'BR(A -> gam     gam    )'
       endif
       if(abrzga.ne.0.D0) then
-      write(nout,102) abrzga,2,iz,iga       ,'BR(A -> Z       gam    )' 
+      write(nout,102) abrzga,2,iz,iga       ,'BR(A -> Z       gam    )'
       endif
       if(abrz.ne.0.D0) then
-      write(nout,102) abrz,2,iz,ihl         ,'BR(A -> Z       h      )' 
+      write(nout,102) abrz,2,iz,ihl         ,'BR(A -> Z       h      )'
       endif
       if(habrsc(1,1).ne.0.D0) then
-      write(nout,102) habrsc(1,1),2,ic1,-ic1,'BR(A -> ~chi_1+ ~chi_1-)' 
+      write(nout,102) habrsc(1,1),2,ic1,-ic1,'BR(A -> ~chi_1+ ~chi_1-)'
       endif
       if(habrsc(2,2).ne.0.D0) then
-      write(nout,102) habrsc(2,2),2,ic2,-ic2,'BR(A -> ~chi_2+ ~chi_2-)' 
+      write(nout,102) habrsc(2,2),2,ic2,-ic2,'BR(A -> ~chi_2+ ~chi_2-)'
       endif
       if(habrsc(1,2).ne.0.D0) then
-      write(nout,102) habrsc(1,2),2,ic1,-ic2,'BR(A -> ~chi_1+ ~chi_2-)' 
+      write(nout,102) habrsc(1,2),2,ic1,-ic2,'BR(A -> ~chi_1+ ~chi_2-)'
       endif
       if(habrsc(2,1).ne.0.D0) then
-      write(nout,102) habrsc(2,1),2,ic2,-ic1,'BR(A -> ~chi_2+ ~chi_1-)' 
+      write(nout,102) habrsc(2,1),2,ic2,-ic1,'BR(A -> ~chi_2+ ~chi_1-)'
       endif
-      habrsn1(1,2) = 2.D0*habrsn(1,2) 
-      habrsn1(1,3) = 2.D0*habrsn(1,3) 
+      habrsn1(1,2) = 2.D0*habrsn(1,2)
+      habrsn1(1,3) = 2.D0*habrsn(1,3)
       habrsn1(1,4) = 2.D0*habrsn(1,4)
-      habrsn1(2,3) = 2.D0*habrsn(2,3) 
-      habrsn1(2,4) = 2.D0*habrsn(2,4)  
-      habrsn1(3,4) = 2.D0*habrsn(3,4)  
+      habrsn1(2,3) = 2.D0*habrsn(2,3)
+      habrsn1(2,4) = 2.D0*habrsn(2,4)
+      habrsn1(3,4) = 2.D0*habrsn(3,4)
       if(habrsn(1,1).ne.0.D0) then
-      write(nout,102) habrsn(1,1),2,in1,in1 ,'BR(A -> ~chi_10 ~chi_10)' 
+      write(nout,102) habrsn(1,1),2,in1,in1 ,'BR(A -> ~chi_10 ~chi_10)'
       endif
       if(habrsn(2,2).ne.0.D0) then
-      write(nout,102) habrsn(2,2),2,in2,in2 ,'BR(A -> ~chi_20 ~chi_20)' 
+      write(nout,102) habrsn(2,2),2,in2,in2 ,'BR(A -> ~chi_20 ~chi_20)'
       endif
       if(habrsn(3,3).ne.0.D0) then
-      write(nout,102) habrsn(3,3),2,in3,in3 ,'BR(A -> ~chi_30 ~chi_30)' 
+      write(nout,102) habrsn(3,3),2,in3,in3 ,'BR(A -> ~chi_30 ~chi_30)'
       endif
       if(habrsn(4,4).ne.0.D0) then
-      write(nout,102) habrsn(4,4),2,in4,in4 ,'BR(A -> ~chi_40 ~chi_40)' 
+      write(nout,102) habrsn(4,4),2,in4,in4 ,'BR(A -> ~chi_40 ~chi_40)'
       endif
       if(habrsn1(1,2).ne.0.D0) then
-      write(nout,102) habrsn1(1,2),2,in1,in2,'BR(A -> ~chi_10 ~chi_20)' 
+      write(nout,102) habrsn1(1,2),2,in1,in2,'BR(A -> ~chi_10 ~chi_20)'
       endif
       if(habrsn1(1,3).ne.0.D0) then
-      write(nout,102) habrsn1(1,3),2,in1,in3,'BR(A -> ~chi_10 ~chi_30)' 
+      write(nout,102) habrsn1(1,3),2,in1,in3,'BR(A -> ~chi_10 ~chi_30)'
       endif
       if(habrsn1(1,4).ne.0.D0) then
-      write(nout,102) habrsn1(1,4),2,in1,in4,'BR(A -> ~chi_10 ~chi_40)' 
+      write(nout,102) habrsn1(1,4),2,in1,in4,'BR(A -> ~chi_10 ~chi_40)'
       endif
       if(habrsn1(2,3).ne.0.D0) then
-      write(nout,102) habrsn1(2,3),2,in2,in3,'BR(A -> ~chi_20 ~chi_30)' 
+      write(nout,102) habrsn1(2,3),2,in2,in3,'BR(A -> ~chi_20 ~chi_30)'
       endif
       if(habrsn1(2,4).ne.0.D0) then
-      write(nout,102) habrsn1(2,4),2,in2,in4,'BR(A -> ~chi_20 ~chi_40)' 
+      write(nout,102) habrsn1(2,4),2,in2,in4,'BR(A -> ~chi_20 ~chi_40)'
       endif
       if(habrsn1(3,4).ne.0.D0) then
-      write(nout,102) habrsn1(3,4),2,in3,in4,'BR(A -> ~chi_30 ~chi_40)' 
+      write(nout,102) habrsn1(3,4),2,in3,in4,'BR(A -> ~chi_30 ~chi_40)'
       endif
       if(habrst.ne.0.D0) then
       write(nout,102) habrst/2.D0,2,ist1,-ist2,'BR(A -> ~t_1    ~t_2*  )
@@ -8237,19 +8890,19 @@ c --------- c
       write(nout,102) hcbrsq1,2,iscl,-issl  ,'BR(H+ -> ~c_L    ~s_L*  )'
       endif
       if(hcbrstb(1,1).ne.0.D0) then
-      write(nout,102) hcbrstb(1,1),2,ist1,-isb1,'BR(H+ -> ~t_1    ~b_1* 
+      write(nout,102) hcbrstb(1,1),2,ist1,-isb1,'BR(H+ -> ~t_1    ~b_1*
      . )'
       endif
       if(hcbrstb(2,2).ne.0.D0) then
-      write(nout,102) hcbrstb(2,2),2,ist2,-isb2,'BR(H+ -> ~t_2    ~b_2* 
+      write(nout,102) hcbrstb(2,2),2,ist2,-isb2,'BR(H+ -> ~t_2    ~b_2*
      . )'
       endif
       if(hcbrstb(1,2).ne.0.D0) then
-      write(nout,102) hcbrstb(1,2),2,ist1,-isb2,'BR(H+ -> ~t_1    ~b_2* 
+      write(nout,102) hcbrstb(1,2),2,ist1,-isb2,'BR(H+ -> ~t_1    ~b_2*
      . )'
       endif
       if(hcbrstb(2,1).ne.0.D0) then
-      write(nout,102) hcbrstb(2,1),2,ist2,-isb1,'BR(H+ -> ~t_2    ~b_1* 
+      write(nout,102) hcbrstb(2,1),2,ist2,-isb1,'BR(H+ -> ~t_2    ~b_1*
      . )'
       endif
 
@@ -8259,17 +8912,17 @@ c --------- c
 
       endif
 c---- ramona changed 27/5/13
-      
+
       else
       write(nout,99)
       write(nout,100) 1000002,totlightstop,'stop1 decays (light stop)'
       write(nout,101)
       if(brlightstopcneut.gt.1d-8)  then
-      write(nout,102) brlightstopcneut,2,in1,ic,           'BR(~t1 ->  
+      write(nout,102) brlightstopcneut,2,in1,ic,           'BR(~t1 ->
      . c  ~chi_10)'
       endif
       if(brlightstopuneut.gt.1d-8) then
-       write(nout,102) brlightstopuneut,2,in1,iu,          'BR(~t1 -> 
+       write(nout,102) brlightstopuneut,2,in1,iu,          'BR(~t1 ->
      . u  ~chi_10)'
       endif
 
@@ -8279,49 +8932,49 @@ c---- ramona changed 25/11/14
 c----- end ramona changed
       if(i4bod.eq.0) then
       if(br4bodlightstop.gt.1d-8) then
-       write(nout,106) br4bodlightstop,4,in1,ib,iu,-id, 
+       write(nout,106) br4bodlightstop,4,in1,ib,iu,-id,
      .'BR(~t1 -> q  ~chi_10 f f)'
       endif
       else
-c----- comment: 25/4/14 bug fixed in output 4-body NDA=4 not 1  
+c----- comment: 25/4/14 bug fixed in output 4-body NDA=4 not 1
       if(br4bodbtau.gt.1d-8)then
        write(nout,106) br4bodbtau,4,in1,ib,-itau,intau,
      .'BR(~t1 -> b ~chi_10 tau nu_tau)'
       endif
       if(br4bodbmu.gt.1d-8)then
-       write(nout,106) br4bodbmu,4,in1,ib,-imu,inmu,          
+       write(nout,106) br4bodbmu,4,in1,ib,-imu,inmu,
      .'BR(~t1 -> b ~chi_10 mu nu_mu)'
       endif
       if(br4bodbelec.gt.1d-8)then
-       write(nout,106) br4bodbelec,4,in1,ib,-ie,ine,  
+       write(nout,106) br4bodbelec,4,in1,ib,-ie,ine,
      . 'BR(~t1 -> b ~chi_10 e nu_e)'
       endif
       if(br4bodbjets.gt.1d-8)then
-       write(nout,106) br4bodbjets,4,in1,ib,iu,-id,    
+       write(nout,106) br4bodbjets,4,in1,ib,iu,-id,
      . 'BR(~t1 -> b ~chi_10 j j)'
-      endif   
+      endif
       if(br4bodbbjet.gt.1d-8)then
-       write(nout,106) br4bodbbjet,4,in1,ib,-ib,iu,    
+       write(nout,106) br4bodbbjet,4,in1,ib,-ib,iu,
      .  'BR(~t1 -> b ~chi_10 b j)'
-      endif  
+      endif
        if(br4bodjettau.gt.1d-8)then
-       write(nout,106) br4bodjettau,4,in1,id,-itau,intau, 
+       write(nout,106) br4bodjettau,4,in1,id,-itau,intau,
      .  'BR(~t1 -> j ~chi_10 tau nu_tau)'
-      endif 
+      endif
        if(br4bodjetmu.gt.1d-8)then
-       write(nout,106) br4bodjetmu,4,in1,id,-imu,inmu,     
+       write(nout,106) br4bodjetmu,4,in1,id,-imu,inmu,
      . 'BR(~t1 -> j ~chi_10 mu nu_mu)'
-      endif  
+      endif
        if(br4bodjetelec.gt.1d-8)then
-       write(nout,106) br4bodjetelec,4,in1,id,-ie,ine,      
+       write(nout,106) br4bodjetelec,4,in1,id,-ie,ine,
      .  'BR(~t1 -> j ~chi_10 e nu_e)'
       endif
        if(br4bodjetb.gt.1d-8)then
-       write(nout,106) br4bodjetb,4,in1,id, -ib,iu,        
+       write(nout,106) br4bodjetb,4,in1,id, -ib,iu,
      .  'BR(~t1 -> j ~chi_10 b j)'
       endif
        if(br4bodjetjet.gt.1d-8)then
-       write(nout,106) br4bodjetjet,4,in1,id, -id,iu,        
+       write(nout,106) br4bodjetjet,4,in1,id, -id,iu,
      .  'BR(~t1 -> j ~chi_10 j j)'
       endif
       print*, "In the output file 'j' is a jet and can consist of u,d,c,
@@ -8331,11 +8984,11 @@ c----- ramona changed 25/11/14
       elseif(amsupq(1)-amneut(1).lt.sdmw+samb+flagdiff3bod4bod)then
 
        if(brlightstbchiw.gt.1d-8)then
-       write(nout,104) brlightstbchiw,3,in1, ib,iwc,        
+       write(nout,104) brlightstbchiw,3,in1, ib,iwc,
      .  'BR(~t1 -> b ~chi_10 W+^(*))'
       endif
        if(brlightstjchiw.gt.1d-8)then
-       write(nout,104) brlightstjchiw,3,in1,id, iwc,        
+       write(nout,104) brlightstjchiw,3,in1,id, iwc,
      .  'BR(~t1 -> j ~chi_10 W+^(*))'
       endif
 
@@ -8345,11 +8998,11 @@ c---- ramona changed 3/2/15
       if(amsupq(1)-amneut(1).lt.samt)then
 c---- end ramona changed
        if(brlightstbchiw.gt.1d-8)then
-       write(nout,104) brlightstbchiw,3,in1, ib,iwc,        
+       write(nout,104) brlightstbchiw,3,in1, ib,iwc,
      .  'BR(~t1 -> b ~chi_10 W+)'
       endif
        if(brlightstjchiw.gt.1d-8)then
-       write(nout,104) brlightstjchiw,3,in1,id, iwc,        
+       write(nout,104) brlightstjchiw,3,in1,id, iwc,
      .  'BR(~t1 -> j ~chi_10 W+)'
        endif
 c----- ramona changed 3/2/15
@@ -8360,14 +9013,14 @@ c---- ramona changed 20/2/15
 
 c---- end ramona changed
       if(brlightstneuttop.gt.1d-8)then
-      write(nout,102) brlightstneuttop,2,in1,it,           'BR(~t1 ->  
+      write(nout,102) brlightstneuttop,2,in1,it,           'BR(~t1 ->
      . t^(*)  ~chi_10)'
       endif
 c---- ramona changed 20/2/15
       else
 
       if(brlightstneuttop.gt.1d-8)then
-      write(nout,102) brlightstneuttop,2,in1,it,           'BR(~t1 ->  
+      write(nout,102) brlightstneuttop,2,in1,it,           'BR(~t1 ->
      . t  ~chi_10)'
       endif
       endif
@@ -8379,12 +9032,12 @@ c---- end ramona changed 3/2/15
 !       endif
 
 c---- end ramona changed
-      endif 
-      
- 
       endif
 
-      
+
+      endif
+
+
 
 c---- end ramona changed
 c      write(nout,102) bhcgd(1),2,ic1,igrav ,'BR(H+ -> ~chi_1+ ~G     )'
@@ -8392,7 +9045,7 @@ c      write(nout,102) bhcgd(2),2,ic2,ig
 
 c ---------------- output not a la Les Houches accord ---------------- c
 
-      else
+      elseif(flagoutput.eq.0.D0) then            !Modified by GAMBIT.
 
       write(21,*)
       write(21,*) "                              ======================"
@@ -8413,27 +9066,27 @@ c ---------------- output not a la Les H
       write(21,*)'SDECAY 1.5'
       write(21,*)'Authors: M.Muhlleitner, A.Djouadi and Y.Mambrini'
       write(21,*)'Comput.Phys.Commun.168(2005)46 [hep-ph/0311167]'
-      write(21,*)'HDECAY 3.4'  
+      write(21,*)'HDECAY 3.4'
       write(21,*)'By: A.Djouadi, J.Kalinowski, M.Muhlleitner and M.Spira
      .'
       write(21,*)'Comput.Phys.Commun.108(1998)56 [hep-ph/9704448]'
       write(21,*)
       write(21,*)'If not stated otherwise all couplings and masses'
-      write(21,*)'are given at the scale of the electroweak symmetry' 
+      write(21,*)'are given at the scale of the electroweak symmetry'
       write(21,*)'breaking Q=',scaleofewsb
       write(21,*)
       write(21,*)
 
-      write(21,*) " Notation: " 
+      write(21,*) " Notation: "
       write(21,*) " --------- "
 
-      write(21,*) " bosons: gm = gamma, gl = gluon, G = Gravitino" 
-      write(21,*) 
+      write(21,*) " bosons: gm = gamma, gl = gluon, G = Gravitino"
+      write(21,*)
 
       write(21,*) " fermions: up   = up,         ub   = up_bar,     dn =
-     . down,    db = down_bar, " 
+     . down,    db = down_bar, "
       write(21,*) "           ch   = charm,      cb   = charm_bar,  st =
-     . strange, sb = strange_bar," 
+     . strange, sb = strange_bar,"
       write(21,*) "           bt   = bottom,     bb   = bottom_bar, tp =
      . top,     tb = top_bar, "
       write(21,*) "           e+   = positron,   e-   = electron,   mu+=
@@ -8454,15 +9107,15 @@ c ---------------- output not a la Les H
       write(21,*) "            schl/r   = scharm_L/R,    scbl/r   = scha
      .rm_L/R_bar, "
       write(21,*) "            sstl/r   = sstrange_L/R,  ssbl/r   = sstr
-     .ange_L/R_bar, " 
+     .ange_L/R_bar, "
       write(21,*) "            stop1/2  = stop_1/2,      stop1/2b = stop
-     ._1/2_bar, " 
+     ._1/2_bar, "
       write(21,*) "            sbot1/2  = sbottom_1/2,   sbot1/2b = sbot
      .tom_1/2_bar,"
       write(21,*) "            sel+/-   = selectronL+/-, ser+/-   = sele
      .ctronR+/-, "
       write(21,*) "            smul+/-  = smuonL+/-,     smur+/-  = smuo
-     .nR+/-, "     
+     .nR+/-, "
       write(21,*) "            stau1+/- = stau_1+/-,     stau2+/- = stau
      ._2+/-, "
       write(21,*) "            snuel = sneutrino_el_L,   snuml  = sneutr
@@ -8470,9 +9123,9 @@ c ---------------- output not a la Les H
       write(21,*) "            snut1 = sneutrino_tau_1,  snuelb = sneutr
      .ino_el_L_bar "
       write(21,*) "            snumlb= sneutrino_mu_L_bar, snut1b = sneu
-     .trino_tau_1_bar "  
+     .trino_tau_1_bar "
 
-      write(21,*) 
+      write(21,*)
       write(21,*) " gauginos: chi0_1/2/3/4 = neutralino1/2/3/4, chi+_1/2
      . = chargino_1/2_+ "
 
@@ -8483,7 +9136,7 @@ c --------------------------------------
       if(check(2).ne.1) then
          write(nout,105)
          write(nout,50)'WARNING: The Block SMINPUTS has not been given.'
-         write(nout,50)'At least mb(mb)_MSbar is needed in SDECAY 
+         write(nout,50)'At least mb(mb)_MSbar is needed in SDECAY
      .however.'
       endif
 
@@ -8502,19 +9155,19 @@ c --------------------------------------
 
       if(check(4).ne.1.and.check(16).ne.1) then
          write(nout,105)
-         write(nout,50)'WARNING: AU has not been given. It is needed in 
+         write(nout,50)'WARNING: AU has not been given. It is needed in
      .SDECAY however.'
       endif
 
       if(check(4).ne.1.and.check(17).ne.1) then
          write(nout,105)
-         write(nout,50)'WARNING: AD has not been given. It is needed in 
+         write(nout,50)'WARNING: AD has not been given. It is needed in
      .SDECAY however.'
       endif
 
       if(check(4).ne.1.and.check(18).ne.1) then
          write(nout,105)
-         write(nout,50)'WARNING: AE has not been given. It is needed in 
+         write(nout,50)'WARNING: AE has not been given. It is needed in
      .SDECAY however.'
       endif
 
@@ -8562,7 +9215,7 @@ c --------------------------------------
 
       if(check(12).ne.1) then
          write(nout,105)
-         write(nout,50)'WARNING: The Block ALPHA has not been given. It 
+         write(nout,50)'WARNING: The Block ALPHA has not been given. It
      .is needed in SDECAY however.'
       endif
 
@@ -8582,19 +9235,19 @@ c --------------------------------------
 
       if(check(19).ne.1) then
          write(nout,105)
-         write(nout,50)'WARNING: The Block YU has not been given. It is 
+         write(nout,50)'WARNING: The Block YU has not been given. It is
      .needed in SDECAY however.'
       endif
 
       if(check(20).ne.1) then
          write(nout,105)
-         write(nout,50)'WARNING: The Block YD has not been given. It is 
+         write(nout,50)'WARNING: The Block YD has not been given. It is
      .needed in SDECAY however.'
       endif
 
       if(check(21).ne.1) then
          write(nout,105)
-         write(nout,50)'WARNING: The Block YE has not been given. It is 
+         write(nout,50)'WARNING: The Block YE has not been given. It is
      .needed in SDECAY however.'
       endif
 
@@ -8615,9 +9268,9 @@ c --------------------------------------
 
       if(warning(2).eq.1.D0) then
          write(nout,105)
-         write(nout,50)'WARNING: For the gauge couplings g1 and g2 the 
+         write(nout,50)'WARNING: For the gauge couplings g1 and g2 the
      .DRbar values at the scale Q are not given.'
-         write(nout,50)'They are calculated instead from alpha_ew_MSbar 
+         write(nout,50)'They are calculated instead from alpha_ew_MSbar
      .at M_Z.'
          write(nout,50)'The decay widths and the QCD corrections cannot
      .be calculated consistently.'
@@ -8754,7 +9407,7 @@ c --------------------------------------
       write(21,*) "   gluino"
       write(21,*) mgluino
       write(21,*)
-      write(21,*) "   supl         supr       sdnl        sdnr"  
+      write(21,*) "   supl         supr       sdnl        sdnr"
       write(21,*) asup1,asup2,asdown1,asdown2
       write(21,*)
       write(21,*) "   schl         schr       sstl        sstr"
@@ -8777,7 +9430,7 @@ c --------------------------------------
       write(21,*) mgravitino
       endif
 
-      write(21,*) 
+      write(21,*)
       write(21,*)
       write(21,*) " Mass matrices and mixing angles"
       write(21,*) " -------------------------------"
@@ -8790,7 +9443,7 @@ c --------------------------------------
       if(check(9).eq.1.and.check(10).eq.1.and.check(11).eq.1) then
          write(21,*)
          write(21,*) "  theta_t      theta_b    theta_tau"
-         write(21,*) sdthet,sdtheb,sdthel 
+         write(21,*) sdthet,sdtheb,sdthel
       endif
       if(check(6).eq.1) then
          write(21,*)
@@ -8848,8 +9501,8 @@ c --------------------------------------
          elseif(idrbar.eq.0) then
             write(21,*) " Q =",scaleofcoupling
          endif
-      endif 
-      if(scalechoice.eq.1.D0) then 
+      endif
+      if(scalechoice.eq.1.D0) then
          write(21,*) " alpha_s DRbar   =",alsew
       elseif(scalechoice.eq.2.D0) then
          if(idrbar.eq.1) then
@@ -8906,10 +9559,10 @@ c --------------------------------------
          elseif(idrbar.eq.0) then
             write(21,*) " Q =",scaleofcoupling
          endif
-      endif 
+      endif
       write(21,*)
       write(21,*) " y_tau DRbar =",ytau
-      if(scalechoice.eq.1.D0) then 
+      if(scalechoice.eq.1.D0) then
          write(21,*) " y_t DRbar   =",yt
          write(21,*) " y_b DRbar   =",yb
       elseif(scalechoice.eq.2.D0) then
@@ -8962,7 +9615,7 @@ c ---------------------------- c
 c Inclusion of QCD corrections c
 c ---------------------------- c
 
-      write(21,*) 
+      write(21,*)
       write(21,*)
       write(21,*) "==================="
       write(21,*) "| The decay table |"
@@ -8979,7 +9632,7 @@ c ---------------------------- c
          write(nout,*) '                                   squark -> glu
      .ino  + quark'
          write(nout,*) ' are included.'
-         write(21,*) 
+         write(21,*)
       endif
 
       if(flagmulti.eq.1.D0) then
@@ -9001,7 +9654,7 @@ c ---------------------------- c
       endif
 
       if(flagnlspgmsb.eq.1.D0) then
-         write(nout,*) ' Possible decays of the NLSP in GMSB models are 
+         write(nout,*) ' Possible decays of the NLSP in GMSB models are
      .included.'
          write(21,*)
       endif
@@ -9045,7 +9698,7 @@ c ---------- c
             write(21,*) " ---------------------------"
       endif
       endif
-      
+
 c ------------- c
 c Gluino decays c
 c ------------- c
@@ -9749,7 +10402,7 @@ c -------------- c
       write(21,*) " SDOWNL STABLE "
       write(21,*) " ------------- "
 
-      endif 
+      endif
 
 c -------------- c
 c Sdown_R decays c
@@ -9929,7 +10582,7 @@ c Selectron_R decays c
 c ------------------ c
 
       if(selrtot2.ne.0.D0) then
-      write(21,*)		
+      write(21,*)
       write(21,*) " SELECTRONR DECAYS ",selrtot2
       write(21,*) " ----------------- "
       write(21,201) " ser- --> chi0_1 e- ",selrneute(1),
@@ -10013,7 +10666,7 @@ c Stau_1 decays c
 c ------------- c
 
       if(stau1tot2.ne.0.D0) then
-      write(21,*)			
+      write(21,*)
       write(21,*) " STAU1 DECAYS ",stau1tot2
       write(21,*) " ------------ "
       write(21,201) " stau1 --> chi0_1 tau-",stau1neut(1),
@@ -10753,7 +11406,7 @@ c ------------------ c
       write(21,201) " chi0_2 --> chi0_1 st   sb  ",xneutst(2,1),
      .                                             brneutst(2,1)
       write(21,201) " chi0_2 --> chi0_1 tp   tb  ",xneuttop(2,1),
-     .                                             brneuttop(2,1)      
+     .                                             brneuttop(2,1)
       write(21,201) " chi0_2 --> chi0_1 bt   bb  ",xneutbot(2,1),
      .                                             brneutbot(2,1)
       write(21,201) " chi0_2 --> chi0_1 e+   e-  ",xneutel(2,1),
@@ -10957,7 +11610,7 @@ c ------------------ c
       write(21,201) " chi0_3 --> chi0_1 st   sb  ",xneutst(3,1),
      .                                             brneutst(3,1)
       write(21,201) " chi0_3 --> chi0_1 tp   tb  ",xneuttop(3,1),
-     .                                             brneuttop(3,1)      
+     .                                             brneuttop(3,1)
       write(21,201) " chi0_3 --> chi0_1 bt   bb  ",xneutbot(3,1),
      .                                             brneutbot(3,1)
       write(21,201) " chi0_3 --> chi0_1 e+   e-  ",xneutel(3,1),
@@ -10981,7 +11634,7 @@ c ------------------ c
       write(21,201) " chi0_3 --> chi0_2 st   sb  ",xneutst(3,2),
      .                                             brneutst(3,2)
       write(21,201) " chi0_3 --> chi0_2 tp   tb  ",xneuttop(3,2),
-     .                                             brneuttop(3,2)      
+     .                                             brneuttop(3,2)
       write(21,201) " chi0_3 --> chi0_2 bt   bb  ",xneutbot(3,2),
      .                                             brneutbot(3,2)
       write(21,201) " chi0_3 --> chi0_2 e+   e-  ",xneutel(3,2),
@@ -11195,7 +11848,7 @@ c ------------------ c
       write(21,201) " chi0_4 --> chi0_1 st   sb  ",xneutst(4,1),
      .                                             brneutst(4,1)
       write(21,201) " chi0_4 --> chi0_1 tp   tb  ",xneuttop(4,1),
-     .                                             brneuttop(4,1)      
+     .                                             brneuttop(4,1)
       write(21,201) " chi0_4 --> chi0_1 bt   bb  ",xneutbot(4,1),
      .                                             brneutbot(4,1)
       write(21,201) " chi0_4 --> chi0_1 e+   e-  ",xneutel(4,1),
@@ -11219,7 +11872,7 @@ c ------------------ c
       write(21,201) " chi0_4 --> chi0_2 st   sb  ",xneutst(4,2),
      .                                             brneutst(4,2)
       write(21,201) " chi0_4 --> chi0_2 tp   tb  ",xneuttop(4,2),
-     .                                             brneuttop(4,2)      
+     .                                             brneuttop(4,2)
       write(21,201) " chi0_4 --> chi0_2 bt   bb  ",xneutbot(4,2),
      .                                             brneutbot(4,2)
       write(21,201) " chi0_4 --> chi0_2 e+   e-  ",xneutel(4,2),
@@ -11243,7 +11896,7 @@ c ------------------ c
       write(21,201) " chi0_4 --> chi0_3 st   sb  ",xneutst(4,3),
      .                                             brneutst(4,3)
       write(21,201) " chi0_4 --> chi0_3 tp   tb  ",xneuttop(4,3),
-     .                                             brneuttop(4,3)      
+     .                                             brneuttop(4,3)
       write(21,201) " chi0_4 --> chi0_3 bt   bb  ",xneutbot(4,3),
      .                                             brneutbot(4,3)
       write(21,201) " chi0_4 --> chi0_3 e+   e-  ",xneutel(4,3),
@@ -11354,12 +12007,12 @@ c -------- c
      .                                     hlbrsc(1,2)
       write(21,201) " h --> chi+_2 chi-_1",hlbrsc(2,1)*hlwdth,
      .                                     hlbrsc(2,1)
-      hlbrsn1(1,2) = 2.D0*hlbrsn(1,2) 
-      hlbrsn1(1,3) = 2.D0*hlbrsn(1,3) 
+      hlbrsn1(1,2) = 2.D0*hlbrsn(1,2)
+      hlbrsn1(1,3) = 2.D0*hlbrsn(1,3)
       hlbrsn1(1,4) = 2.D0*hlbrsn(1,4)
-      hlbrsn1(2,3) = 2.D0*hlbrsn(2,3) 
-      hlbrsn1(2,4) = 2.D0*hlbrsn(2,4)  
-      hlbrsn1(3,4) = 2.D0*hlbrsn(3,4)  
+      hlbrsn1(2,3) = 2.D0*hlbrsn(2,3)
+      hlbrsn1(2,4) = 2.D0*hlbrsn(2,4)
+      hlbrsn1(3,4) = 2.D0*hlbrsn(3,4)
       write(21,201) " h --> chi0_1 chi0_1",hlbrsn(1,1)*hlwdth,
      .                                     hlbrsn(1,1)
       write(21,201) " h --> chi0_2 chi0_2",hlbrsn(2,2)*hlwdth,
@@ -11383,10 +12036,10 @@ c -------- c
       do i=1,4,1
          bhlgd(i) = whlgd(i)/hlwdth
       end do
-c      write(21,201) bhlgd(1),2,in1,igrav  ,'BR(h -> ~chi_10 ~G     )' 
-c      write(21,201) bhlgd(2),2,in2,igrav  ,'BR(h -> ~chi_20 ~G     )' 
-c      write(21,201) bhlgd(3),2,in3,igrav  ,'BR(h -> ~chi_30 ~G     )' 
-c      write(21,201) bhlgd(4),2,in4,igrav  ,'BR(h -> ~chi_40 ~G     )' 
+c      write(21,201) bhlgd(1),2,in1,igrav  ,'BR(h -> ~chi_10 ~G     )'
+c      write(21,201) bhlgd(2),2,in2,igrav  ,'BR(h -> ~chi_20 ~G     )'
+c      write(21,201) bhlgd(3),2,in3,igrav  ,'BR(h -> ~chi_30 ~G     )'
+c      write(21,201) bhlgd(4),2,in4,igrav  ,'BR(h -> ~chi_40 ~G     )'
       bhlslnl1 = bhlslnl/3.D0
       bhlslel1 = bhlslel/2.D0
       bhlsler1 = bhlsler/2.D0
@@ -11468,12 +12121,12 @@ c -------- c
      .                                     hhbrsc(1,2)
       write(21,201) " H --> chi+_2 chi-_1",hhbrsc(2,1)*hhwdth,
      .                                     hhbrsc(2,1)
-      hhbrsn1(1,2) = 2.D0*hhbrsn(1,2) 
-      hhbrsn1(1,3) = 2.D0*hhbrsn(1,3) 
+      hhbrsn1(1,2) = 2.D0*hhbrsn(1,2)
+      hhbrsn1(1,3) = 2.D0*hhbrsn(1,3)
       hhbrsn1(1,4) = 2.D0*hhbrsn(1,4)
-      hhbrsn1(2,3) = 2.D0*hhbrsn(2,3) 
-      hhbrsn1(2,4) = 2.D0*hhbrsn(2,4)  
-      hhbrsn1(3,4) = 2.D0*hhbrsn(3,4)  
+      hhbrsn1(2,3) = 2.D0*hhbrsn(2,3)
+      hhbrsn1(2,4) = 2.D0*hhbrsn(2,4)
+      hhbrsn1(3,4) = 2.D0*hhbrsn(3,4)
       write(21,201) " H --> chi0_1 chi0_1",hhbrsn(1,1)*hhwdth,
      .                                     hhbrsn(1,1)
       write(21,201) " H --> chi0_2 chi0_2",hhbrsn(2,2)*hhwdth,
@@ -11576,12 +12229,12 @@ c -------- c
      .                                     habrsc(1,2)
       write(21,201) " A --> chi+_2 chi-_1",habrsc(2,1)*awdth,
      .                                     habrsc(2,1)
-      habrsn1(1,2) = 2.D0*habrsn(1,2) 
-      habrsn1(1,3) = 2.D0*habrsn(1,3) 
+      habrsn1(1,2) = 2.D0*habrsn(1,2)
+      habrsn1(1,3) = 2.D0*habrsn(1,3)
       habrsn1(1,4) = 2.D0*habrsn(1,4)
-      habrsn1(2,3) = 2.D0*habrsn(2,3) 
-      habrsn1(2,4) = 2.D0*habrsn(2,4)  
-      habrsn1(3,4) = 2.D0*habrsn(3,4)  
+      habrsn1(2,3) = 2.D0*habrsn(2,3)
+      habrsn1(2,4) = 2.D0*habrsn(2,4)
+      habrsn1(3,4) = 2.D0*habrsn(3,4)
       write(21,201) " A --> chi0_1 chi0_1",habrsn(1,1)*awdth,
      .                                     habrsn(1,1)
       write(21,201) " A --> chi0_2 chi0_2",habrsn(2,2)*awdth,
@@ -11613,10 +12266,10 @@ c -------- c
       do i=1,4,1
          bhagd(i) = whagd(i)/awdth
       end do
-c      write(nout,102) bhagd(1),2,in1,igrav  ,'BR(A -> ~chi_10 ~G     )' 
-c      write(nout,102) bhagd(2),2,in2,igrav  ,'BR(A -> ~chi_20 ~G     )' 
-c      write(nout,102) bhagd(3),2,in3,igrav  ,'BR(A -> ~chi_30 ~G     )' 
-c      write(nout,102) bhagd(4),2,in4,igrav  ,'BR(A -> ~chi_40 ~G     )' 
+c      write(nout,102) bhagd(1),2,in1,igrav  ,'BR(A -> ~chi_10 ~G     )'
+c      write(nout,102) bhagd(2),2,in2,igrav  ,'BR(A -> ~chi_20 ~G     )'
+c      write(nout,102) bhagd(3),2,in3,igrav  ,'BR(A -> ~chi_30 ~G     )'
+c      write(nout,102) bhagd(4),2,in4,igrav  ,'BR(A -> ~chi_40 ~G     )'
       elseif(awdth.eq.0.D0) then
          write(21,*)
          write(21,*) " A STABLE "
@@ -11676,8 +12329,8 @@ c --------- c
       do i=1,4,1
          bhcgd(i) = whcgd(i)/hcwdth
       end do
-c      write(nout,102) bhcgd(1),2,ic1,igrav ,'BR(H+ -> ~chi_1+ ~G     )' 
-c      write(nout,102) bhcgd(2),2,ic2,igrav ,'BR(H+ -> ~chi_2+ ~G     )' 
+c      write(nout,102) bhcgd(1),2,ic1,igrav ,'BR(H+ -> ~chi_1+ ~G     )'
+c      write(nout,102) bhcgd(2),2,ic2,igrav ,'BR(H+ -> ~chi_2+ ~G     )'
 
       elseif(hcwdth.eq.0.D0) then
          write(21,*)
@@ -11688,7 +12341,7 @@ c      write(nout,102) bhcgd(2),2,ic2,ig
       endif
 
 c ==================================================================== c
-c                       end of the output file                          
+c                       end of the output file
 c ==================================================================== c
 
  49   format('#',1x,A,E16.8)
@@ -11722,7 +12375,7 @@ c ======================================
      .1x,A)
  106  format(3x,1P,E16.8,0P,3x,I2,3x,(I9,1x),(I9,1x),(I9,1x),(I9,1x),
      .2x,'#',1x,A)
- 105  format('#') 
+ 105  format('#')
 
  201  format(1x,A,1x,E16.9,1x,E16.9)
  202  format(1x,A,1x,E18.6,1x,E18.6,1x,E18.6,1x,E18.6)
@@ -11762,13 +12415,13 @@ c--- ramona changed size of array check
       dimension uu(2,2),vv(2,2),zz(4,4),zp(4,4)
 c------ ramona chnaged 27/5/13
       double precision amsupq(6), amsdownq(6), amslepton(6)
-            double precision vckm(3,3), msq2(3,3), msu2(3,3), 
+            double precision vckm(3,3), msq2(3,3), msu2(3,3),
      .msd2(3,3), td(3,3), tu(3,3),
      . usqmix(6,6), dsqmix(6,6), amsneutrino(3)
        integer ifavvio
       COMMON/msfermion/amsupq, amsdownq, amslepton, amsneutrino
-            COMMON/flavviolation/vckm, msq2, msd2, msu2, td, 
-     .tu, usqmix, ifavvio, dsqmix
+      COMMON/flavviolation/vckm, msq2, msd2, msu2, td,
+     .tu, usqmix, dsqmix, ifavvio
 c------end ramona chnaged
 c -------------- common block given by SD_read_leshouches ------------ c
       COMMON/SD_leshouches1/spinfo1,spinfo2,modselval,mincom,extcom,
@@ -11885,7 +12538,7 @@ c -- Z pole mass --
          endif
 
 c -- calculation of sin_thetaW from alpha_ew_MSbar and the Z pole mass
-         sw2calc = 1.D0/2.D0 - 
+         sw2calc = 1.D0/2.D0 -
      .        dsqrt(1.D0/4.D0-pi*salpha_MS/dsqrt(2.D0)/sdgf/amzp**2)
          swcalc  = dsqrt(sw2calc)
 
@@ -11896,7 +12549,7 @@ c -- W pole mass --
             amwp = dsqrt(amzp**2*(1.D0-sw2calc))
          endif
 
-c -- v at the scale Q --         
+c -- v at the scale Q --
          if(hmixval(3).eq.unlikely) then
             vewsb = 1.D0/dsqrt(dsqrt(2.D0)*sdgf)
          else
@@ -11908,10 +12561,10 @@ c---- ramona changed 6/6/13
 
 c -- the scale Q at which the couplings are given --
 !             if(extval(0).ne.unlikely.and.extval(0).ne.-1.D0) then
-! 
+!
 !                scaleofewsb = extval(0)
 !                ewsbscale = scaleofewsb
-! 
+!
 !             else
 c---- end ramona changed
                qvalsum = 0.D0
@@ -11922,7 +12575,7 @@ c---- end ramona changed
                      isum = isum + 1
                   endif
                end do
-               
+
                if(isum.ne.0) then
                   scaleofewsb = qvalsum/dble(isum)
                else
@@ -11933,7 +12586,7 @@ c--- ramona changed 6/6/13
 !             endif
 ! c---- end ramona changed
 
-	  
+
 c -- the DRbar couplings g1,g2,alpha_s at the scale Q --
          if(gaugeval(3).ne.0.D0) then
             alsew = gaugeval(3)**2/4.D0/pi
@@ -11945,11 +12598,11 @@ c -- the DRbar couplings g1,g2,alpha_s a
          if(gaugeval(1).ne.0.D0) then
             g1ew  = gaugeval(1)
          endif
-! 
+!
          if(gaugeval(2).ne.0.D0) then
             g2ew  = gaugeval(2)
 c -- g**2 at the scale Q --
-            g2    = gaugeval(2)**2     
+            g2    = gaugeval(2)**2
          endif
 
 c -- in case the gauge couplings are not given at the scale Q --
@@ -11978,8 +12631,8 @@ c maggie question!
 !          if(smval(2).ne.0.D0) then
 !             GF = smval(2)
 !          endif
-! 
-! 
+!
+!
 ! c -- Z pole mass --
 !          if(smval(4).ne.0.D0) then
 !             sdmz = smval(4)
@@ -12004,16 +12657,16 @@ c maggie question!
 !          sw2calc = 1d0-cw2calc
 !          cwcalc  = dsqrt(cw2calc)
 !          swcalc  = dsqrt(sw2calc)
-! 	 
-! 	
-! c -- v at the scale Q --         
+!
+!
+! c -- v at the scale Q --
 !           if(smval(2).eq.0.D0.and.hmixval(3).ne.unlikely) then
 !            vewsb = hmixval(3)
 !            gf = 1/dsqrt(2.D0)/vewsb**2
 !           else
 !           vewsb = 1.D0/dsqrt(dsqrt(2.D0)*gf)
 !           endif
-!           
+!
 !           g2ew = 2d0*sdmw/vewsb
 !           g1ew = g2ew*swcalc/cwcalc
 ! c -- Z and W mass at the scale Q if g1ew and g2ew are given --
@@ -12027,11 +12680,11 @@ c maggie question!
 !          sw2calc = 1-cw2calc
 !          cwcalc  = dsqrt(cw2calc)
 !          swcalc  = dsqrt(sw2calc)
-! 
+!
 !          endif
 c---- end ramona changed
- 	
-c -- the value for sw calculated from g, gprime given in the DRbar 
+
+c -- the value for sw calculated from g, gprime given in the DRbar
 c -- scheme at the scale Q if g1ew and g2ew are given
          if(gaugeval(1).ne.0.D0.and.gaugeval(2).ne.0.D0) then
             tw = gaugeval(1)/gaugeval(2)
@@ -12052,7 +12705,7 @@ c -- taken. Other possibilities are init
           amuref = ewsbscale
 
 
-c -- neutralino and chargino masses --      
+c -- neutralino and chargino masses --
 
          amneut(1)=dabs(massval(28))
          amneut(2)=dabs(massval(29))
@@ -12118,7 +12771,7 @@ c----- ramona changed 27/5/2013
       amsupq(5)=massval(13)
       amsupq(6)=massval(17)
       amsdownq(1)=massval(6)
-      amsdownq(2)=massval(10) 
+      amsdownq(2)=massval(10)
       amsdownq(3)=massval(14)
       amsdownq(4)=massval(7)
       amsdownq(5)=massval(11)
@@ -12132,7 +12785,7 @@ c----- ramona changed 27/5/2013
       amsneutrino(1)=massval(20)
       amsneutrino(2)=massval(23)
       amsneutrino(3)=massval(26)
-      
+
       endif
 
 c------ end ramona chnaged
@@ -12190,7 +12843,7 @@ c -- mb(mb)_MSbar --
          call SD_runmbmb(amzp,runmbz)
       endif
 
-      if(flagshsin.eq.1.D0) then
+      if(flagshsin.le.1.D0) then                 !Modified by GAMBIT.
          samb = massval(34)
       endif
 
@@ -12445,7 +13098,7 @@ c---- ramona changed size of check array
      .          extcom(0:100)*20,softcom(1:100)*20,hmixcom(1:10)*20
       logical done
 c----- ramona chnaged 7/6/13
-      double precision vckm(3,3), msq2(3,3), msu2(3,3), 
+      double precision vckm(3,3), msq2(3,3), msu2(3,3),
      .msd2(3,3), td(3,3), tu(3,3),
      . usqmix(6,6), dsqmix(6,6), selmix(6,6)
        character*20 test
@@ -12464,8 +13117,8 @@ c---- end ramona changed
       COMMON/SD_checkval/check
       common/SD_selectron/selmix
 c----ramona changed 7/6/13
-            COMMON/flavviolation/vckm, msq2, msd2, msu2, td, 
-     .tu, usqmix, ifavvio, dsqmix
+            COMMON/flavviolation/vckm, msq2, msd2, msu2, td,
+     .tu, usqmix, dsqmix, ifavvio
 c---- end ramona chnaged
 c -- i_sd_mbmb = 0 ensures that the routine is called which calulates --
 c -- the mbpole mass from mb(mb)_MSbar = smval(5)                 --
@@ -12473,14 +13126,14 @@ c -- the mbpole mass from mb(mb)_MSbar =
 
 c -- start from the beginning of the file slhaspectrum.in --
       rewind(ninlha)
-	
+
 c -- initialization of the check array --
 c--- ramona changed size of check array
       do i1=1,30,1
          check(i1) = 0
       end do
 
-c -- the scale Q -- 
+c -- the scale Q --
       do i=1,20,1
          qvalue(i) = 0.D0
       end do
@@ -12502,7 +13155,7 @@ c a trick to jump over undefined paramet
 
 c ------------------------------------------------------------------- c
 c---- ramona changed 8/3/13 ---must be added for flavour violating case, yu, ... not neceessary in this case
-          
+
 	  if(ifavvio.eq.1) then
 	  check(16)=1
 	  check(17)=1
@@ -12532,7 +13185,7 @@ c--- ramona changed on 7/6/13 to 30 for
 c -- read in new line --
          line1=' '
          read(ninlha,'(a6,a100)',end=9900) line1,line2
-         
+
 c -- rewrite line1(1:6) and line2(1:20) to upper case --
          do j1=1,6,1
             if(line1(j1:j1).ne.'#') then
@@ -12567,11 +13220,11 @@ c---- end ramona changed
                else
                   print*,'SD_read_leshouches: problem in MODSEL'
                endif
-	      
+
 c -- look for Block SMINPUTS --
             elseif(line2(1:8).eq.'SMINPUTS') then
                call SD_READ_SMINPUTS(ninlha,smval,done)
-             
+
                if (done) then
                   check(2) = 1
                   goto 1111
@@ -12646,7 +13299,7 @@ c -- look for Block STOPMIX --
                   check(9) = 1
                   goto 1111
                else
-                  print*,'SD_read_leshouches: problem in STOPMIX' 
+                  print*,'SD_read_leshouches: problem in STOPMIX'
                endif
 
 c -- look for Block SBOTMIX --
@@ -12656,7 +13309,7 @@ c -- look for Block SBOTMIX --
                   check(10) = 1
                   goto 1111
                else
-                  print*,'SD_read_leshouches: problem in SBOTMIX' 
+                  print*,'SD_read_leshouches: problem in SBOTMIX'
                endif
 
 c -- look for Block STAUMIX --
@@ -12666,7 +13319,7 @@ c -- look for Block STAUMIX --
                   check(11) = 1
                   goto 1111
                else
-                  print*,'SD_read_leshouches: problem in STAUMIX' 
+                  print*,'SD_read_leshouches: problem in STAUMIX'
                endif
 
 c -- look for Block ALPHA --
@@ -12812,10 +13465,10 @@ c		 backspace ninlha
                call readqval(ninlha, qval)
                qvalue(11)=qval
                call SLHA_READ_MSQ2(ninlha,msq2,done)
-               
+
                if (done) then
                   check(23) = 1
-                 
+
                   goto 1111
                else
                   print*,'SLHA_read_leshouches: problem in MSQ2'
@@ -12827,7 +13480,7 @@ c		 backspace ninlha
                call SLHA_READ_MSD2(ninlha,msd2,done)
                if (done) then
                   check(24) = 1
-                 
+
                   goto 1111
                else
                   print*,'SLHA_read_leshouches: problem in MSD2'
@@ -12839,7 +13492,7 @@ c		 backspace ninlha
                call SLHA_READ_MSU2(ninlha,msu2,done)
                if (done) then
                   check(25) = 1
-                 
+
                   goto 1111
                else
                   print*,'SLHA_read_leshouches: problem in MSU2'
@@ -12851,7 +13504,7 @@ c		 backspace ninlha
                call SLHA_READ_TD(ninlha,td,done)
                if (done) then
                   check(26) = 1
-                 
+
                   goto 1111
                else
                   print*,'SLHA_read_leshouches: problem in TD'
@@ -12863,7 +13516,7 @@ c		 backspace ninlha
                call SLHA_READ_TU(ninlha,tu,done)
                if (done) then
                   check(27) = 1
-                 
+
                   goto 1111
                else
                   print*,'SLHA_read_leshouches: problem in TU'
@@ -12871,57 +13524,57 @@ c		 backspace ninlha
 		elseif(line2(1:6).eq.'USQMIX') then
                call readqval(ninlha, qval)
                qvalue(14)=qval
-               
+
                call SLHA_READ_USQMIX(ninlha,usqmix,done)
-               
-	       
+
+
                if (done) then
                   check(22) = 1
-                 
+
                   goto 1111
                else
                 print*,'SLHA_read_leshouches: problem in USQMIX'
                endif
-                 
+
 	      	elseif(line2(1:6).eq.'DSQMIX') then
 c		 backspace ninlha
-               
+
                call readqval(ninlha, qval)
                qvalue(14)=qval
                call SLHA_READ_DSQMIX(ninlha,dsqmix,done)
                if (done) then
                   check(28) = 1
-                 
+
                   goto 1111
                else
                   print*,'SLHA_read_leshouches: problem in DSQMIX'
                endif
       	      elseif(line2(1:6).eq.'SELMIX') then
 c		 backspace ninlha
-               
+
                call readqval(ninlha, qval)
                qvalue(22)=qval
                call SLHA_READ_SELMIX(ninlha,selmix,done)
-	       
+
                if (done) then
                   check(30) = 1
-                 
+
                   goto 1111
                else
                   print*,'SLHA_read_leshouches: problem in SELMIX'
                endif
-			
+
               	      	elseif(line2(1:5).eq.'VCKM ') then
 c		 backspace ninlha
-               
+
                call readqval(ninlha, qval)
                qvalue(21)=qval
-               
+
                call SLHA_READ_VCKM(ninlha,vckm,done)
-               
+
                if (done) then
                   check(29) = 1
-                 
+
                   goto 1111
                else
                   print*,'SLHA_read_leshouches: problem in VCKM'
@@ -12975,7 +13628,7 @@ c -- decide what it is and read the line
          if (line1.eq.' ') then
             backspace ninlha
             read(ninlha,'(1x,i5,1x,i5,3x,a100)') idum1,idum2,line3
-	    
+
             if(idum1.eq.1) then
                imod(1) = idum1
                imod(2) = idum2
@@ -13056,7 +13709,7 @@ c -- mtau, pole mass --
             elseif(idum.eq.7) then
                smval(7) = val
             endif
-            
+
          elseif(line1.eq.'#') then
             go to 1111
          elseif(line1.eq.'b'.or.line1.eq.'B'.or.line1.eq.'d'.or.line1.eq
@@ -13105,7 +13758,7 @@ c -- decide what it is and read the line
             end do
 
 c -- i=3: value for tanbeta(MZ) --
-            
+
          elseif(line1.eq.'#') then
             goto 1111
          elseif(line1.eq.'b'.or.line1.eq.'B'.or.line1.eq.'d'.or.line1.eq
@@ -13301,7 +13954,7 @@ c -- value for m_b pole mass --
                massval(34) = val
 c -- value for the gravitino mass --
             elseif(idum.eq.1000039) then
-               massval(35) = val  
+               massval(35) = val
             endif
 
          elseif(line1.eq.'#') then
@@ -13380,7 +14033,7 @@ c -- the values for the neutralino mixin
             elseif(idum1.eq.4.and.idum2.eq.4) then
                nmixval(4,4) = val
             endif
-            
+
          elseif(line1.eq.'#') then
             goto 1111
          elseif(line1.eq.'b'.or.line1.eq.'B'.or.line1.eq.'d'.or.line1.eq
@@ -13433,7 +14086,7 @@ c -- the values for the chargino mixing
             elseif(idum1.eq.2.and.idum2.eq.2) then
                umixval(2,2) = val
             endif
-            
+
          elseif(line1.eq.'#') then
             goto 1111
          elseif(line1.eq.'b'.or.line1.eq.'B'.or.line1.eq.'d'.or.line1.eq
@@ -13486,7 +14139,7 @@ c -- the values for the chargino mixing
             elseif(idum1.eq.2.and.idum2.eq.2) then
                vmixval(2,2) = val
             endif
-            
+
          elseif(line1.eq.'#') then
             goto 1111
          elseif(line1.eq.'b'.or.line1.eq.'B'.or.line1.eq.'d'.or.line1.eq
@@ -13540,7 +14193,7 @@ c -- m(1,2) = sin(theta), m(2,1) = -sin(
             elseif(idum1.eq.2.and.idum2.eq.2) then
                stopmixval(2,2) = val
             endif
-            
+
          elseif(line1.eq.'#') then
             goto 1111
          elseif(line1.eq.'b'.or.line1.eq.'B'.or.line1.eq.'d'.or.line1.eq
@@ -13594,7 +14247,7 @@ c -- m(1,2) = sin(theta), m(2,1) = -sin(
             elseif(idum1.eq.2.and.idum2.eq.2) then
                sbotmixval(2,2) = val
             endif
-            
+
          elseif(line1.eq.'#') then
             goto 1111
          elseif(line1.eq.'b'.or.line1.eq.'B'.or.line1.eq.'d'.or.line1.eq
@@ -13648,7 +14301,7 @@ c -- m(1,2) = sin(theta), m(2,1) = -sin(
             elseif(idum1.eq.2.and.idum2.eq.2) then
                staumixval(2,2) = val
             endif
-            
+
          elseif(line1.eq.'#') then
             goto 1111
          elseif(line1.eq.'b'.or.line1.eq.'B'.or.line1.eq.'d'.or.line1.eq
@@ -13694,7 +14347,7 @@ c -- ! characteristic scale etc. For det
 c -- ! prescriptions see the manual of the particular spectrum      ! --
 c -- ! calculator.                                                  ! --
             alphaval = val
-            
+
          elseif(line1.eq.'#') then
             goto 1111
          elseif(line1.eq.'b'.or.line1.eq.'B'.or.line1.eq.'d'.or.line1.eq
@@ -13826,7 +14479,7 @@ c --------------------------------------
       done= .false.
 
       do i=1,100,1
-         softcom(i)   = ' ' 
+         softcom(i)   = ' '
       end do
 
       do i=1,200,1
@@ -13858,7 +14511,7 @@ c---- ramona changed 20/8/14 (because ou
              softcom(46)='M_tR'
              softcom(47)='M_dR'
              softcom(48)='M_sR'
-             softcom(49)='M_bR'	    
+             softcom(49)='M_bR'
 c---- ramona changed
 
                endif
@@ -14606,7 +15259,7 @@ c -- decide what it is and read the line
          if (line1.eq.' ') then
             backspace ninlha
             read(ninlha,*) idum1,idum2,val
-	    
+
 c -- The following parameters are the DR_bar running parameters at --
 c -- the scale Q.                                                  --
 c -- values for YD(i,j) at the scale Q --
@@ -14670,9 +15323,9 @@ c -- decide what it is and read the line
          if (line1.eq.' ') then
             backspace ninlha
             read(ninlha,*) idum1,idum2,val
-	    
+
  	    usqmix(idum1, idum2)=val
-            
+
 
 
          elseif(line1.eq.'#') then
@@ -14718,7 +15371,7 @@ c -- decide what it is and read the line
 !             if((idum1.le.6).and.(idum2.le.6))
  	    dsqmix(idum1, idum2)=val
 !             endif
-	   
+
 
          elseif(line1.eq.'#') then
             goto 1111
@@ -14763,7 +15416,7 @@ c -- decide what it is and read the line
 !             if((idum1.le.6).and.(idum2.le.6))
  	    selmix(idum1, idum2)=val
 !             endif
-	   
+
 
          elseif(line1.eq.'#') then
             goto 1111
@@ -14823,7 +15476,7 @@ c -- the values for the neutralino mixin
             elseif(idum1.eq.3.and.idum2.eq.3) then
                vckm(3,3) = val
             endif
-            
+
          elseif(line1.eq.'#') then
             goto 1111
          elseif(line1.eq.'b'.or.line1.eq.'B'.or.line1.eq.'d'.or.line1.eq
@@ -14847,12 +15500,12 @@ c---------------------------------------
       character buff*100
       integer ninlha,i
       real*8 Qval
-      backspace ninlha      
+      backspace ninlha
       read(ninlha,fmt='(A100)') buff
-      do i=1,100 
-       if(buff(i:i).eq.'=') then 
+      do i=1,100
+       if(buff(i:i).eq.'=') then
             read(buff(i+1:100),*) Qval
-            return 
+            return
       endif
       enddo
       end
@@ -14888,7 +15541,7 @@ c --------------------------------------
       dimension gwtb(2,2),gwntau(2,2)
       dimension gul(2),gur(2),gdl(2),gdr(2),gtl(2),gtr(2),gbl(2),gbr(2)
       dimension q(4,4),s(4,4)
-      dimension qc(2,2),sc(2,2)      
+      dimension qc(2,2),sc(2,2)
 
 c ----- common blocks needed for the calculation of the couplings ---- c
 c      COMMON/SD_flagmixang/flagcu,flagcd,flagce
@@ -14915,7 +15568,7 @@ c ------ common blocks for the couplings
       COMMON/SD_coup5/ale,altau,alsne,blsne,alsnt,blsnt
       COMMON/SD_coup6/alsto,aksto,alsbo,aksbo
       COMMON/SD_coup7/alup,aldo
-      COMMON/SD_coup8/ae,be,atau,btau,anu,bnu,antau,bntau      
+      COMMON/SD_coup8/ae,be,atau,btau,anu,bnu,antau,bntau
       COMMON/SD_coup9/atop,btop,abo,bbo
       COMMON/SD_coup10/aup,bup,ado,bdo
       COMMON/SD_coup11/gltt,ghtt,gatt
@@ -14943,7 +15596,7 @@ c ------------------------- the mixing a
       sl=dsin(thel)
 
       tgbet=tanbeta
-      bet  =datan(tanbeta) 
+      bet  =datan(tanbeta)
       alp  =alp_mssm
       tw   =sw/cw
 
@@ -14975,7 +15628,7 @@ c Feynman rule: ig*(ahh(i,j)*(1-g_5)+ahh
 c Feynman rule: g*(aa(i,j)*(1-g_5)-aa(j,i)*(1+g_5))
 
 c -------------------------------------------------------------------- c
-c                Higgs-chargino_i-chargino_j couplings 
+c                Higgs-chargino_i-chargino_j couplings
 c -------------------------------------------------------------------- c
 
       do i=1,2
@@ -15140,7 +15793,7 @@ c Feynman rule: ig*[alsbo(1/2,k)*P_R+aks
 c incoming chargino+, outgoing top-quark
 
 c -------------------------------------------------------------------- c
-c               the chargino_k-sup1/2-down couplings 
+c               the chargino_k-sup1/2-down couplings
 c -------------------------------------------------------------------- c
 
       do k=1,2
@@ -15148,7 +15801,7 @@ c --------------------------------------
          alup(2,k) =  V(k,1)*su
       enddo
 
-c Feynman rule: ig*[ alup(1/2,k)*P_R ] 
+c Feynman rule: ig*[ alup(1/2,k)*P_R ]
 
 c -------------------------------------------------------------------- c
 c               the chargino_k-sdown1/2-up couplings
@@ -15188,10 +15841,10 @@ c --------------------------------------
          btau(1,k) = sl*dsqrt(2.D0)*sw*(zp(k,2)*tw-zp(k,1))
      .               -cl*ytauc*z(k,3)
          btau(2,k) = cl*dsqrt(2.D0)*sw*(zp(k,2)*tw-zp(k,1))
-     .               +sl*ytauc*z(k,3)	
+     .               +sl*ytauc*z(k,3)
       enddo
 
-c Feynman rule: ig*[ atau(1/2,k)*P_R + btau(1/2,k)*P_L ] 
+c Feynman rule: ig*[ atau(1/2,k)*P_R + btau(1/2,k)*P_L ]
 
 c -------------------------------------------------------------------- c
 c             neutralino-sneutrino_e-neutrino_e couplings
@@ -15201,7 +15854,7 @@ c --------------------------------------
          anu(1,k) = -zp(k,2)/dsqrt(2.D0)/cw
          anu(2,k) = 0.D0
          bnu(1,k) = 0.D0
-         bnu(2,k) = 0.D0	
+         bnu(2,k) = 0.D0
       enddo
 
 c Feynman rule: ig*[ anu(2,k)*P_R + bnu(2,k)*P_L ]
@@ -15214,7 +15867,7 @@ c --------------------------------------
          antau(1,k) = -zp(k,2)/dsqrt(2.D0)/cw
          antau(2,k) = 0.D0
          bntau(1,k) = 0.D0
-         bntau(2,k) = 0.D0	
+         bntau(2,k) = 0.D0
       enddo
 
 c Feynman rule: ig*[ antau(1/2,k)*P_R + bntau(1/2,k)*P_L ]
@@ -15231,7 +15884,7 @@ c --------------------------------------
          btop(1,k) = -2.D0*st*dsqrt(2.D0)*sw*(zp(k,2)*tw-zp(k,1))/3.D0
      .               -ct*ytc*z(k,4)
          btop(2,k) = -2.D0*ct*dsqrt(2.D0)*sw*(zp(k,2)*tw-zp(k,1))/3.D0
-     .               +st*ytc*z(k,4)	
+     .               +st*ytc*z(k,4)
       enddo
 
 c Feynman rule: ig*[ atop(1/2,k)*P_R + btop(1/2,k)*P_L ]
@@ -15248,10 +15901,10 @@ c --------------------------------------
          bbo(1,k) = sb*dsqrt(2.D0)*sw*(zp(k,2)*tw-zp(k,1))/3.D0
      .              -cb*ybc*z(k,3)
          bbo(2,k) = cb*dsqrt(2.D0)*sw*(zp(k,2)*tw-zp(k,1))/3.D0
-     .              +sb*ybc*z(k,3)	
+     .              +sb*ybc*z(k,3)
       enddo
 
-c Feynman rule: ig*[ abo(1/2,k)*P_R + bbo(1/2,k)*P_L ] 
+c Feynman rule: ig*[ abo(1/2,k)*P_R + bbo(1/2,k)*P_L ]
 
 c -------------------------------------------------------------------- c
 c                   neutralino_k-sup1/2-up couplings
@@ -15318,7 +15971,7 @@ c --------------------------------------
      .         amu*dcos(alp))
 
       bat  = -amt/2.D0/amw*(autop/tgbet+amu)
-      
+
       gltt(1,1) = bhlt11*amw/amz**2
       gltt(1,2) = bhlt12*amw/amz**2
       gltt(2,1) = gltt(1,2)
@@ -15336,7 +15989,7 @@ c               -g*amz**2/amw*gatt stop1
 c               +g*amz**2/amw*gatt stop2 in stop1 out
 
 c -------------------------------------------------------------------- c
-c                the Higgs-sbottom1-sbottom2 couplings		
+c                the Higgs-sbottom1-sbottom2 couplings
 c -------------------------------------------------------------------- c
 
       bhlb12 = amz*dsin(2.D0*theb)/2.D0/cw*(0.5D0-2.D0/3.D0*sw**2)*
@@ -15362,7 +16015,7 @@ c --------------------------------------
      .         -ybc**2*2.D0*amw*dcos(alp)*dcos(bet)
      .         -ybc/dsqrt(2.D0)*dsin(2.D0*theb)*(adbot*dcos(alp)-
      .         amu*dsin(alp))
-      
+
       bhhb22 = -amz/cw*dcos(alp+bet)*(-1.D0/2.D0*dsin(theb)**2
      .         -1.D0/3.D0*sw**2*dcos(2.D0*theb))
      .         -ybc**2*2.D0*amw*dcos(alp)*dcos(bet)
@@ -15396,14 +16049,14 @@ c --------------------------------------
       s12 = amb/dsqrt(2.D0)/amw*(adbot*tgbet+amu)
       s21 = amt/dsqrt(2.D0)/amw*(autop/tgbet+amu)
       s22 = 1.D0/dsqrt(2.D0)/amw*amb*amt*(1.D0/tgbet+tgbet)
-	
+
       chctb(1,1) = (-ct*cb*s11-st*sb*s22-ct*sb*s12-st*cb*s21)
       chctb(1,2) = (ct*sb*s11-ct*cb*s12+sb*st*s21-st*cb*s22)
       chctb(2,1) = (st*cb*s11+st*sb*s12-ct*cb*s21-ct*sb*s22)
       chctb(2,2) = (-st*sb*s11+st*cb*s12+ct*sb*s21-ct*cb*s22)
 
       gctb(1,1) = chctb(1,1)/amw
-      gctb(1,2) = chctb(1,2)/amw	
+      gctb(1,2) = chctb(1,2)/amw
       gctb(2,1) = chctb(2,1)/amw
       gctb(2,2) = chctb(2,2)/amw
 
@@ -15419,8 +16072,8 @@ c --------------------------------------
       chctaunur = ytauc*dsin(bet)
       chctaunul = 0.D0
 
-c Feynman rule: ie*(chctbr*pro(+1)+chctbl*pro(-1))  
-c up-type out, down-type in 
+c Feynman rule: ie*(chctbr*pro(+1)+chctbl*pro(-1))
+c up-type out, down-type in
 
       vchtau = -ytauc/2.D0*dsin(bet)
       achtau = -vchtau
@@ -15434,7 +16087,7 @@ c Feynman rule (H- incoming) ig*[-vch-ac
 c -------------------------------------------------------------------- c
 c                         Z-fermion-antifermion
 c -------------------------------------------------------------------- c
-      
+
       czttl     = 0.5D0*(1-4.D0/3.D0*sw**2)
       czttr     = 0.5D0*(-4.D0/3.D0*sw**2)
       czbbl     = 0.5D0*(-1+2.D0/3.D0*sw**2)
@@ -15550,7 +16203,7 @@ c i with p1(mu) in, j with p2(mu) out
 c -------------------------------------------------------------------- c
 c                      gluino-up-sup couplings
 c -------------------------------------------------------------------- c
- 
+
       gur(1) = su
       gur(2) = cu
       gul(1) = -cu
@@ -15612,13 +16265,13 @@ c---------------------------------------
       double precision amsupq(6), amsdownq(6), amslepton(6)
       double precision sw, cw, alp_mssm, tanbeta, amt, amb, amtau
       double precision uu(2,2), vv(2,2), zz(4,4), zp(4,4)
-      double precision vckm(3,3), msq2(3,3), msu2(3,3), 
+      double precision vckm(3,3), msq2(3,3), msu2(3,3),
      .msd2(3,3), td(3,3), tu(3,3),
      . usqmix(6,6), dsqmix(6,6),amsneutrino(3)
       double precision sinbeta,alsew,g2ew,g1ew, ams, amc
       COMMON/SD_param/sdgf,amz,amw,pi,g2
-      COMMON/flavviolation/vckm, msq2, msd2, msu2, td, 
-     .tu, usqmix, ifavvio, dsqmix
+      COMMON/flavviolation/vckm, msq2, msd2, msu2, td,
+     .tu, usqmix, dsqmix, ifavvio
       COMMON/msfermion/ amsupq, amsdownq, amslepton, amsneutrino
       COMMON/SD_weinberg/sw,cw
       COMMON/SD_mixang/alp_mssm,tanbeta
@@ -15633,27 +16286,27 @@ c---------------------------------------
       mf=0d0
       endif
 
-      
+
 
       if(imassflag.ne.0d0)then
       if(j.eq.2)then
       mf=amc
-      
+
       endif
       endif
 
-      
+
       sinbeta=dSin(dAtan(tanbeta))
-      gneutsupupl=-1d0/6d0*(dSqrt(2d0)*g1ew*zz(i, 1)*usqmix(k, j) + 
+      gneutsupupl=-1d0/6d0*(dSqrt(2d0)*g1ew*zz(i, 1)*usqmix(k, j) +
      .	      3d0*dSqrt(2d0)*g2ew*zz(i, 2)*usqmix(k, j)
      . 	      + 6d0*mf*g2ew/(dsqrt(2d0)*amw*sinbeta)
      . *zz(i, 4)*usqmix(k, 3 + j))
 
       gneutsupupr=1d0/3d0*(-3d0*mf*g2ew/(dsqrt(2d0)
      .*amw*sinbeta)*zz(i, 4)*
-     .usqmix(k, j) + 
+     .usqmix(k, j) +
      . 2d0*dSqrt(2d0)*g1ew*zz(i, 1)*usqmix(k, 3 + j))
- 
+
       return
       end
 
@@ -15661,17 +16314,17 @@ c---------------------------------------
 	subroutine coupfavgluino(left, right, i,j)
         implicit none
               integer ifavvio, i, j
-        double precision vckm(3,3), msq2(3,3), msu2(3,3), 
+        double precision vckm(3,3), msq2(3,3), msu2(3,3),
      .msd2(3,3), td(3,3), tu(3,3),
      . usqmix(6,6), dsqmix(6,6)
       double precision g3, left, right
-      COMMON/flavviolation/vckm, msq2, msd2, msu2, td, 
-     .tu, usqmix, ifavvio, dsqmix
+      COMMON/flavviolation/vckm, msq2, msd2, msu2, td,
+     .tu, usqmix, dsqmix, ifavvio
      	common/alfas/g3
-         
+
 	left=(g3*Usqmix(j, i)/dSqrt(2d0))
         right=-(g3*Usqmix(j, i+3))/dSqrt(2d0)
-        
+
 
         return
         end
@@ -15680,25 +16333,25 @@ c---------------------------------------
 c----- quartic sup coupling for flavor violation
        implicit none
       integer j, q, iint, ifavvio
-      double precision vckm(3,3), msq2(3,3), msu2(3,3), 
+      double precision vckm(3,3), msq2(3,3), msu2(3,3),
      .msd2(3,3), td(3,3), tu(3,3),
      . usqmix(6,6), dsqmix(6,6)
       double precision g3
-      COMMON/flavviolation/vckm, msq2, msd2, msu2, td, 
-     .tu, usqmix, ifavvio, dsqmix
+      COMMON/flavviolation/vckm, msq2, msd2, msu2, td,
+     .tu, usqmix, dsqmix, ifavvio
       common/alfas/g3
 	 coupfavquartic=1d0/12d0*g3**2*(
-     -     ((USQMIX(j,1))*USQMIX(iint,1) + 
-     -       (USQMIX(j,2))*USQMIX(iint,2) + 
-     -       (USQMIX(j,3))*USQMIX(iint,3) - 
-     -       (USQMIX(j,4))*USQMIX(iint,4) - 
-     -       (USQMIX(j,5))*USQMIX(iint,5) - 
+     -     ((USQMIX(j,1))*USQMIX(iint,1) +
+     -       (USQMIX(j,2))*USQMIX(iint,2) +
+     -       (USQMIX(j,3))*USQMIX(iint,3) -
+     -       (USQMIX(j,4))*USQMIX(iint,4) -
+     -       (USQMIX(j,5))*USQMIX(iint,5) -
      -       (USQMIX(j,6))*USQMIX(iint,6))*
-     -     ((USQMIX(iint,1))*USQMIX(q,1) + 
-     -       (USQMIX(iint,2))*USQMIX(q,2) + 
-     -       (USQMIX(iint,3))*USQMIX(q,3) - 
-     -       (USQMIX(iint,4))*USQMIX(q,4) - 
-     -       (USQMIX(iint,5))*USQMIX(q,5) - 
+     -     ((USQMIX(iint,1))*USQMIX(q,1) +
+     -       (USQMIX(iint,2))*USQMIX(q,2) +
+     -       (USQMIX(iint,3))*USQMIX(q,3) -
+     -       (USQMIX(iint,4))*USQMIX(q,4) -
+     -       (USQMIX(iint,5))*USQMIX(q,5) -
      -       (USQMIX(iint,6))*USQMIX(q,6)))
 	return
         end
@@ -15723,7 +16376,7 @@ c --------------------------------------
 
       external SD_alphas
 
-      pi = 4.D0*datan(1.D0) 
+      pi = 4.D0*datan(1.D0)
 
       amc = amc0
       amb = amb0
@@ -15746,7 +16399,7 @@ c --------------------------------------
          else
             alsewsb_msbar = alphasmzms
             alsewsb = alsewsb_msbar
-         endif   
+         endif
       endif
 
       if(amewsb.ge.amt0) then
@@ -15756,7 +16409,7 @@ c --------------------------------------
       endif
       acc  = 1.d-10
       loop = loopnum
-      
+
       xlambda = SD_xitla(amewsb,n0,loop,alsewsb,acc)
       call SD_alsini(acc)
 
@@ -15779,7 +16432,7 @@ c --------------------------------------
       COMMON/SD_coupewsb/alsew,g2ew,g1ew
       COMMON/SD_refscale/amuref
 
-      pi = 4.D0*datan(1.D0) 
+      pi = 4.D0*datan(1.D0)
 
       amc = amc0
       amb = amb0
@@ -15947,15 +16600,15 @@ c-!! modifs jlk: to determine (perturbat
 c with the pert. level used in RUNM) Mb(pole) from mb(mb)_MSbar input:
 c    mbmb= mb(mb)_MSbar ; MPpole determined iteratively to acc. d-8
       if(i_sd_mbmb.eq.0) then
-c i_sd_mbmb is just a counter because this calculation is only needed 
-c once 
+c i_sd_mbmb is just a counter because this calculation is only needed
+c once
          do i=1,20
             if(i.eq.1) then
                mbsave=0.d0
                MBpole=sd_mbmb
             endif
             xkb= 16.11d0 -1.04d0*(4.d0-(amsb+amc)/MBpole)
-            if(i.ge.3) then 
+            if(i.ge.3) then
                amba=mbpole
                call SD_alsini(1.d-8)
             endif
@@ -15973,7 +16626,7 @@ c see its def. above
 c     write(*,*)'last iter, mbpole: ',i,mbpole
          i_sd_mbmb=1
       endif
-c rest of calculation follows as before: 
+c rest of calculation follows as before:
 c--------------------------------------------------------------------- c
 
       am(3) = amsb
@@ -16210,7 +16863,7 @@ c --------------------------------------
       double precision function SD_yuk(i,q)
 
       implicit double precision (a-h,o-z)
-      
+
       COMMON/SD_param/sdgf,amz,amw,pi,g2
       COMMON/SD_mixang/alp_mssm,tanbeta
 
@@ -16222,7 +16875,7 @@ c --------------------------------------
          SD_yuk = q/(dsqrt(2.D0)*amw*dcos(bet))
       endif
 
-      return 
+      return
 
       end
 
@@ -16253,7 +16906,7 @@ c --------------------------------------
 c                     The H+-topbar-bottom coupling                    c
 c -------------------------------------------------------------------- c
 c Feynman rule: ie/sw*(chtbrunr*pro(+1)+chtbrunl*pro(-1))
-c up out, down in 
+c up out, down in
 
       subroutine SD_higgschudb(chtbrunr,chtbrunl)
 
@@ -16270,7 +16923,7 @@ c up out, down in
       chtbrunr = scalb*sb
       chtbrunl = scalt*cb
 
-      end 
+      end
 
 c -------------------------------------------------------------------- c
 c                    The h/H/A-top-topbar couplings                    c
@@ -16360,7 +17013,7 @@ c outgoing chargino+, outgoing bottom-qu
 
       ct = dcos(thet)
       st = dsin(thet)
- 
+
 
 
       do k=1,2
@@ -16375,7 +17028,7 @@ c outgoing chargino+, outgoing bottom-qu
 c -------------------------------------------------------------------- c
 c              neutralino_k-sbottom1/2-bottom couplings                c
 c -------------------------------------------------------------------- c
-c Feynman rule: ig*[ abot(1/2,k)*P_R + bbot(1/2,k)*P_L ] 
+c Feynman rule: ig*[ abot(1/2,k)*P_R + bbot(1/2,k)*P_L ]
 
       subroutine SD_neutsbotbot(abot,bbot)
 
@@ -16401,7 +17054,7 @@ c Feynman rule: ig*[ abot(1/2,k)*P_R + b
          bbot(1,k)=sb*dsqrt(2.d0)*sw*(zp(k,2)*tw-zp(k,1))/3.d0
      .            -cb*scalb*z(k,3)
          bbot(2,k)=cb*dsqrt(2.d0)*sw*(zp(k,2)*tw-zp(k,1))/3.d0
-     .            +sb*scalb*z(k,3)	
+     .            +sb*scalb*z(k,3)
       enddo
 
       end
@@ -16435,7 +17088,7 @@ c Feynman rule: ig*[ atopr(1/2,k)*P_R +
          btopr(1,k)=-2.d0*st*dsqrt(2.d0)*sw*(zp(k,2)*tw-zp(k,1))/3.d0
      .             -ct*scalt*z(k,4)
          btopr(2,k)=-2.d0*ct*dsqrt(2.d0)*sw*(zp(k,2)*tw-zp(k,1))/3.d0
-     .             +st*scalt*z(k,4)	
+     .             +st*scalt*z(k,4)
       enddo
 
       end
@@ -16477,7 +17130,7 @@ c chcsntau(1,2) is for sneutrino_tau1-st
       chcsntau(2,2)=(-sn*sl*s11+sn*cl*s12+cn*sl*s21-cn*cl*s22)
 
       gcsntaur(1,1)=chcsntau(1,1)/amw
-      gcsntaur(1,2)=chcsntau(1,2)/amw	
+      gcsntaur(1,2)=chcsntau(1,2)/amw
       gcsntaur(2,1)=chcsntau(2,1)/amw
       gcsntaur(2,2)=chcsntau(2,2)/amw
 
@@ -16513,14 +17166,14 @@ c gctbr(1,2) is for stop1-sbottom2
       s12 = scalb*dcos(b)*(ad*tgbet+amu)
       s21 = scalt*dsin(b)*(au/tgbet+amu)
       s22 = dsqrt(2.d0)*amw*scalb*scalt
-	
+
       chctb(1,1)=(-ct*cb*s11-st*sb*s22-ct*sb*s12-st*cb*s21)
       chctb(1,2)=(ct*sb*s11-ct*cb*s12+sb*st*s21-st*cb*s22)
       chctb(2,1)=(st*cb*s11+st*sb*s12-ct*cb*s21-ct*sb*s22)
       chctb(2,2)=(-st*sb*s11+st*cb*s12+ct*sb*s21-ct*cb*s22)
 
       gctbr(1,1)=chctb(1,1)/amw
-      gctbr(1,2)=chctb(1,2)/amw	
+      gctbr(1,2)=chctb(1,2)/amw
       gctbr(2,1)=chctb(2,1)/amw
       gctbr(2,2)=chctb(2,2)/amw
 
@@ -16574,7 +17227,7 @@ c               +g*amz**2/amw*gatautaur:
      .         -scaltau**2*2.D0*amw*dcos(a)*dcos(b)
      .         -scaltau/dsqrt(2.D0)*dsin(2.D0*thel)*(al*dcos(a)-
      .                                               amu*dsin(a))
-      
+
       bhhtau22 = -amz/cw*dcos(a+b)*(-1.D0/2.D0*dsin(thel)**2-1.D0*
      .           sw**2*dcos(2.D0*thel))
      .           -scaltau**2*2.D0*amw*dcos(a)*dcos(b)
@@ -16642,7 +17295,7 @@ c               +g*amz**2/amw*gabb sbott
      .         sw**2*dcos(2.D0*theb))-scalb**2*2.D0*amw*dcos(a)*dcos(b)
      .         -scalb/dsqrt(2.D0)*dsin(2.D0*theb)*(ad*dcos(a)-
      .         amu*dsin(a))
-      
+
       bhhb22 = -amz/cw*dcos(a+b)*(-1.D0/2.D0*dsin(theb)**2-1.D0/3.D0*
      .         sw**2*dcos(2.D0*theb))-scalb**2*2.D0*amw*dcos(a)*dcos(b)
      .         +scalb/dsqrt(2.D0)*dsin(2.D0*theb)*(ad*dcos(a)-
@@ -16771,14 +17424,14 @@ c ---- derivative d/dmtop ----
       s12t = 0.D0
       s21t = tmpt*dsin(b)*(au/tgbet+amu)
       s22t = dsqrt(2.d0)*amw*scalb*tmpt
-	
+
       chctbdt(1,1)=(-ct*cb*s11t-st*sb*s22t-ct*sb*s12t-st*cb*s21t)
       chctbdt(1,2)=(ct*sb*s11t-ct*cb*s12t+sb*st*s21t-st*cb*s22t)
       chctbdt(2,1)=(st*cb*s11t+st*sb*s12t-ct*cb*s21t-ct*sb*s22t)
       chctbdt(2,2)=(-st*sb*s11t+st*cb*s12t+ct*sb*s21t-ct*cb*s22t)
 
       gcdmtr(1,1)=chctbdt(1,1)/amw
-      gcdmtr(1,2)=chctbdt(1,2)/amw	
+      gcdmtr(1,2)=chctbdt(1,2)/amw
       gcdmtr(2,1)=chctbdt(2,1)/amw
       gcdmtr(2,2)=chctbdt(2,2)/amw
 
@@ -16790,14 +17443,14 @@ c ---- derivative d/dmbottom ----
       s12b = tmpb*dcos(b)*(ad*tgbet+amu)
       s21b = 0.D0
       s22b = dsqrt(2.d0)*amw*tmpb*scalt
-	
+
       chctbdb(1,1)=(-ct*cb*s11b-st*sb*s22b-ct*sb*s12b-st*cb*s21b)
       chctbdb(1,2)=(ct*sb*s11b-ct*cb*s12b+sb*st*s21b-st*cb*s22b)
       chctbdb(2,1)=(st*cb*s11b+st*sb*s12b-ct*cb*s21b-ct*sb*s22b)
       chctbdb(2,2)=(-st*sb*s11b+st*cb*s12b+ct*sb*s21b-ct*cb*s22b)
 
       gcdmbr(1,1)=chctbdb(1,1)/amw
-      gcdmbr(1,2)=chctbdb(1,2)/amw	
+      gcdmbr(1,2)=chctbdb(1,2)/amw
       gcdmbr(2,1)=chctbdb(2,1)/amw
       gcdmbr(2,2)=chctbdb(2,2)/amw
 
@@ -16807,14 +17460,14 @@ c ---- derivative d/dAb ----
       s12ab = scalb*dcos(b)*tgbet
       s21ab = 0.D0
       s22ab = 0.D0
-	
+
       chctbab(1,1)=(-ct*cb*s11ab-st*sb*s22ab-ct*sb*s12ab-st*cb*s21ab)
       chctbab(1,2)=(ct*sb*s11ab-ct*cb*s12ab+sb*st*s21ab-st*cb*s22ab)
       chctbab(2,1)=(st*cb*s11ab+st*sb*s12ab-ct*cb*s21ab-ct*sb*s22ab)
       chctbab(2,2)=(-st*sb*s11ab+st*cb*s12ab+ct*sb*s21ab-ct*cb*s22ab)
 
       gcdabr(1,1)=chctbab(1,1)/amw
-      gcdabr(1,2)=chctbab(1,2)/amw	
+      gcdabr(1,2)=chctbab(1,2)/amw
       gcdabr(2,1)=chctbab(2,1)/amw
       gcdabr(2,2)=chctbab(2,2)/amw
 
@@ -16824,14 +17477,14 @@ c ---- derivative d/dAt ----
       s12at = 0.D0
       s21at = scalt*dsin(b)*1.D0/tgbet
       s22at = 0.D0
-	
+
       chctbat(1,1)=(-ct*cb*s11at-st*sb*s22at-ct*sb*s12at-st*cb*s21at)
       chctbat(1,2)=(ct*sb*s11at-ct*cb*s12at+sb*st*s21at-st*cb*s22at)
       chctbat(2,1)=(st*cb*s11at+st*sb*s12at-ct*cb*s21at-ct*sb*s22at)
       chctbat(2,2)=(-st*sb*s11at+st*cb*s12at+ct*sb*s21at-ct*cb*s22at)
 
       gcdatr(1,1)=chctbat(1,1)/amw
-      gcdatr(1,2)=chctbat(1,2)/amw	
+      gcdatr(1,2)=chctbat(1,2)/amw
       gcdatr(2,1)=chctbat(2,1)/amw
       gcdatr(2,2)=chctbat(2,2)/amw
 
@@ -16844,14 +17497,14 @@ c ---- derivative d/dtheta_t ----
       s12 = scalb*dcos(b)*(ad*tgbet+amu)
       s21 = scalt*dsin(b)*(au/tgbet+amu)
       s22 = dsqrt(2.d0)*amw*scalb*scalt
-	
+
       chctbtt(1,1)=(-ctt*cb*s11-stt*sb*s22-ctt*sb*s12-stt*cb*s21)
       chctbtt(1,2)=(ctt*sb*s11-ctt*cb*s12+sb*stt*s21-stt*cb*s22)
       chctbtt(2,1)=(stt*cb*s11+stt*sb*s12-ctt*cb*s21-ctt*sb*s22)
       chctbtt(2,2)=(-stt*sb*s11+stt*cb*s12+ctt*sb*s21-ctt*cb*s22)
 
       gcdthtr(1,1)=chctbtt(1,1)/amw
-      gcdthtr(1,2)=chctbtt(1,2)/amw	
+      gcdthtr(1,2)=chctbtt(1,2)/amw
       gcdthtr(2,1)=chctbtt(2,1)/amw
       gcdthtr(2,2)=chctbtt(2,2)/amw
 
@@ -16864,14 +17517,14 @@ c ---- derivative d/dtheta_b ----
       s12 = scalb*dcos(b)*(ad*tgbet+amu)
       s21 = scalt*dsin(b)*(au/tgbet+amu)
       s22 = dsqrt(2.d0)*amw*scalb*scalt
-	
+
       chctbbb(1,1)=(-ct*cbb*s11-st*sbb*s22-ct*sbb*s12-st*cbb*s21)
       chctbbb(1,2)=(ct*sbb*s11-ct*cbb*s12+sbb*st*s21-st*cbb*s22)
       chctbbb(2,1)=(st*cbb*s11+st*sbb*s12-ct*cbb*s21-ct*sbb*s22)
       chctbbb(2,2)=(-st*sbb*s11+st*cbb*s12+ct*sbb*s21-ct*cbb*s22)
 
       gcdthbr(1,1)=chctbbb(1,1)/amw
-      gcdthbr(1,2)=chctbbb(1,2)/amw	
+      gcdthbr(1,2)=chctbbb(1,2)/amw
       gcdthbr(2,1)=chctbbb(2,1)/amw
       gcdthbr(2,2)=chctbbb(2,2)/amw
 
@@ -17062,7 +17715,7 @@ c ---- derivative d/dmbottom ----
       dbhhb11 = -2.D0*scalb*tmpb*2.D0*amw*dcos(a)*dcos(b)
      .         -tmpb/dsqrt(2.D0)*dsin(2.D0*theb)*(ad*dcos(a)-
      .         amu*dsin(a))
-      
+
       dbhhb22 = -2.D0*scalb*tmpb*2.D0*amw*dcos(a)*dcos(b)
      .         +tmpb/dsqrt(2.D0)*dsin(2.D0*theb)*(ad*dcos(a)-
      .         amu*dsin(a))
@@ -17080,7 +17733,7 @@ c ---- derivative Ab ----
       dabhhb12 = -scalb/dsqrt(2.D0)*dcos(2.D0*theb)*dcos(a)
 
       dabhhb11 = -scalb/dsqrt(2.D0)*dsin(2.D0*theb)*dcos(a)
-      
+
       dabhhb22 = scalb/dsqrt(2.D0)*dsin(2.D0*theb)*dcos(a)
 
       dabab = -scalb/dsqrt(2.D0)*dcos(b)*tgbet
@@ -17109,14 +17762,14 @@ c ---- derivative theta_b ----
      .         -2.D0/3.D0*sw**2*dsin(2.D0*theb))
      .         -2.D0*scalb/dsqrt(2.D0)*dcos(2.D0*theb)*(ad*dcos(a)-
      .         amu*dsin(a))
-      
+
       dthbhhb22 = -amz/cw*dcos(a+b)*(-1.D0/2.D0*dsin(2.D0*theb)
      .         +2.D0/3.D0*sw**2*dsin(2.D0*theb))
      .         +2.D0*scalb/dsqrt(2.D0)*dcos(2.D0*theb)*(ad*dcos(a)-
      .         amu*dsin(a))
 
       dthbab = 0.D0
- 
+
 c --------------------------------------
 
       dblbbr(1,1)=dbhlb11*amw/amz**2
@@ -17437,7 +18090,7 @@ c chi+_1/chi+_2 --> stop1 + bbar
          if(scalechoice.eq.1.D0) then
             scalb = ybewsb/dsqrt(g2)
             scalt = ytewsb/dsqrt(g2)
-         elseif(scalechoice.eq.2.D0) then         
+         elseif(scalechoice.eq.2.D0) then
             call SD_runmass(amchar(i),0.D0,0.D0,runmb,runmt)
             scalb = SD_yuk(2,runmb)
             scalt = SD_yuk(1,runmt)
@@ -17470,7 +18123,7 @@ c -- the QCD corrections --
                scalt    = ytewsb/dsqrt(g2)
                gs2      = alsew*4.D0*pi
                amurefer = amuref
-            elseif(scalechoice.eq.2.D0) then         
+            elseif(scalechoice.eq.2.D0) then
                call SD_runmass(amchar(i),0.D0,0.D0,runmb,runmt)
                scalb    = SD_yuk(2,runmb)
                scalt    = SD_yuk(1,runmt)
@@ -17501,7 +18154,7 @@ c -- the QCD corrections --
      .           (-ast1**2+amb**2+amchar(i)**2)
      .           +2.D0*(akstor(1,i)*SD_grtchar(1,i,amuv,amuvdiv,lamv)
      .                 +alstor(1,i)*SD_gltchar(1,i,amuv,amuvdiv,lamv))*
-     .           amb*xmchar(i))*SD_lamb(amb/amchar(i),ast1/amchar(i)) 
+     .           amb*xmchar(i))*SD_lamb(amb/amchar(i),ast1/amchar(i))
      .           +g2/(6.D0*pi**2*amchar(i))*gs2/(4.D0*pi)*
      .           3.D0/2.D0*(-1.D0)*
      .           SD_realicorr(amb,amchar(i),ast1,lamv,2,jsign,1,i,1)
@@ -17517,7 +18170,7 @@ c chi+_1/chi+_2 --> stop2 + bbar
          if(scalechoice.eq.1.D0) then
             scalb = ybewsb/dsqrt(g2)
             scalt = ytewsb/dsqrt(g2)
-         elseif(scalechoice.eq.2.D0) then         
+         elseif(scalechoice.eq.2.D0) then
             call SD_runmass(amchar(i),0.D0,0.D0,runmb,runmt)
             scalb = SD_yuk(2,runmb)
             scalt = SD_yuk(1,runmt)
@@ -17550,7 +18203,7 @@ c -- the QCD corrections --
                scalt    = ytewsb/dsqrt(g2)
                gs2      = alsew*4.D0*pi
                amurefer = amuref
-            elseif(scalechoice.eq.2.D0) then         
+            elseif(scalechoice.eq.2.D0) then
                call SD_runmass(amchar(i),0.D0,0.D0,runmb,runmt)
                scalb    = SD_yuk(2,runmb)
                scalt    = SD_yuk(1,runmt)
@@ -17581,7 +18234,7 @@ c -- the QCD corrections --
      .           (-ast2**2+amb**2+amchar(i)**2)
      .           +2.D0*(akstor(2,i)*SD_grtchar(2,i,amuv,amuvdiv,lamv)
      .                 +alstor(2,i)*SD_gltchar(2,i,amuv,amuvdiv,lamv))*
-     .           amb*xmchar(i))*SD_lamb(amb/amchar(i),ast2/amchar(i)) 
+     .           amb*xmchar(i))*SD_lamb(amb/amchar(i),ast2/amchar(i))
      .           +g2/(6.D0*pi**2*amchar(i))*gs2/(4.D0*pi)*
      .           3.D0/2.D0*(-1.D0)*
      .           SD_realicorr(amb,amchar(i),ast2,lamv,2,jsign,2,i,1)
@@ -17597,7 +18250,7 @@ c chi+_1/chi+_2 --> sbottom1* + top
          if(scalechoice.eq.1.D0) then
             scalb = ybewsb/dsqrt(g2)
             scalt = ytewsb/dsqrt(g2)
-         elseif(scalechoice.eq.2.D0) then         
+         elseif(scalechoice.eq.2.D0) then
             call SD_runmass(amchar(i),0.D0,0.D0,runmb,runmt)
             scalb = SD_yuk(2,runmb)
             scalt = SD_yuk(1,runmt)
@@ -17618,7 +18271,7 @@ c chi+_1/chi+_2 --> sbottom1* + top
          else
             charsb1(i)=0.d0
          endif
-      end do         
+      end do
 
 c -- the QCD corrections --
 
@@ -17630,7 +18283,7 @@ c -- the QCD corrections --
                scalt    = ytewsb/dsqrt(g2)
                gs2      = alsew*4.D0*pi
                amurefer = amuref
-            elseif(scalechoice.eq.2.D0) then         
+            elseif(scalechoice.eq.2.D0) then
                call SD_runmass(amchar(i),0.D0,0.D0,runmb,runmt)
                scalb    = SD_yuk(2,runmb)
                scalt    = SD_yuk(1,runmt)
@@ -17661,7 +18314,7 @@ c -- the QCD corrections --
      .           (-asb1**2+amt**2+amchar(i)**2)
      .           +2.D0*(aksbot(1,i)*SD_grbchar(1,i,amuv,amuvdiv,lamv)
      .                 +alsbot(1,i)*SD_glbchar(1,i,amuv,amuvdiv,lamv))*
-     .           amt*xmchar(i))*SD_lamb(amt/amchar(i),asb1/amchar(i)) 
+     .           amt*xmchar(i))*SD_lamb(amt/amchar(i),asb1/amchar(i))
      .           +g2/(6.D0*pi**2*amchar(i))*gs2/(4.D0*pi)*
      .           3.D0/2.D0*(-1.D0)*
      .           SD_realicorr(amt,amchar(i),asb1,lamv,2,jsign,1,i,2)
@@ -17677,7 +18330,7 @@ c chi+_1/chi+_2 --> sbottom2* + top
          if(scalechoice.eq.1.D0) then
             scalb = ybewsb/dsqrt(g2)
             scalt = ytewsb/dsqrt(g2)
-         elseif(scalechoice.eq.2.D0) then         
+         elseif(scalechoice.eq.2.D0) then
             call SD_runmass(amchar(i),0.D0,0.D0,runmb,runmt)
             scalb = SD_yuk(2,runmb)
             scalt = SD_yuk(1,runmt)
@@ -17710,7 +18363,7 @@ c -- the QCD corrections --
                scalt    = ytewsb/dsqrt(g2)
                gs2      = alsew*4.D0*pi
                amurefer = amuref
-            elseif(scalechoice.eq.2.D0) then         
+            elseif(scalechoice.eq.2.D0) then
                call SD_runmass(amchar(i),0.D0,0.D0,runmb,runmt)
                scalb    = SD_yuk(2,runmb)
                scalt    = SD_yuk(1,runmt)
@@ -17741,7 +18394,7 @@ c -- the QCD corrections --
      .           (-asb2**2+amt**2+amchar(i)**2)
      .           +2.D0*(aksbot(2,i)*SD_grbchar(2,i,amuv,amuvdiv,lamv)
      .                 +alsbot(2,i)*SD_glbchar(2,i,amuv,amuvdiv,lamv))*
-     .           amt*xmchar(i))*SD_lamb(amt/amchar(i),asb2/amchar(i)) 
+     .           amt*xmchar(i))*SD_lamb(amt/amchar(i),asb2/amchar(i))
      .           +g2/(6.D0*pi**2*amchar(i))*gs2/(4.D0*pi)*
      .           3.D0/2.D0*(-1.D0)*
      .           SD_realicorr(amt,amchar(i),asb2,lamv,2,jsign,2,i,2)
@@ -17770,7 +18423,7 @@ c --- the QCD corrections ---
          if(amchar(i).ge.asdown1) then
             if(scalechoice.eq.1.D0) then
                gs2 = alsew*4.D0*pi
-            elseif(scalechoice.eq.2.D0) then         
+            elseif(scalechoice.eq.2.D0) then
                gs2 = SD_alphascall(amchar(i),inumloop)*4.D0*pi
             elseif(scalechoice.eq.3.D0) then
                gs2 = SD_alphascall(scaleofcoupling,inumloop)*4.D0*pi
@@ -17802,7 +18455,7 @@ c --- the QCD corrections ---
          if(amchar(i).ge.asdown2) then
             if(scalechoice.eq.1.D0) then
                gs2 = alsew*4.D0*pi
-            elseif(scalechoice.eq.2.D0) then         
+            elseif(scalechoice.eq.2.D0) then
                gs2 = SD_alphascall(amchar(i),inumloop)*4.D0*pi
             elseif(scalechoice.eq.3.D0) then
                gs2 = SD_alphascall(scaleofcoupling,inumloop)*4.D0*pi
@@ -17834,7 +18487,7 @@ c --- the QCD corrections ---
          if(amchar(i).ge.asup1) then
             if(scalechoice.eq.1.D0) then
                gs2 = alsew*4.D0*pi
-            elseif(scalechoice.eq.2.D0) then         
+            elseif(scalechoice.eq.2.D0) then
                gs2 = SD_alphascall(amchar(i),inumloop)*4.D0*pi
             elseif(scalechoice.eq.3.D0) then
                gs2 = SD_alphascall(scaleofcoupling,inumloop)*4.D0*pi
@@ -17866,7 +18519,7 @@ c --- the QCD corrections ---
          if(amchar(i).ge.asup2) then
             if(scalechoice.eq.1.D0) then
                gs2 = alsew*4.D0*pi
-            elseif(scalechoice.eq.2.D0) then         
+            elseif(scalechoice.eq.2.D0) then
                gs2 = SD_alphascall(amchar(i),inumloop)*4.D0*pi
             elseif(scalechoice.eq.3.D0) then
                gs2 = SD_alphascall(scaleofcoupling,inumloop)*4.D0*pi
@@ -17982,8 +18635,8 @@ c ======================================
      .                          xchar1up,xchar1dow,xchar1ch,xchar1str,
      .                          xchar1top,xchar1bot,xgluiupdb,xgluichsb,
      .                          xgluitopbb)
-      
-      implicit double precision (a-h,m,o-z)  
+
+      implicit double precision (a-h,m,o-z)
       integer nx1t,ny1t,ni,nj
 
       dimension xchitau(2,4),xchiel(2,4),xchiup(2,4),xchimu(2,4),
@@ -18306,7 +18959,7 @@ c ======================================
 
       implicit double precision (a-h,m,o-z)
       integer ni,nj
-      
+
       dimension amneut(4),xmneut(4),amchar(2),xmchar(2),sgn(2)
       dimension dsto(2),dstob(2)
       dimension ae(2,4),be(2,4),ato(2,4),bto(2,4),anu(2,4),bnu(2,4),
@@ -18323,7 +18976,7 @@ c ======================================
       COMMON/SD_sfermionetau/ase1,ase2,astau1,astau2
       COMMON/SD_sneutrino/asne1,asne2,asntau1,asntau2
       COMMON/SD_coup5/ale,alto,alsne,blsne,alsnt,blsnt
-      COMMON/SD_coup8/ae,be,ato,bto,anu,bnu,antau,bntau    
+      COMMON/SD_coup8/ae,be,ato,bto,anu,bnu,antau,bntau
       COMMON/SD_coup3/ql,qr,ol,or
       COMMON/SD_coup15/achtop,vchtop,achtau,vchtau
       COMMON/SD_coup18/awff,vwff
@@ -18364,7 +19017,7 @@ c --- the neutrino mass ---
       th = 1.D0-x2+xmutau
 
 c -------------------------------------------------------------------- c
-c                         stau/sneutrino_tau exchange 
+c                         stau/sneutrino_tau exchange
 c -------------------------------------------------------------------- c
 
       dsto(1)  = 1-x1-xmustau1+xmun
@@ -18438,7 +19091,7 @@ c ---- final state masses included ----
      .           +alto(k,ni)*blsnt(i,ni)*bto(k,nj)*antau(i,nj))*
      .           (uh*th-xmun*xmutau-xmuneut1))
             enddo
-         enddo         
+         enddo
       else
          chipmstau=0.D0
       endif
@@ -18492,7 +19145,7 @@ c ---- final state masses included ----
      .    (vchtau**2-achtau**2)*
      .    xmneut(nj)/xmchar(ni)*dsqrt(xmun*xmutau)*(-16.D0)+
      .    (vchtau**2+achtau**2)*
-     .    xmneut(nj)/xmchar(ni)*8.D0*(1.D0+xmuneut1-th-uh) ) 
+     .    xmneut(nj)/xmchar(ni)*8.D0*(1.D0+xmuneut1-th-uh) )
      .    +(ql(nj,ni)**2+qr(nj,ni)**2)*(
      .    (vchtau**2-achtau**2)*
      .    dsqrt(xmun*xmutau)*4.D0*(xmun+xmutau-th-uh)+
@@ -18529,7 +19182,7 @@ c ---- final state masses included ----
      .      (2.D0/xmuw*(xmuneut1*(-2.D0*xmun*xmutau+xmun*th
      .      -2.D0*xmun+xmutau*uh-2.D0*xmutau)+xmun*(-2.D0*xmutau+uh)
      .      +xmutau*th)+4.D0*(xmuneut1*(xmun-uh+1.D0)+xmun*(xmutau-uh)
-     .      +xmutau*(1.D0-uh)+uh**2-uh)) + 
+     .      +xmutau*(1.D0-uh)+uh**2-uh)) +
      .      ato(i,nj)*blto(i,ni)*ol(nj,ni)*
      .      xmneut(nj)/xmchar(ni)*dsqrt(xmun)*sgn(ni)*(2.D0/xmuw*
      .      (xmuneut1*(1.D0+xmun-uh)+1.D0+xmun*(xmutau-uh)+xmutau*
@@ -18563,7 +19216,7 @@ c ---- final state masses included ----
      .      (2.D0/xmuw*(xmuneut1*(-2.D0*xmun*xmutau+xmun*th-2.D0*xmun
      .      +xmutau*uh-2.D0*xmutau)+xmun*(-2.D0*xmutau+uh)+xmutau*th)
      .      +4.D0*(xmuneut1*(xmutau-th+1.D0)+xmun*(xmutau-th+1.D0)+
-     .      th*(-xmutau+th-1.D0))) + 
+     .      th*(-xmutau+th-1.D0))) +
      .      antau(i,nj)*blsnt(i,ni)*or(nj,ni)*
      .      xmneut(nj)/xmchar(ni)*dsqrt(xmutau)*sgn(ni)*
      .      (2.D0/xmuw*(xmuneut1*(1.D0+xmutau-th)+1.D0+xmun*(xmun+
@@ -18590,7 +19243,7 @@ c ---- final state masses included ----
 c -------------------------------------------------------------------- c
 c                     H+ stau/sneutrino_tau interference
 c -------------------------------------------------------------------- c
-	
+
       chipmhstau = 0.D0
 
 c ---- final state masses included ----
@@ -18617,7 +19270,7 @@ c ---- final state masses included ----
      .       dsqrt(xmun*xmutau)*(xmun+xmutau-th-uh) +
      .       alto(i,ni)*bto(i,nj)*qr(nj,ni)*2.D0*
      .       (-uh**2-uh*th+uh*(1.D0+xmun+xmutau+xmuneut1)-xmutau-
-     .       xmuneut1*xmun) ) 
+     .       xmuneut1*xmun) )
      .       +2.D0*g2**2/dh/dstob(i)*2.D0*vchtau*(
      .       bntau(i,nj)*blsnt(i,ni)*ql(nj,ni)*
      .       dsqrt(xmun)*sgn(ni)*(uh-xmuneut1-xmutau) +
@@ -18647,9 +19300,9 @@ c --------------------------------------
 c 	               interference W+ H-
 c -------------------------------------------------------------------- c
 
-      chipmwh=0.D0	
+      chipmwh=0.D0
 
-      if((amneut(nj)+amtau).le.amchar(ni)) then      
+      if((amneut(nj)+amtau).le.amchar(ni)) then
          chipmwh=chipmwh-4.D0*g2**2/dh/dw*vwff*vchtau*(
      .    (ol(nj,ni)*ql(nj,ni)+or(nj,ni)*qr(nj,ni))*
      .    xmneut(nj)/xmchar(ni)*dsqrt(xmutau)*sgn(ni)*(
@@ -18696,7 +19349,7 @@ c ======================================
       COMMON/SD_sfermionetau/ase1,ase2,astau1,astau2
       COMMON/SD_sneutrino/asne1,asne2,asntau1,asntau2
       COMMON/SD_coup5/ale,alto,alsne,blsne,alsnt,blsnt
-      COMMON/SD_coup8/ae,be,ato,bto,anu,bnu,antau,bntau    
+      COMMON/SD_coup8/ae,be,ato,bto,anu,bnu,antau,bntau
       COMMON/SD_coup3/ql,qr,ol,or
       COMMON/SD_coup18/awff,vwff
       COMMON/SD_mwmzpole/amwp,amzp
@@ -18728,7 +19381,7 @@ c --------------------------------------
       dselb(2) = 1.D0-x2-xmusnel2
 
       chipmsel=0.D0
-      
+
       if(amneut(nj).le.amchar(ni)) then
          do i=1,2
             do k=1,2
@@ -18765,7 +19418,7 @@ c --------------------------------------
       else
          chipmw=0.D0
       endif
-	
+
 c -------------------------------------------------------------------- c
 c                            W+ sel interference
 c -------------------------------------------------------------------- c
@@ -18782,13 +19435,13 @@ c --------------------------------------
       else
          chipmwsel=0.D0
       endif
-      
+
 c -------------------------------------------------------------------- c
 c                         W+ sneutrino_e interference
 c -------------------------------------------------------------------- c
-      
+
 	chipmwsnel=0.D0
-        
+
 	if(amneut(nj).le.amchar(ni)) then
            do i=1,2
               chipmwsnel=chipmwsnel+g2**2*4.D0/dselb(i)/dw*(
@@ -18799,7 +19452,7 @@ c --------------------------------------
 	else
            chipmwsnel=0.D0
 	endif
-        
+
 c -------------------------------------------------------------------- c
 
         SD_chipmel = chipmsel+chipmw+chipmwsel+chipmwsnel
@@ -18854,9 +19507,9 @@ c --------------------------------------
 
       dsdown(1)=1.D0-x1-xmusd1
       dsdown(2)=1.D0-x1-xmusd2
-      
+
       chipmsdown=0.D0
-      
+
       if(amneut(nj).le.amchar(ni)) then
          do i=1,2
             do k=1,2
@@ -18885,7 +19538,7 @@ c --------------------------------------
          do i=1,2
             do k=1,2
                chipmsup=chipmsup+g2**2/dsup(i)/dsup(k)*x2*y2*
-     .              (alup(i,ni)*alup(k,ni)+blup(i,ni)*blup(k,ni)) 
+     .              (alup(i,ni)*alup(k,ni)+blup(i,ni)*blup(k,ni))
      .              *(aup(i,nj)*aup(k,nj)+bup(i,nj)*bup(k,nj))
             enddo
          enddo
@@ -18898,7 +19551,7 @@ c                        sup sdown inter
 c -------------------------------------------------------------------- c
 
       chipmsdownsup=0.D0
-      
+
       if(amneut(nj).le.amchar(ni)) then
          do i=1,2
             do k=1,2
@@ -18906,7 +19559,7 @@ c --------------------------------------
      .              g2**2/dsup(k)/dsdown(i)*(
      .              (aup(k,nj)*aldo(i,ni)*blup(k,ni)*bdo(i,nj)+
      .              alup(k,ni)*ado(i,nj)*bup(k,nj)*bldo(i,ni))*
-     .              (-x1*y1-x2*y2+x3*y3) 
+     .              (-x1*y1-x2*y2+x3*y3)
      .              +2.D0*(alup(k,ni)*aup(k,nj)*aldo(i,ni)*ado(i,nj)
      .              +blup(k,ni)*bup(k,nj)*bldo(i,ni)*bdo(i,nj))
      .              *xmneut(nj)/xmchar(ni)*y3)
@@ -18924,7 +19577,7 @@ c --------------------------------------
       dw   = y3-xmuw
 
       chipmw=0.d0
-      
+
       if(amneut(nj).le.amchar(ni)) then
          chipmw=g2**2*16.D0/dw**2*vwff**2*
      .        (or(nj,ni)**2*x1*y1+ol(nj,ni)**2*x2*y2
@@ -18932,20 +19585,20 @@ c --------------------------------------
       else
          chipmw=0.D0
       endif
-	
+
 c -------------------------------------------------------------------- c
 c                         W+ sdown interference
 c -------------------------------------------------------------------- c
 
       chipmwsdown=0.D0
-      
+
       if(amneut(nj).le.amchar(ni)) then
          do i=1,2
             chipmwsdown=chipmwsdown-g2**2*4.D0/dsdown(i)/dw*
      .           (2.D0*vwff*or(nj,ni)*aldo(i,ni)*ado(i,nj)*x1*y1
      .           -2.D0*vwff*ol(nj,ni)*aldo(i,ni)*ado(i,nj)*
      .           xmneut(nj)/xmchar(ni)*y3)
-         enddo 
+         enddo
       else
          chipmwsdown=0.d0
       endif
@@ -18955,7 +19608,7 @@ c                          W+ sup interf
 c -------------------------------------------------------------------- c
 
       chipmwsup=0.D0
-      
+
       if(amneut(nj).le.amchar(ni)) then
          do i=1,2
             chipmwsup=chipmwsup+g2**2*4.D0/dsup(i)/dw*(
@@ -18966,7 +19619,7 @@ c --------------------------------------
       else
          chipmwsup=0.D0
       endif
-	
+
 c -------------------------------------------------------------------- c
 
       SD_chipmup = chipmsdown+chipmsup+chipmsdownsup+chipmw+
@@ -18981,7 +19634,7 @@ c ======================================
       double precision function SD_chipmtop(x1,x2)
 
       implicit double precision (a-h,m,o-z)
-      
+
       dimension amneut(4),xmneut(4),amchar(2),xmchar(2),sgn(2)
       dimension dsb(2),dst(2)
       dimension alsbot(2,2),aksbot(2,2),alstor(2,2),akstor(2,2)
@@ -19008,7 +19661,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(amchar(ni),0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -19127,7 +19780,7 @@ c ---- final state masses included ----
      .           +alsbot(k,ni)*akstor(i,ni)*bbot(k,nj)*atopr(i,nj))*
      .           (uh*th-xmut*xmub-xmuneut1))
             enddo
-         enddo         
+         enddo
       else
          chipmsfer=0.D0
       endif
@@ -19181,7 +19834,7 @@ c ---- final state masses included ----
      .    (vch**2-ach**2)*
      .    xmneut(nj)/xmchar(ni)*dsqrt(xmut*xmub)*(-16.D0)+
      .    (vch**2+ach**2)*
-     .    xmneut(nj)/xmchar(ni)*8.D0*(1.D0+xmuneut1-th-uh) ) 
+     .    xmneut(nj)/xmchar(ni)*8.D0*(1.D0+xmuneut1-th-uh) )
      .    +(ql(nj,ni)**2+qr(nj,ni)**2)*(
      .    (vch**2-ach**2)*
      .    dsqrt(xmut*xmub)*4.D0*(xmut+xmub-th-uh)+
@@ -19218,7 +19871,7 @@ c ---- final state masses included ----
      .      (2.D0/xmuw*(xmuneut1*(-2.D0*xmut*xmub+xmut*th
      .      -2.D0*xmut+xmub*uh-2.D0*xmub)+xmut*(-2.D0*xmub+uh)
      .      +xmub*th)+4.D0*(xmuneut1*(xmut-uh+1.D0)+xmut*(xmub-uh)
-     .      +xmub*(1.D0-uh)+uh**2-uh)) + 
+     .      +xmub*(1.D0-uh)+uh**2-uh)) +
      .      abot(i,nj)*aksbot(i,ni)*ol(nj,ni)*
      .      xmneut(nj)/xmchar(ni)*dsqrt(xmut)*sgn(ni)*(2.D0/xmuw*
      .      (xmuneut1*(1.D0+xmut-uh)+1.D0+xmut*(xmub-uh)+xmub*
@@ -19252,7 +19905,7 @@ c ---- final state masses included ----
      .      (2.D0/xmuw*(xmuneut1*(-2.D0*xmut*xmub+xmut*th-2.D0*xmut
      .      +xmub*uh-2.D0*xmub)+xmut*(-2.D0*xmub+uh)+xmub*th)
      .      +4.D0*(xmuneut1*(xmub-th+1.D0)+xmut*(xmub-th+1.D0)+
-     .      th*(-xmub+th-1.D0))) + 
+     .      th*(-xmub+th-1.D0))) +
      .      atopr(i,nj)*akstor(i,ni)*or(nj,ni)*
      .      xmneut(nj)/xmchar(ni)*dsqrt(xmub)*sgn(ni)*
      .      (2.D0/xmuw*(xmuneut1*(1.D0+xmub-th)+1.D0+xmut*(xmut+
@@ -19279,7 +19932,7 @@ c ---- final state masses included ----
 c -------------------------------------------------------------------- c
 c                        H+ sbottom/stop interference
 c -------------------------------------------------------------------- c
-	
+
       chipmhsbot = 0.D0
 
 c ---- final state masses included ----
@@ -19312,7 +19965,7 @@ c ---- final state masses included ----
      .       (alsbot(i,ni)*bbot(i,nj)*qr(nj,ni)*(vch-ach)
      .       +aksbot(i,ni)*abot(i,nj)*ql(nj,ni)*(vch+ach))*2.D0*
      .       (-uh**2-uh*th+uh*(1.D0+xmut+xmub+xmuneut1)-xmub-
-     .       xmuneut1*xmut) ) 
+     .       xmuneut1*xmut) )
      .       +2.D0*g2**2/dh/dst(i)*(
      .       (btopr(i,nj)*akstor(i,ni)*ql(nj,ni)*(vch-ach)
      .       +atopr(i,nj)*alstor(i,ni)*qr(nj,ni)*(vch+ach))*
@@ -19348,9 +20001,9 @@ c --------------------------------------
 c 	               interference W+ H-
 c -------------------------------------------------------------------- c
 
-      chipmwh=0.D0	
+      chipmwh=0.D0
 
-      if((amneut(nj)+amt+amb).le.amchar(ni)) then      
+      if((amneut(nj)+amt+amb).le.amchar(ni)) then
          chipmwh=chipmwh-2.D0*g2**2/dh/dw*vwff*(
      .    (ol(nj,ni)*ql(nj,ni)+or(nj,ni)*qr(nj,ni))*(
      .    (vch-ach)*xmneut(nj)/xmchar(ni)*dsqrt(xmub)*sgn(ni)*(
@@ -19427,7 +20080,7 @@ c --------------------------------------
       dsel(2)  = 1.D0-x2-xmusnel2
 
       charsnel=0.D0
-      
+
       if(amchar(1).le.amchar(2)) then
          do i=1,2
             do k=1,2
@@ -19458,7 +20111,7 @@ c --------------------------------------
       else
          charz=0.D0
       endif
-	
+
 c -------------------------------------------------------------------- c
 c                      Z-sneutrino_el interference
 c -------------------------------------------------------------------- c
@@ -19485,7 +20138,7 @@ c --------------------------------------
 c -------------------------------------------------------------------- c
 
       SD_charel = charsnel+charz+charzsnel
-      
+
       end
 
 c ==================================================================== c
@@ -19495,7 +20148,7 @@ c ======================================
       double precision function SD_chartau(x1,x2)
 
       implicit double precision (a-h,m,o-z)
-      
+
       dimension amneut(4),xmneut(4),amchar(2),xmchar(2),sgn(2)
       dimension dsto(2)
       dimension opl(2,2),opr(2,2),onl(4,4),onr(4,4)
@@ -19549,7 +20202,7 @@ c --- several definitions ---
       th = 1.D0-x2+xmutau
 
 c -------------------------------------------------------------------- c
-c                        sneutrino_tau exchange 
+c                        sneutrino_tau exchange
 c -------------------------------------------------------------------- c
 
       dsto(1) = 1.D0-x2-xmusn1+xmutau
@@ -19579,7 +20232,7 @@ c ---- final state masses included ----
      .           (-th**2+th*(1.D0+xmuneut1+2.D0*xmutau)-
      .           (xmuneut1+xmutau)*(1.D0+xmutau)))
             enddo
-         enddo         
+         enddo
       else
          charsntau=0.D0
       endif
@@ -19628,7 +20281,7 @@ c --------------------------------------
 
       xmuhl = aml**2/amchar(2)**2
       dhl   = y3-xmuhl
-      
+
 c ---- final state masses included ----
 
       if((amchar(1)+2.D0*amtau).le.amchar(2)) then
@@ -19650,7 +20303,7 @@ c --------------------------------------
 
       xmuhh = amh**2/amchar(2)**2
       dhh   = y3-xmuhh
-     
+
 c ---- final state masses included ----
 
       if((amchar(1)+2.D0*amtau).le.amchar(2)) then
@@ -19672,7 +20325,7 @@ c --------------------------------------
 
       xmuha = ama**2/amchar(2)**2
       dha   = y3-xmuha
-     
+
 c ---- final state masses included ----
 
       if((amchar(1)+2.D0*amtau).le.amchar(2)) then
@@ -19746,7 +20399,7 @@ c ---- final state masses included ----
      .      hv4*(2.D0/xmuz*(xmuneut1*(-2.D0*xmutau**2+xmutau*th
      .      -2.D0*xmutau+xmutau*uh-2.D0*xmutau)+xmutau*(-2.D0*xmutau
      .      +uh)+xmutau*th)+4.D0*(xmuneut1*(xmutau-th+1.D0)+xmutau*
-     .      (xmutau-th)+xmutau*(1.D0-th)+th**2-th)) + 
+     .      (xmutau-th)+xmutau*(1.D0-th)+th**2-th)) +
      .      hv5*xmchar(1)/xmchar(2)*dsqrt(xmutau)*sgn(2)*
      .      (2.D0/xmuz*(xmuneut1*(1.D0+xmutau-th)+1.D0+xmutau*
      .      (2.D0*xmutau-2.D0*th-uh+3.D0)+th*(th-xmutau+uh-2.D0)-uh)+
@@ -19771,7 +20424,7 @@ c --------------------------------------
 c                     Hl-sneutrino_tau interference
 c -------------------------------------------------------------------- c
 
-      charhlsntau=0.D0	
+      charhlsntau=0.D0
 
 c ---- final state masses included ----
 
@@ -19807,7 +20460,7 @@ c --------------------------------------
 c                     HH-sneutrino_tau interference
 c -------------------------------------------------------------------- c
 
-      charhhsntau=0.D0	
+      charhhsntau=0.D0
 
 c ---- final state masses included ----
 
@@ -19843,7 +20496,7 @@ c --------------------------------------
 c                     HA-sneutrino_tau interference
 c -------------------------------------------------------------------- c
 
-      charhasntau=0.D0	
+      charhasntau=0.D0
 
 c ---- final state masses included ----
 
@@ -19880,10 +20533,10 @@ c --------------------------------------
 c 	                interference Z and H/h/A
 c -------------------------------------------------------------------- c
 
-      charzhl=0.D0	
+      charzhl=0.D0
 
-      if ((amchar(1)+2.D0*amtau).le.amchar(2)) then      
-         charzhl=charzhl            
+      if ((amchar(1)+2.D0*amtau).le.amchar(2)) then
+         charzhl=charzhl
      .    -2.D0*g2**2/cw/dhl/dz*vzz*(-ytauc*dsin(a))/dsqrt(2.D0)*(
      .    xmchar(1)/xmchar(2)*dsqrt(xmutau)*sgn(2)*
      .    (gkhll(1,2)*opl(1,2)+gkhlr(1,2)*opr(1,2))*(
@@ -19895,10 +20548,10 @@ c --------------------------------------
          charzhl=0.D0
       endif
 
-      charzhh=0.D0	
+      charzhh=0.D0
 
-      if ((amchar(1)+2.D0*amtau).le.amchar(2)) then      
-         charzhh=charzhh            
+      if ((amchar(1)+2.D0*amtau).le.amchar(2)) then
+         charzhh=charzhh
      .    -2.D0*g2**2/cw/dhh/dz*vzz*(ytauc*dcos(a))/dsqrt(2.D0)*(
      .    xmchar(1)/xmchar(2)*dsqrt(xmutau)*sgn(2)*
      .    (gkhhl(1,2)*opl(1,2)+gkhhr(1,2)*opr(1,2))*(
@@ -19912,7 +20565,7 @@ c --------------------------------------
 
       charza=0.D0
 
-      if ((amchar(1)+2.D0*amtau).le.amchar(2)) then      
+      if ((amchar(1)+2.D0*amtau).le.amchar(2)) then
          charza=charza
      .    -2.D0*g2**2/cw/dha/dz*azz*(-ytauc*dsin(b))/dsqrt(2.D0)*(
      .    xmchar(1)/xmchar(2)*dsqrt(xmutau)*sgn(2)*
@@ -19995,7 +20648,7 @@ c --------------------------------------
       dsel(2)  = 1.D0-x1-xmusel2
 
       charsel=0.D0
-      
+
       if (amchar(1).le.amchar(2)) then
          do i=1,2
             do k=1,2
@@ -20028,13 +20681,13 @@ c --------------------------------------
       else
          charz=0.D0
       endif
-	
+
 c -------------------------------------------------------------------- c
 c                      Z-selectron interference
 c -------------------------------------------------------------------- c
 
       charzsel=0.D0
-      
+
       if(amchar(1).le.amchar(2)) then
          do i=1,2
             charzsel=charzsel-g2**2*4.D0/dsel(i)/dz/cw
@@ -20051,7 +20704,7 @@ c --------------------------------------
       else
          charzsel=0.D0
       endif
-      
+
 c -------------------------------------------------------------------- c
 
       SD_charnue = charsel+charz+charzsel
@@ -20114,7 +20767,7 @@ c --------------------------------------
       dsl(2)  = 1.D0-x1-xmusl2
 
       charstau=0.D0
-      
+
       if (amchar(1).le.amchar(2)) then
          do i=1,2
             do k=1,2
@@ -20147,13 +20800,13 @@ c --------------------------------------
       else
          charz=0.D0
       endif
-	
+
 c -------------------------------------------------------------------- c
 c                        Z-stau interference
 c -------------------------------------------------------------------- c
 
       charzstau=0.D0
-      
+
       if(amchar(1).le.amchar(2)) then
          do i=1,2
             charzstau=charzstau-g2**2*4.D0/dsl(i)/dz/cw
@@ -20170,11 +20823,11 @@ c --------------------------------------
       else
          charzstau=0.D0
       endif
-      
+
 c -------------------------------------------------------------------- c
 
       SD_charnutau = charstau+charz+charzstau
-      
+
       end
 
 c ==================================================================== c
@@ -20232,7 +20885,7 @@ c --------------------------------------
       dsd(2)  = 1.D0-x1-xmusd2
 
       charsdow=0.D0
-      
+
       if (amchar(1).le.amchar(2)) then
          do i=1,2
             do k=1,2
@@ -20265,13 +20918,13 @@ c --------------------------------------
       else
          charz=0.D0
       endif
-	
+
 c -------------------------------------------------------------------- c
 c                        Z-sdown interference
 c -------------------------------------------------------------------- c
 
       charzsdow=0.D0
-      
+
       if(amchar(1).le.amchar(2)) then
          do i=1,2
             charzsdow=charzsdow-g2**2*4.D0/dsd(i)/dz/cw
@@ -20348,7 +21001,7 @@ c --------------------------------------
       dsup(2)  = 1-x2-xmusup2
 
       charsup=0.D0
-      
+
       if (amchar(1).le.amchar(2)) then
          do i=1,2
             do k=1,2
@@ -20381,13 +21034,13 @@ c --------------------------------------
       else
          charz=0.D0
       endif
-	
+
 c -------------------------------------------------------------------- c
 c                         Z-sup interference
 c -------------------------------------------------------------------- c
 
       charzsup=0.D0
-      
+
       if(amchar(1).le.amchar(2)) then
          do i=1,2
             charzsup=charzsup+g2**2*4.D0/dsup(i)/dz/cw
@@ -20415,7 +21068,7 @@ c ======================================
       double precision function SD_charbot(x1,x2)
 
       implicit double precision (a-h,m,o-z)
-      
+
       dimension amneut(4),xmneut(4),amchar(2),xmchar(2),sgn(2)
       dimension dstop(2)
       dimension opl(2,2),opr(2,2),onl(4,4),onr(4,4)
@@ -20446,7 +21099,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(amchar(2),0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -20494,7 +21147,7 @@ c --- several definitions ---
       azz = azzbotbot
 
 c -------------------------------------------------------------------- c
-c                            stop exchange 
+c                            stop exchange
 c -------------------------------------------------------------------- c
 
       dstop(1)  = 1.D0-x2-xmust1+xmub
@@ -20524,7 +21177,7 @@ c ---- final state masses included ----
      .           (-th**2+th*(1.D0+xmuneut1+2.D0*xmub)-
      .           (xmuneut1+xmub)*(1.D0+xmub)))
             enddo
-         enddo         
+         enddo
       else
          charstop=0.D0
       endif
@@ -20537,7 +21190,7 @@ c --------------------------------------
       dz   = y3-xmuz
 
       charzbot = 0.D0
-      
+
 c ---- final state masses included ----
 
       rh = xmuneut1+2.D0*xmub-th-uh+1.D0
@@ -20617,7 +21270,7 @@ c --------------------------------------
 
       xmuha = ama**2/amchar(2)**2
       dha   = y3-xmuha
- 
+
 c ---- final state masses included ----
 
       if((amchar(1)+2.D0*amb).le.amchar(2)) then
@@ -20690,7 +21343,7 @@ c ---- final state masses included ----
      .      hv4*(2.D0/xmuz*(xmuneut1*(-2.D0*xmub**2+xmub*th
      .      -2.D0*xmub+xmub*uh-2.D0*xmub)+xmub*(-2.D0*xmub
      .      +uh)+xmub*th)+4.D0*(xmuneut1*(xmub-th+1.D0)+xmub*
-     .      (xmub-th)+xmub*(1.D0-th)+th**2-th)) + 
+     .      (xmub-th)+xmub*(1.D0-th)+th**2-th)) +
      .      hv5*xmchar(1)/xmchar(2)*dsqrt(xmub)*sgn(2)*
      .      (2.D0/xmuz*(xmuneut1*(1.D0+xmub-th)+1.D0+xmub*
      .      (2.D0*xmub-2.D0*th-uh+3.D0)+th*(th-xmub+uh-2.D0)-uh)+
@@ -20715,7 +21368,7 @@ c --------------------------------------
 c                         Hl-stop interference
 c -------------------------------------------------------------------- c
 
-      charhlstop=0.D0	
+      charhlstop=0.D0
 
 c ---- final state masses included ----
 
@@ -20749,7 +21402,7 @@ c --------------------------------------
 c                         HH-stop interference
 c -------------------------------------------------------------------- c
 
-      charhhstop=0.D0	
+      charhhstop=0.D0
 
 c ---- final state masses included ----
 
@@ -20783,7 +21436,7 @@ c --------------------------------------
 c                       HA-stop interference
 c -------------------------------------------------------------------- c
 
-      charhastop=0.D0	
+      charhastop=0.D0
 
 c ---- final state masses included ----
 
@@ -20819,10 +21472,10 @@ c --------------------------------------
 c 	                interference Z and H/h/A
 c -------------------------------------------------------------------- c
 
-      charzhl=0.D0	
+      charzhl=0.D0
 
-      if((amchar(1)+2.D0*amb).le.amchar(2)) then      
-         charzhl=charzhl            
+      if((amchar(1)+2.D0*amb).le.amchar(2)) then
+         charzhl=charzhl
      .    -2.D0*g2**2/cw/dhl/dz*vzz*hlbbr/dsqrt(2.D0)*(
      .    xmchar(1)/xmchar(2)*dsqrt(xmub)*sgn(2)*
      .    (gkhll(1,2)*opl(1,2)+gkhlr(1,2)*opr(1,2))*(
@@ -20834,10 +21487,10 @@ c --------------------------------------
          charzhl=0.D0
       endif
 
-      charzhh=0.D0	
+      charzhh=0.D0
 
-      if((amchar(1)+2.D0*amb).le.amchar(2)) then      
-         charzhh=charzhh            
+      if((amchar(1)+2.D0*amb).le.amchar(2)) then
+         charzhh=charzhh
      .    -2.D0*g2**2/cw/dhh/dz*vzz*hhbbr/dsqrt(2.D0)*(
      .    xmchar(1)/xmchar(2)*dsqrt(xmub)*sgn(2)*
      .    (gkhhl(1,2)*opl(1,2)+gkhhr(1,2)*opr(1,2))*(
@@ -20851,7 +21504,7 @@ c --------------------------------------
 
       charza=0.D0
 
-      if((amchar(1)+2.D0*amb).le.amchar(2)) then      
+      if((amchar(1)+2.D0*amb).le.amchar(2)) then
          charza=charza
      .    -2.D0*g2**2/cw/dha/dz*azz*habbr/dsqrt(2.D0)*(
      .    xmchar(1)/xmchar(2)*dsqrt(xmub)*sgn(2)*
@@ -20885,7 +21538,7 @@ c ======================================
       double precision function SD_chartop(x1,x2)
 
       implicit double precision (a-h,m,o-z)
-      
+
       dimension amneut(4),xmneut(4),amchar(2),xmchar(2),sgn(2)
       dimension dsbot(2)
       dimension opl(2,2),opr(2,2),onl(4,4),onr(4,4)
@@ -20916,7 +21569,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(amchar(2),0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -20964,7 +21617,7 @@ c --- several definitions ---
       azz = azztoptop
 
 c -------------------------------------------------------------------- c
-c                          sbottom exchange 
+c                          sbottom exchange
 c -------------------------------------------------------------------- c
 
       dsbot(1) = 1-x1-xmusb1+xmut
@@ -20994,7 +21647,7 @@ c ---- final state masses included ----
      .           (-uh**2+uh*(1.D0+xmuneut1+2.D0*xmut)-(xmuneut1+xmut)*
      .           (1.D0+xmut)))
             enddo
-         enddo         
+         enddo
       else
          charsbot=0.D0
       endif
@@ -21042,7 +21695,7 @@ c --------------------------------------
 
       xmuhl = aml**2/amchar(2)**2
       dhl   = y3-xmuhl
-      
+
 c ---- final state masses included ----
 
       if((amchar(1)+2.D0*amt).le.amchar(2)) then
@@ -21064,7 +21717,7 @@ c --------------------------------------
 
       xmuhh = amh**2/amchar(2)**2
       dhh   = y3-xmuhh
-      
+
 c ---- final state masses included ----
 
       if((amchar(1)+2.D0*amt).le.amchar(2)) then
@@ -21086,7 +21739,7 @@ c --------------------------------------
 
       xmuha = ama**2/amchar(2)**2
       dha   = y3-xmuha
-      
+
 c ---- final state masses included ----
 
       if((amchar(1)+2.D0*amt).le.amchar(2)) then
@@ -21160,7 +21813,7 @@ c ---- final state masses included ----
      .      hv4*(2.D0/xmuz*(xmuneut1*(-2.D0*xmut**2+xmut*th-2.D0*xmut+
      .      xmut*uh-2.D0*xmut)+xmut*(-2.D0*xmut+uh)+xmut*th)+4.D0*(
      .      xmuneut1*(xmut-uh+1.D0)+xmut*(xmut-uh)+xmut*(1.D0-uh)+uh**2
-     .      -uh)) + 
+     .      -uh)) +
      .      hv5*xmchar(1)/xmchar(2)*dsqrt(xmut)*sgn(2)*(2.D0/xmuz*
      .      (xmuneut1*(1.D0+xmut-uh)+1.D0+xmut*(xmut-uh)+xmut*
      .      (xmut-th-2.D0*uh+3.D0)+th*(uh-1.D0)+uh*(uh-2.D0))+
@@ -21185,7 +21838,7 @@ c --------------------------------------
 c                      Hl-sbottom interference
 c -------------------------------------------------------------------- c
 
-      charhlsbot=0.D0	
+      charhlsbot=0.D0
 
 c ---- final state masses included ----
 
@@ -21219,7 +21872,7 @@ c --------------------------------------
 c                        HH-sbottom interference
 c -------------------------------------------------------------------- c
 
-      charhhsbot=0.D0	
+      charhhsbot=0.D0
 
 c ---- final state masses included ----
 
@@ -21253,7 +21906,7 @@ c --------------------------------------
 c                       HA-sbottom interference
 c -------------------------------------------------------------------- c
 
-      charhasbot=0.D0	
+      charhasbot=0.D0
 
 c ---- final state masses included ----
 
@@ -21287,9 +21940,9 @@ c --------------------------------------
 c 	                interference Z and H/h/A
 c -------------------------------------------------------------------- c
 
-      charzhl=0.D0	
+      charzhl=0.D0
 
-      if((amchar(1)+2.D0*amt).le.amchar(2)) then      
+      if((amchar(1)+2.D0*amt).le.amchar(2)) then
          charzhl=charzhl
      .    -2.D0*g2**2/cw/dhl/dz*vzz*(hlttr/dsqrt(2.D0))*(
      .    xmchar(1)/xmchar(2)*dsqrt(xmut)*sgn(2)*
@@ -21302,9 +21955,9 @@ c --------------------------------------
          charzhl=0.D0
       endif
 
-      charzhh=0.D0	
+      charzhh=0.D0
 
-      if((amchar(1)+2.D0*amt).le.amchar(2)) then      
+      if((amchar(1)+2.D0*amt).le.amchar(2)) then
          charzhh=charzhh
      .    -2.D0*g2**2/cw/dhh/dz*vzz*(hhttr/dsqrt(2.D0))*(
      .    xmchar(1)/xmchar(2)*dsqrt(xmut)*sgn(2)*
@@ -21317,9 +21970,9 @@ c --------------------------------------
          charzhh=0.D0
       endif
 
-      charzha=0.D0	
+      charzha=0.D0
 
-      if((amchar(1)+2.D0*amt).le.amchar(2)) then      
+      if((amchar(1)+2.D0*amt).le.amchar(2)) then
          charzha=charzha
      .    -2.D0*g2**2/cw/dha/dz*azz*(hattr/dsqrt(2.D0))*(
      .    xmchar(1)/xmchar(2)*dsqrt(xmut)*sgn(2)*
@@ -21360,7 +22013,7 @@ c ======================================
       dimension alup(2,2),aldo(2,2),bldo(2,2),blup(2,2)
 
       COMMON/SD_massgino/amneut,xmneut,amchar,xmchar
-      COMMON/SD_gluino/mgluino	      
+      COMMON/SD_gluino/mgluino
       COMMON/SD_param/sdgf,amz,amw,pi,g2
       COMMON/SD_indices/ni,nj
       COMMON/SD_squarkud/asup1,asup2,asdown1,asdown2
@@ -21376,7 +22029,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          gs21 = alsew*4.D0*pi
          gs22 = gs21
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          gs21 = SD_alphascall(amchar(ni),inumloop)*4.D0*pi
          gs22 = gs21
       elseif(scalechoice.eq.3.D0) then
@@ -21384,7 +22037,7 @@ c --- the running couplings ---
          gs22 = gs21
       endif
 
-c --- several definitions ---      
+c --- several definitions ---
 
       xmuneut1 = mgluino**2/amchar(ni)**2
 
@@ -21435,8 +22088,8 @@ c --------------------------------------
      .            mgluino/xmchar(ni)*y3 )
             enddo
          enddo
-      else 
-         SD_gluiupdb=0.D0	
+      else
+         SD_gluiupdb=0.D0
       endif
 
       end
@@ -21455,7 +22108,7 @@ c ======================================
       dimension alsbot(2,2),aksbot(2,2),alstor(2,2),akstor(2,2)
 
       COMMON/SD_massgino/amneut,xmneut,amchar,xmchar
-      COMMON/SD_gluino/mgluino	      
+      COMMON/SD_gluino/mgluino
       COMMON/SD_fermion/amt,amb,amtau
       COMMON/SD_squarktb/ast1,ast2,asb1,asb2
       COMMON/SD_param/gf,amz,amw,pi,g2
@@ -21473,7 +22126,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          gs21 = alsew*4.D0*pi
          gs22 = gs21
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          gs21 = SD_alphascall(amchar(ni),inumloop)*4.D0*pi
          gs22 = gs21
       elseif(scalechoice.eq.3.D0) then
@@ -21484,7 +22137,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(amchar(ni),0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -21597,8 +22250,8 @@ c ---- final state masses included ----
      .           dsqrt(xmut*xmuneut1)*(th-xmub-1.D0) )
             enddo
          enddo
-      else 
-         SD_gluitopbb=0.D0	
+      else
+         SD_gluitopbb=0.D0
       endif
 
       end
@@ -21654,7 +22307,7 @@ c ======================================
       COMMON/SD_coup1/ahl,ahh,aa
       COMMON/SD_coup3/ql,qr,ol,or
       COMMON/SD_coup4/opl,opr,oppl,oppr
-      COMMON/SD_coup8/ae,be,ato,bto,anu,bnu,antau,bntau  
+      COMMON/SD_coup8/ae,be,ato,bto,anu,bnu,antau,bntau
       COMMON/SD_coup10/aup,bup,ado,bdo
       COMMON/SD_runcoupscale/scalechoice,scaleofcoupling,inumloop
       COMMON/SD_mwmzpole/amwp,amzp
@@ -21703,7 +22356,7 @@ c  chi0_2/chi0_3/chi0_4 --> chi0_1/chi0_
 
       do i=1,4,1
          do j=1,4,1
-            if(j.ge.i) then 
+            if(j.ge.i) then
                neutzneut(i,j) = 0.D0
             else
                if(amneut(i).ge.(amneut(j)+amzp)) then
@@ -21873,7 +22526,7 @@ c  chi0_1/chi0_2/chi0_3/chi0_4 --> stau2
          else
             neutstau2(i)=0.D0
          endif
-      end do         
+      end do
 
 c -------------------------------------------------------------------- c
 c  chi0_1/chi0_2/chi0_3/chi0_4 --> sneutrino_tau1 neutrino_tau
@@ -21923,7 +22576,7 @@ c --- the QCD corrections ---
          if(amneut(i).ge.asup1) then
             if(scalechoice.eq.1.D0) then
                gs2 = alsew*4.D0*pi
-            elseif(scalechoice.eq.2.D0) then         
+            elseif(scalechoice.eq.2.D0) then
                gs2 = SD_alphascall(amneut(i),inumloop)*4.D0*pi
             elseif(scalechoice.eq.3.D0) then
                gs2 = SD_alphascall(scaleofcoupling,inumloop)*4.D0*pi
@@ -21957,7 +22610,7 @@ c --- the QCD corrections ---
          if(amneut(i).ge.asup2) then
             if(scalechoice.eq.1.D0) then
                gs2 = alsew*4.D0*pi
-            elseif(scalechoice.eq.2.D0) then         
+            elseif(scalechoice.eq.2.D0) then
                gs2 = SD_alphascall(amneut(i),inumloop)*4.D0*pi
             elseif(scalechoice.eq.3.D0) then
                gs2 = SD_alphascall(scaleofcoupling,inumloop)*4.D0*pi
@@ -21991,7 +22644,7 @@ c --- the QCD corrections ---
          if(amneut(i).ge.asdown1) then
             if(scalechoice.eq.1.D0) then
                gs2 = alsew*4.D0*pi
-            elseif(scalechoice.eq.2.D0) then         
+            elseif(scalechoice.eq.2.D0) then
                gs2 = SD_alphascall(amneut(i),inumloop)*4.D0*pi
             elseif(scalechoice.eq.3.D0) then
                gs2 = SD_alphascall(scaleofcoupling,inumloop)*4.D0*pi
@@ -22025,7 +22678,7 @@ c --- the QCD corrections ---
          if(amneut(i).ge.asdown2) then
             if(scalechoice.eq.1.D0) then
                gs2 = alsew*4.D0*pi
-            elseif(scalechoice.eq.2.D0) then         
+            elseif(scalechoice.eq.2.D0) then
                gs2 = SD_alphascall(amneut(i),inumloop)*4.D0*pi
             elseif(scalechoice.eq.3.D0) then
                gs2 = SD_alphascall(scaleofcoupling,inumloop)*4.D0*pi
@@ -22046,7 +22699,7 @@ c  chi0_1/chi0_2/chi0_3/chi0_4 --> stop1
          if(scalechoice.eq.1.D0) then
             scalb = ybewsb/dsqrt(g2)
             scalt = ytewsb/dsqrt(g2)
-         elseif(scalechoice.eq.2.D0) then         
+         elseif(scalechoice.eq.2.D0) then
             call SD_runmass(amneut(i),0.D0,0.D0,runmb,runmt)
             scalb = SD_yuk(2,runmb)
             scalt = SD_yuk(1,runmt)
@@ -22057,7 +22710,7 @@ c  chi0_1/chi0_2/chi0_3/chi0_4 --> stop1
          endif
 
          call SD_neutstoptop(atopr,btopr)
-         
+
          if(amneut(i).ge.(ast1+amt)) then
             neutst1(i)=3.D0*g2/2.D0*((atopr(1,i)**2+btopr(1,i)**2)
      .           *(amneut(i)**2-ast1**2+amt**2)
@@ -22078,7 +22731,7 @@ c -- the QCD corrections --
                scalt    = ytewsb/dsqrt(g2)
                gs2      = alsew*4.D0*pi
                amurefer = amuref
-            elseif(scalechoice.eq.2.D0) then         
+            elseif(scalechoice.eq.2.D0) then
                call SD_runmass(amneut(i),0.D0,0.D0,runmb,runmt)
                scalb    = SD_yuk(2,runmb)
                scalt    = SD_yuk(1,runmt)
@@ -22088,13 +22741,13 @@ c -- the QCD corrections --
                call SD_runmass(scaleofcoupling,0.D0,0.D0,runmb,runmt)
                scalb    = SD_yuk(2,runmb)
                scalt    = SD_yuk(1,runmt)
-               gs2      = 
+               gs2      =
      .              SD_alphascall(scaleofcoupling,inumloop)*4.D0*pi
                amurefer = scaleofcoupling
             endif
-            
+
             call SD_neutstoptop(atopr,btopr)
-         
+
             amuvdiv = amuv/amurefer
 
             if(xmneut(i).le.0.D0) then
@@ -22110,7 +22763,7 @@ c -- the QCD corrections --
      .            (-ast1**2+amt**2+amneut(i)**2)
      .           +2.D0*(btopr(1,i)*SD_grtneut(1,i,amuv,amuvdiv,lamv)
      .                 +atopr(1,i)*SD_gltneut(1,i,amuv,amuvdiv,lamv))*
-     .           amt*xmneut(i))*SD_lamb(amt/amneut(i),ast1/amneut(i)) 
+     .           amt*xmneut(i))*SD_lamb(amt/amneut(i),ast1/amneut(i))
      .           +g2/(6.D0*pi**2*amneut(i))*gs2/(4.D0*pi)*
      .           3.D0/2.D0*(-1.D0)*
      .           SD_realicorr(amt,amneut(i),ast1,lamv,1,jsign,1,i,1)
@@ -22126,7 +22779,7 @@ c  chi0_1/chi0_2/chi0_3/chi0_4 --> stop2
          if(scalechoice.eq.1.D0) then
             scalb = ybewsb/dsqrt(g2)
             scalt = ytewsb/dsqrt(g2)
-         elseif(scalechoice.eq.2.D0) then         
+         elseif(scalechoice.eq.2.D0) then
             call SD_runmass(amneut(i),0.D0,0.D0,runmb,runmt)
             scalb = SD_yuk(2,runmb)
             scalt = SD_yuk(1,runmt)
@@ -22158,7 +22811,7 @@ c -- the QCD corrections --
                scalt    = ytewsb/dsqrt(g2)
                gs2      = alsew*4.D0*pi
                amurefer = amuref
-            elseif(scalechoice.eq.2.D0) then         
+            elseif(scalechoice.eq.2.D0) then
                call SD_runmass(amneut(i),0.D0,0.D0,runmb,runmt)
                scalb    = SD_yuk(2,runmb)
                scalt    = SD_yuk(1,runmt)
@@ -22168,13 +22821,13 @@ c -- the QCD corrections --
                call SD_runmass(scaleofcoupling,0.D0,0.D0,runmb,runmt)
                scalb    = SD_yuk(2,runmb)
                scalt    = SD_yuk(1,runmt)
-               gs2      = 
+               gs2      =
      .              SD_alphascall(scaleofcoupling,inumloop)*4.D0*pi
                amurefer = scaleofcoupling
             endif
-            
+
             call SD_neutstoptop(atopr,btopr)
-            
+
             amuvdiv = amuv/amurefer
 
             if(xmneut(i).le.0.D0) then
@@ -22190,7 +22843,7 @@ c -- the QCD corrections --
      .            (-ast2**2+amt**2+amneut(i)**2)
      .           +2.D0*(btopr(2,i)*SD_grtneut(2,i,amuv,amuvdiv,lamv)
      .                 +atopr(2,i)*SD_gltneut(2,i,amuv,amuvdiv,lamv))*
-     .           amt*xmneut(i))*SD_lamb(amt/amneut(i),ast2/amneut(i)) 
+     .           amt*xmneut(i))*SD_lamb(amt/amneut(i),ast2/amneut(i))
      .           +g2/(6.D0*pi**2*amneut(i))*gs2/(4.D0*pi)*
      .           3.D0/2.D0*(-1.D0)*
      .           SD_realicorr(amt,amneut(i),ast2,lamv,1,jsign,2,i,1)
@@ -22206,7 +22859,7 @@ c  chi0_1/chi0_2/chi0_3/chi0_4 --> sbott
          if(scalechoice.eq.1.D0) then
             scalb = ybewsb/dsqrt(g2)
             scalt = ytewsb/dsqrt(g2)
-         elseif(scalechoice.eq.2.D0) then         
+         elseif(scalechoice.eq.2.D0) then
             call SD_runmass(amneut(i),0.D0,0.D0,runmb,runmt)
             scalb = SD_yuk(2,runmb)
             scalt = SD_yuk(1,runmt)
@@ -22238,7 +22891,7 @@ c -- the QCD corrections --
                scalt    = ytewsb/dsqrt(g2)
                gs2      = alsew*4.D0*pi
                amurefer = amuref
-            elseif(scalechoice.eq.2.D0) then         
+            elseif(scalechoice.eq.2.D0) then
                call SD_runmass(amneut(i),0.D0,0.D0,runmb,runmt)
                scalb    = SD_yuk(2,runmb)
                scalt    = SD_yuk(1,runmt)
@@ -22248,13 +22901,13 @@ c -- the QCD corrections --
                call SD_runmass(scaleofcoupling,0.D0,0.D0,runmb,runmt)
                scalb    = SD_yuk(2,runmb)
                scalt    = SD_yuk(1,runmt)
-               gs2      = 
+               gs2      =
      .              SD_alphascall(scaleofcoupling,inumloop)*4.D0*pi
                amurefer = scaleofcoupling
             endif
-            
+
             call SD_neutsbotbot(abot,bbot)
-         
+
             amuvdiv = amuv/amurefer
 
             if(xmneut(i).le.0.D0) then
@@ -22270,7 +22923,7 @@ c -- the QCD corrections --
      .            (-asb1**2+amb**2+amneut(i)**2)
      .           +2.D0*(bbot(1,i)*SD_grbneut(1,i,amuv,amuvdiv,lamv)
      .                 +abot(1,i)*SD_glbneut(1,i,amuv,amuvdiv,lamv))*
-     .           amb*xmneut(i))*SD_lamb(amb/amneut(i),asb1/amneut(i)) 
+     .           amb*xmneut(i))*SD_lamb(amb/amneut(i),asb1/amneut(i))
      .           +g2/(6.D0*pi**2*amneut(i))*gs2/(4.D0*pi)*
      .           3.D0/2.D0*(-1.D0)*
      .           SD_realicorr(amb,amneut(i),asb1,lamv,1,jsign,1,i,2)
@@ -22286,7 +22939,7 @@ c  chi0_1/chi0_2/chi0_3/chi0_4 --> sbott
          if(scalechoice.eq.1.D0) then
             scalb = ybewsb/dsqrt(g2)
             scalt = ytewsb/dsqrt(g2)
-         elseif(scalechoice.eq.2.D0) then         
+         elseif(scalechoice.eq.2.D0) then
             call SD_runmass(amneut(i),0.D0,0.D0,runmb,runmt)
             scalb = SD_yuk(2,runmb)
             scalt = SD_yuk(1,runmt)
@@ -22318,7 +22971,7 @@ c -- the QCD corrections --
                scalt    = ytewsb/dsqrt(g2)
                gs2      = alsew*4.D0*pi
                amurefer = amuref
-            elseif(scalechoice.eq.2.D0) then         
+            elseif(scalechoice.eq.2.D0) then
                call SD_runmass(amneut(i),0.D0,0.D0,runmb,runmt)
                scalb    = SD_yuk(2,runmb)
                scalt    = SD_yuk(1,runmt)
@@ -22328,13 +22981,13 @@ c -- the QCD corrections --
                call SD_runmass(scaleofcoupling,0.D0,0.D0,runmb,runmt)
                scalb    = SD_yuk(2,runmb)
                scalt    = SD_yuk(1,runmt)
-               gs2      = 
+               gs2      =
      .              SD_alphascall(scaleofcoupling,inumloop)*4.D0*pi
                amurefer = scaleofcoupling
             endif
-            
+
             call SD_neutsbotbot(abot,bbot)
-         
+
             amuvdiv = amuv/amurefer
 
             if(xmneut(i).le.0.D0) then
@@ -22350,7 +23003,7 @@ c -- the QCD corrections --
      .            (-asb2**2+amb**2+amneut(i)**2)
      .           +2.D0*(bbot(2,i)*SD_grbneut(2,i,amuv,amuvdiv,lamv)
      .                 +abot(2,i)*SD_glbneut(2,i,amuv,amuvdiv,lamv))*
-     .           amb*xmneut(i))*SD_lamb(amb/amneut(i),asb2/amneut(i)) 
+     .           amb*xmneut(i))*SD_lamb(amb/amneut(i),asb2/amneut(i))
      .           +g2/(6.D0*pi**2*amneut(i))*gs2/(4.D0*pi)*
      .           3.D0/2.D0*(-1.D0)*
      .           SD_realicorr(amb,amneut(i),asb2,lamv,1,jsign,2,i,2)
@@ -22391,7 +23044,7 @@ c ======================================
          else
             gefgh(k) = 0.D0
          endif
-      end do 
+      end do
 
       if(amneut(ni).gt.amneut(nj)) then
          gabcd = SD_gcoupabcd(xmneut(ni),xmneut(nj),ni,nj)
@@ -22460,7 +23113,7 @@ c --------------------------------------
       SD_gcoupefgh = (gl*fl-gr*fr)*(epsi*amni*
      .     dreal((SD_i2int(amni,amnj,amchar,amwp)
      .   -SD_jint(amni,amnj,amchar,amwp)
-     .   -SD_kint(amni,amnj,amchar,amwp))) 
+     .   -SD_kint(amni,amnj,amchar,amwp)))
      .     + epsj*amnj*dreal((SD_jint(amni,amnj,amchar,amwp)
      .                       -SD_kint(amni,amnj,amchar,amwp))) )
      .     + 2.D0*epsk*amchar*(gl*fr-gr*fl)*
@@ -22497,7 +23150,7 @@ c --------------------------------------
       COMMON/SD_sfermionetau/ase1,ase2,astau1,astau2
       COMMON/SD_yukawa/ytewsb,ybewsb,ytauewsb
       COMMON/SD_runcoupscale/scalechoice,scaleofcoupling,inumloop
-      COMMON/SD_coup8/ae,be,atau,btau,anu,bnu,antau,bntau      
+      COMMON/SD_coup8/ae,be,atau,btau,anu,bnu,antau,bntau
       COMMON/SD_mwmzpole/amwp,amzp
 
 c --- some definitions ---
@@ -22530,7 +23183,7 @@ c --- the (non) running couplings ---
       if(scalechoice.eq.1.D0) then
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(amni,0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -22614,7 +23267,7 @@ c --- the (non) running couplings ---
             glflgrfr = gl*fl-gr*fr
          endif
 
-         SD_gcoupabcd = SD_gcoupabcd -1.D0/4.D0*ef*cf*( 
+         SD_gcoupabcd = SD_gcoupabcd -1.D0/4.D0*ef*cf*(
      .        glfrgrfl*(epsi*amni*dreal((SD_i2int(amni,amnj,mfer,mbos)-
      .                             SD_kint(amni,amnj,mfer,mbos)))
      .                 -epsj*amnj*dreal(SD_kint(amni,amnj,mfer,mbos)) )
@@ -22642,7 +23295,7 @@ c --- the (non) running couplings ---
      .        v(k,2)+z(j,4)*u(k,2)*v(k,1))+1.D0/dsqrt(2.D0)*zjp*(
      .        z(i,3)*u(k,1)*v(k,2)+z(i,4)*u(k,2)*v(k,1)))
 
-         SD_gcoupabcd = SD_gcoupabcd -1.D0/4.D0*ef*cf*( 
+         SD_gcoupabcd = SD_gcoupabcd -1.D0/4.D0*ef*cf*(
      .        glfrgrfl*(epsi*amni*dreal((SD_i2int(amni,amnj,mfer,mbos)-
      .                             SD_kint(amni,amnj,mfer,mbos)))
      .                 -epsj*amnj*dreal(SD_kint(amni,amnj,mfer,mbos)) )
@@ -22670,7 +23323,7 @@ c --- the (non) running couplings ---
      .        v(k,2)+z(j,4)*u(k,2)*v(k,1))+1.D0/dsqrt(2.D0)*zjp*(
      .        z(i,3)*u(k,1)*v(k,2)+z(i,4)*u(k,2)*v(k,1)))
 
-         SD_gcoupabcd = SD_gcoupabcd -1.D0/4.D0*ef*cf*( 
+         SD_gcoupabcd = SD_gcoupabcd -1.D0/4.D0*ef*cf*(
      .        glfrgrfl*(epsi*amni*dreal((SD_i2int(amni,amnj,mfer,mbos)-
      .                                   SD_kint(amni,amnj,mfer,mbos)))
      .                 -epsj*amnj*dreal(SD_kint(amni,amnj,mfer,mbos)) )
@@ -22701,7 +23354,7 @@ c --------------------------------------
       COMMON/SD_fermion/amt,amb,amtau
       COMMON/SD_squarkud/asup1,asup2,asdown1,asdown2
       COMMON/SD_sfermionetau/ase1,ase2,astau1,astau2
-      COMMON/SD_coup8/ae,be,atau,btau,anu,bnu,antau,bntau      
+      COMMON/SD_coup8/ae,be,atau,btau,anu,bnu,antau,bntau
       COMMON/SD_coup10/aup,bup,ado,bdo
 
 c --- some definitions ---
@@ -22797,7 +23450,7 @@ c --- the couplings ---
             glflgrfr = gl*fl-gr*fr
          endif
 
-         SD_gcoupabcd0 = SD_gcoupabcd0 -1.D0/4.D0*ef*cf*( 
+         SD_gcoupabcd0 = SD_gcoupabcd0 -1.D0/4.D0*ef*cf*(
      .        glfrgrfl*(epsi*amni*dreal((SD_i2int0(amni,amnj,mbos)-
      .                             SD_kint0(amni,amnj,mbos)))
      .                 -epsj*amnj*dreal(SD_kint0(amni,amnj,mbos)) ) )
@@ -22871,7 +23524,7 @@ c --------------------------------------
       COMMON/SD_massgrav/mgravitino
       COMMON/SD_fermion/amt,amb,amtau
 
-      bet   = datan(tanbeta) 
+      bet   = datan(tanbeta)
       alp   = alp_mssm
 
       mplanck = 2.4D18
@@ -22882,7 +23535,7 @@ c --------------------------------------
       do i=1,4,1
          kgamma(i) = zp(i,1)**2
          kz(i)     = zp(i,2)**2+0.5D0*(z(i,3)*dcos(bet)
-     .               -z(i,4)*dsin(bet))**2	
+     .               -z(i,4)*dsin(bet))**2
          khl(i)    = (z(i,3)*dsin(alp)-z(i,4)*dcos(alp))**2
          khh(i)    = (z(i,3)*dcos(alp)+z(i,4)*dsin(alp))**2
          kha(i)    = (z(i,3)*dsin(bet)+z(i,4)*dcos(bet))**2
@@ -22954,13 +23607,13 @@ c -- neutralino1 -> Gravitino A --
       end do
 
 c -- stau1 -> Gravitino tau --
-      
+
       if(astau1.ge.(amgravitino+amtau)) then
          stautaugravitino = astau1**5/48.D0/pi/mplanck**2
      .        /amgravitino**2
       else
          stautaugravitino = 0.D0
-      endif      
+      endif
 
       end
 
@@ -22988,7 +23641,7 @@ c --------------------------------------
       COMMON/SD_massgrav/mgravitino
       COMMON/SD_fermion/amt,amb,amtau
 
-      bet   = datan(tanbeta) 
+      bet   = datan(tanbeta)
       alp   = alp_mssm
 
       mplanck = 2.4D18
@@ -23044,7 +23697,7 @@ c ======================================
      .                      xgluinoch,xgluinost,xgluinotop,
      .                      xgluinobot)
 
-      implicit double precision (a-h,m,o-z) 
+      implicit double precision (a-h,m,o-z)
       integer ni,nj
       integer nx1t,ny1t
 
@@ -23144,7 +23797,7 @@ c --------------------------------------
 c -------------------------------------------------------------------- c
 c --------------------------- gluino b bbar -------------------------- c
 c -------------------------------------------------------------------- c
-	
+
       do ni=1,4,1
          xmu1=amb**2/amneut(ni)**2
          xmu2=amb**2/amneut(ni)**2
@@ -23164,7 +23817,7 @@ c --------------------------- neutralino
 c -------------------------------------------------------------------- c
 
       do ni = 2,4,1
-         do nj = 1,4,1     
+         do nj = 1,4,1
             xmu1=0.D0
             xmu2=0.D0
             xmu3=amneut(nj)**2/amneut(ni)**2
@@ -23203,7 +23856,7 @@ c ------------------------ neutralino ta
 c -------------------------------------------------------------------- c
 
       do ni = 2,4,1
-         do nj = 1,4,1     
+         do nj = 1,4,1
             xmu1=amtau**2/amneut(ni)**2
             xmu2=amtau**2/amneut(ni)**2
             xmu3=amneut(nj)**2/amneut(ni)**2
@@ -23231,7 +23884,7 @@ c ----------------------- neutralino nu_
 c -------------------------------------------------------------------- c
 
       do ni = 2,4,1
-         do nj = 1,4,1     
+         do nj = 1,4,1
             xmu1=0.D0
             xmu2=0.D0
             xmu3=amneut(nj)**2/amneut(ni)**2
@@ -23270,7 +23923,7 @@ c -------------------- neutralino nu_tau
 c -------------------------------------------------------------------- c
 
       do ni = 2,4,1
-         do nj = 1,4,1     
+         do nj = 1,4,1
             xmu1=0.D0
             xmu2=0.D0
             xmu3=amneut(nj)**2/amneut(ni)**2
@@ -23302,7 +23955,7 @@ c --------------------------------------
             xmu1=0.D0
             xmu2=0.D0
             xmu3=amneut(nj)**2/amneut(ni)**2
-      
+
             if(nj.ge.ni) then
                xneutup(ni,nj) = 0.D0
             else
@@ -23316,7 +23969,7 @@ c --------------------------------------
                endif
             endif
          enddo
-      enddo  
+      enddo
 
       do i=1,4,1
          xneutup(1,i) = 0.D0
@@ -23331,7 +23984,7 @@ c --------------------------------------
             xmu1=0.D0
             xmu2=0.D0
             xmu3=amneut(nj)**2/amneut(ni)**2
-      
+
             if(nj.ge.ni) then
                xneutdow(ni,nj) = 0.D0
             else
@@ -23345,7 +23998,7 @@ c --------------------------------------
                endif
             endif
          enddo
-      enddo  
+      enddo
 
       do i=1,4,1
          xneutdow(1,i) = 0.D0
@@ -23389,7 +24042,7 @@ c --------------------------------------
                if(amneut(ni).gt.(2.D0*amt+amneut(nj))) then
                   call SD_integ2(SD_neuttop,SD_ax,SD_bx,SD_ay,SD_by,
      .                        xmu1,xmu2,xmu3,nx1t,ny1t,sum)
-                  xneuttop(ni,nj) = sum/64.D0/(2*pi)**3*amneut(ni)  
+                  xneuttop(ni,nj) = sum/64.D0/(2*pi)**3*amneut(ni)
                   xneuttop(ni,nj) = 3.D0*xneuttop(ni,nj)
                else
                   xneuttop(ni,nj) = 0.D0
@@ -23418,7 +24071,7 @@ c --------------------------------------
                if(amneut(ni).gt.(2.D0*amb+amneut(nj))) then
                   call SD_integ2(SD_neutbot,SD_ax,SD_bx,SD_ay,SD_by,
      .                        xmu1,xmu2,xmu3,nx1t,ny1t,sum)
-                  xneutbot(ni,nj) = sum/64.D0/(2*pi)**3*amneut(ni)  
+                  xneutbot(ni,nj) = sum/64.D0/(2*pi)**3*amneut(ni)
                   xneutbot(ni,nj) = 3.D0*xneutbot(ni,nj)
                else
                   xneutbot(ni,nj) = 0.D0
@@ -23436,7 +24089,7 @@ c ------------------------ chargino- e+
 c -------------------------------------------------------------------- c
 
       do ni = 1,4,1
-         do nj = 1,2,1     
+         do nj = 1,2,1
             xmu1=0.D0
             xmu2=0.D0
             xmu3=amchar(nj)**2/amneut(ni)**2
@@ -23466,7 +24119,7 @@ c --------------------- chargino- tau+ n
 c -------------------------------------------------------------------- c
 
       do ni = 1,4,1
-         do nj = 1,2,1     
+         do nj = 1,2,1
             xmu1=0.D0
             xmu2=amtau**2/amneut(ni)**2
             xmu3=amchar(nj)**2/amneut(ni)**2
@@ -23486,7 +24139,7 @@ c ------------------------ chargino- up
 c -------------------------------------------------------------------- c
 
       do ni = 1,4,1
-         do nj = 1,2,1     
+         do nj = 1,2,1
             xmu1=0.D0
             xmu2=0.D0
             xmu3=amchar(nj)**2/amneut(ni)**2
@@ -23516,7 +24169,7 @@ c ---------------------- chargino- top b
 c -------------------------------------------------------------------- c
 
       do ni = 1,4,1
-         do nj = 1,2,1     
+         do nj = 1,2,1
             xmu1=amt**2/amneut(ni)**2
             xmu2=amb**2/amneut(ni)**2
             xmu3=amchar(nj)**2/amneut(ni)**2
@@ -23564,7 +24217,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          gs21 = alsew*4.D0*pi
          gs22 = gs21
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          gs21 = SD_alphascall(amneut(ni),inumloop)*4.D0*pi
          gs22 = gs21
       elseif(scalechoice.eq.3.D0) then
@@ -23612,8 +24265,8 @@ c --------------------------------------
      .                +gur(i)*gur(k)*bup(k,ni)*bup(i,ni)))
             enddo
          enddo
-      else 
-         SD_xgluiup=0.D0	
+      else
+         SD_xgluiup=0.D0
       endif
 
       end
@@ -23649,7 +24302,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          gs21 = alsew*4.D0*pi
          gs22 = gs21
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          gs21 = SD_alphascall(amneut(ni),inumloop)*4.D0*pi
          gs22 = gs21
       elseif(scalechoice.eq.3.D0) then
@@ -23710,7 +24363,7 @@ c ======================================
       double precision function SD_xgluitop(x1,x2)
 
       implicit double precision (a-h,m,o-z)
-  
+
       dimension amneut(4),xmneut(4),amchar(2),xmchar(2)
       dimension gtr(2),gtl(2),gbr(2),gbl(2),gur(2),gul(2),gdr(2),gdl(2)
       dimension dst(2),dstb(2),sgn(4)
@@ -23736,7 +24389,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          gs21 = alsew*4.D0*pi
          gs22 = gs21
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          gs21 = SD_alphascall(amneut(ni),inumloop)*4.D0*pi
          gs22 = gs21
       elseif(scalechoice.eq.3.D0) then
@@ -23747,7 +24400,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(amneut(ni),0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -23786,7 +24439,7 @@ c --------------------------------------
       dstb(2) = 1.D0-x2-xmust2+xmut
 
       SD_xgluitop = 0.D0
-      
+
 c --- mass dependence included ---
 
       uh = 1.D0-x1+xmut
@@ -23852,8 +24505,8 @@ c --- mass dependence included ---
      .               (uh*th-xmut**2-xmuneut1))
             enddo
          enddo
-      else 
-         SD_xgluitop=0.D0	
+      else
+         SD_xgluitop=0.D0
       endif
 
       end
@@ -23891,7 +24544,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          gs21 = alsew*4.D0*pi
          gs22 = gs21
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          gs21 = SD_alphascall(amneut(ni),inumloop)*4.D0*pi
          gs22 = gs21
       elseif(scalechoice.eq.3.D0) then
@@ -23902,7 +24555,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(amneut(ni),0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -24007,8 +24660,8 @@ c --- mass dependence included ---
      .               (uh*th-xmub**2-xmuneut1))
             enddo
          enddo
-      else 
-         SD_xgluibot=0.D0	
+      else
+         SD_xgluibot=0.D0
       endif
 
       end
@@ -24105,7 +24758,7 @@ c --------------------------------------
 c -------------------------------------------------------------------- c
 c                            Z-sup interference
 c -------------------------------------------------------------------- c
-	
+
       xneutzsup=0.D0
 
       if (amneut(nj).le.amneut(ni)) then
@@ -24223,7 +24876,7 @@ c --------------------------------------
 c -------------------------------------------------------------------- c
 c                           Z-sdown interference
 c -------------------------------------------------------------------- c
-	
+
       xneutzsdow=0.D0
 
       if (amneut(nj).le.amneut(ni)) then
@@ -24296,7 +24949,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(amneut(ni),0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -24351,7 +25004,7 @@ c --------------------------------------
       dst(2)  = 1.D0-x1-xmust2+xmut
       dstb(1) = 1.D0-x2-xmust1+xmut
       dstb(2) = 1.D0-x2-xmust2+xmut
-      
+
       xneutstop=0.D0
 
 c ---- final state masses included ----
@@ -24418,7 +25071,7 @@ c ---- final state masses included ----
      .           +atopr1(k,ni)*btopr2(i,ni)*atopr2(i,nj)*btopr1(k,nj))*
      .           (uh*th-xmut**2-xmuneut1))
             enddo
-         enddo         
+         enddo
       else
          xneutstop=0.D0
       endif
@@ -24429,9 +25082,9 @@ c --------------------------------------
 
       xmuz = amzp**2/amneut(ni)**2
       dz   = y3-xmuz
-      
+
       xneutztop=0.D0
- 
+
 c ---- final state masses included ----
 
       rh = xmuneut1+2.D0*xmut-th-uh+1.D0
@@ -24466,9 +25119,9 @@ c --------------------------------------
 
       xmuhl = aml**2/amneut(ni)**2
       dhl   = y3-xmuhl
-      
+
       xneuthl=0.D0
-  
+
 c ---- final state masses included ----
 
       if ((amneut(nj)+2.D0*amt).le.amneut(ni)) then
@@ -24510,7 +25163,7 @@ c --------------------------------------
 
       xmuha = ama**2/amneut(ni)**2
       da    = y3-xmuha
-      
+
       xneuta=0.D0
 
 c ---- final state masses included ----
@@ -24550,7 +25203,7 @@ c    	                 interference Z-st
 c -------------------------------------------------------------------- c
 
       xneutzstop=0.D0
- 
+
 c ---- final state masses included ----
 
       if ((amneut(nj)+2.D0*amt).le.amneut(ni)) then
@@ -24574,7 +25227,7 @@ c ---- final state masses included ----
      .      (2.D0/xmuz*(xmuneut1*(-2.D0*xmut**2+xmut*th-2.D0*xmut+xmut*
      .       uh-2.D0*xmut)+xmut*(-2.D0*xmut+uh)+xmut*th)+4.D0*(
      .      xmuneut1*(xmut-uh+1.D0)+xmut*(xmut-uh)+xmut*(1.D0-uh)+uh**2
-     .      -uh)) + 
+     .      -uh)) +
      .      (atopr1(i,nj)*btopr1(i,ni)*(vzz+azz)-
      .       atopr1(i,ni)*btopr1(i,nj)*(vzz-azz))*
      .      xmneut(nj)/xmneut(ni)*dsqrt(xmut)*sgn(ni)*(2.D0/xmuz*
@@ -24614,7 +25267,7 @@ c ---- final state masses included ----
      .      (2.D0/xmuz*(xmuneut1*(-2.D0*xmut**2+xmut*th-2.D0*xmut+xmut*
      .       uh-2.D0*xmut)+xmut*(-2.D0*xmut+uh)+xmut*th)+4.D0*(
      .      xmuneut1*(xmut-th+1.D0)+xmut*(xmut-th)+xmut*(1.D0-th)+th**2
-     .      -th)) + 
+     .      -th)) +
      .      (atopr2(i,nj)*btopr2(i,ni)*(-vzz-azz)+
      .       atopr2(i,ni)*btopr2(i,nj)*(vzz-azz))*
      .      xmneut(nj)/xmneut(ni)*dsqrt(xmut)*sgn(ni)*
@@ -24646,7 +25299,7 @@ c --------------------------------------
 c                        interference Hl-stop
 c -------------------------------------------------------------------- c
 
-      xneuthlstop=0.D0	
+      xneuthlstop=0.D0
 
 c ---- final state masses included ----
 
@@ -24665,7 +25318,7 @@ c ---- final state masses included ----
      .       2.D0*xmneut(nj)/xmneut(ni)*xmut +
      .       xmut*(-2.D0*xmut+th+uh) +
      .       (uh**2+uh*th-uh*(1.D0+2.D0*xmut+xmuneut1)+xmut+xmuneut1*
-     .       xmut)) ) 
+     .       xmut)) )
      .       +2.D0*g2**2/dhl/dstb(i)*(hlttr/dsqrt(2.D0))*
      .       (-2.D0)*ahl(ni,nj)*(
      .       (atopr2(i,nj)*atopr2(i,ni)+btopr2(i,ni)*btopr2(i,nj))*(
@@ -24688,7 +25341,7 @@ c --------------------------------------
 c                      interference HH-stop
 c -------------------------------------------------------------------- c
 
-      xneuthhstop=0.D0	
+      xneuthhstop=0.D0
 
 c ---- final state masses included ----
 
@@ -24701,13 +25354,13 @@ c ---- final state masses included ----
      .       dsqrt(xmut)*sgn(ni)*(xmuneut1+xmut-uh) +
      .       dsqrt(xmut)*sgn(ni)*(-xmuneut1-xmut+th) +
      .       xmneut(nj)/xmneut(ni)*dsqrt(xmut)*sgn(ni)*(-1.D0-xmut+th) +
-     .       xmneut(nj)/xmneut(ni)*dsqrt(xmut)*sgn(ni)*(1.D0+xmut-uh) ) 
+     .       xmneut(nj)/xmneut(ni)*dsqrt(xmut)*sgn(ni)*(1.D0+xmut-uh) )
      .       +(atopr1(i,nj)*btopr1(i,ni)+atopr1(i,ni)*btopr1(i,nj))*(
      .       xmneut(nj)/xmneut(ni)*(-1.D0-xmuneut1+uh+th) +
      .       2.D0*xmneut(nj)/xmneut(ni)*xmut +
      .       xmut*(-2.D0*xmut+th+uh) +
      .       (uh**2+uh*th-uh*(1.D0+2.D0*xmut+xmuneut1)+xmut+xmuneut1*
-     .       xmut)) ) 
+     .       xmut)) )
      .       +2.D0*g2**2/dhh/dstb(i)*(hhttr/dsqrt(2.D0))*
      .       (-2.D0)*ahh(ni,nj)*(
      .       (atopr2(i,nj)*atopr2(i,ni)+btopr2(i,ni)*btopr2(i,nj))*(
@@ -24730,8 +25383,8 @@ c --------------------------------------
 c 	                 interference HA-stop
 c -------------------------------------------------------------------- c
 
-      xneutastop=0.D0	
-      
+      xneutastop=0.D0
+
 c ---- final state masses included ----
 
       if ((amneut(nj)+2.D0*amt).le.amneut(ni)) then
@@ -24744,13 +25397,13 @@ c ---- final state masses included ----
      .       dsqrt(xmut)*sgn(ni)*(-xmuneut1-xmut+th)*(-1.D0) +
      .       xmneut(nj)/xmneut(ni)*dsqrt(xmut)*sgn(ni)*(-1.D0-xmut+th)*
      .       (-1.D0) +
-     .       xmneut(nj)/xmneut(ni)*dsqrt(xmut)*sgn(ni)*(1.D0+xmut-uh) ) 
+     .       xmneut(nj)/xmneut(ni)*dsqrt(xmut)*sgn(ni)*(1.D0+xmut-uh) )
      .       +(atopr1(i,nj)*btopr1(i,ni)+atopr1(i,ni)*btopr1(i,nj))*(
      .       xmneut(nj)/xmneut(ni)*(-1.D0-xmuneut1+uh+th)*(-1.D0) +
      .       2.D0*xmneut(nj)/xmneut(ni)*xmut +
      .       xmut*(-2.D0*xmut+th+uh)*(-1.D0) +
      .       (uh**2+uh*th-uh*(1.D0+2.D0*xmut+xmuneut1)+xmut+xmuneut1*
-     .       xmut)) ) 
+     .       xmut)) )
      .       +2.D0*g2**2/da/dstb(i)*(hattr/dsqrt(2.D0))*
      .       2.D0*aa(ni,nj)*(
      .       (atopr2(i,nj)*atopr2(i,ni)+btopr2(i,ni)*btopr2(i,nj))*(
@@ -24774,9 +25427,9 @@ c --------------------------------------
 c 	                interference Z and H/h/A
 c -------------------------------------------------------------------- c
 
-      xneutza=0.D0	
+      xneutza=0.D0
 
-      if ((amneut(nj)+amt+amt).le.amneut(ni)) then      
+      if ((amneut(nj)+amt+amt).le.amneut(ni)) then
          xneutza=xneutza-4.D0*g2**2/da/dz*azz*
      .    hattr/dsqrt(2.D0)*2.D0*aa(ni,nj)*oppl(ni,nj)*(
      .    xmneut(nj)/xmneut(ni)*dsqrt(xmut)*sgn(ni)*(
@@ -24839,7 +25492,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(amneut(ni),0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -24877,7 +25530,7 @@ c --- several definitions
 
       x3 = 2.D0-x1-x2
       y3 = 1.D0+xmuneut1-x3
-      
+
       uh = 1.D0-x1+xmub
       th = 1.D0-x2+xmub
 
@@ -24895,7 +25548,7 @@ c --------------------------------------
       dsbo(2)  = 1.D0-x1-xmusb2+xmub
       dsbob(1) = 1.D0-x2-xmusb1+xmub
       dsbob(2) = 1.D0-x2-xmusb2+xmub
-      
+
       xneutsbot=0.D0
 
 c ---- final state masses included ----
@@ -24962,7 +25615,7 @@ c ---- final state masses included ----
      .           +abot1(k,ni)*bbot2(i,ni)*abot2(i,nj)*bbot1(k,nj))*
      .           (uh*th-xmub**2-xmuneut1))
             enddo
-         enddo         
+         enddo
       else
          xneutsbot=0.D0
       endif
@@ -24973,7 +25626,7 @@ c --------------------------------------
 
       xmuz = amzp**2/amneut(ni)**2
       dz   = y3-xmuz
-      
+
       xneutzbot=0.D0
 
 c ---- final state masses included ----
@@ -25010,9 +25663,9 @@ c --------------------------------------
 
       xmuhl = aml**2/amneut(ni)**2
       dhl   = y3-xmuhl
-      
+
       xneuthl=0.D0
-  
+
 c ---- final state masses included ----
 
       if((amneut(nj)+2.D0*amb).le.amneut(ni)) then
@@ -25054,7 +25707,7 @@ c --------------------------------------
 
       xmuha = ama**2/amneut(ni)**2
       da    = y3-xmuha
-      
+
       xneuta=0.D0
 
 c ---- final state masses included ----
@@ -25118,7 +25771,7 @@ c ---- final state masses included ----
      .      (2.D0/xmuz*(xmuneut1*(-2.D0*xmub**2+xmub*th-2.D0*xmub+xmub*
      .       uh-2.D0*xmub)+xmub*(-2.D0*xmub+uh)+xmub*th)+4.D0*(
      .      xmuneut1*(xmub-uh+1.D0)+xmub*(xmub-uh)+xmub*(1.D0-uh)+uh**2
-     .      -uh)) + 
+     .      -uh)) +
      .      (abot1(i,nj)*bbot1(i,ni)*(vzz+azz)-
      .       abot1(i,ni)*bbot1(i,nj)*(vzz-azz))*
      .      xmneut(nj)/xmneut(ni)*dsqrt(xmub)*sgn(ni)*
@@ -25158,7 +25811,7 @@ c ---- final state masses included ----
      .      (2.D0/xmuz*(xmuneut1*(-2.D0*xmub**2+xmub*th-2.D0*xmub+xmub*
      .       uh-2.D0*xmub)+xmub*(-2.D0*xmub+uh)+xmub*th)+4.D0*(
      .      xmuneut1*(xmub-th+1.D0)+xmub*(xmub-th)+xmub*(1.D0-th)+th**2
-     .      -th)) + 
+     .      -th)) +
      .      (abot2(i,nj)*bbot2(i,ni)*(-vzz-azz)+
      .       abot2(i,ni)*bbot2(i,nj)*(vzz-azz))*
      .      xmneut(nj)/xmneut(ni)*dsqrt(xmub)*sgn(ni)*(2.D0/xmuz*
@@ -25189,7 +25842,7 @@ c --------------------------------------
 c 			interference Hl-sbottom
 c -------------------------------------------------------------------- c
 
-      xneuthlsbot=0.D0	
+      xneuthlsbot=0.D0
 
 c ---- final state masses included ----
 
@@ -25208,7 +25861,7 @@ c ---- final state masses included ----
      .       2.D0*xmneut(nj)/xmneut(ni)*xmub +
      .       xmub*(-2.D0*xmub+th+uh) +
      .       (uh**2+uh*th-uh*(1.D0+2.D0*xmub+xmuneut1)+xmub+xmuneut1*
-     .       xmub)) ) 
+     .       xmub)) )
      .       +2.D0*g2**2/dhl/dsbob(i)*(hlbbr/dsqrt(2.D0))*
      .       (-2.D0)*ahl(ni,nj)*(
      .       (abot2(i,nj)*abot2(i,ni)+bbot2(i,ni)*bbot2(i,nj))*(
@@ -25231,7 +25884,7 @@ c --------------------------------------
 c                         interference HH-sbottom
 c -------------------------------------------------------------------- c
 
-      xneuthhsbot=0.D0	
+      xneuthhsbot=0.D0
 
 c ---- final state masses included ----
 
@@ -25244,13 +25897,13 @@ c ---- final state masses included ----
      .       dsqrt(xmub)*sgn(ni)*(xmuneut1+xmub-uh) +
      .       dsqrt(xmub)*sgn(ni)*(-xmuneut1-xmub+th) +
      .       xmneut(nj)/xmneut(ni)*dsqrt(xmub)*sgn(ni)*(-1.D0-xmub+th) +
-     .       xmneut(nj)/xmneut(ni)*dsqrt(xmub)*sgn(ni)*(1.D0+xmub-uh) ) 
+     .       xmneut(nj)/xmneut(ni)*dsqrt(xmub)*sgn(ni)*(1.D0+xmub-uh) )
      .       +(abot1(i,nj)*bbot1(i,ni)+abot1(i,ni)*bbot1(i,nj))*(
      .       xmneut(nj)/xmneut(ni)*(-1.D0-xmuneut1+uh+th) +
      .       2.D0*xmneut(nj)/xmneut(ni)*xmub +
      .       xmub*(-2.D0*xmub+th+uh) +
      .       (uh**2+uh*th-uh*(1.D0+2.D0*xmub+xmuneut1)+xmub+xmuneut1*
-     .       xmub)) ) 
+     .       xmub)) )
      .       +2.D0*g2**2/dhh/dsbob(i)*(hhbbr/dsqrt(2.D0))*
      .       (-2.D0)*ahh(ni,nj)*(
      .       (abot2(i,nj)*abot2(i,ni)+bbot2(i,ni)*bbot2(i,nj))*(
@@ -25273,7 +25926,7 @@ c --------------------------------------
 c                        interference HA-sbottom
 c -------------------------------------------------------------------- c
 
-      xneutasbot=0.D0	
+      xneutasbot=0.D0
 
 c ---- final state masses included ----
 
@@ -25287,13 +25940,13 @@ c ---- final state masses included ----
      .       dsqrt(xmub)*sgn(ni)*(-xmuneut1-xmub+th)*(-1.D0) +
      .       xmneut(nj)/xmneut(ni)*dsqrt(xmub)*sgn(ni)*(-1.D0-xmub+th)*
      .       (-1.D0) +
-     .       xmneut(nj)/xmneut(ni)*dsqrt(xmub)*sgn(ni)*(1.D0+xmub-uh) ) 
+     .       xmneut(nj)/xmneut(ni)*dsqrt(xmub)*sgn(ni)*(1.D0+xmub-uh) )
      .       +(abot1(i,nj)*bbot1(i,ni)+abot1(i,ni)*bbot1(i,nj))*(
      .       xmneut(nj)/xmneut(ni)*(-1.D0-xmuneut1+uh+th)*(-1.D0) +
      .       2.D0*xmneut(nj)/xmneut(ni)*xmub +
      .       xmub*(-2.D0*xmub+th+uh)*(-1.D0) +
      .       (uh**2+uh*th-uh*(1.D0+2.D0*xmub+xmuneut1)+xmub+xmuneut1*
-     .       xmub)) ) 
+     .       xmub)) )
      .       +2.D0*g2**2/da/dsbob(i)*(habbr/dsqrt(2.D0))*
      .       2.D0*aa(ni,nj)*(
      .       (abot2(i,nj)*abot2(i,ni)+bbot2(i,ni)*bbot2(i,nj))*(
@@ -25317,9 +25970,9 @@ c --------------------------------------
 c 	                interference Z and H/h/A
 c -------------------------------------------------------------------- c
 
-      xneutza=0.D0	
+      xneutza=0.D0
 
-      if((amneut(nj)+2.D0*amb).le.amneut(ni)) then      
+      if((amneut(nj)+2.D0*amb).le.amneut(ni)) then
          xneutza=-4.D0*g2**2/da/dz*azz*
      .    habbr/dsqrt(2.D0)*2.D0*aa(ni,nj)*oppl(ni,nj)*(
      .    xmneut(nj)/xmneut(ni)*dsqrt(xmub)*sgn(ni)*(
@@ -25365,7 +26018,7 @@ c ======================================
       COMMON/SD_sfermionetau/ase1,ase2,astau1,astau2
       COMMON/SD_indices/ni,nj
       COMMON/SD_coup4/opl,opr,oppl,oppr
-      COMMON/SD_coup8/ae,be,ato,bto,anu,bnu,antau,bntau      
+      COMMON/SD_coup8/ae,be,ato,bto,anu,bnu,antau,bntau
       COMMON/SD_coup17/azztoptop,vzztoptop,azztautau,vzztautau,
      .                 azzneutneut,vzzneutneut,azzbotbot,vzzbotbot
       COMMON/SD_mwmzpole/amwp,amzp
@@ -25388,7 +26041,7 @@ c --------------------------------------
       dsel(2)  = 1-x1-xmusel2
       dselb(1) = 1-x2-xmusel1
       dselb(2) = 1-x2-xmusel2
-      
+
       xneutsel=0.D0
 
       if (amneut(nj).le.amneut(ni)) then
@@ -25420,7 +26073,7 @@ c --------------------------------------
 
       xmuz = amzp**2/amneut(ni)**2
       dz   = y3-xmuz
-      
+
       xneutzel=0.D0
 
       if (amneut(nj).le.amneut(ni)) then
@@ -25434,7 +26087,7 @@ c --------------------------------------
       else
          xneutzel=0.D0
       endif
-	
+
 c -------------------------------------------------------------------- c
 c                        Z-selectron interference
 c -------------------------------------------------------------------- c
@@ -25496,7 +26149,7 @@ c ======================================
       COMMON/SD_yukawa/yt,yb,ytau
       COMMON/SD_coup1/ahl,ahh,aa
       COMMON/SD_coup4/opl,opr,oppl,oppr
-      COMMON/SD_coup8/ae,be,ato,bto,anu,bnu,antau,bntau      
+      COMMON/SD_coup8/ae,be,ato,bto,anu,bnu,antau,bntau
       COMMON/SD_coup17/azztoptop,vzztoptop,azztautau,vzztautau,
      .                 azzneutneut,vzzneutneut,azzbotbot,vzzbotbot
       COMMON/SD_mwmzpole/amwp,amzp
@@ -25515,7 +26168,7 @@ c --- several definitions ---
       enddo
 
       bet = datan(tanbeta)
-      b   = bet 
+      b   = bet
 
       vzz = vzztautau
       azz = azztautau
@@ -25532,16 +26185,16 @@ c --- several definitions ---
       th = 1.D0-x2+xmutau
 
 c -------------------------------------------------------------------- c
-c                              stau exchange 
+c                              stau exchange
 c -------------------------------------------------------------------- c
 
       dsto(1)  = 1.D0-x1-xmustau1+xmutau
       dsto(2)  = 1.D0-x1-xmustau2+xmutau
       dstob(1) = 1.D0-x2-xmustau1+xmutau
       dstob(2) = 1.D0-x2-xmustau2+xmutau
-      
+
       xneutstau = 0.D0
-  
+
 c ---- final state masses included ----
 
       if ((amneut(nj)+2.D0*amtau).le.amneut(ni)) then
@@ -25606,7 +26259,7 @@ c ---- final state masses included ----
      .           +ato(k,ni)*bto(i,ni)*ato(i,nj)*bto(k,nj))*
      .           (uh*th-xmutau**2-xmuneut1))
             enddo
-         enddo         
+         enddo
       else
          xneutstau=0.D0
       endif
@@ -25677,7 +26330,7 @@ c --------------------------------------
 
       xmuhh = amh**2/amneut(ni)**2
       dhh   = y3-xmuhh
-      
+
       xneuthh=0.D0
 
 c ---- final state masses included ----
@@ -25699,7 +26352,7 @@ c --------------------------------------
 
       xmuha = ama**2/amneut(ni)**2
       da    = y3-xmuha
-      
+
       xneuta=0.D0
 
 c ---- final state masses included ----
@@ -25763,7 +26416,7 @@ c ---- final state masses included ----
      .      (2.D0/xmuz*(xmuneut1*(-2.D0*xmutau**2+xmutau*th-
      .      2.D0*xmutau+xmutau*uh-2.D0*xmutau)+xmutau*(-2.D0*xmutau+uh)
      .      +xmutau*th)+4.D0*(xmuneut1*(xmutau-uh+1.D0)+xmutau*
-     .      (xmutau-uh)+xmutau*(1.D0-uh)+uh**2-uh)) + 
+     .      (xmutau-uh)+xmutau*(1.D0-uh)+uh**2-uh)) +
      .      (ato(i,nj)*bto(i,ni)*(vzz+azz)-
      .       ato(i,ni)*bto(i,nj)*(vzz-azz))*
      .      xmneut(nj)/xmneut(ni)*dsqrt(xmutau)*sgn(ni)*(2.D0/xmuz*
@@ -25803,7 +26456,7 @@ c ---- final state masses included ----
      .      (2.D0/xmuz*(xmuneut1*(-2.D0*xmutau**2+xmutau*th
      .      -2.D0*xmutau+xmutau*uh-2.D0*xmutau)+xmutau*(-2.D0*xmutau
      .      +uh)+xmutau*th)+4.D0*(xmuneut1*(xmutau-th+1.D0)+xmutau*
-     .      (xmutau-th)+xmutau*(1.D0-th)+th**2-th)) + 
+     .      (xmutau-th)+xmutau*(1.D0-th)+th**2-th)) +
      .      (ato(i,nj)*bto(i,ni)*(-vzz-azz)+
      .       ato(i,ni)*bto(i,nj)*(vzz-azz))*
      .      xmneut(nj)/xmneut(ni)*dsqrt(xmutau)*sgn(ni)*
@@ -25836,7 +26489,7 @@ c --------------------------------------
 c                           Hl-stau interference
 c -------------------------------------------------------------------- c
 
-      xneuthlstau=0.D0	
+      xneuthlstau=0.D0
 
 c ---- final state masses included ----
 
@@ -25857,7 +26510,7 @@ c ---- final state masses included ----
      .       2.D0*xmneut(nj)/xmneut(ni)*xmutau +
      .       xmutau*(-2.D0*xmutau+th+uh) +
      .       (uh**2+uh*th-uh*(1.D0+2.D0*xmutau+xmuneut1)+xmutau+
-     .       xmuneut1*xmutau)) ) 
+     .       xmuneut1*xmutau)) )
      .       +2.D0*g2**2/dhl/dstob(i)*(ytauc*(-dsin(a))/dsqrt(2.D0))*
      .       (-2.D0)*ahl(ni,nj)*(
      .       (ato(i,nj)*ato(i,ni)+bto(i,ni)*bto(i,nj))*(
@@ -25881,8 +26534,8 @@ c ---- final state masses included ----
 c -------------------------------------------------------------------- c
 c                            HH-stau interference
 c -------------------------------------------------------------------- c
-      
-      xneuthhstau=0.D0	
+
+      xneuthhstau=0.D0
 
 c ---- final state masses included ----
 
@@ -25897,13 +26550,13 @@ c ---- final state masses included ----
      .       xmneut(nj)/xmneut(ni)*dsqrt(xmutau)*sgn(ni)*(-1.D0-xmutau
      .       +th) +
      .       xmneut(nj)/xmneut(ni)*dsqrt(xmutau)*sgn(ni)*(1.D0+xmutau
-     .       -uh) ) 
+     .       -uh) )
      .       +(ato(i,nj)*bto(i,ni)+ato(i,ni)*bto(i,nj))*(
      .       xmneut(nj)/xmneut(ni)*(-1.D0-xmuneut1+uh+th) +
      .       2.D0*xmneut(nj)/xmneut(ni)*xmutau +
      .       xmutau*(-2.D0*xmutau+th+uh) +
      .       (uh**2+uh*th-uh*(1.D0+2.D0*xmutau+xmuneut1)+xmutau+
-     .       xmuneut1*xmutau)) ) 
+     .       xmuneut1*xmutau)) )
      .       +2.D0*g2**2/dhh/dstob(i)*(ytauc*dcos(a)/dsqrt(2.D0))*
      .       (-2.D0)*ahh(ni,nj)*(
      .       (ato(i,nj)*ato(i,ni)+bto(i,ni)*bto(i,nj))*(
@@ -25928,7 +26581,7 @@ c --------------------------------------
 c 			   HA-stau interference
 c -------------------------------------------------------------------- c
 
-      xneutastau=0.D0	
+      xneutastau=0.D0
 
 c ---- final state masses included ----
 
@@ -25943,13 +26596,13 @@ c ---- final state masses included ----
      .       xmneut(nj)/xmneut(ni)*dsqrt(xmutau)*sgn(ni)*(-1.D0-xmutau
      .       +th)*(-1.D0) +
      .       xmneut(nj)/xmneut(ni)*dsqrt(xmutau)*sgn(ni)*(1.D0+xmutau
-     .       -uh) ) 
+     .       -uh) )
      .       +(ato(i,nj)*bto(i,ni)+ato(i,ni)*bto(i,nj))*(
      .       xmneut(nj)/xmneut(ni)*(-1.D0-xmuneut1+uh+th)*(-1.D0) +
      .       2.D0*xmneut(nj)/xmneut(ni)*xmutau +
      .       xmutau*(-2.D0*xmutau+th+uh)*(-1.D0) +
      .       (uh**2+uh*th-uh*(1.D0+2.D0*xmutau+xmuneut1)+xmutau+
-     .       xmuneut1*xmutau)) ) 
+     .       xmuneut1*xmutau)) )
      .       +2.D0*g2**2/da/dstob(i)*((-ytauc*dsin(b))/dsqrt(2.D0))*
      .       2.D0*aa(ni,nj)*(
      .       (ato(i,nj)*ato(i,ni)+bto(i,ni)*bto(i,nj))*(
@@ -25974,9 +26627,9 @@ c --------------------------------------
 c 	                interference Z and H/h/A
 c -------------------------------------------------------------------- c
 
-      xneutza=0.D0	
+      xneutza=0.D0
 
-      if ((amneut(nj)+2.D0*amtau).le.amneut(ni)) then      
+      if ((amneut(nj)+2.D0*amtau).le.amneut(ni)) then
          xneutza=xneutza-4.D0*g2**2/da/dz*azz*
      .    (-ytauc*dsin(b))/dsqrt(2.D0)*2.D0*aa(ni,nj)*oppl(ni,nj)*(
      .    xmneut(nj)/xmneut(ni)*dsqrt(xmutau)*sgn(ni)*(
@@ -26020,7 +26673,7 @@ c ======================================
       COMMON/SD_sneutrino/asne1,asne2,asntau1,asntau2
       COMMON/SD_indices/ni,nj
       COMMON/SD_coup4/opl,opr,oppl,oppr
-      COMMON/SD_coup8/ae,be,ato,bto,anu,bnu,antau,bntau      
+      COMMON/SD_coup8/ae,be,ato,bto,anu,bnu,antau,bntau
       COMMON/SD_coup17/azztoptop,vzztoptop,azztautau,vzztautau,
      .                 azzneutneut,vzzneutneut,azzbotbot,vzzbotbot
       COMMON/SD_mwmzpole/amwp,amzp
@@ -26050,7 +26703,7 @@ c --------------------------------------
       dsnl(2)  = 1.D0-x1-xmusnl2
       dsnlb(1) = 1.D0-x2-xmusnl1
       dsnlb(2) = 1.D0-x2-xmusnl2
-      
+
       xneutsnl=0.D0
 
       if (amneut(nj).le.amneut(ni)) then
@@ -26082,7 +26735,7 @@ c --------------------------------------
 
       xmuz = amzp**2/amneut(ni)**2
       dz   = y3-xmuz
-      
+
       xneutznl=0.D0
 
       if (amneut(nj).le.amneut(ni)) then
@@ -26096,7 +26749,7 @@ c --------------------------------------
       else
          xneutznl=0.D0
       endif
-	
+
 c -------------------------------------------------------------------- c
 c                          Z-snue interference
 c -------------------------------------------------------------------- c
@@ -26153,7 +26806,7 @@ c ======================================
       COMMON/SD_sneutrino/asne1,asne2,asntau1,asntau2
       COMMON/SD_indices/ni,nj
       COMMON/SD_coup4/opl,opr,oppl,oppr
-      COMMON/SD_coup8/ae,be,ato,bto,anu,bnu,antau,bntau      
+      COMMON/SD_coup8/ae,be,ato,bto,anu,bnu,antau,bntau
       COMMON/SD_coup17/azztoptop,vzztoptop,azztautau,vzztautau,
      .                 azzneutneut,vzzneutneut,azzbotbot,vzzbotbot
       COMMON/SD_mwmzpole/amwp,amzp
@@ -26176,7 +26829,7 @@ c --------------------------------------
       dsnt(2)  = 1.D0-x1-xmusnt2
       dsntb(1) = 1.D0-x2-xmusnt1
       dsntb(2) = 1.D0-x2-xmusnt2
-      
+
       xneutsnt=0.D0
 
       if (amneut(nj).le.amneut(ni)) then
@@ -26208,7 +26861,7 @@ c --------------------------------------
 
       xmuz = amzp**2/amneut(ni)**2
       dz   = y3-xmuz
-      
+
       xneutznt=0.D0
 
       if (amneut(nj).le.amneut(ni)) then
@@ -26222,7 +26875,7 @@ c --------------------------------------
       else
          xneutznt=0.D0
       endif
-	
+
 c -------------------------------------------------------------------- c
 c                      Z-selectron interference
 c -------------------------------------------------------------------- c
@@ -26242,7 +26895,7 @@ c --------------------------------------
      .           (-azzneutneut+vzzneutneut)
      .           )*xmneut(nj)/xmneut(ni)*y3)
      .           +g2**2*4.d0/dsntb(i)/dz
-     .           *((antau(i,ni)*antau(i,nj)*oppl(ni,nj)*     
+     .           *((antau(i,ni)*antau(i,nj)*oppl(ni,nj)*
      .           (azzneutneut+vzzneutneut)+
      .           bntau(i,ni)*bntau(i,nj)*oppr(ni,nj)*
      .           (-azzneutneut+vzzneutneut))*x2*y2
@@ -26286,7 +26939,7 @@ c ======================================
       COMMON/SD_indices/ni,nj
       COMMON/SD_coup3/ql,qr,ol,or
       COMMON/SD_coup5/ale,altau,alsne,blsne,alsnt,blsnt
-      COMMON/SD_coup8/ae,be,ato,bto,anu,bnu,antau,bntau      
+      COMMON/SD_coup8/ae,be,ato,bto,anu,bnu,antau,bntau
       COMMON/SD_coup18/awff,vwff
       COMMON/SD_mwmzpole/amwp,amzp
 
@@ -26315,7 +26968,7 @@ c --------------------------------------
       dsel(2) = 1.D0-x2-xmusel2
       dsne(1) = 1.D0-x1-xmusn1
       dsne(2) = 1.D0-x1-xmusn2
-      
+
       xneutsf=0.D0
 
       if(amchar(nj).le.amneut(ni)) then
@@ -26347,7 +27000,7 @@ c --------------------------------------
 
       xmuw = amwp**2/amneut(ni)**2
       dw   = y3-xmuw
-      
+
       if(amchar(nj).le.amneut(ni)) then
          xneutwel=g2**2*4.D0/dw**2*
      .        (4.D0*vwff**2*or(ni,nj)**2*x2*y2
@@ -26357,7 +27010,7 @@ c --------------------------------------
       else
          xneutwel=0.D0
       endif
-	
+
 c -------------------------------------------------------------------- c
 c                        W+-sfermion interference
 c -------------------------------------------------------------------- c
@@ -26413,7 +27066,7 @@ c ======================================
       COMMON/SD_coup1/ahl,ahh,aa
       COMMON/SD_coup3/ql,qr,ol,or
       COMMON/SD_coup5/ale,alto,alsne,blsne,alsnt,blsnt
-      COMMON/SD_coup8/ae,be,ato,bto,anu,bnu,antau,bntau      
+      COMMON/SD_coup8/ae,be,ato,bto,anu,bnu,antau,bntau
       COMMON/SD_coup15/achtop,vchtop,achtau,vchtau
       COMMON/SD_coup18/awff,vwff
       COMMON/SD_mwmzpole/amwp,amzp
@@ -26456,7 +27109,7 @@ c --------------------------------------
       dsntau(2) = 1.D0-x1-xmusnt2+xmun
       dstau(1)  = 1.D0-x2-xmustau1+xmutau
       dstau(2)  = 1.D0-x2-xmustau2+xmutau
-      
+
       uh = 1.D0-x1+xmun
       th = 1.D0-x2+xmutau
 
@@ -26537,16 +27190,16 @@ c --------------------------------------
 
       xmuw = amwp**2/amneut(ni)**2
       dw   = y3-xmuw
-      
+
 c --- with mass dependence
-      
+
       if((amchar(nj)+amtau).le.amneut(ni)) then
          xneutwtau=g2**2*16.D0/dw**2*vwff**2*(
      .        (ol(ni,nj)**2+or(ni,nj)**2)*(-xmuneut1-xmutau*xmun)
      .        +ol(ni,nj)**2*(xmuneut1*(uh-xmun)+uh*(xmutau+xmun)
      .         -xmutau-uh**2+uh)
      .        +or(ni,nj)**2*(xmuneut1*(th-xmutau)+th*(xmutau+xmun)
-     .         -xmun-th**2+th) 
+     .         -xmun-th**2+th)
      .        +2.D0*xmchar(nj)/xmneut(ni)*ol(ni,nj)*or(ni,nj)*
      .         (uh+th-1.D0-xmuneut1)
      .        +1.D0/xmuw**2*xmchar(nj)/xmneut(ni)*ol(ni,nj)*
@@ -26599,7 +27252,7 @@ c --- with mass dependence ---
       else
          xneuthtau=0.D0
       endif
-	
+
 c -------------------------------------------------------------------- c
 c                        W+-sfermion interference
 c -------------------------------------------------------------------- c
@@ -26679,7 +27332,7 @@ c --- with mass dependence
      .       (xmutau-th+2.D0)+xmutau-uh))+
      .       1.D0/xmuw*ato(i,ni)*alto(i,nj)*ol(ni,nj)*
      .       xmchar(nj)/xmneut(ni)*(xmuneut1*(-xmun-xmutau)+xmun*(uh
-     .       +th-1.D0-2.D0*xmutau)+xmutau*(uh+th-1.D0-2.D0*xmun))+ 
+     .       +th-1.D0-2.D0*xmutau)+xmutau*(uh+th-1.D0-2.D0*xmun))+
      .       1.D0/xmuw*ato(i,ni)*blto(i,nj)*or(ni,nj)*
      .       xmchar(nj)/xmneut(ni)*dsqrt(xmun)*sgn(ni)*(xmuneut1*
      .       (xmutau-th+1.D0)+xmutau*(xmutau-2.D0*th-uh+2.D0)+xmun*
@@ -26876,7 +27529,7 @@ c --------------------------------------
       dsd(2) = 1.D0-x2-xmusd2
       dsu(1) = 1.D0-x1-xmusu1
       dsu(2) = 1.D0-x1-xmusu2
-      
+
       xneutsf=0.D0
 
       if(amchar(nj).le.amneut(ni)) then
@@ -26908,7 +27561,7 @@ c --------------------------------------
 
       xmuw = amwp**2/amneut(ni)**2
       dw   = y3-xmuw
-      
+
       if(amchar(nj).le.amneut(ni)) then
          xneutw=g2**2*4.D0/dw**2*
      .        (4.D0*vwff**2*or(ni,nj)**2*x2*y2
@@ -26918,7 +27571,7 @@ c --------------------------------------
       else
          xneutw=0.D0
       endif
-	
+
 c -------------------------------------------------------------------- c
 c                        W+-sfermion interference
 c -------------------------------------------------------------------- c
@@ -26980,7 +27633,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(amneut(ni),0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -26991,7 +27644,7 @@ c --- the running couplings ---
       endif
 
       call SD_neutstoptop(atopr,btopr)
-      call SD_neutsbotbot(abot,bbot) 
+      call SD_neutsbotbot(abot,bbot)
       call SD_charstopbot(alstor,akstor)
       call SD_charsbottop(alsbot,aksbot)
       call SD_hctopbbot(vchtopr,achtopr)
@@ -27030,7 +27683,7 @@ c --------------------------------------
       dsbot(2) = 1-x2-xmusbot2+xmub
       dstop(1) = 1-x1-xmustop1+xmut
       dstop(2) = 1-x1-xmustop2+xmut
-      
+
       xneutsf=0.D0
 
 c --- with mass dependence ---
@@ -27117,7 +27770,7 @@ c --- with mass dependence
      .        +ol(ni,nj)**2*(xmuneut1*(uh-xmut)+uh*(xmub+xmut)
      .         -xmub-uh**2+uh)
      .        +or(ni,nj)**2*(xmuneut1*(th-xmub)+th*(xmub+xmut)
-     .         -xmut-th**2+th) 
+     .         -xmut-th**2+th)
      .        +2.D0*xmchar(nj)/xmneut(ni)*ol(ni,nj)*or(ni,nj)*
      .         (uh+th-1.D0-xmuneut1)
      .        +1.D0/xmuw**2*xmchar(nj)/xmneut(ni)*ol(ni,nj)*
@@ -27251,7 +27904,7 @@ c --- with mass dependence
      .       (xmub-th+2.D0)+xmub-uh))+
      .       1.D0/xmuw*abot(i,ni)*alsbot(i,nj)*ol(ni,nj)*
      .       xmchar(nj)/xmneut(ni)*(xmuneut1*(-xmut-xmub)+xmut*(uh
-     .       +th-1.D0-2.D0*xmub)+xmub*(uh+th-1.D0-2.D0*xmut))+ 
+     .       +th-1.D0-2.D0*xmub)+xmub*(uh+th-1.D0-2.D0*xmut))+
      .       1.D0/xmuw*abot(i,ni)*aksbot(i,nj)*or(ni,nj)*
      .       xmchar(nj)/xmneut(ni)*dsqrt(xmut)*sgn(ni)*(xmuneut1*
      .       (xmub-th+1.D0)+xmub*(xmub-2.D0*th-uh+2.D0)+xmut*(xmub-th
@@ -27282,7 +27935,7 @@ c --- with mass dependence
 c -------------------------------------------------------------------- c
 c                          H+ sfermion interference
 c -------------------------------------------------------------------- c
-	
+
       xneuthsf = 0.D0
 
 c --- with mass dependence ---
@@ -27399,7 +28052,7 @@ c ======================================
       subroutine SD_glui2bod(gst1,gst2,gsb1,gsb2,gsupl,gsupr,gsdownl,
      .                       gsdownr,qcdgst1,qcdgst2,qcdgsb1,qcdgsb2,
      .                       qcdgsupl,qcdgsupr,qcdgsdownl,qcdgsdownr)
-  
+
       implicit double precision (a-h,m,o-z)
       double precision SD_lamb,lamv,nf
       complex*16 SD_iint,SD_i2int,SD_jint,SD_kint
@@ -27436,7 +28089,7 @@ c -- the running alphas --
       if(scalechoice.eq.1.D0) then
          gs2 = alsew*4.D0*pi
          amurefer = amuref
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          gs2 = SD_alphascall(mgluino,inumloop)*4.D0*pi
          amurefer = mgluino
       elseif(scalechoice.eq.3.D0) then
@@ -27666,11 +28319,11 @@ c --- the QCD corrections ---
          amsq  = 2.D0*(asup1+asup2+asdown1+asdown2)/8.D0
          rval  = mgluino**2/amsq**2
 
-         qcdgsupl = gsupl*alp/pi*( ca*(SD_gama(rval)-pi**2) + 
-     .        cf*(SD_gamfcap(rval)+pi**2) + 4.D0*SD_gamf(rval) + 
+         qcdgsupl = gsupl*alp/pi*( ca*(SD_gama(rval)-pi**2) +
+     .        cf*(SD_gamfcap(rval)+pi**2) + 4.D0*SD_gamf(rval) +
      .        2.D0*pi**2/mgluino**2*
      .        SD_gamglui2(ast1,ast2,amt,thet,asb1,asb2,amb,theb,mgluino,
-     .        1,amsq) + 
+     .        1,amsq) +
      .        SD_gamrendec(amsq,ast1,ast2,amt,asb1,asb2,mgluino,scala) )
       else
          qcdgsupl = 0.D0
@@ -27697,11 +28350,11 @@ c --- the QCD corrections ---
          amsq  = 2.D0*(asup1+asup2+asdown1+asdown2)/8.D0
          rval  = mgluino**2/amsq**2
 
-         qcdgsupr = gsupr*alp/pi*( ca*(SD_gama(rval)-pi**2) + 
-     .        cf*(SD_gamfcap(rval)+pi**2) + 4.D0*SD_gamf(rval) + 
+         qcdgsupr = gsupr*alp/pi*( ca*(SD_gama(rval)-pi**2) +
+     .        cf*(SD_gamfcap(rval)+pi**2) + 4.D0*SD_gamf(rval) +
      .        2.D0*pi**2/mgluino**2*
      .        SD_gamglui2(ast2,ast1,amt,thet,asb2,asb1,amb,theb,mgluino,
-     .        2,amsq) + 
+     .        2,amsq) +
      .        SD_gamrendec(amsq,ast1,ast2,amt,asb1,asb2,mgluino,scala) )
       else
          qcdgsupr = 0.D0
@@ -27728,11 +28381,11 @@ c --- the QCD corrections ---
          amsq  = 2.D0*(asup1+asup2+asdown1+asdown2)/8.D0
          rval  = mgluino**2/amsq**2
 
-         qcdgsdownl = gsdownl*alp/pi*( ca*(SD_gama(rval)-pi**2) + 
-     .        cf*(SD_gamfcap(rval)+pi**2) + 4.D0*SD_gamf(rval) + 
+         qcdgsdownl = gsdownl*alp/pi*( ca*(SD_gama(rval)-pi**2) +
+     .        cf*(SD_gamfcap(rval)+pi**2) + 4.D0*SD_gamf(rval) +
      .        2.D0*pi**2/mgluino**2*
      .        SD_gamglui2(ast1,ast2,amt,thet,asb1,asb2,amb,theb,mgluino,
-     .        1,amsq) + 
+     .        1,amsq) +
      .        SD_gamrendec(amsq,ast1,ast2,amt,asb1,asb2,mgluino,scala) )
       else
          qcdgsdownl = 0.D0
@@ -27759,11 +28412,11 @@ c --- the QCD corrections ---
          amsq  = 2.D0*(asup1+asup2+asdown1+asdown2)/8.D0
          rval  = mgluino**2/amsq**2
 
-         qcdgsdownr = gsdownr*alp/pi*( ca*(SD_gama(rval)-pi**2) + 
-     .        cf*(SD_gamfcap(rval)+pi**2) + 4.D0*SD_gamf(rval) + 
+         qcdgsdownr = gsdownr*alp/pi*( ca*(SD_gama(rval)-pi**2) +
+     .        cf*(SD_gamfcap(rval)+pi**2) + 4.D0*SD_gamf(rval) +
      .        2.D0*pi**2/mgluino**2*
      .        SD_gamglui2(ast2,ast1,amt,thet,asb2,asb1,amb,theb,mgluino,
-     .        2,amsq) + 
+     .        2,amsq) +
      .        SD_gamrendec(amsq,ast1,ast2,amt,asb1,asb2,mgluino,scala) )
       else
          qcdgsdownr = 0.D0
@@ -27794,7 +28447,7 @@ c -- the coupling alphas --
 
       if(scalechoice.eq.1.D0) then
          gs2 = alsew*4.D0*pi
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          gs2 = SD_alphascall(mgluino,inumloop)*4.D0*pi
       elseif(scalechoice.eq.3.D0) then
          gs2 = SD_alphascall(scaleofcoupling,inumloop)*4.D0*pi
@@ -27809,7 +28462,7 @@ c -- the coupling alphas --
             endif
 
             gabcd  = SD_gluicoupabcd(xmneut(j),j)
-            gabcd0 = SD_gluicoupabcd0(xmneut(j),j) 
+            gabcd0 = SD_gluicoupabcd0(xmneut(j),j)
             gijgluon = -dsqrt(g2)*gs2/32.D0/pi**2*eps(j)*mgluino*
      .           (gabcd+gabcd0)
             glnjgluon(j) = gijgluon**2*(mgluino**2-amneut(j)**2)**3/
@@ -27860,7 +28513,7 @@ c --- the (non) running couplings ---
       if(scalechoice.eq.1.D0) then
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(mgluino,0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -27914,7 +28567,7 @@ c --- the (non) running couplings ---
             glflgrfr = gl*fl-gr*fr
          endif
 
-         SD_gluicoupabcd = SD_gluicoupabcd + ( 
+         SD_gluicoupabcd = SD_gluicoupabcd + (
      .        glfrgrfl*(mgluino*dreal((SD_i2int(mgluino,amnj,mfer,mbos)-
      .                                 SD_kint(mgluino,amnj,mfer,mbos)))
      .               -epsj*amnj*dreal(SD_kint(mgluino,amnj,mfer,mbos)))
@@ -28003,7 +28656,7 @@ c --- the couplings ---
             glflgrfr = gl*fl-gr*fr
          endif
 
-         SD_gluicoupabcd0 = SD_gluicoupabcd0 + ( 
+         SD_gluicoupabcd0 = SD_gluicoupabcd0 + (
      .        glfrgrfl*(mgluino*dreal((SD_i2int0(mgluino,amnj,mbos)-
      .                                 SD_kint0(mgluino,amnj,mbos)))
      .                 -epsj*amnj*dreal(SD_kint0(mgluino,amnj,mbos)) ) )
@@ -28020,9 +28673,9 @@ c                         Gluino 3-body
 c ==================================================================== c
 
       subroutine SD_xinteggo(xintegoup,xintegodn,xintegotp,xintegobt,
-     .     xintegoud,xintegotb,xinteghcst1b,xintegwst1b,xintegocc) 
+     .     xintegoud,xintegotb,xinteghcst1b,xintegwst1b,xintegocc)
 
-      implicit double precision (a-h,m,o-z)   	 
+      implicit double precision (a-h,m,o-z)
       integer ni,nj,nx1t,ny1t
 
       dimension xintegoup(4),xintegodn(4),xintegotp(4),xintegobt(4),
@@ -28032,7 +28685,7 @@ c ======================================
       external SD_goup,SD_godn,SD_gobt,SD_gotp,SD_goud,SD_gotb,
      .         SD_ghcst1b,SD_gwst1b,SD_gocc
       external SD_ay,SD_by,SD_ax,SD_bx
-	
+
       COMMON/SD_nx1/nx1t,ny1t
       COMMON/SD_hmass/ama,aml,amh,amch,amar
       COMMON/SD_fermion/amt,amb,amtau
@@ -28088,7 +28741,7 @@ c --------------------------------------
             call SD_integ2(SD_goup,SD_ax,SD_bx,SD_ay,SD_by,xmu1,xmu2,
      .                  xmu3,nx1t,ny1t,sum)
             xintegoup(nj)=sum*mgluino/(2*pi)**3/8.d0/64.D0
-         else 
+         else
             xintegoup(nj)=0.D0
          endif
       end do
@@ -28201,8 +28854,8 @@ c --------------------------------------
          endif
       end do
 
-      end 
- 
+      end
+
 c ==================================================================== c
 c                    gluino --> H+ + stop1 + bottom
 c ==================================================================== c
@@ -28234,7 +28887,7 @@ c ======================================
          gs2 = alsew*4.D0*pi
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          gs2 = SD_alphascall(mgluino,inumloop)*4.D0*pi
          call SD_runmass(mgluino,0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
@@ -28256,7 +28909,7 @@ c ======================================
       xmub   = amb**2/mgluino**2
       xmut   = amt**2/mgluino**2
       xmuch  = amch**2/mgluino**2
-      
+
       dsb(1) = 1-x1+xmub-xmusb1
       dsb(2) = 1-x1+xmub-xmusb2
       dt     = 1-x2+xmust1-xmut
@@ -28278,7 +28931,7 @@ c --------------------------------------
      .        x1*x2-xmust1*x1-x1+x2**2+x2*xmuch-x2*xmub-x2*xmust1
      .        -3.D0*x2-2.D0*xmuch+2.D0*xmub+2.D0*xmust1+2.D0)+
      .        (gtl(1)**2*vc**2+gtr(1)**2*ac**2)*xmut*x1 )
-      else 
+      else
          ghctop=0.D0
       endif
 
@@ -28297,8 +28950,8 @@ c --------------------------------------
      .              2.D0*dsqrt(xmub)*(gbr(i)*gbl(k)+gbr(k)*gbl(i)) )
             enddo
          enddo
-      else 
-         ghcsbot=0.D0	
+      else
+         ghcsbot=0.D0
       endif
 
 c -------------------------------------------------------------------- c
@@ -28317,8 +28970,8 @@ c --------------------------------------
      .           gtl(1)*gbl(i)*ac)*(2.D0-x2)+(gtr(1)*gbl(i)*vc+
      .           gbr(i)*gtl(1)*ac)*(-xmuch-x2+xmub+xmust1+1.D0))
          enddo
-      else 
-         ghcsbtop=0.D0	
+      else
+         ghcsbtop=0.D0
       endif
 
 
@@ -28353,7 +29006,7 @@ c ======================================
 
       if(scalechoice.eq.1.D0) then
          gs2 = alsew*4.D0*pi
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          gs2 = SD_alphascall(mgluino,inumloop)*4.D0*pi
       elseif(scalechoice.eq.3.D0) then
          gs2 = SD_alphascall(scaleofcoupling,inumloop)*4.D0*pi
@@ -28367,7 +29020,7 @@ c ======================================
       xmub   = amb**2/mgluino**2
       xmut   = amt**2/mgluino**2
       xmuw   = amwp**2/mgluino**2
-      
+
       dsb(1) = 1-x1+xmub-xmusb1
       dsb(2) = 1-x1+xmub-xmusb2
       dt     = 1-x2+xmust1-xmut
@@ -28377,10 +29030,10 @@ c                              top excha
 c -------------------------------------------------------------------- c
 
       if(mgluino.gt.(amwp+ast1+amb)) then
-         gwtop=2.D0*g2*gs2/dt**2*vtb**2/2.D0*( 
+         gwtop=2.D0*g2*gs2/dt**2*vtb**2/2.D0*(
      .        2.D0*gtr(1)*gtl(1)*dsqrt(xmut)*
      .        ((1.D0-x2+xmub+xmust1-2.D0*xmuw)+1.D0/xmuw*
-     .        (1.D0-x2+xmust1-xmub)**2) 
+     .        (1.D0-x2+xmust1-xmub)**2)
      .        +gtr(1)**2*(x1*xmut+
      .         xmut/xmuw*(1.D0-x2+xmust1-xmub-xmuw)*(2.D0-x1-x2))
      .        +gtl(1)**2*
@@ -28388,7 +29041,7 @@ c --------------------------------------
      .        xmuw-xmust1-xmub)+1.D0/xmuw*(1.D0-x2+xmust1-xmub-xmuw)*
      .        ((-2.D0+x2)*(1.D0-x1+xmub-xmust1-xmuw)+(1.D0-xmust1)*(
      .        2.D0-x1-x2))) )
-      else 
+      else
          gwtop=0.D0
       endif
 
@@ -28409,8 +29062,8 @@ c --------------------------------------
      .              1.D0/xmuw*(1.D0-x1+xmub-xmust1)**2)
             enddo
          enddo
-      else 
-         gwsbot=0.D0	
+      else
+         gwsbot=0.D0
       endif
 
 c -------------------------------------------------------------------- c
@@ -28433,8 +29086,8 @@ c --------------------------------------
      .           xmuw+1.D0/xmuw*(1.D0-x1+xmub-xmust1)*(2.D0*xmub
      .           -x2*xmub+x1*x2-xmust1*x1-x1)) )
          enddo
-      else 
-         gwsbtop=0.D0	
+      else
+         gwsbtop=0.D0
       endif
 
 
@@ -28447,7 +29100,7 @@ c                    gluino --> neutrali
 c ==================================================================== c
 
       double precision function SD_goup(x1,x2)
-	
+
       implicit double precision (a-h,m,o-z)
       integer ni,nj
 
@@ -28470,7 +29123,7 @@ c ======================================
 
       if(scalechoice.eq.1.D0) then
          gs2 = alsew*4.D0*pi
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          gs2 = SD_alphascall(mgluino,inumloop)*4.D0*pi
       elseif(scalechoice.eq.3.D0) then
          gs2 = SD_alphascall(scaleofcoupling,inumloop)*4.D0*pi
@@ -28512,10 +29165,10 @@ c ======================================
      .          xmneut(nj)/mgluino*y3)
             enddo
          enddo
-      else 
-         SD_goup=0.d0	
+      else
+         SD_goup=0.d0
       endif
-	
+
       end
 
 c ==================================================================== c
@@ -28523,7 +29176,7 @@ c                   gluino --> neutralin
 c ==================================================================== c
 
       double precision function SD_godn(x1,x2)
-	
+
       implicit double precision (a-h,m,o-z)
       integer ni,nj
 
@@ -28546,7 +29199,7 @@ c ======================================
 
       if(scalechoice.eq.1.D0) then
          gs2 = alsew*4.D0*pi
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          gs2 = SD_alphascall(mgluino,inumloop)*4.D0*pi
       elseif(scalechoice.eq.3.D0) then
          gs2 = SD_alphascall(scaleofcoupling,inumloop)*4.D0*pi
@@ -28566,7 +29219,7 @@ c ======================================
       y1 = 1-xmuneut1-x1
       y2 = 1-xmuneut1-x2
       y3 = 1+xmuneut1-x3
-    
+
       SD_godn=0.D0
 
       if (mgluino.gt.amneut(nj)) then
@@ -28588,8 +29241,8 @@ c ======================================
      .          xmneut(nj)/mgluino*y3)
             enddo
          enddo
-      else 
-         SD_godn=0.d0	
+      else
+         SD_godn=0.d0
       endif
 
       end
@@ -28599,7 +29252,7 @@ c                 gluino --> neutralino
 c ==================================================================== c
 
       double precision function SD_gobt(x1,x2)
-	
+
       implicit double precision (a-h,m,o-z)
       integer ni,nj
 
@@ -28608,7 +29261,7 @@ c ======================================
       dimension gtr(2),gtl(2),gbr(2),gbl(2),gur(2),gul(2),gdr(2),gdl(2)
       dimension abot(2,4),bbot(2,4)
       dimension abot1(2,4),bbot1(2,4),abot2(2,4),bbot2(2,4)
-	
+
       COMMON/SD_param/gf,amz,amw,pi,g2
       COMMON/SD_fermion/amt,amb,amtau
       COMMON/SD_gluino/mgluino
@@ -28627,7 +29280,7 @@ c -- the running couplings --
 
       if(scalechoice.eq.1.D0) then
          gs2 = alsew*4.D0*pi
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          gs2 = SD_alphascall(mgluino,inumloop)*4.D0*pi
       elseif(scalechoice.eq.3.D0) then
          gs2 = SD_alphascall(scaleofcoupling,inumloop)*4.D0*pi
@@ -28636,7 +29289,7 @@ c -- the running couplings --
       if(scalechoice.eq.1.D0) then
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(mgluino,0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -28659,7 +29312,7 @@ c -- the running couplings --
 c --- several definitions ---
 
       xmuneut1 = amneut(nj)**2/mgluino**2
-     
+
       xmusb1 = asb1**2/mgluino**2
       xmusb2 = asb2**2/mgluino**2
 
@@ -28669,14 +29322,14 @@ c --- several definitions ---
       dsbb(2) = 1-x2-xmusb2+amb**2/mgluino**2
 
       SD_gobt=0.D0
-      
+
 c --- formula with masses ---
 
       uh = 1.D0-x1+amb**2/mgluino**2
       th = 1.D0-x2+amb**2/mgluino**2
       xmub = amb**2/mgluino**2
 
-      if(mgluino.gt.(amneut(nj)+2.D0*amb)) then 
+      if(mgluino.gt.(amneut(nj)+2.D0*amb)) then
          do i=1,2
             do k=1,2
                db11 = abot1(k,nj)*bbot1(i,nj)+abot1(i,nj)*bbot1(k,nj)
@@ -28727,9 +29380,9 @@ c --- formula with masses ---
      .           +ab24*(-th**2+th*(1.D0+xmuneut1+2.D0*xmub)-
      .                 (xmuneut1+xmub)*(1.D0+xmub)) )
      .         -2.D0*8.D0*gs2*g2/dsb(k)/dsbb(i)*(
-     .           ab5*xmub*(uh+th-2.D0*xmub) 
-     .           +ab6*amb/mgluino*(th-xmuneut1-xmub) 
-     .           +ab7*xmneut(nj)*amb/mgluino**2*(uh-xmub-1.D0) 
+     .           ab5*xmub*(uh+th-2.D0*xmub)
+     .           +ab6*amb/mgluino*(th-xmuneut1-xmub)
+     .           +ab7*xmneut(nj)*amb/mgluino**2*(uh-xmub-1.D0)
      .           -2.D0*ab8*xmneut(nj)/mgluino*xmub
      .           +ab9*amb/mgluino*(uh-xmuneut1-xmub)
      .           +ab10*(uh*th-xmuneut1-xmub**2)
@@ -28737,10 +29390,10 @@ c --- formula with masses ---
      .           +ab12*xmneut(nj)*amb/mgluino**2*(th-xmub-1.D0) )
             enddo
          enddo
-      else 
-         SD_gobt=0.D0	
+      else
+         SD_gobt=0.D0
       endif
-      
+
       end
 
 c ==================================================================== c
@@ -28748,7 +29401,7 @@ c                   gluino --> neutralin
 c ==================================================================== c
 
       double precision function SD_gotp(x1,x2)
-	
+
       implicit double precision (a-h,m,o-z)
       integer ni,nj
 
@@ -28757,7 +29410,7 @@ c ======================================
       dimension gtr(2),gtl(2),gbr(2),gbl(2),gur(2),gul(2),gdr(2),gdl(2)
       dimension atopr(2,4),btopr(2,4)
       dimension atopr1(2,4),btopr1(2,4),atopr2(2,4),btopr2(2,4)
-	
+
       COMMON/SD_param/gf,amz,amw,pi,g2
       COMMON/SD_fermion/amt,amb,amtau
       COMMON/SD_gluino/mgluino
@@ -28776,7 +29429,7 @@ c -- the running couplings --
 
       if(scalechoice.eq.1.D0) then
          gs2 = alsew*4.D0*pi
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          gs2 = SD_alphascall(mgluino,inumloop)*4.D0*pi
       elseif(scalechoice.eq.3.D0) then
          gs2 = SD_alphascall(scaleofcoupling,inumloop)*4.D0*pi
@@ -28785,7 +29438,7 @@ c -- the running couplings --
       if(scalechoice.eq.1.D0) then
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(mgluino,0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -28806,9 +29459,9 @@ c -- the running couplings --
       end do
 
 c --- several definitions ---
-  
+
       xmuneut1 = amneut(nj)**2/mgluino**2
-     
+
       xmust1 = ast1**2/mgluino**2
       xmust2 = ast2**2/mgluino**2
 
@@ -28818,14 +29471,14 @@ c --- several definitions ---
       dstb(2) = 1-x2-xmust2+amt**2/mgluino**2
 
       SD_gotp=0.D0
-   
+
 c --- formula with masses ---
 
       uh = 1.D0-x1+amt**2/mgluino**2
       th = 1.D0-x2+amt**2/mgluino**2
       xmut = amt**2/mgluino**2
 
-      if(mgluino.gt.(amneut(nj)+2.D0*amt)) then 
+      if(mgluino.gt.(amneut(nj)+2.D0*amt)) then
          do i=1,2
             do k=1,2
               db11 = atopr1(k,nj)*btopr1(i,nj)+atopr1(i,nj)*btopr1(k,nj)
@@ -28876,9 +29529,9 @@ c --- formula with masses ---
      .           +ab24*(-th**2+th*(1.D0+xmuneut1+2.D0*xmut)-
      .                 (xmuneut1+xmut)*(1.D0+xmut)) )
      .         -2.D0*8.D0*gs2*g2/dst(k)/dstb(i)*(
-     .           ab5*xmut*(uh+th-2.D0*xmut) 
-     .           +ab6*amt/mgluino*(th-xmuneut1-xmut) 
-     .           +ab7*xmneut(nj)*amt/mgluino**2*(uh-xmut-1.D0) 
+     .           ab5*xmut*(uh+th-2.D0*xmut)
+     .           +ab6*amt/mgluino*(th-xmuneut1-xmut)
+     .           +ab7*xmneut(nj)*amt/mgluino**2*(uh-xmut-1.D0)
      .           -2.D0*ab8*xmneut(nj)/mgluino*xmut
      .           +ab9*amt/mgluino*(uh-xmuneut1-xmut)
      .           +ab10*(uh*th-xmuneut1-xmut**2)
@@ -28886,10 +29539,10 @@ c --- formula with masses ---
      .           +ab12*xmneut(nj)*amt/mgluino**2*(th-xmut-1.D0) )
             enddo
          enddo
-      else 
-         SD_gotp=0.D0	
+      else
+         SD_gotp=0.D0
       endif
- 
+
       end
 
 c ==================================================================== c
@@ -28897,7 +29550,7 @@ c                   gluino --> chargino-
 c ==================================================================== c
 
       double precision function SD_goud(x1,x2)
-	
+
       implicit double precision (a-h,m,o-z)
       integer ni,nj
 
@@ -28905,7 +29558,7 @@ c ======================================
       dimension dsup(2),dsdn(2)
       dimension gtr(2),gtl(2),gbr(2),gbl(2),gur(2),gul(2),gdr(2),gdl(2)
       dimension alup(2,2),aldo(2,2),blup(2,2),bldo(2,2)
-	
+
       COMMON/SD_param/gf,amz,amw,pi,g2
       COMMON/SD_gluino/mgluino
       COMMON/SD_massgino/amneut,xmneut,amchar,xmchar
@@ -28920,7 +29573,7 @@ c ======================================
 
       if(scalechoice.eq.1.D0) then
          gs2 = alsew*4.D0*pi
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          gs2 = SD_alphascall(mgluino,inumloop)*4.D0*pi
       elseif(scalechoice.eq.3.D0) then
          gs2 = SD_alphascall(scaleofcoupling,inumloop)*4.D0*pi
@@ -28974,7 +29627,7 @@ c ======================================
       else
          SD_goud=0.D0
       endif
-      
+
       end
 
 c ==================================================================== c
@@ -28990,7 +29643,7 @@ c ======================================
       dimension dsbt(2),dstp(2)
       dimension gtr(2),gtl(2),gbr(2),gbl(2),gur(2),gul(2),gdr(2),gdl(2)
       dimension alsbot(2,2),aksbot(2,2),alstor(2,2),akstor(2,2)
-	
+
       COMMON/SD_param/gf,amz,amw,pi,g2
       COMMON/SD_gluino/mgluino
       COMMON/SD_massgino/amneut,xmneut,amchar,xmchar
@@ -29009,7 +29662,7 @@ c -- the running couplings --
 
       if(scalechoice.eq.1.D0) then
          gs2 = alsew*4.D0*pi
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          gs2 = SD_alphascall(mgluino,inumloop)*4.D0*pi
       elseif(scalechoice.eq.3.D0) then
          gs2 = SD_alphascall(scaleofcoupling,inumloop)*4.D0*pi
@@ -29018,7 +29671,7 @@ c -- the running couplings --
       if(scalechoice.eq.1.D0) then
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(mgluino,0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -29046,7 +29699,7 @@ c --- some definitions ---
       xmuchar1 = amchar(nj)**2/mgluino**2
 
       SD_gotb=0.D0
-      
+
 c --- the formula for massive final state fermions ---
 
       uh = 1.D0-x1+amt**2/mgluino**2
@@ -29054,7 +29707,7 @@ c --- the formula for massive final stat
       xmub = amb**2/mgluino**2
       xmut = amt**2/mgluino**2
 
-      if(mgluino.gt.(amchar(nj)+amb+amt)) then 
+      if(mgluino.gt.(amchar(nj)+amb+amt)) then
          do i=1,2
             do k=1,2
                db1 = alsbot(k,nj)*aksbot(i,nj)+alsbot(i,nj)*aksbot(k,nj)
@@ -29108,9 +29761,9 @@ c --- the formula for massive final stat
      .           +at4*(-uh**2+uh*(1.D0+xmuchar1+xmub+xmut)-
      .                 (xmuchar1+xmub)*(1.D0+xmut)) )
      .         -2.D0*8.D0*gs2*g2/dsbt(i)/dstp(k)*(
-     .           ab5*amb*amt/mgluino**2*(uh+th-xmub-xmut) 
-     .           +ab6*amb/mgluino*(th-xmuchar1-xmut) 
-     .           +ab7*xmchar(nj)*amb/mgluino**2*(uh-xmut-1.D0) 
+     .           ab5*amb*amt/mgluino**2*(uh+th-xmub-xmut)
+     .           +ab6*amb/mgluino*(th-xmuchar1-xmut)
+     .           +ab7*xmchar(nj)*amb/mgluino**2*(uh-xmut-1.D0)
      .           -2.D0*ab8*xmchar(nj)/mgluino*amt*amb/mgluino**2
      .           +ab9*amt/mgluino*(uh-xmuchar1-xmub)
      .           +ab10*(uh*th-xmuchar1-xmub*xmut)
@@ -29118,8 +29771,8 @@ c --- the formula for massive final stat
      .           +ab12*xmchar(nj)*amt/mgluino**2*(th-xmub-1.D0) )
             enddo
          enddo
-      else 
-         SD_gotb=0.D0	
+      else
+         SD_gotb=0.D0
       endif
 
       end
@@ -29135,7 +29788,7 @@ c---------------------------------------
       dimension dsbt(2),dstp(2)
       dimension gtr(2),gtl(2),gbr(2),gbl(2),gur(2),gul(2),gdr(2),gdl(2)
       dimension alsbot(2,2),aksbot(2,2),alstor(2,2),akstor(2,2)
-	
+
       COMMON/SD_param/gf,amz,amw,pi,g2
       COMMON/SD_gluino/mgluino
       COMMON/SD_massgino/amneut,xmneut,amchar,xmchar
@@ -29154,7 +29807,7 @@ c -- the running couplings --
 
       if(scalechoice.eq.1.D0) then
          gs2 = alsew*4.D0*pi
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          gs2 = SD_alphascall(mgluino,inumloop)*4.D0*pi
       elseif(scalechoice.eq.3.D0) then
          gs2 = SD_alphascall(scaleofcoupling,inumloop)*4.D0*pi
@@ -29163,7 +29816,7 @@ c -- the running couplings --
       if(scalechoice.eq.1.D0) then
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(mgluino,0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -29172,7 +29825,7 @@ c -- the running couplings --
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
       endif
-	
+
       call SD_charstopbot(alstor,akstor)
       call SD_charsbottop(alsbot,aksbot)
 
@@ -29191,7 +29844,7 @@ c --- some definitions ---
       xmuchar1 = amchar(nj)**2/mgluino**2
 
       SD_gocc=0.D0
-      
+
 c --- the formula for massive final state fermions ---
 
       uh = 1.D0-x1+amb**2/mgluino**2
@@ -29199,7 +29852,7 @@ c --- the formula for massive final stat
       xmub = amb**2/mgluino**2
       xmut = amt**2/mgluino**2
 
-      if(mgluino.gt.(amchar(nj)+amb+amt)) then 
+      if(mgluino.gt.(amchar(nj)+amb+amt)) then
          do i=1,2
             do k=1,2
                db1 = alsbot(k,nj)*aksbot(i,nj)+alsbot(i,nj)*aksbot(k,nj)
@@ -29253,9 +29906,9 @@ c --- the formula for massive final stat
      .           +at4*(-th**2+th*(1.D0+xmuchar1+xmub+xmut)-
      .                 (xmuchar1+xmub)*(1.D0+xmut)) )
      .         -2.D0*8.D0*gs2*g2/dsbt(i)/dstp(k)*(
-     .           ab5*amb*amt/mgluino**2*(uh+th-xmub-xmut) 
-     .           +ab9*amb/mgluino*(uh-xmuchar1-xmut) 
-     .           +ab12*xmchar(nj)*amb/mgluino**2*(th-xmut-1.D0) 
+     .           ab5*amb*amt/mgluino**2*(uh+th-xmub-xmut)
+     .           +ab9*amb/mgluino*(uh-xmuchar1-xmut)
+     .           +ab12*xmchar(nj)*amb/mgluino**2*(th-xmut-1.D0)
      .           -2.D0*ab8*xmchar(nj)/mgluino*amt*amb/mgluino**2
      .           +ab6*amt/mgluino*(th-xmuchar1-xmub)
      .           +ab10*(uh*th-xmuchar1-xmub*xmut)
@@ -29263,8 +29916,8 @@ c --- the formula for massive final stat
      .           +ab7*xmchar(nj)*amt/mgluino**2*(uh-xmub-1.D0) )
             enddo
          enddo
-      else 
-         SD_gocc=0.D0	
+      else
+         SD_gocc=0.D0
       endif
 
       end
@@ -29311,7 +29964,7 @@ c -- the running alphas --
          gs21 = alsew*4.D0*pi
          gs22 = gs21
          amurefer = amuref
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          gs21 = SD_alphascall(asup1,inumloop)*4.D0*pi
          gs22 = SD_alphascall(asup2,inumloop)*4.D0*pi
       elseif(scalechoice.eq.3.D0) then
@@ -29423,7 +30076,7 @@ c  supl --> gluino + up
 
       if(asup1.gt.mgluino) then
          suplglui = 8.D0*gs21*(asup1**2-mgluino**2)*
-     .              SD_lamb(0.D0,mgluino/asup1)/(16.D0*pi*asup1)/3.D0 
+     .              SD_lamb(0.D0,mgluino/asup1)/(16.D0*pi*asup1)/3.D0
       else
          suplglui = 0.D0
       endif
@@ -29442,11 +30095,11 @@ c --- the QCD corrections ---
          amsq  = 2.D0*(asup1+asup2+asdown1+asdown2)/8.D0
          rval  = mgluino**2/amsq**2
 
-         qcdsuplglui = suplglui*alp/pi*( ca*SD_gama(rval) + 
-     .        cf*SD_gamfcap(rval) + 4.D0*SD_gamf(rval) + 
+         qcdsuplglui = suplglui*alp/pi*( ca*SD_gama(rval) +
+     .        cf*SD_gamfcap(rval) + 4.D0*SD_gamf(rval) +
      .        2.D0*pi**2/mgluino**2*
      .        SD_gamglui2(ast1,ast2,amt,thet,asb1,asb2,amb,theb,mgluino,
-     .        1,amsq) + 
+     .        1,amsq) +
      .        SD_gamrendec(amsq,ast1,ast2,amt,asb1,asb2,mgluino,scala) )
       else
          qcdsuplglui = 0.D0
@@ -29454,7 +30107,7 @@ c --- the QCD corrections ---
 
 c -------------------------------------------------------------------- c
 c  supr --> gluino + up
-      
+
       if(asup2.gt.mgluino) then
          suprglui = 8.D0*gs22*(asup2**2-mgluino**2)*
      .              SD_lamb(0.D0,mgluino/asup2)/(16.D0*pi*asup2)/3.D0
@@ -29476,17 +30129,17 @@ c --- the QCD corrections ---
          amsq  = 2.D0*(asup1+asup2+asdown1+asdown2)/8.D0
          rval  = mgluino**2/amsq**2
 
-         qcdsuprglui = suprglui*alp/pi*( ca*SD_gama(rval) + 
-     .        cf*SD_gamfcap(rval) + 4.D0*SD_gamf(rval) + 
+         qcdsuprglui = suprglui*alp/pi*( ca*SD_gama(rval) +
+     .        cf*SD_gamfcap(rval) + 4.D0*SD_gamf(rval) +
      .        2.D0*pi**2/mgluino**2*
      .        SD_gamglui2(ast2,ast1,amt,thet,asb2,asb1,amb,theb,mgluino,
-     .        2,amsq) + 
+     .        2,amsq) +
      .        SD_gamrendec(amsq,ast1,ast2,amt,asb1,asb2,mgluino,scala) )
       else
          qcdsuprglui = 0.D0
       endif
 
-      end 
+      end
 
 c ==================================================================== c
 c                          sdown 2-body decays                         c
@@ -29532,7 +30185,7 @@ c -- the running alphas --
          gs21 = alsew*4.D0*pi
          gs22 = gs21
          amurefer = amuref
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          gs21 = SD_alphascall(asdown1,inumloop)*4.D0*pi
          gs22 = SD_alphascall(asdown2,inumloop)*4.D0*pi
       elseif(scalechoice.eq.3.D0) then
@@ -29648,7 +30301,7 @@ c  sdownl --> gluino + down
 
       if(asdown1.gt.mgluino) then
          sdowlglui = 8.D0*gs21*(asdown1**2-mgluino**2)*
-     .            SD_lamb(0.D0,mgluino/asdown1)/(16.D0*pi*asdown1)/3.D0 
+     .            SD_lamb(0.D0,mgluino/asdown1)/(16.D0*pi*asdown1)/3.D0
       else
          sdowlglui = 0.D0
       endif
@@ -29667,11 +30320,11 @@ c --- the QCD corrections ---
          amsq  = 2.D0*(asup1+asup2+asdown1+asdown2)/8.D0
          rval  = mgluino**2/amsq**2
 
-         qcdsdowlglui = sdowlglui*alp/pi*( ca*SD_gama(rval) + 
-     .        cf*SD_gamfcap(rval) + 4.D0*SD_gamf(rval) + 
+         qcdsdowlglui = sdowlglui*alp/pi*( ca*SD_gama(rval) +
+     .        cf*SD_gamfcap(rval) + 4.D0*SD_gamf(rval) +
      .        2.D0*pi**2/mgluino**2*
      .        SD_gamglui2(ast1,ast2,amt,thet,asb1,asb2,amb,theb,mgluino,
-     .        1,amsq) + 
+     .        1,amsq) +
      .        SD_gamrendec(amsq,ast1,ast2,amt,asb1,asb2,mgluino,scala) )
       else
          qcdsdowlglui = 0.D0
@@ -29679,7 +30332,7 @@ c --- the QCD corrections ---
 
 c -------------------------------------------------------------------- c
 c  sdownr --> gluino + down
-      
+
       if(asdown2.gt.mgluino) then
          sdowrglui = 8.D0*gs22*(asdown2**2-mgluino**2)*
      .             SD_lamb(0.D0,mgluino/asdown2)/(16.D0*pi*asdown2)/3.D0
@@ -29701,17 +30354,17 @@ c --- the QCD corrections ---
          amsq  = 2.D0*(asup1+asup2+asdown1+asdown2)/8.D0
          rval  = mgluino**2/amsq**2
 
-         qcdsdowrglui = sdowrglui*alp/pi*( ca*SD_gama(rval) + 
-     .        cf*SD_gamfcap(rval) + 4.D0*SD_gamf(rval) + 
+         qcdsdowrglui = sdowrglui*alp/pi*( ca*SD_gama(rval) +
+     .        cf*SD_gamfcap(rval) + 4.D0*SD_gamf(rval) +
      .        2.D0*pi**2/mgluino**2*
      .        SD_gamglui2(ast2,ast1,amt,thet,asb2,asb1,amb,theb,mgluino,
-     .        2,amsq) + 
+     .        2,amsq) +
      .        SD_gamrendec(amsq,ast1,ast2,amt,asb1,asb2,mgluino,scala) )
       else
          qcdsdowrglui = 0.D0
       endif
 
-      end 
+      end
 c----- ramona added 2/2/15
 c ===================================================================== c
 c               light stop 2-body decays				c
@@ -29727,9 +30380,9 @@ c ======================================
       double precision amneut(4),amchar(2),xmneut(4), xmchar(2)
       double precision amt,amb,amtau, mgluino
       double precision gf,amz,amw,pi,g2, prefactor
-      double precision sw, cw, amwp, amzp, alp_mssm, tanbeta, alsew, 
+      double precision sw, cw, amwp, amzp, alp_mssm, tanbeta, alsew,
      . g2ew, g1ew
-           double precision vckm(3,3), msq2(3,3), msu2(3,3), 
+           double precision vckm(3,3), msq2(3,3), msu2(3,3),
      .msd2(3,3), td(3,3), tu(3,3),
      . usqmix(6,6), dsqmix(6,6)
 	double precision amsupq(6), amsdownq(6), amslepton(6)
@@ -29739,10 +30392,10 @@ c ======================================
 c----- ramona changed 15/10/14
       double precision signmneut
 c---end ramona changed
-     
+
       COMMON/SD_refscale/amuref
-      COMMON/flavviolation/vckm, msq2, msd2, msu2, td, 
-     .tu, usqmix, ifavvio, dsqmix
+      COMMON/flavviolation/vckm, msq2, msd2, msu2, td,
+     .tu, usqmix, dsqmix, ifavvio
       COMMON/msfermion/amsupq, amsdownq, amslepton, amsneutrino
       COMMON/SD_param/gf,amz,amw,pi,g2
       COMMON/SD_massgino/amneut,xmneut,amchar,xmchar
@@ -29763,7 +30416,7 @@ c------ inititalize masses for qcdcorrec
       msquark(4)=amsupq(4)
       msquark(5)=amsupq(5)
       msquark(6)=amsupq(6)
-      
+
       	if((amneut(1)+amt)/amsupq(1).ge.1d0) then
         print*, "M_Stop<M_neut+M_top-> Decay not possible"
         st1neuttopFV=0d0
@@ -29779,17 +30432,17 @@ c--- initialize couplings neutralino qua
 
       call coupfavneut(gneutsttr, gneutsttl, 1, 3, 1, 1)
 
-      
+
 c---- the decay width with the prefactors from the phase space integration
         prefactor=1d0/8d0/Pi*1d0/2d0/amsupq(1)*
-     .(1d0-(amneut(1)/amsupq(1))**2)	
-     
-	
+     .(1d0-(amneut(1)/amsupq(1))**2)
+
+
       if((amneut(1)+amt)/amsupq(1).le.1d0)then
- 
-      treelevelfullmass=1d0/16d0/Pi*amsupq(1)     
+
+      treelevelfullmass=1d0/16d0/Pi*amsupq(1)
      .*sqrt((1d0-(amt+amneut(1))**2/amsupq(1)**2)*
-     .(1d0-(amt-amneut(1))**2/amsupq(1)**2))     
+     .(1d0-(amt-amneut(1))**2/amsupq(1)**2))
      .*((1d0-amt**2/amsupq(1)**2-amneut(1)**2/amsupq(1)**2)
      .*(gneutsttr**2+gneutsttl**2)
 c---- ramona changed 14/10/14 xmneut-->xmneut
@@ -29801,7 +30454,7 @@ c---- ramona changed 14/10/14 xmneut-->x
       endif
 
 
-      return 
+      return
       end
 c-----end ramona changed
 
@@ -29822,9 +30475,9 @@ c ======================================
       double precision amneut(4),amchar(2),xmneut(4), xmchar(2)
       double precision amt,amb,amtau, mgluino
       double precision gf,amz,amw,pi,g2, prefactor
-      double precision sw, cw, amwp, amzp, alp_mssm, tanbeta, alsew, 
+      double precision sw, cw, amwp, amzp, alp_mssm, tanbeta, alsew,
      . g2ew, g1ew
-           double precision vckm(3,3), msq2(3,3), msu2(3,3), 
+           double precision vckm(3,3), msq2(3,3), msu2(3,3),
      .msd2(3,3), td(3,3), tu(3,3),
      . usqmix(6,6), dsqmix(6,6)
 	double precision amsupq(6), amsdownq(6), amslepton(6)
@@ -29835,10 +30488,10 @@ c ======================================
 c----- ramona changed 15/10/14
       double precision signmneut
 c---end ramona changed
-     
+
       COMMON/SD_refscale/amuref
-      COMMON/flavviolation/vckm, msq2, msd2, msu2, td, 
-     .tu, usqmix, ifavvio, dsqmix
+      COMMON/flavviolation/vckm, msq2, msd2, msu2, td,
+     .tu, usqmix, dsqmix, ifavvio
       COMMON/msfermion/amsupq, amsdownq, amslepton, amsneutrino
       COMMON/SD_param/gf,amz,amw,pi,g2
       COMMON/SD_massgino/amneut,xmneut,amchar,xmchar
@@ -29861,7 +30514,7 @@ c------ inititalize masses for qcdcorrec
       msquark(6)=amsupq(6)
 
 
-      
+
       do j=1,6
       do k=1,6
       zwi(j,k)=0d0
@@ -29872,7 +30525,7 @@ c------ inititalize masses for qcdcorrec
       end do
 
 
-      
+
       	if(amneut(1)/amsupq(1).ge.1d0) then
         print*, "M_Stop<M_neut-> Decay not possible"
         st1neutup=0d0
@@ -29889,17 +30542,17 @@ c--- initialize couplings neutralino qua
 
       call coupfavneut(gneutstcr, gneutstcl, 1, 2, 1, 1)
       call coupfavneut(gneutstur, gneutstul, 1, 1, 1, 0)
-      
+
 c---- the decay width with the prefactors from the phase space integration
         prefactor=1d0/8d0/Pi*1d0/2d0/amsupq(1)*
-     .(1d0-(amneut(1)/amsupq(1))**2)	
-     
-	
+     .(1d0-(amneut(1)/amsupq(1))**2)
+
+
       if((amneut(1)+amc)/amsupq(1).le.1d0)then
- 
-      treelevelfullmass=1d0/16d0/Pi*amsupq(1)     
+
+      treelevelfullmass=1d0/16d0/Pi*amsupq(1)
      .*sqrt((1d0-(amc+amneut(1))**2/amsupq(1)**2)*
-     .(1d0-(amc-amneut(1))**2/amsupq(1)**2))     
+     .(1d0-(amc-amneut(1))**2/amsupq(1)**2))
      .*((1d0-amc**2/amsupq(1)**2-amneut(1)**2/amsupq(1)**2)
      .*(gneutstcr**2+gneutstcl**2)
 c---- ramona changed 14/10/14 xmneut-->xmneut
@@ -29913,9 +30566,9 @@ c----- ramona changed 15/10/14
        endif
 c---- end ramona changed
 
-  
 
-c---- mc=0 result	
+
+c---- mc=0 result
 !  	st1neutcharmed=prefactor*(gneutstcr**2+gneutstcl**2)
 !      . *(amsupq(1)**2-amneut(1)**2)
 !      .+prefactor
@@ -29947,7 +30600,7 @@ c---- ramona added signmneut 15/10/14
 
 
 
-      return 
+      return
       end
 c-----end ramona changed
 c ==================================================================== c
@@ -30023,7 +30676,7 @@ c -- the running couplings --
       if(scalechoice.eq.1.D0) then
          gs21 = alsew*4.D0*pi
          gs22 = gs21
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          gs21 = SD_alphascall(ast1,inumloop)*4.D0*pi
          gs22 = SD_alphascall(ast2,inumloop)*4.D0*pi
       elseif(scalechoice.eq.3.D0) then
@@ -30045,7 +30698,7 @@ c -- the running couplings --
 c -------------------------------------------------------------------- c
 c  stop1 --> chi0_1/chi0_2/chi0_3/chi0_4 + top
 
-      if(scalechoice.eq.2.D0) then         
+      if(scalechoice.eq.2.D0) then
          call SD_runmass(ast1,0.D0,0.D0,runmb,runmt)
          scalb    = SD_yuk(2,runmb)
          scalt    = SD_yuk(1,runmt)
@@ -30083,18 +30736,18 @@ c --- the QCD corrections ---
      .            (ast1**2-amt**2-amneut(j)**2)
      .           -2.D0*(btopr(1,j)*SD_grtneut(1,j,amuv,amuvdiv,lamv)
      .                 +atopr(1,j)*SD_gltneut(1,j,amuv,amuvdiv,lamv))*
-     .           amt*xmneut(j))*SD_lamb(amt/ast1,amneut(j)/ast1) 
+     .           amt*xmneut(j))*SD_lamb(amt/ast1,amneut(j)/ast1)
      .           +g2/(6.D0*pi**2*ast1)*gs21/(4.D0*pi)*
      .           SD_corrreali(amt,amneut(j),ast1,lamv,1,jsign,1,j,1)
          else
             qcdst1neut(j) = 0.D0
          endif
       end do
-      
+
 c -------------------------------------------------------------------- c
 c  stop2 --> chi0_1/chi0_2/chi0_3/chi0_4 + top
 
-      if(scalechoice.eq.2.D0) then         
+      if(scalechoice.eq.2.D0) then
          call SD_runmass(ast2,0.D0,0.D0,runmb,runmt)
          scalb    = SD_yuk(2,runmb)
          scalt    = SD_yuk(1,runmt)
@@ -30132,18 +30785,18 @@ c --- the QCD corrections ---
      .           (ast2**2-amt**2-amneut(j)**2)
      .           -2.D0*(btopr(2,j)*SD_grtneut(2,j,amuv,amuvdiv,lamv)
      .                 +atopr(2,j)*SD_gltneut(2,j,amuv,amuvdiv,lamv))*
-     .           amt*xmneut(j))*SD_lamb(amt/ast2,amneut(j)/ast2) 
+     .           amt*xmneut(j))*SD_lamb(amt/ast2,amneut(j)/ast2)
      .           +g2/(6.D0*pi**2*ast2)*gs22/(4.D0*pi)*
      .           SD_corrreali(amt,amneut(j),ast2,lamv,1,jsign,2,j,1)
          else
             qcdst2neut(j) = 0.D0
          endif
       end do
-      
+
 c -------------------------------------------------------------------- c
 c  stop1 --> chi+_1/chi+_2 + bottom
 
-      if(scalechoice.eq.2.D0) then         
+      if(scalechoice.eq.2.D0) then
          call SD_runmass(ast1,0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -30182,7 +30835,7 @@ c --- the QCD corrections ---
      .           (ast1**2-amb**2-amchar(j)**2)
      .           -2.D0*(akstor(1,j)*SD_grtchar(1,j,amuv,amuvdiv,lamv)
      .                 +alstor(1,j)*SD_gltchar(1,j,amuv,amuvdiv,lamv))*
-     .           amb*xmchar(j))*SD_lamb(amb/ast1,amchar(j)/ast1) 
+     .           amb*xmchar(j))*SD_lamb(amb/ast1,amchar(j)/ast1)
      .           +g2/(6.D0*pi**2*ast1)*gs21/(4.D0*pi)*
      .           SD_corrreali(amb,amchar(j),ast1,lamv,2,jsign,1,j,1)
          else
@@ -30193,7 +30846,7 @@ c --- the QCD corrections ---
 c -------------------------------------------------------------------- c
 c  stop2 --> chi+_1/chi+_2 + bottom
 
-      if(scalechoice.eq.2.D0) then         
+      if(scalechoice.eq.2.D0) then
          call SD_runmass(ast2,0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -30232,7 +30885,7 @@ c --- the QCD corrections ---
      .           (ast2**2-amb**2-amchar(j)**2)
      .           -2.D0*(akstor(2,j)*SD_grtchar(2,j,amuv,amuvdiv,lamv)
      .                 +alstor(2,j)*SD_gltchar(2,j,amuv,amuvdiv,lamv))*
-     .           amb*xmchar(j))*SD_lamb(amb/ast2,amchar(j)/ast2) 
+     .           amb*xmchar(j))*SD_lamb(amb/ast2,amchar(j)/ast2)
      .           +g2/(6.D0*pi**2*ast2)*gs22/(4.D0*pi)*
      .           SD_corrreali(amb,amchar(j),ast2,lamv,2,jsign,2,j,1)
          else
@@ -30246,14 +30899,14 @@ c  stop1 --> gluino + top
       if(ast1.gt.(mgluino+amt)) then
          st1glui = 8.D0*gs21*(ast1**2-amt**2-mgluino**2+4.D0*amt*
      .        mgluino*dsin(thet)*dcos(thet))*
-     .        SD_lamb(amt/ast1,mgluino/ast1)/(16.D0*pi*ast1)/3.D0 
+     .        SD_lamb(amt/ast1,mgluino/ast1)/(16.D0*pi*ast1)/3.D0
       else
          st1glui = 0.D0
       endif
 
 c --- the QCD corrections ---
 
-      if(scalechoice.eq.2.D0) then         
+      if(scalechoice.eq.2.D0) then
          amurefer = ast1
       endif
 
@@ -30291,18 +30944,18 @@ c --- the QCD corrections ---
 
 c -------------------------------------------------------------------- c
 c  stop2 --> gluino + top
-      
+
       if(ast2.gt.(mgluino+amt)) then
          st2glui = 8.D0*gs22*((ast2**2-amt**2-mgluino**2)-4.D0*amt*
      .        mgluino*dsin(thet)*dcos(thet))*
-     .        SD_lamb(amt/ast2,mgluino/ast2)/(16.D0*pi*ast2)/3.D0  
+     .        SD_lamb(amt/ast2,mgluino/ast2)/(16.D0*pi*ast2)/3.D0
       else
          st2glui = 0.D0
       endif
 
 c --- the QCD corrections ---
 
-      if(scalechoice.eq.2.D0) then         
+      if(scalechoice.eq.2.D0) then
          amurefer = ast2
       endif
 
@@ -30347,7 +31000,7 @@ c  stop1 --> H+ + sbottom1/2
          runmt = rmtc
          runmb = rmbc
          amurefer = amuref
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(ast1,0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -30399,7 +31052,7 @@ c --- the QCD corrections ---
       end do
 
 c -------------------------------------------------------------------- c
-c stop2 -> Higgs + stop1 
+c stop2 -> Higgs + stop1
 
       if(scalechoice.eq.1.D0) then
          scalb = ybewsb/dsqrt(g2)
@@ -30407,7 +31060,7 @@ c stop2 -> Higgs + stop1
          runmt = rmtc
          runmb = rmbc
          amurefer = amuref
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(ast2,0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -30511,7 +31164,7 @@ c --- the QCD corrections ---
          alp = gs22/(4.D0*pi)
          delta1a = dsqrt(2.D0)*amz**2*gattr*
      .        SD_gvirtgl(ast2,ama,ast1,lamv,amuv)
-         delta2a = 0.D0 
+         delta2a = 0.D0
          delta3a = SD_topneut1719(3,amuv)
          delta4a = SD_dcounterneut(ast1,ast2,runmt,thet,mgluino,amuv,
      .                          amuvdiv,lamv,1,3)
@@ -30533,7 +31186,7 @@ c  stop2 --> H+ + sbottom1/2
          runmt = rmtc
          runmb = rmbc
          amurefer = amuref
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(ast2,0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -30596,7 +31249,7 @@ c  stop2 --> Z + stop1
       endif
 
 c --- the QCD corrections ---
-      
+
       if(ast2.gt.(ast1+amzp)) then
          alp = gs22/(4.D0*pi)
          del1 = -alp/3.D0/pi*gztt(2,1)/2.D0/cw*
@@ -30610,7 +31263,7 @@ c --- the QCD corrections ---
          del5 = SD_realgluonem(ast2,ast1,amzp,lamv)
          qcdst2ztop =  g2/16.D0/pi/amzp**2*ast2**3*(gztt(2,1)/2.D0/cw)*
      .        SD_lamb(ast1/ast2,amzp/ast2)**3*(2.D0*del1+2.D0*del2
-     .        +2.D0*del3+2.D0*del4) + 
+     .        +2.D0*del3+2.D0*del4) +
      .        g2/3.D0/pi**2/ast2*alp*(gztt(2,1)/(2.D0*cw))**2*del5
       else
          qcdst2ztop = 0.D0
@@ -30647,7 +31300,7 @@ c -- the QCD corrections --
             qcdst1wsb(i) = g2/16.D0/pi/amwp**2*ast1**3*
      .           (gwtb(1,i)/dsqrt(2.D0))*
      .           SD_lamb(gmsb(i)/ast1,amwp/ast1)**3*(2.D0*del1+2.D0*del2
-     .           +2.D0*del3+2.D0*del4) + 
+     .           +2.D0*del3+2.D0*del4) +
      .           g2/3.D0/pi**2/ast1*alp*(gwtb(1,i)/dsqrt(2.D0))**2*del5
          else
             qcdst1wsb(i) = 0.D0
@@ -30685,14 +31338,14 @@ c -- the QCD corrections --
             qcdst2wsb(i) = g2/16.D0/pi/amwp**2*ast2**3*
      .           (gwtb(2,i)/dsqrt(2.D0))*
      .           SD_lamb(gmsb(i)/ast2,amwp/ast2)**3*(2.D0*del1+2.D0*del2
-     .           +2.D0*del3+2.D0*del4) + 
+     .           +2.D0*del3+2.D0*del4) +
      .           g2/3.D0/pi**2/ast2*alp*(gwtb(2,i)/dsqrt(2.D0))**2*del5
          else
             qcdst2wsb(i) = 0.D0
          endif
       end do
 
-      return 
+      return
 
       end
 
@@ -30753,7 +31406,7 @@ c ----------------------------
       beta=datan(tanbeta)
 
       amh12=sdmhd2
-      
+
       ct = dcos(thet)
       st = dsin(thet)
 
@@ -30848,35 +31501,35 @@ c ----------------------------
       beta=datan(tanbeta)
 
       amh12=sdmhd2
-      
+
       ct=dcos(thet)
       st=dsin(thet)
 
       amsc1=dsqrt(sdmuq**2+(0.5d0-2.d0/3.d0*sw**2)*amz**2*
      .     dcos(2.d0*beta))
-      
+
       xktb = 0.99915D0
       xkcb = 0.041D0
       amx  = 2.D16
 
       dl=-g2/16.d0/pi**2*log((amx/amwp)**2)*xktb*xkcb*scalb**2*
      .   (sdmuq**2+sdmbr**2+sdabot**2+amh12)
-      
+
       dr=g2/16.D0/pi**2*log((amx/amwp)**2)*xktb*xkcb*scalb**2*amt*sdabot
-      
+
       eps=-(-dl*st+dr*ct)/(amsc1**2-ast2**2)
 
       f11c=-(2.d0/3.d0)*dsqrt(2.d0)*sw*zp(1,1)-dsqrt(2.d0)*(0.5d0-
      .     2.d0/3.d0*sw**2)*(zp(1,2)/cw)
 
-c -- the decay stop2 -> neutralino1 charm --            
+c -- the decay stop2 -> neutralino1 charm --
       if(ast2.gt.amneut(1)) then
          gamma2=g2/16.d0/pi*eps**2*f11c**2*ast2*(1-amneut(1)**2
      .        /ast2**2)**2
       else
          gamma2=0.D0
       endif
-      
+
       end
 
 c ==================================================================== c
@@ -30888,9 +31541,9 @@ c ======================================
      .     xintegstbbsbt,xintegsttausbnu,xintegstelsbnu,
      .     xintegstupsbdow,xintegst2st1tt,xintegst2st1bb,
      .     xintegst2st1uu,xintegst2st1dd,xintegst2st1ee,
-     .     xintegst2st1nunu,xintegst2st1tautau,xintegst2st1startt)     
+     .     xintegst2st1nunu,xintegst2st1tautau,xintegst2st1startt)
 
-      implicit double precision (a-h,m,o-z)  
+      implicit double precision (a-h,m,o-z)
       integer nx1t,ny1t
 
       dimension xintegstopw(2,4),xintegstoph(2,4),xintegststau(2,2),
@@ -31129,7 +31782,7 @@ c --------------------------------------
             xmu1=0.D0
             xmu2=0.D0
             xmu3=gmsb(nj)**2/gmst(ni)**2
-            
+
             if(gmst(ni).gt.gmsb(nj)) then
                call SD_integ2(SD_stelsbnu,SD_ax,SD_bx,SD_ay,SD_by,
      .                     xmu1,xmu2,xmu3,nx1t,ny1t,sum)
@@ -31169,7 +31822,7 @@ c --------------------------------------
          call SD_integ2(SD_st2st1startt,SD_ax,SD_bx,SD_ay,SD_by,xmu1,
      .               xmu2,xmu3,nx1t,ny1t,sum)
          xintegst2st1startt=1.D0/32.D0/(2.D0*pi)**3*gmst(2)*sum
-      else 
+      else
          xintegst2st1startt=0.D0
       endif
 
@@ -31185,7 +31838,7 @@ c --------------------------------------
          call SD_integ2(SD_st2st1tt,SD_ax,SD_bx,SD_ay,SD_by,xmu1,
      .               xmu2,xmu3,nx1t,ny1t,sum)
          xintegst2st1tt=1.D0/32.D0/(2.D0*pi)**3*gmst(2)*sum
-      else 
+      else
          xintegst2st1tt=0.D0
       endif
 
@@ -31201,7 +31854,7 @@ c --------------------------------------
          call SD_integ2(SD_st2st1bb,SD_ax,SD_bx,SD_ay,SD_by,xmu1,
      .               xmu2,xmu3,nx1t,ny1t,sum)
          xintegst2st1bb=g2**2/32.D0/(2.D0*pi)**3*gmst(2)*sum*3.D0
-      else 
+      else
          xintegst2st1bb=0.D0
       endif
 
@@ -31217,7 +31870,7 @@ c --------------------------------------
          call SD_integ2(SD_st2st1uu,SD_ax,SD_bx,SD_ay,SD_by,xmu1,
      .               xmu2,xmu3,nx1t,ny1t,sum)
          xintegst2st1uu=g2**2/32.D0/(2.D0*pi)**3*gmst(2)*sum*3.D0
-      else 
+      else
          xintegst2st1uu=0.D0
       endif
 
@@ -31233,7 +31886,7 @@ c --------------------------------------
          call SD_integ2(SD_st2st1dd,SD_ax,SD_bx,SD_ay,SD_by,xmu1,
      .               xmu2,xmu3,nx1t,ny1t,sum)
          xintegst2st1dd=g2**2/32.D0/(2.D0*pi)**3*gmst(2)*sum*3.D0
-      else 
+      else
          xintegst2st1dd=0.D0
       endif
 
@@ -31249,7 +31902,7 @@ c --------------------------------------
          call SD_integ2(SD_st2st1ee,SD_ax,SD_bx,SD_ay,SD_by,xmu1,
      .               xmu2,xmu3,nx1t,ny1t,sum)
          xintegst2st1ee=g2**2/32.D0/(2.D0*pi)**3*gmst(2)*sum*1.D0
-      else 
+      else
          xintegst2st1ee=0.D0
       endif
 
@@ -31265,7 +31918,7 @@ c --------------------------------------
          call SD_integ2(SD_st2st1nunu,SD_ax,SD_bx,SD_ay,SD_by,xmu1,
      .               xmu2,xmu3,nx1t,ny1t,sum)
          xintegst2st1nunu=g2**2/32.D0/(2.D0*pi)**3*gmst(2)*sum*1.D0
-      else 
+      else
          xintegst2st1nunu=0.D0
       endif
 
@@ -31281,7 +31934,7 @@ c --------------------------------------
          call SD_integ2(SD_st2st1tautau,SD_ax,SD_bx,SD_ay,SD_by,xmu1,
      .               xmu2,xmu3,nx1t,ny1t,sum)
          xintegst2st1tautau=g2**2/32.D0/(2.D0*pi)**3*gmst(2)*sum*1.D0
-      else 
+      else
          xintegst2st1tautau=0.D0
       endif
 
@@ -31322,7 +31975,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(gmst(ni),0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -31363,7 +32016,7 @@ c --------------------------------------
 c -------------------------------------------------------------------- c
 c                           sbottom exchange
 c -------------------------------------------------------------------- c
-	
+
       stbchiwbb=0.D0
 
       do k=1,2
@@ -31384,16 +32037,16 @@ c --------------------------------------
 c                             top exchange
 c -------------------------------------------------------------------- c
 
-      stbchiwtt=vw**2/dt**2*( 
+      stbchiwtt=vw**2/dt**2*(
      .     dsqrt(xmut)*xmneut(nj)/gmst(ni)*atopr(ni,nj)*btopr(ni,nj)*
      .     (-4.D0)*(xmub+3.D0*y2+2.D0*y2**2/xmuw) +
      .     2.D0*btopr(ni,nj)**2*xmut*(y1+2.D0*y2*y3/xmuw) +
      .     2.D0*atopr(ni,nj)**2*(y1*(xmub-xmuw+4.D0*y2)+2.D0*y3*xmub+
      .     4.D0*y2*y3+1.D0/xmuw*(4.D0*y2**2*y1-2.D0*y2*y3*xmub)) )
-      
- 
 
- 
+
+
+
 c -------------------------------------------------------------------- c
 c                           chargino exchange
 c -------------------------------------------------------------------- c
@@ -31422,7 +32075,7 @@ c --------------------------------------
      .           dsqrt(xmub)*(
      .           (alstor(ni,k)*akstor(ni,l)*or(nj,k)*or(nj,l)+
      .            akstor(ni,k)*alstor(ni,l)*ol(nj,k)*ol(nj,l))*
-     .           xmchar(k)/gmst(ni) + 
+     .           xmchar(k)/gmst(ni) +
      .           (alstor(ni,k)*akstor(ni,l)*ol(nj,l)*ol(nj,k)+
      .            akstor(ni,k)*alstor(ni,l)*or(nj,l)*or(nj,k))*
      .           xmchar(l)/gmst(ni) ) +
@@ -31436,7 +32089,7 @@ c --------------------------------------
      .           (xmuw+xmuneut+2.D0*y3) )
          enddo
       enddo
-   
+
 
 
 c -------------------------------------------------------------------- c
@@ -31448,7 +32101,7 @@ c --------------------------------------
       do k=1,2
          do i=1,2
             stbchiwchib=stbchiwchib+4.D0*gwtb(ni,i)/dsqrt(2.D0)/
-     .           dsb(i)/dchi(k)*( 
+     .           dsb(i)/dchi(k)*(
      .           xmchar(k)/gmst(ni)*xmneut(nj)/gmst(ni)*
      .           (alstor(ni,k)*abot(i,nj)*or(nj,k)+
      .            akstor(ni,k)*bbot(i,nj)*ol(nj,k))*
@@ -31472,7 +32125,7 @@ c --------------------------------------
 
       stbchiwbt=0.d0
 
-        
+
       do i=1,2
          stbchiwbt=stbchiwbt+4.D0*vw*gwtb(ni,i)/dsqrt(2.D0)/dt/dsb(i)*(
      .        dsqrt(xmut)*xmneut(nj)/gmst(ni)*btopr(ni,nj)*abot(i,nj)*
@@ -31486,7 +32139,7 @@ c --------------------------------------
      .        (y1+xmub-1.D0/xmuw*y2*(y2+y3)) )
       end do
 
- 
+
 
 c -------------------------------------------------------------------- c
 c                      chargino top interference
@@ -31495,7 +32148,7 @@ c --------------------------------------
       stbchiwchit=0.D0
 
       do i=1,2,1
-         stbchiwchit=stbchiwchit+vw/dt/dchi(i)*( 
+         stbchiwchit=stbchiwchit+vw/dt/dchi(i)*(
      .        xmchar(i)/gmst(ni)*xmneut(nj)/gmst(ni)*
      .        atopr(ni,nj)*alstor(ni,i)*or(nj,i)*
      .        (-6.D0*y2-4.D0*y2**2/xmuw-2.D0*xmub) +
@@ -31533,7 +32186,7 @@ c ========================== neutralino_
 c ==================================================================== c
 
       double precision function SD_stbchihc(x1,x2)
-	
+
       implicit double precision (a-h,m,o-z)
 
       dimension db(2),dchi(2),gmst(2),xmuchar(2),amchar(2),xmchar(2),
@@ -31561,7 +32214,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(gmst(ni),0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -31572,7 +32225,7 @@ c --- the running couplings ---
       endif
 
       call SD_hcsbotstop(gctbr)
-      call SD_neutsbotbot(abot,bbot)     
+      call SD_neutsbotbot(abot,bbot)
       call SD_neutstoptop(atopr,btopr)
       call SD_higgschudb(chtbrunr,chtbrunl)
       call SD_charstopbot(alstor,akstor)
@@ -31585,7 +32238,7 @@ c --------------------------------------
       xmuw       = amw**2/gmst(ni)**2
       xmuneut    = amneut(nj)**2/gmst(ni)**2
       xmusb1     = asb1**2/gmst(ni)**2
-      xmusb2     = asb2**2/gmst(ni)**2     
+      xmusb2     = asb2**2/gmst(ni)**2
       xmuchar(1) = amchar(1)**2/gmst(ni)**2
       xmuchar(2) = amchar(2)**2/gmst(ni)**2
 
@@ -31620,14 +32273,14 @@ c --------------------------------------
 c                              top exchange
 c -------------------------------------------------------------------- c
 
-      stbchihctt=1.D0/dt**2*( 
+      stbchihctt=1.D0/dt**2*(
      .    dsqrt(xmut)*xmneut(nj)/gmst(ni)*
      .    (chtbrunr**2+chtbrunl**2)*atopr(ni,nj)*btopr(ni,nj)*
      .    2.D0*(2.D0*y1-x1) +
      .    (chtbrunr**2*atopr(ni,nj)**2+chtbrunl**2*btopr(ni,nj)**2)*
      .    (-2.D0*(xmuneut*x1-xmuneut*y1+y1)+x1*x2) +
      .    (chtbrunr**2*btopr(ni,nj)**2+chtbrunl**2*atopr(ni,nj)**2)*
-     .    xmut*2.D0*y1 + 
+     .    xmut*2.D0*y1 +
      .    chtbrunr*chtbrunl*(atopr(ni,nj)**2+btopr(ni,nj)**2)*
      .    dsqrt(xmub*xmut)*2.D0*(x2-2.D0*xmuneut) +
      .    chtbrunr*chtbrunl*atopr(ni,nj)*btopr(ni,nj)*
@@ -31731,10 +32384,10 @@ c --------------------------------------
      .        dsqrt(xmut)*xmneut(nj)/gmst(ni)*
      .        (alstor(ni,k)*atopr(ni,nj)*ql(nj,k)*chtbrunl+
      .         akstor(ni,k)*btopr(ni,nj)*qr(nj,k)*chtbrunr)*
-     .        (x1-2.D0*xmub) + 
+     .        (x1-2.D0*xmub) +
      .        (alstor(ni,k)*btopr(ni,nj)*ql(nj,k)*chtbrunl+
      .         akstor(ni,k)*atopr(ni,nj)*qr(nj,k)*chtbrunr)*
-     .        (xmuneut*(x1-2.D0*xmub)-x2*(x1-xmub)+2.D0*y1) + 
+     .        (xmuneut*(x1-2.D0*xmub)-x2*(x1-xmub)+2.D0*y1) +
      .        dsqrt(xmut)*xmchar(k)/gmst(ni)*
      .        (akstor(ni,k)*btopr(ni,nj)*ql(nj,k)*chtbrunr+
      .         alstor(ni,k)*atopr(ni,nj)*qr(nj,k)*chtbrunl)*2.D0*y1
@@ -31747,7 +32400,7 @@ c --------------------------------------
      .        dsqrt(xmub)*xmchar(k)/gmst(ni)*(x2-2.D0*xmuneut) +
      .        (alstor(ni,k)*btopr(ni,nj)*ql(nj,k)*chtbrunr+
      .         akstor(ni,k)*atopr(ni,nj)*qr(nj,k)*chtbrunl)*
-     .        dsqrt(xmub*xmut)*(2.D0*y1-x2) + 
+     .        dsqrt(xmub*xmut)*(2.D0*y1-x2) +
      .        (akstor(ni,k)*atopr(ni,nj)*ql(nj,k)*chtbrunl+
      .         alstor(ni,k)*btopr(ni,nj)*qr(nj,k)*chtbrunr)*
      .        dsqrt(xmut*xmub)*xmchar(k)/gmst(ni)*xmneut(nj)/gmst(ni)*
@@ -31798,7 +32451,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(gmst(ni),0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -31841,7 +32494,7 @@ c ------------------------------
      .       +(alstor(ni,k)*alstor(ni,l)*blto(nj,k)*blto(nj,l)
      .        +akstor(ni,k)*akstor(ni,l)*alto(nj,k)*alto(nj,l))*
      .        ((1.D0-x1)*(1.D0-x2)-xmustau(nj)+xmub*(xmustau(nj)+x1-x2
-     .         -xmub)) 
+     .         -xmub))
      .       +(alstor(ni,k)*akstor(ni,l)*blto(nj,k)*blto(nj,l)
      .        +akstor(ni,k)*alstor(ni,l)*alto(nj,k)*alto(nj,l))*
      .        dsqrt(xmub)*xmchar(l)/gmst(ni)*(-1.D0-xmub+xmustau(nj)+x1)
@@ -31888,7 +32541,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(gmst(ni),0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -31984,7 +32637,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(gmst(ni),0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -32027,7 +32680,7 @@ c ------------------------------
      .       +(alstor(ni,k)*alstor(ni,l)*ble(nj,k)*ble(nj,l)
      .        +akstor(ni,k)*akstor(ni,l)*ale(nj,k)*ale(nj,l))*
      .        ((1.D0-x1)*(1.D0-x2)-xmusel(nj)+xmub*(xmusel(nj)+x1-x2
-     .         -xmub)) 
+     .         -xmub))
      .       +(alstor(ni,k)*akstor(ni,l)*ble(nj,k)*ble(nj,l)
      .        +akstor(ni,k)*alstor(ni,l)*ale(nj,k)*ale(nj,l))*
      .        dsqrt(xmub)*xmchar(l)/gmst(ni)*(-1.D0-xmub+xmusel(nj)+x1)
@@ -32073,7 +32726,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(gmst(ni),0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -32163,7 +32816,7 @@ c --- the running couplings ---
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
          gs2   = alsew*4.D0*pi
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(gmst(ni),0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -32182,7 +32835,7 @@ c --- the running couplings ---
 
 c -----------------------------
 
-      do k=1,4,1 
+      do k=1,4,1
          xmuneut(k) = amneut(k)**2/gmst(ni)**2
       end do
       xmuchar(1) = amchar(1)**2/gmst(ni)**2
@@ -32392,7 +33045,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          gs21 = alsew*4.D0*pi
          gs22 = gs21
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          gs21 = SD_alphascall(gmst(ni),inumloop)*4.D0*pi
          gs22 = gs21
       elseif(scalechoice.eq.3.D0) then
@@ -32403,7 +33056,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(gmst(ni),0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -32416,7 +33069,7 @@ c --- the running couplings ---
       call SD_hcsbotstop(gctbr)
       call SD_higgschudb(chtbrunr,chtbrunl)
       call SD_neutstoptop(atopr,btopr)
-      call SD_neutsbotbot(abot,bbot)      
+      call SD_neutsbotbot(abot,bbot)
 
 c -------------------------------------------------------------------- c
 
@@ -32446,18 +33099,18 @@ c --------------------------------------
 c                              W exchange
 c -------------------------------------------------------------------- c
 
-      stsbotww=3.D0*g2**2/4.D0/dw(nj)**2*gwtb(ni,nj)**2*( 
-     .     4.D0*(1.D0+x1*x2-x1-x2-xmusb(nj)) 
-     .   + xmut*(3.D0-3.D0*x1+x2+xmusb(nj)-xmut+2.D0*xmub) 
-     .   + xmub*(3.D0-3.D0*x2+x1+xmusb(nj)-xmub) 
+      stsbotww=3.D0*g2**2/4.D0/dw(nj)**2*gwtb(ni,nj)**2*(
+     .     4.D0*(1.D0+x1*x2-x1-x2-xmusb(nj))
+     .   + xmut*(3.D0-3.D0*x1+x2+xmusb(nj)-xmut+2.D0*xmub)
+     .   + xmub*(3.D0-3.D0*x2+x1+xmusb(nj)-xmub)
      .   + xmut/xmuw**2*(1.D0-xmusb(nj))**2*
      .     (-1.D0+x1+x2+xmusb(nj)-xmut+2.D0*xmub)
      .   + xmub/xmuw**2*(1.D0-xmusb(nj))**2*
-     .     (-1.D0+x1+x2+xmusb(nj)-xmub) 
+     .     (-1.D0+x1+x2+xmusb(nj)-xmub)
      .   + 2.D0*xmut/xmuw*(1.D0-xmusb(nj))*
-     .     (-x1+x2-xmut-1.D0+xmusb(nj)+2.D0*xmub) 
+     .     (-x1+x2-xmut-1.D0+xmusb(nj)+2.D0*xmub)
      .   + 2.D0*xmub/xmuw*(1.D0-xmusb(nj))*
-     .     (-x2+x1-xmub-1.D0+xmusb(nj)) ) 
+     .     (-x2+x1-xmub-1.D0+xmusb(nj)) )
 
 c -------------------------------------------------------------------- c
 c                             H+ exchange
@@ -32511,7 +33164,7 @@ c --------------------------------------
      .         +xmneut(l)/gmst(ni)*
      .          (abot(nj,k)*bbot(nj,l)*atopr(ni,k)*atopr(ni,l)+
      .           bbot(nj,k)*abot(nj,l)*btopr(ni,k)*btopr(ni,l)) )
-     .         +dsqrt(xmut)*(-1.D0+x2+xmusb(nj)-xmub-xmut)* 
+     .         +dsqrt(xmut)*(-1.D0+x2+xmusb(nj)-xmub-xmut)*
      .         (xmneut(k)/gmst(ni)*
      .          (abot(nj,k)*abot(nj,l)*btopr(ni,k)*atopr(ni,l)+
      .           bbot(nj,k)*bbot(nj,l)*atopr(ni,k)*btopr(ni,l))
@@ -32627,7 +33280,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(gmst(ni),0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -32658,9 +33311,9 @@ c --------------------------------------
 c                             W exchange
 c -------------------------------------------------------------------- c
 
-      ststauww=1.D0/4.D0/dw(nj)**2*gwtb(ni,nj)**2*( 
-     .     4.D0*(1.D0+x1*x2-x1-x2-xmusb(nj)) + 
-     .     xmutau*(3.D0-3.D0*x1+x2+xmusb(nj)-xmutau) 
+      ststauww=1.D0/4.D0/dw(nj)**2*gwtb(ni,nj)**2*(
+     .     4.D0*(1.D0+x1*x2-x1-x2-xmusb(nj)) +
+     .     xmutau*(3.D0-3.D0*x1+x2+xmusb(nj)-xmutau)
      .     +xmutau/xmuw**2*(1.D0-xmusb(nj))**2*(-1.D0+xmusb(nj)+x1+x2
      .      -xmutau)
      .     +2.D0*xmutau/xmuw*(1.D0-xmusb(nj))*(-x1+x2-xmutau-1.D0+
@@ -32680,7 +33333,7 @@ c --------------------------------------
       ststauhw=-gctbr(ni,nj)*gwtb(ni,nj)*amw/gmst(ni)/dw(nj)/dch(nj)*
      .      dsqrt(xmutau)*chctaunur*(
      .      1.D0+x1-x2+xmutau-xmusb(nj)+
-     .      1.D0/xmuw*(xmusb(nj)-1.D0)*(-xmutau+x1+x2-1.D0+xmusb(nj))) 
+     .      1.D0/xmuw*(xmusb(nj)-1.D0)*(-xmutau+x1+x2-1.D0+xmusb(nj)))
 
 c -------------------------------------------------------------------- c
 
@@ -32764,7 +33417,7 @@ c -- the Yukawa coupling --
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
          gs2 = alsew*4.D0*pi
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(ast2,0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -32818,7 +33471,7 @@ c --------------------------------------
      .         +xmneut(l)/ast2*
      .          (btopr(1,k)*atopr(1,l)*atopr(2,k)*atopr(2,l)+
      .           atopr(1,k)*btopr(1,l)*btopr(2,k)*btopr(2,l)) )
-     .         +dsqrt(xmut)*(-1.D0+x1+xmust1-2.D0*xmut)* 
+     .         +dsqrt(xmut)*(-1.D0+x1+xmust1-2.D0*xmut)*
      .         (xmneut(k)/ast2*
      .          (btopr(1,k)*btopr(1,l)*btopr(2,k)*atopr(2,l)+
      .           atopr(1,k)*atopr(1,l)*atopr(2,k)*btopr(2,l))
@@ -32901,7 +33554,7 @@ c -- the Yukawa coupling --
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
          gs2 = alsew*4.D0*pi
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(ast2,0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -32998,7 +33651,7 @@ c --------------------------------------
      .         +xmneut(l)/ast2*
      .          (atopr(1,k)*btopr(1,l)*atopr(2,k)*atopr(2,l)+
      .           btopr(1,k)*atopr(1,l)*btopr(2,k)*btopr(2,l)) )
-     .         +dsqrt(xmut)*(-1.D0+x1+xmust1-2.D0*xmut)* 
+     .         +dsqrt(xmut)*(-1.D0+x1+xmust1-2.D0*xmut)*
      .         (xmneut(k)/ast2*
      .          (atopr(1,k)*atopr(1,l)*btopr(2,k)*atopr(2,l)+
      .           btopr(1,k)*btopr(1,l)*atopr(2,k)*btopr(2,l))
@@ -33070,7 +33723,7 @@ c --------------------------------------
      .        /dhl/ast2*amz**2/amw*glttr(1,2)+hhttr/dsqrt(2.D0)/dneut(l)
      .        /dhh/ast2*amz**2/amw*ghttr(1,2))*(
      .        (atopr(1,l)*btopr(2,l)+atopr(2,l)*btopr(1,l))*
-     .        xmneut(l)/ast2*(x1+x2+xmust1-1.D0-4.D0*xmut) 
+     .        xmneut(l)/ast2*(x1+x2+xmust1-1.D0-4.D0*xmut)
      .        +(atopr(1,l)*atopr(2,l)+btopr(2,l)*btopr(1,l))*
      .        dsqrt(xmut)*(2.D0*x1-1.D0+xmust1-4.D0*xmut) )
      .        +2.D0*hattr/dsqrt(2.D0)/dneut(l)/dha/ast2*amz**2/amw*
@@ -33141,7 +33794,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(ast2,0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -33161,7 +33814,7 @@ c --- the running couplings ---
             blstor2(i,j) = akstor(i,j)
          end do
       end do
-     
+
       call SD_phibotbot(hlbbr,hhbbr,habbr)
 
 c --- several definitions ---
@@ -33241,7 +33894,7 @@ c --------------------------------------
      .         +xmchar(l)/ast2*
      .          (alstor2(1,k)*blstor2(1,l)*alstor1(2,k)*alstor1(2,l)+
      .           blstor2(1,k)*alstor2(1,l)*blstor1(2,k)*blstor1(2,l)) )
-     .         +dsqrt(xmub)*(-1.D0+x1+xmust1-2.D0*xmub)* 
+     .         +dsqrt(xmub)*(-1.D0+x1+xmust1-2.D0*xmub)*
      .         (xmchar(k)/ast2*
      .          (alstor2(1,k)*alstor2(1,l)*blstor1(2,k)*alstor1(2,l)+
      .           blstor2(1,k)*blstor2(1,l)*alstor1(2,k)*blstor1(2,l))
@@ -33294,7 +33947,7 @@ c --------------------------------------
      .        /dhl/ast2*amz**2/amw*glttr(1,2)+hhbbr/dsqrt(2.D0)/dchi(l)
      .        /dhh/ast2*amz**2/amw*ghttr(1,2))*(
      .        (alstor2(1,l)*blstor1(2,l)+alstor1(2,l)*blstor2(1,l))*
-     .        xmchar(l)/ast2*(x1+x2+xmust1-1.D0-4.D0*xmub) 
+     .        xmchar(l)/ast2*(x1+x2+xmust1-1.D0-4.D0*xmub)
      .        +(alstor2(1,l)*alstor1(2,l)+blstor1(2,l)*blstor2(1,l))*
      .        dsqrt(xmub)*(2.D0*x1-1.D0+xmust1-4.D0*xmub) )
      .        +2.D0*habbr/dsqrt(2.D0)/dchi(l)/dha/ast2*amz**2/amw*
@@ -33353,7 +34006,7 @@ c ======================================
       x3  = 2.D0-x1-x2
       dz  = 1.D0-x3+xmust1-xmuz
 
-      vzz = vzztoptop 
+      vzz = vzztoptop
       azz = azztoptop
 
 c -------------------------------------------------------------------- c
@@ -33361,7 +34014,7 @@ c                              Z exchang
 c -------------------------------------------------------------------- c
 
       st2st1zz = 1.D0/4.D0/cw**2/dz**2*aztt12**2*
-     .           2.D0*(vzz**2+azz**2)*4.D0*(1.D0+x1*x2-x1-x2-xmust1) 
+     .           2.D0*(vzz**2+azz**2)*4.D0*(1.D0+x1*x2-x1-x2-xmust1)
 
 c ----------------------------------------------------------------- c
 
@@ -33493,7 +34146,7 @@ c                              Z exchang
 c -------------------------------------------------------------------- c
 
       st2st1zz = 1.D0/4.D0/cw**2/dz**2*aztt12**2*
-     .     2.D0*(vzz**2+azz**2)*4.D0*(1.D0+x1*x2-x1-x2-xmust1) 
+     .     2.D0*(vzz**2+azz**2)*4.D0*(1.D0+x1*x2-x1-x2-xmust1)
 
 c -------------------------------------------------------------------- c
 
@@ -33538,7 +34191,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          scalb = yb/dsqrt(g2)
          scalt = yt/dsqrt(g2)
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(ast2,0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -33575,7 +34228,7 @@ c                              Z exchang
 c -------------------------------------------------------------------- c
 
       st2st1zz = 1.D0/4.D0/cw**2/dz**2*aztt12**2*(
-     .   1.D0/xmuz**2*(4.D0*(vzz**2-azz**2)*xmutau*(1.D0-(x1+x2)*(1.D0  
+     .   1.D0/xmuz**2*(4.D0*(vzz**2-azz**2)*xmutau*(1.D0-(x1+x2)*(1.D0
      .   -xmust1)**2+xmust1*(-xmust1**2+3.D0*xmust1-3.D0))+
      .   2.D0*(vzz**2+azz**2)*(1.D0-xmust1)**2*(2.D0*xmutau*(xmust1
      .   +x1+x2-1.D0)) )
@@ -33695,7 +34348,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          gs21 = alsew*4.D0*pi
          gs22 = gs21
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          gs21 = SD_alphascall(asb1,inumloop)*4.D0*pi
          gs22 = SD_alphascall(asb2,inumloop)*4.D0*pi
       elseif(scalechoice.eq.3.D0) then
@@ -33717,7 +34370,7 @@ c --- the running couplings ---
 c -------------------------------------------------------------------- c
 c  sbottom1 --> chi0_1/chi0_2/chi0_3/chi0_4 + bottom
 
-      if(scalechoice.eq.2.D0) then         
+      if(scalechoice.eq.2.D0) then
          call SD_runmass(asb1,0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -33754,18 +34407,18 @@ c --- the QCD corrections ---
      .           (asb1**2-amb**2-amneut(j)**2)
      .           -2.D0*(bbot(1,j)*SD_grbneut(1,j,amuv,amuvdiv,lamv)
      .                 +abot(1,j)*SD_glbneut(1,j,amuv,amuvdiv,lamv))*
-     .           amb*xmneut(j))*SD_lamb(amb/asb1,amneut(j)/asb1) 
+     .           amb*xmneut(j))*SD_lamb(amb/asb1,amneut(j)/asb1)
      .           +g2/(6.D0*pi**2*asb1)*gs21/(4.D0*pi)*
      .           SD_corrreali(amb,amneut(j),asb1,lamv,1,jsign,1,j,2)
          else
             qcdsb1neut(j) = 0.D0
          endif
       end do
-      
+
 c -------------------------------------------------------------------- c
 c  sbottom2 --> chi0_1/chi0_2/chi0_3/chi0_4 + bottom
 
-      if(scalechoice.eq.2.D0) then         
+      if(scalechoice.eq.2.D0) then
          call SD_runmass(asb2,0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -33803,18 +34456,18 @@ c --- the QCD corrections ---
      .           (asb2**2-amb**2-amneut(j)**2)
      .           -2.D0*(bbot(2,j)*SD_grbneut(2,j,amuv,amuvdiv,lamv)
      .                 +abot(2,j)*SD_glbneut(2,j,amuv,amuvdiv,lamv))*
-     .           amb*xmneut(j))*SD_lamb(amb/asb2,amneut(j)/asb2) 
+     .           amb*xmneut(j))*SD_lamb(amb/asb2,amneut(j)/asb2)
      .           +g2/(6.D0*pi**2*asb2)*gs22/(4.D0*pi)*
      .           SD_corrreali(amb,amneut(j),asb2,lamv,1,jsign,2,j,2)
          else
             qcdsb2neut(j) = 0.D0
          endif
       end do
-      
+
 c -------------------------------------------------------------------- c
 c  sbottom1 --> chi-_1/chi-_2 + top
 
-      if(scalechoice.eq.2.D0) then         
+      if(scalechoice.eq.2.D0) then
          call SD_runmass(asb1,0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -33853,7 +34506,7 @@ c --- the QCD corrections ---
      .           (asb1**2-amt**2-amchar(j)**2)
      .           -2.D0*(aksbot(1,j)*SD_grbchar(1,j,amuv,amuvdiv,lamv)
      .                 +alsbot(1,j)*SD_glbchar(1,j,amuv,amuvdiv,lamv))*
-     .           amt*xmchar(j))*SD_lamb(amt/asb1,amchar(j)/asb1) 
+     .           amt*xmchar(j))*SD_lamb(amt/asb1,amchar(j)/asb1)
      .           +g2/(6.D0*pi**2*asb1)*gs21/(4.D0*pi)*
      .           SD_corrreali(amt,amchar(j),asb1,lamv,2,jsign,1,j,2)
          else
@@ -33864,7 +34517,7 @@ c --- the QCD corrections ---
 c -------------------------------------------------------------------- c
 c  sbottom2 --> chi-_1/chi-_2 + top
 
-      if(scalechoice.eq.2.D0) then         
+      if(scalechoice.eq.2.D0) then
          call SD_runmass(asb2,0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -33903,7 +34556,7 @@ c --- the QCD corrections ---
      .           (asb2**2-amt**2-amchar(j)**2)
      .           -2.D0*(aksbot(2,j)*SD_grbchar(2,j,amuv,amuvdiv,lamv)
      .                 +alsbot(2,j)*SD_glbchar(2,j,amuv,amuvdiv,lamv))*
-     .           amt*xmchar(j))*SD_lamb(amt/asb2,amchar(j)/asb2) 
+     .           amt*xmchar(j))*SD_lamb(amt/asb2,amchar(j)/asb2)
      .           +g2/(6.D0*pi**2*asb2)*gs22/(4.D0*pi)*
      .           SD_corrreali(amt,amchar(j),asb2,lamv,2,jsign,2,j,2)
          else
@@ -33917,14 +34570,14 @@ c  sbottom1 --> gluino + bottom
       if(asb1.gt.(mgluino+amb)) then
          sb1glui = 8.D0*gs21*((asb1**2-amb**2-mgluino**2)+4.D0*amb*
      .        mgluino*dsin(theb)*dcos(theb))*
-     .        SD_lamb(amb/asb1,mgluino/asb1)/(16.D0*pi*asb1)/3.D0  
+     .        SD_lamb(amb/asb1,mgluino/asb1)/(16.D0*pi*asb1)/3.D0
       else
          sb1glui = 0.D0
       endif
 
 c --- the QCD corrections ---
 
-      if(scalechoice.eq.2.D0) then         
+      if(scalechoice.eq.2.D0) then
          amurefer = asb1
       endif
 
@@ -33973,7 +34626,7 @@ c  sbottom2 --> gluino + bottom
 
 c --- the QCD corrections ---
 
-      if(scalechoice.eq.2.D0) then         
+      if(scalechoice.eq.2.D0) then
          amurefer = asb2
       endif
 
@@ -34018,7 +34671,7 @@ c  sbottom1 --> H- + stop1/2
          runmt = rmtc
          runmb = rmbc
          amurefer = amuref
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(asb1,0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -34079,7 +34732,7 @@ c sbottom2 --> Higgs + sbottom1
          runmt = rmtc
          runmb = rmbc
          amurefer = amuref
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(asb2,0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -34183,7 +34836,7 @@ c --- the QCD corrections ---
          alp = gs22/(4.D0*pi)
          delta1a = dsqrt(2.D0)*amz**2*gabbr*
      .        SD_gvirtgl(asb2,ama,asb1,lamv,amuv)
-         delta2a = 0.D0 
+         delta2a = 0.D0
          delta3a = SD_botneut1719(3,amuv)
          delta4a = SD_dcounterneut(asb1,asb2,runmb,theb,mgluino,amuv,
      .                          amuvdiv,lamv,2,3)
@@ -34205,7 +34858,7 @@ c  sbottom2 --> H- + stop1/2
          runmt = rmtc
          runmb = rmbc
          amurefer = amuref
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(asb2,0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -34282,7 +34935,7 @@ c -- the QCD corrections --
          del5 = SD_realgluonem(asb2,asb1,amzp,lamv)
          qcdsb2zbot =  g2/16.D0/pi/amzp**2*asb2**3*(gzbb(2,1)/2.D0/cw)*
      .        SD_lamb(asb1/asb2,amzp/asb2)**3*(2.D0*del1+2.D0*del2
-     .        +2.D0*del3+2.D0*del4) + 
+     .        +2.D0*del3+2.D0*del4) +
      .        g2/3.D0/pi**2/asb2*alp*(gzbb(2,1)/(2.D0*cw))**2*del5
       else
          qcdsb2zbot = 0.D0
@@ -34319,7 +34972,7 @@ c -- the QCD corrections --
             qcdsb1wst(i) = g2/16.D0/pi/amwp**2*asb1**3*
      .           (gwtb(i,1)/dsqrt(2.D0))*
      .           SD_lamb(gmst(i)/asb1,amwp/asb1)**3*(2.D0*del1+2.D0*del2
-     .           +2.D0*del3+2.D0*del4) + 
+     .           +2.D0*del3+2.D0*del4) +
      .           g2/3.D0/pi**2/asb1*alp*(gwtb(i,1)/dsqrt(2.D0))**2*del5
          else
             qcdsb1wst(i) = 0.D0
@@ -34360,7 +35013,7 @@ c -- the QCD corrections --
             qcdsb2wst(i) = g2/16.D0/pi/amwp**2*asb2**3*
      .           (gwtb(i,2)/dsqrt(2.D0))*
      .           SD_lamb(gmst(i)/asb2,amwp/asb2)**3*(2.D0*del1+2.D0*del2
-     .           +2.D0*del3+2.D0*del4) + 
+     .           +2.D0*del3+2.D0*del4) +
      .           g2/3.D0/pi**2/asb2*alp*(gwtb(i,2)/dsqrt(2.D0))**2*del5
          else
             qcdsb2wst(i) = 0.D0
@@ -34380,7 +35033,7 @@ c ======================================
      .     xintegsbupstdow,xintegsbstau,xintegsbsntau,xintegsbsel,
      .     xintegsbsnel)
 
-      implicit double precision (a-h,m,o-z)  
+      implicit double precision (a-h,m,o-z)
       integer nx1t,ny1t
 
       dimension xintegsbtstsb(2,2),xintegsbtbstb(2,2),
@@ -34575,7 +35228,7 @@ c --------------------------------------
             xmu1=0.D0
             xmu2=0.D0
             xmu3=gmst(nj)**2/gmsb(ni)**2
-            
+
             if(gmsb(ni).gt.gmst(nj)) then
                call SD_integ2(SD_sbelstnu,SD_ax,SD_bx,SD_ay,SD_by,xmu1,
      .              xmu2,xmu3,nx1t,ny1t,sum)
@@ -34615,7 +35268,7 @@ c --------------------------------------
          call SD_integ2(SD_sb2sb1starbb,SD_ax,SD_bx,SD_ay,SD_by,xmu1,
      .        xmu2,xmu3,nx1t,ny1t,sum)
          xintegsb2sb1starbb=1.D0/32.D0/(2.D0*pi)**3*gmsb(2)*sum
-      else 
+      else
          xintegsb2sb1starbb=0.D0
       endif
 
@@ -34631,7 +35284,7 @@ c --------------------------------------
          call SD_integ2(SD_sb2sb1bb,SD_ax,SD_bx,SD_ay,SD_by,xmu1,xmu2,
      .        xmu3,nx1t,ny1t,sum)
          xintegsb2sb1bb=1.D0/32.D0/(2.D0*pi)**3*gmsb(2)*sum
-      else 
+      else
          xintegsb2sb1bb=0.D0
       endif
 
@@ -34647,7 +35300,7 @@ c --------------------------------------
          call SD_integ2(SD_sb2sb1tt,SD_ax,SD_bx,SD_ay,SD_by,xmu1,xmu2,
      .        xmu3,nx1t,ny1t,sum)
          xintegsb2sb1tt=g2**2/32.D0/(2.D0*pi)**3*gmsb(2)*sum*3.D0
-      else 
+      else
          xintegsb2sb1tt=0.D0
       endif
 
@@ -34663,7 +35316,7 @@ c --------------------------------------
          call SD_integ2(SD_sb2sb1uu,SD_ax,SD_bx,SD_ay,SD_by,xmu1,xmu2,
      .        xmu3,nx1t,ny1t,sum)
          xintegsb2sb1uu=g2**2/32.D0/(2.D0*pi)**3*gmsb(2)*sum*3.D0
-      else 
+      else
          xintegsb2sb1uu=0.D0
       endif
 
@@ -34679,7 +35332,7 @@ c --------------------------------------
          call SD_integ2(SD_sb2sb1dd,SD_ax,SD_bx,SD_ay,SD_by,xmu1,xmu2,
      .        xmu3,nx1t,ny1t,sum)
          xintegsb2sb1dd=g2**2/32.D0/(2.D0*pi)**3*gmsb(2)*sum*3.D0
-      else 
+      else
          xintegsb2sb1dd=0.D0
       endif
 
@@ -34695,7 +35348,7 @@ c --------------------------------------
          call SD_integ2(SD_sb2sb1ee,SD_ax,SD_bx,SD_ay,SD_by,xmu1,xmu2,
      .        xmu3,nx1t,ny1t,sum)
          xintegsb2sb1ee=g2**2/32.D0/(2.D0*pi)**3*gmsb(2)*sum*1.D0
-      else 
+      else
          xintegsb2sb1ee=0.D0
       endif
 
@@ -34711,7 +35364,7 @@ c --------------------------------------
          call SD_integ2(SD_sb2sb1nunu,SD_ax,SD_bx,SD_ay,SD_by,xmu1,
      .        xmu2,xmu3,nx1t,ny1t,sum)
          xintegsb2sb1nunu=g2**2/32.D0/(2.D0*pi)**3*gmsb(2)*sum*1.D0
-      else 
+      else
          xintegsb2sb1nunu=0.D0
       endif
 
@@ -34727,7 +35380,7 @@ c --------------------------------------
          call SD_integ2(SD_sb2sb1tautau,SD_ax,SD_bx,SD_ay,SD_by,xmu1,
      .        xmu2,xmu3,nx1t,ny1t,sum)
          xintegsb2sb1tautau=g2**2/32.D0/(2.D0*pi)**3*gmsb(2)*sum*1.D0
-      else 
+      else
          xintegsb2sb1tautau=0.D0
       endif
 
@@ -34766,7 +35419,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(gmsb(ni),0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -34809,7 +35462,7 @@ c ------------------------------
      .       +(alsbot(ni,k)*alsbot(ni,l)*alto(nj,k)*alto(nj,l)
      .        +aksbot(ni,k)*aksbot(ni,l)*blto(nj,k)*blto(nj,l))*
      .        ((1.D0-x1)*(1.D0-x2)-xmustau(nj)+xmut*(xmustau(nj)+x1-x2
-     .         -xmut)) 
+     .         -xmut))
      .       +(alsbot(ni,k)*aksbot(ni,l)*alto(nj,k)*alto(nj,l)
      .        +aksbot(ni,k)*alsbot(ni,l)*blto(nj,k)*blto(nj,l))*
      .        dsqrt(xmut)*xmchar(l)/gmsb(ni)*(-1.D0-xmut+xmustau(nj)+x1)
@@ -34856,7 +35509,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(gmsb(ni),0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -34952,7 +35605,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(gmsb(ni),0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -34995,7 +35648,7 @@ c ------------------------------
      .       +(alsbot(ni,k)*alsbot(ni,l)*ale(nj,k)*ale(nj,l)
      .        +aksbot(ni,k)*aksbot(ni,l)*ble(nj,k)*ble(nj,l))*
      .        ((1.D0-x1)*(1.D0-x2)-xmusel(nj)+xmut*(xmusel(nj)+x1-x2
-     .         -xmut)) 
+     .         -xmut))
      .       +(alsbot(ni,k)*aksbot(ni,l)*ale(nj,k)*ale(nj,l)
      .        +aksbot(ni,k)*alsbot(ni,l)*ble(nj,k)*ble(nj,l))*
      .        dsqrt(xmut)*xmchar(l)/gmsb(ni)*(-1.D0-xmut+xmusel(nj)+x1)
@@ -35041,7 +35694,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(gmsb(ni),0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -35131,7 +35784,7 @@ c --- the running couplings ---
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
          gs2   = alsew*4.D0*pi
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(gmsb(ni),0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -35150,7 +35803,7 @@ c --- the running couplings ---
 
 c -----------------------------
 
-      do k=1,4,1 
+      do k=1,4,1
          xmuneut(k) = amneut(k)**2/gmsb(ni)**2
       end do
       xmuchar(1) = amchar(1)**2/gmsb(ni)**2
@@ -35360,7 +36013,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          gs21 = alsew*4.D0*pi
          gs22 = gs21
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          gs21 = SD_alphascall(gmsb(ni),inumloop)*4.D0*pi
          gs22 = gs21
       elseif(scalechoice.eq.3.D0) then
@@ -35371,7 +36024,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(gmsb(ni),0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -35384,7 +36037,7 @@ c --- the running couplings ---
       call SD_hcsbotstop(gctbr)
       call SD_higgschudb(chtbrunr,chtbrunl)
       call SD_neutstoptop(atopr,btopr)
-      call SD_neutsbotbot(abot,bbot)      
+      call SD_neutsbotbot(abot,bbot)
 
 c -------------------------------------------------------------------- c
 
@@ -35414,18 +36067,18 @@ c --------------------------------------
 c                              W exchange
 c -------------------------------------------------------------------- c
 
-      stsbotww=3.D0*g2**2/4.D0/dw(nj)**2*gwtb(nj,ni)**2*( 
-     .     4.D0*(1.D0+x1*x2-x1-x2-xmust(nj)) 
-     .   + xmub*(3.D0-3.D0*x1+x2+xmust(nj)-xmub+2.D0*xmut) 
-     .   + xmut*(3.D0-3.D0*x2+x1+xmust(nj)-xmut) 
+      stsbotww=3.D0*g2**2/4.D0/dw(nj)**2*gwtb(nj,ni)**2*(
+     .     4.D0*(1.D0+x1*x2-x1-x2-xmust(nj))
+     .   + xmub*(3.D0-3.D0*x1+x2+xmust(nj)-xmub+2.D0*xmut)
+     .   + xmut*(3.D0-3.D0*x2+x1+xmust(nj)-xmut)
      .   + xmub/xmuw**2*(1.D0-xmust(nj))**2*
      .     (-1.D0+x1+x2+xmust(nj)-xmub+2.D0*xmut)
      .   + xmut/xmuw**2*(1.D0-xmust(nj))**2*
-     .     (-1.D0+x1+x2+xmust(nj)-xmut) 
+     .     (-1.D0+x1+x2+xmust(nj)-xmut)
      .   + 2.D0*xmub/xmuw*(1.D0-xmust(nj))*
-     .     (-x1+x2-xmub-1.D0+xmust(nj)+2.D0*xmut) 
+     .     (-x1+x2-xmub-1.D0+xmust(nj)+2.D0*xmut)
      .   + 2.D0*xmut/xmuw*(1.D0-xmust(nj))*
-     .     (-x2+x1-xmut-1.D0+xmust(nj)) ) 
+     .     (-x2+x1-xmut-1.D0+xmust(nj)) )
 
 c -------------------------------------------------------------------- c
 c                             H+ exchange
@@ -35479,7 +36132,7 @@ c --------------------------------------
      .         +xmneut(l)/gmsb(ni)*
      .          (atopr(nj,k)*btopr(nj,l)*abot(ni,k)*abot(ni,l)+
      .           btopr(nj,k)*atopr(nj,l)*bbot(ni,k)*bbot(ni,l)) )
-     .         +dsqrt(xmub)*(-1.D0+x2+xmust(nj)-xmut-xmub)* 
+     .         +dsqrt(xmub)*(-1.D0+x2+xmust(nj)-xmut-xmub)*
      .         (xmneut(k)/gmsb(ni)*
      .          (atopr(nj,k)*atopr(nj,l)*bbot(ni,k)*abot(ni,l)+
      .           btopr(nj,k)*btopr(nj,l)*abot(ni,k)*bbot(ni,l))
@@ -35595,7 +36248,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(gmsb(ni),0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -35626,9 +36279,9 @@ c --------------------------------------
 c                             W exchange
 c -------------------------------------------------------------------- c
 
-      ststauww=1.D0/4.D0/dw(nj)**2*(-gwtb(nj,ni))**2*( 
-     .     4.D0*(1.D0+x1*x2-x1-x2-xmust(nj)) + 
-     .     xmutau*(3.D0-3.D0*x1+x2+xmust(nj)-xmutau) 
+      ststauww=1.D0/4.D0/dw(nj)**2*(-gwtb(nj,ni))**2*(
+     .     4.D0*(1.D0+x1*x2-x1-x2-xmust(nj)) +
+     .     xmutau*(3.D0-3.D0*x1+x2+xmust(nj)-xmutau)
      .     +xmutau/xmuw**2*(1.D0-xmust(nj))**2*(-1.D0+xmust(nj)+x1+x2
      .      -xmutau)
      .     +2.D0*xmutau/xmuw*(1.D0-xmust(nj))*(-x1+x2-xmutau-1.D0+
@@ -35648,7 +36301,7 @@ c --------------------------------------
       ststauhw=-gctbr(nj,ni)*(-gwtb(nj,ni))*amw/gmsb(ni)/dw(nj)/dch(nj)*
      .      dsqrt(xmutau)*chctaunur*(
      .      -1.D0-x1+x2-xmutau+xmust(nj)+
-     .      1.D0/xmuw*(xmust(nj)-1.D0)*(xmutau-x1-x2+1.D0-xmust(nj))) 
+     .      1.D0/xmuw*(xmust(nj)-1.D0)*(xmutau-x1-x2+1.D0-xmust(nj)))
 
 c -------------------------------------------------------------------- c
 
@@ -35732,7 +36385,7 @@ c -- the Yukawa coupling --
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
          gs2 = alsew*4.D0*pi
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(asb2,0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -35786,7 +36439,7 @@ c --------------------------------------
      .         +xmneut(l)/asb2*
      .          (bbot(1,k)*abot(1,l)*abot(2,k)*abot(2,l)+
      .           abot(1,k)*bbot(1,l)*bbot(2,k)*bbot(2,l)) )
-     .         +dsqrt(xmub)*(-1.D0+x1+xmusb1-2.D0*xmub)* 
+     .         +dsqrt(xmub)*(-1.D0+x1+xmusb1-2.D0*xmub)*
      .         (xmneut(k)/asb2*
      .          (bbot(1,k)*bbot(1,l)*bbot(2,k)*abot(2,l)+
      .           abot(1,k)*abot(1,l)*abot(2,k)*bbot(2,l))
@@ -35869,7 +36522,7 @@ c -- the Yukawa coupling --
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
          gs2 = alsew*4.D0*pi
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(asb2,0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -35966,7 +36619,7 @@ c --------------------------------------
      .         +xmneut(l)/asb2*
      .          (abot(1,k)*bbot(1,l)*abot(2,k)*abot(2,l)+
      .           bbot(1,k)*abot(1,l)*bbot(2,k)*bbot(2,l)) )
-     .         +dsqrt(xmub)*(-1.D0+x1+xmusb1-2.D0*xmub)* 
+     .         +dsqrt(xmub)*(-1.D0+x1+xmusb1-2.D0*xmub)*
      .         (xmneut(k)/asb2*
      .          (abot(1,k)*abot(1,l)*bbot(2,k)*abot(2,l)+
      .           bbot(1,k)*bbot(1,l)*abot(2,k)*bbot(2,l))
@@ -36038,7 +36691,7 @@ c --------------------------------------
      .        /dhl/asb2*amz**2/amw*glbbr(1,2)+hhbbr/dsqrt(2.D0)/dneut(l)
      .        /dhh/asb2*amz**2/amw*ghbbr(1,2))*(
      .        (abot(1,l)*bbot(2,l)+abot(2,l)*bbot(1,l))*
-     .        xmneut(l)/asb2*(x1+x2+xmusb1-1.D0-4.D0*xmub) 
+     .        xmneut(l)/asb2*(x1+x2+xmusb1-1.D0-4.D0*xmub)
      .        +(abot(1,l)*abot(2,l)+bbot(2,l)*bbot(1,l))*
      .        dsqrt(xmub)*(2.D0*x1-1.D0+xmusb1-4.D0*xmub) )
      .        +2.D0*habbr/dsqrt(2.D0)/dneut(l)/dha/asb2*amz**2/amw*
@@ -36109,7 +36762,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(asb2,0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -36129,7 +36782,7 @@ c --- the running couplings ---
             blsbot2(i,j) = aksbot(i,j)
          end do
       end do
-     
+
       call SD_phitoptop(hlttr,hhttr,hattr)
 
 c --- several definitions ---
@@ -36209,7 +36862,7 @@ c --------------------------------------
      .         +xmchar(l)/asb2*
      .          (alsbot2(1,k)*blsbot2(1,l)*alsbot1(2,k)*alsbot1(2,l)+
      .           blsbot2(1,k)*alsbot2(1,l)*blsbot1(2,k)*blsbot1(2,l)) )
-     .         +dsqrt(xmut)*(-1.D0+x1+xmusb1-2.D0*xmut)* 
+     .         +dsqrt(xmut)*(-1.D0+x1+xmusb1-2.D0*xmut)*
      .         (xmchar(k)/asb2*
      .          (alsbot2(1,k)*alsbot2(1,l)*blsbot1(2,k)*alsbot1(2,l)+
      .           blsbot2(1,k)*blsbot2(1,l)*alsbot1(2,k)*blsbot1(2,l))
@@ -36262,7 +36915,7 @@ c --------------------------------------
      .        /dhl/asb2*amz**2/amw*glbbr(1,2)+hhttr/dsqrt(2.D0)/dchi(l)
      .        /dhh/asb2*amz**2/amw*ghbbr(1,2))*(
      .        (alsbot2(1,l)*blsbot1(2,l)+alsbot1(2,l)*blsbot2(1,l))*
-     .        xmchar(l)/asb2*(x1+x2+xmusb1-1.D0-4.D0*xmut) 
+     .        xmchar(l)/asb2*(x1+x2+xmusb1-1.D0-4.D0*xmut)
      .        +(alsbot2(1,l)*alsbot1(2,l)+blsbot1(2,l)*blsbot2(1,l))*
      .        dsqrt(xmut)*(2.D0*x1-1.D0+xmusb1-4.D0*xmut) )
      .        +2.D0*hattr/dsqrt(2.D0)/dchi(l)/dha/asb2*amz**2/amw*
@@ -36329,7 +36982,7 @@ c                              Z exchang
 c -------------------------------------------------------------------- c
 
       sb2sb1zz = 1.D0/4.D0/cw**2/dz**2*azbb12**2*
-     .     2.D0*(vzz**2+azz**2)*4.D0*(1.D0+x1*x2-x1-x2-xmusb1) 
+     .     2.D0*(vzz**2+azz**2)*4.D0*(1.D0+x1*x2-x1-x2-xmusb1)
 
 c ----------------------------------------------------------------- c
 
@@ -36461,7 +37114,7 @@ c                              Z exchang
 c -------------------------------------------------------------------- c
 
       sb2sb1zz = 1.D0/4.D0/cw**2/dz**2*azbb12**2*
-     .     2.D0*(vzz**2+azz**2)*4.D0*(1.D0+x1*x2-x1-x2-xmusb1) 
+     .     2.D0*(vzz**2+azz**2)*4.D0*(1.D0+x1*x2-x1-x2-xmusb1)
 
 c -------------------------------------------------------------------- c
 
@@ -36506,7 +37159,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          scalb = yb/dsqrt(g2)
          scalt = yt/dsqrt(g2)
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(asb2,0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -36543,7 +37196,7 @@ c                              Z exchang
 c -------------------------------------------------------------------- c
 
       sb2sb1zz = 1.D0/4.D0/cw**2/dz**2*azbb12**2*(
-     .   1.D0/xmuz**2*(4.D0*(vzz**2-azz**2)*xmutau*(1.D0-(x1+x2)*(1.D0  
+     .   1.D0/xmuz**2*(4.D0*(vzz**2-azz**2)*xmutau*(1.D0-(x1+x2)*(1.D0
      .   -xmusb1)**2+xmusb1*(-xmusb1**2+3.D0*xmusb1-3.D0))+
      .   2.D0*(vzz**2+azz**2)*(1.D0-xmusb1)**2*(2.D0*xmutau*(xmusb1
      .   +x1+x2-1.D0)) )
@@ -36614,7 +37267,7 @@ c ======================================
       COMMON/SD_massgino/amneut,xmneut,amchar,xmchar
       COMMON/SD_sfermionetau/ase1,ase2,astau1,astau2
       COMMON/SD_coup5/ale,altau,alsne,blsne,alsnt,blsnt
-      COMMON/SD_coup8/ae,be,atau,btau,anu,bnu,antau,bntau    
+      COMMON/SD_coup8/ae,be,atau,btau,anu,bnu,antau,bntau
 
 c -------------------------------------------------------------------- c
 c  selectron_L --> chi0_1/chi0_2/chi0_3/chi0_4 + e-
@@ -36690,7 +37343,7 @@ c ======================================
       COMMON/SD_massgino/amneut,xmneut,amchar,xmchar
       COMMON/SD_sneutrino/asne1,asne2,asntau1,asntau2
       COMMON/SD_coup5/ale,altau,alsne,blsne,alsnt,blsnt
-      COMMON/SD_coup8/ae,be,atau,btau,anu,bnu,antau,bntau    
+      COMMON/SD_coup8/ae,be,atau,btau,anu,bnu,antau,bntau
 
 c -------------------------------------------------------------------- c
 c  sneutrion_eL --> chi0_1/chi0_2/chi0_3/chi0_4 + neutrino_e
@@ -36758,7 +37411,7 @@ c ======================================
       COMMON/SD_weinberg/sw,cw
 
       external SD_lamb
-      
+
       gmsntau(1) = asntau1
       gmsntau(2) = asntau2
 
@@ -36779,7 +37432,7 @@ c  stau1 --> chi0_1/chi0_2/chi0_3/chi0_4
 
 c -------------------------------------------------------------------- c
 c  stau2 --> chi0_1/chi0_2/chi0_3/chi0_4 + tau
-      
+
       do i=1,4,1
          if(astau2.gt.(amneut(i)+amtau)) then
             stau2neut(i)=g2*((ato(2,i)**2+bto(2,i)**2)*
@@ -36946,7 +37599,7 @@ c ======================================
       COMMON/SD_sneutrino/asne1,asne2,asntau1,asntau2
       COMMON/SD_sfermionetau/ase1,ase2,astau1,astau2
       COMMON/SD_coup5/ale,alto,alsne,blsne,alsnt,blsnt
-      COMMON/SD_coup8/ae,be,ato,bto,anu,bnu,antau,bntau  
+      COMMON/SD_coup8/ae,be,ato,bto,anu,bnu,antau,bntau
       COMMON/SD_coup20/gwtb,gwntau
       COMMON/SD_scalatau/scaltau
       COMMON/SD_yukawa/ytewsb,ybewsb,ytauewsb
@@ -37026,11 +37679,11 @@ c --------------------------------------
 c ---------------------- the function lambda ------------------------- c
 c -------------------------------------------------------------------- c
 
-      double precision function SD_lamb(x,y)      
+      double precision function SD_lamb(x,y)
 
       implicit double precision (a-h,k-z)
 
-      SD_lamb=dsqrt((1.D0-x**2-y**2)**2-4.D0*x**2*y**2) 
+      SD_lamb=dsqrt((1.D0-x**2-y**2)**2-4.D0*x**2*y**2)
 
       return
       end
@@ -37082,7 +37735,7 @@ c --------------------------------------
 
       delta = (4.D0*xmu1-x1**2)*
      .        (4.D0*xmu2*xmu3-(x1-1.D0+xmu2+xmu3-xmu1)**2)
-      
+
       if (delta.lt.0.d0) then
          SD_by=0.D0
       else
@@ -37103,33 +37756,33 @@ c --------------------------------------
       DIMENSION RX(1000),WX(1000),RY(1000),WY(1000)
       EXTERNAL F, SD_AY,SD_BY,SD_AX,SD_BX
       INTEGER NX,NY
-	
+
       AXX=SD_AX(xmu1,xmu2,xmu3)
       BXX=SD_BX(xmu1,xmu2,xmu3)
 
-      CALL SD_GAUS(NX,AXX,BXX,RX,WX)
+      CALL SD_GAUS(NX,AXX,BXX,RX,WX,1000)
       SX=0.D0
       DO  1 K=1,NX
          X=RX(K)
          AYX=SD_AY(xmu1,xmu2,xmu3,X)
          BYX=SD_BY(xmu1,xmu2,xmu3,X)
 
-         CALL SD_GAUS(NY,AYX,BYX,RY,WY)
+         CALL SD_GAUS(NY,AYX,BYX,RY,WY,1000)
          SY=0.D0
          DO 2 J=1,NY
 
             SY=SY+WY(J)*F(X,RY(J))
-         
+
  2       CONTINUE
          SX=SX+WX(K)*SY
 
- 1    CONTINUE		
+ 1    CONTINUE
       SUM=SX
       END
 
 c -------------------------------------------------------------------- c
 
-      SUBROUTINE SD_GAUS(N,A,B,X,W)
+      SUBROUTINE SD_GAUS(N,A,B,X,W,LENGTH)
 C     GAUSS-LEGENDRE INTEGRATION FROM A TO B (WEIGHT = 1.)
 C     CALCULATES GAUSSIAN POINTS X AND WEIGHTS W
 C                      FOR N=4,6,8,12,16,24,32 ;
@@ -37138,7 +37791,7 @@ C     THE INTERVAL [A,B] AND N INTO CORR
 C     N MUST BE EVEN AND >= 4,IF IT IS NOT,IT IS CHANGED !
 C
       IMPLICIT REAL*8 (A-H,O-Z)
-      DIMENSION XG(16,7),DG(16,7),YG(16),EG(16),X(1),W(1),NI(7),NG(7)
+      DIMENSION XG(16,7),DG(16,7),YG(16),EG(16),X(LENGTH),W(LENGTH),NI(7),NG(7)
       DATA NBEG,NA,NI,NG /9*0,4,6,8,12,16,24,32/
       DATA XG/ .43056815579702629D 0, .16999052179242813D 0, 14*0.D0,
      X         .46623475710157601D 0, .33060469323313226D 0,
@@ -37329,11 +37982,11 @@ c --------------------------------------
       ctmp4 = (cdlog(ctmp2/dcmplx(2.D0*m*mc)))**2
 
       if(mc.gt.1.D4.or.m.gt.1.D4) then
-         SD_jint = 1.D0/(mc2s-m2s)*cdlog(m2s/mc2s) 
-     .        - SD_iint(mj,mi,m,mc) 
+         SD_jint = 1.D0/(mc2s-m2s)*cdlog(m2s/mc2s)
+     .        - SD_iint(mj,mi,m,mc)
       else
-         SD_jint = 1.D0/(mj**2-mi**2)*( ctmp3 - ctmp4 )  
-     .        - SD_iint(mj,mi,m,mc) 
+         SD_jint = 1.D0/(mj**2-mi**2)*( ctmp3 - ctmp4 )
+     .        - SD_iint(mj,mi,m,mc)
       endif
 
       return
@@ -37430,7 +38083,7 @@ c --------------------------------------
       ctmp4 = SD_ccspen( (mi**2+m2s-mc2s-lami)/(2.D0*m2s) )
 
       SD_iinthelp = -1.D0/(mj**2-mi**2)*(ctmp1+ctmp2-ctmp3-ctmp4)
-      
+
       return
 
       end
@@ -37444,7 +38097,7 @@ c --------------------------------------
 
       external SD_iinthelp
 
-      SD_jint0 = SD_iinthelp(mj,mi,mc,0.D0) 
+      SD_jint0 = SD_iinthelp(mj,mi,mc,0.D0)
 
       return
 
@@ -37463,7 +38116,7 @@ c --------------------------------------
 
       if(mc.gt.1.D4) then
          SD_i2int0 = -1.D0/2.D0/mc2s
-      else 
+      else
          SD_i2int0 = -mc2s/mi**2/mj**2*cdlog(mc2s) + 1.D0/(mj**2-mi**2)*
      .        ((mc2s-mi**2)/mi**2*cdlog(mc2s-mi**2) -
      .        (mc2s-mj**2)/mj**2*cdlog(mc2s-mj**2) )
@@ -37530,37 +38183,37 @@ c---- quark masses
       mf(1)=0d0
       mf(2)=0d0
       mf(3)=mtop
-c--- scale can be set randomly, result has to stay the same      
+c--- scale can be set randomly, result has to stay the same
       sca=1d2
-     
+
       g3=dsqrt(SD_alphascall(ms,2)*4.D0*pi)
 
-    
+
 
 
 c---- coupling of stop-charmed-neutralino- for the lightest squark and lightest neutralino
       call coupfavneut(coupr, coupl, 1, indquark, 1, 0)
 
-      
-c---- gluon virtual contributions (triangle graph)      
+
+c---- gluon virtual contributions (triangle graph)
       gluonvirt=-2d0*g3**2*Real(Real((SD_B02(mneu**2,0d0,ms, sca)*
      -        (2d0*mneu**4 - 2d0*mneu**2*ms**2)
      -        - (mneu**2 - ms**2)*
      -          (SD_B02(ms**2,0d0,ms,sca)*
-     -           (mneu**2 + ms**2) - 
+     -           (mneu**2 + ms**2) -
      - 2d0*infc0func(mneu**2,ms,sca)*
-     -           (mneu**4 - 
+     -           (mneu**4 -
      -             2*mneu**2*ms**2 + ms**4)))/
      -(12d0*Pi**2*(mneu**2-ms**2)**2)
      - *(ms**2-mneu**2)*(coupl**2+coupr**2)))
 
- 
-      
+
+
 c---- gluino triangle graph
       gluinovirt=0d0
 
-     
-      
+
+
 
       do k=1,3
       do l=1,6
@@ -37576,29 +38229,29 @@ c---- ramona added signmneut 15/10/14
      -(mneu**2-ms**2)*mneu*signmneut*
      -           (gluinoleft12l*
      -              gluinoright1k1*mf(k)*
-     -              coupR*coupRkl+ 
+     -              coupR*coupRkl+
      -             gluinoleft1k1*
 c---- ramona added signmneut 15/10/14
      -              (gluinoright12l*signmneut*mneu*
-     -                coupL*CoupRkl + 
+     -                coupL*CoupRkl +
      -                gluinoleft12l*mg*
      - coupR*CoupRkl)+gluinoright12l*
      -              gluinoleft1k1*mf(k)*
-     -              coupL*coupLkl+ 
+     -              coupL*coupLkl+
      -             gluinoright1k1*
 c---- ramona added signmneut 15/10/14
      -              (gluinoleft12l*mneu*signmneut*
-     -                coupR*CoupLkl + 
+     -                coupR*CoupLkl +
      -                gluinoright12l*mg*
      - coupL*CoupLkl))
      - -SD_B02(ms**2,mf(k), mg, sca)/(mneu**2-ms**2)*(gluinoleft12l*
 c---- ramona added signmneut 15/10/14
      -              gluinoright1k1*mneu*signmneut*
      -              mf(k)*
-     - coupR*coupRkl+ 
+     - coupR*coupRkl+
      -             gluinoleft1k1*
      -              (gluinoright12l*ms**2*
-     - coupL*coupRkl+ 
+     - coupL*coupRkl+
 c---- ramona added signmneut 15/10/14
      -                gluinoleft12l*mneu*signmneut*
      -                 mg*
@@ -37606,10 +38259,10 @@ c---- ramona added signmneut 15/10/14
 c---- ramona added signmneut 15/10/14
      -              gluinoleft1k1*mneu*signmneut*
      -              mf(k)*
-     - coupL*coupLkl+ 
+     - coupL*coupLkl+
      -             gluinoright1k1*
      -              (gluinoleft12l*ms**2*
-     - coupR*coupLkl+ 
+     - coupR*coupLkl+
 c---- ramona added signmneut 15/10/14
      -                gluinoright12l*mneu*signmneut*
      -                 mg*
@@ -37618,75 +38271,75 @@ c---- ramona added signmneut 15/10/14
      -/(mneu**2-ms**2)*(gluinoright1k1*mf(k)*
      -              (gluinoright12l*mg*
      -                 (mneu**2 - ms**2)*
-     -coupL*coupRkl + 
+     -coupL*coupRkl +
 c---- ramona added signmneut 15/10/14
      -                gluinoleft12l*mneu*signmneut*
      -                 (mg**2 - msquark(l)**2)*
-     -coupR*CoupRkl) + 
+     -coupR*CoupRkl) +
      -             gluinoleft1k1*
      -              (gluinoright12l*
-     -                 (mneu**2*mg**2 - 
+     -                 (mneu**2*mg**2 -
      -                   ms**2*msquark(l)**2)*
-     - coupL*Couprkl + 
+     - coupL*Couprkl +
 c---- ramona added signmneut 15/10/14
      -                gluinoleft12l*mneu*signmneut*
      -                 mg*
-     -                 (mneu**2 + mg**2 - 
+     -                 (mneu**2 + mg**2 -
      -                   ms**2 - msquark(l)**2)*
      - coupR*CoupRkl)+gluinoleft1k1*mf(k)*
      -              (gluinoleft12l*mg*
      -                 (mneu**2 - ms**2)*
-     -coupR*coupLkl + 
+     -coupR*coupLkl +
 c---- ramona added signmneut 15/10/14
      -                gluinoright12l*mneu*signmneut*
      -                 (mg**2 - msquark(l)**2)*
-     -coupL*CoupLkl) + 
+     -coupL*CoupLkl) +
      -             gluinoright1k1*
      -              (gluinoleft12l*
-     -                 (mneu**2*mg**2 - 
+     -                 (mneu**2*mg**2 -
      -                   ms**2*msquark(l)**2)*
-     - coupR*CoupLkl + 
+     - coupR*CoupLkl +
 c---- ramona added signmneut 15/10/14
      -                gluinoright12l*mneu*signmneut*
      -                 mg*
-     -                 (mneu**2 + mg**2 - 
+     -                 (mneu**2 + mg**2 -
      -                   ms**2 - msquark(l)**2)*
      - coupL*CoupLkl))))*(ms**2-mneu**2)/(18d0*Pi**2)
 
       gluinovirt=gluinovirt+zwi
 
-      
+
       end do
       end do
-      
-      
+
+
 c---- the real corrections
-      r=mneu/ms 
+      r=mneu/ms
       realcorrections=(coupL**2 + coupR**2)*g3**2*ms**2*
-     -      (-99d0 + 10d0*Pi**2 + 204d0*r**2 - 20d0*Pi**2*r**2 - 
-     -        105d0*r**4 + 10d0*Pi**2*r**4 - 
-     -        6d0*(-1d0 + r**2)**2*dLog(ms**2/sca)**2 + 
-     -        24*r**2*dLog(r**2) - 18d0*r**4*dLog(r**2) + 
-     -        60d0*dLog(1d0 - r**2) - 120d0*r**2*dLog(1d0 - r**2) + 
-     -        60d0*r**4*dLog(1d0 - r**2) - 24d0*dLog(1d0 - r**2)**2 + 
-     -        48d0*r**2*dLog(1d0 - r**2)**2 - 
-     -        24d0*r**4*dLog(1d0 - r**2)**2 - 
+     -      (-99d0 + 10d0*Pi**2 + 204d0*r**2 - 20d0*Pi**2*r**2 -
+     -        105d0*r**4 + 10d0*Pi**2*r**4 -
+     -        6d0*(-1d0 + r**2)**2*dLog(ms**2/sca)**2 +
+     -        24*r**2*dLog(r**2) - 18d0*r**4*dLog(r**2) +
+     -        60d0*dLog(1d0 - r**2) - 120d0*r**2*dLog(1d0 - r**2) +
+     -        60d0*r**4*dLog(1d0 - r**2) - 24d0*dLog(1d0 - r**2)**2 +
+     -        48d0*r**2*dLog(1d0 - r**2)**2 -
+     -        24d0*r**4*dLog(1d0 - r**2)**2 -
      -        6d0*(-1d0 + r**2)**2*dLog(ms**2/sca)*
-     -         (-5d0 + 4d0*Log(1d0 - r**2)) - 
+     -         (-5d0 + 4d0*Log(1d0 - r**2)) -
      -        24*(-1d0 + r**2)**2*SD_CCSpen(1d0-r**2*DCMPLX(1d0)))/
      -    (18.*Pi**2*(-1 + r**2))/4d0
 
        call dGisl(indquark,1,1,Gisll, Gislr, mg)
-      
-c----- counterterm must be multiplied by a 2 for M_LO*M_NLO      
+
+c----- counterterm must be multiplied by a 2 for M_LO*M_NLO
       counterterm=2d0*(ms**2-mneu**2)*(coupL
      . *(Gisll(1)+Gisll(2))
      .+coupR*(Gislr(1)+Gislr(2)))
-      
+
       qcdlightstop=gluonvirt+gluinovirt+realcorrections+counterterm
 
-      
-      return 
+
+      return
       end
 
 c------------------------------------------------------------------------
@@ -37703,19 +38356,19 @@ c---------------------------------------
        integer imod(1:2)
         double precision Gisll(2), Gislr(2), mf(3), mg, zwi, zwi2
         double precision mtop, dmu, vewsb
-        complex*16 sigmami(4), dsigmami(4) 
+        complex*16 sigmami(4), dsigmami(4)
         double precision alphaval, msquark(6), dZu(2,2), dZsquark
       double precision sdgf, amz, amw, pi, g2
       double precision amsupq(6), amsdownq(6), amslepton(6)
       double precision sw, cw, alp_mssm, tanbeta, amt, amb, amtau
       double precision uu(2,2), vv(2,2), zz(4,4), zp(4,4)
-      double precision vckm(3,3), msq2(3,3), msu2(3,3), 
+      double precision vckm(3,3), msq2(3,3), msu2(3,3),
      .msd2(3,3), td(3,3), tu(3,3),
      . usqmix(6,6), dsqmix(6,6), amsneutrino(3)
       double precision sinbeta,alsew,g2ew,g1ew
       COMMON/SD_param/sdgf,amz,amw,pi,g2
-      COMMON/flavviolation/vckm, msq2, msd2, msu2, td, 
-     .tu, usqmix, ifavvio, dsqmix
+      COMMON/flavviolation/vckm, msq2, msd2, msu2, td,
+     .tu, usqmix, dsqmix, ifavvio
       COMMON/msfermion/ amsupq, amsdownq, amslepton, amsneutrino
       COMMON/SD_weinberg/sw,cw
       COMMON/SD_mixang/alp_mssm,tanbeta
@@ -37728,27 +38381,27 @@ c---- set fermion mass
         mf(2)=0d0
         mf(3)=mtop
 
-	
+
 	sinbeta=dSin(dAtan(tanbeta))
       vewsb=amw/g2ew*2d0
       Gisll(1)=0d0
       Gisll(2)=0d0
       Gislr(1)=0d0
       Gislr(2)=0d0
-      
+
       do j=1,3
          call dZfermion(j,i, mg, mf(j), mf(i), dZu)
-	
+
 	zwi= -1d0/6d0*(Sqrt(2d0)*g1ew*zz(l,1)
-     .	      *usqmix(s, j)*dZu(1,1) + 
+     .	      *usqmix(s, j)*dZu(1,1) +
      .	      3d0*dSqrt(2d0)*g2ew*zz(l,2)*usqmix(s, j)*dZu(1,1))
 
 	 zwi2=2d0/3d0*dSqrt(2d0)*g1ew*zz(l, 1)
      .	      *usqmix(s, 3 + j)*dZu(2,1)
-	
+
 	Gisll(1)=Gisll(1)+zwi
         Gislr(1)=Gislr(1)+zwi2
-            
+
 	end do
        do j=1,6
 	zwi= -1d0/6d0*(Sqrt(2d0)*g1ew*zz(l,1)*usqmix(j, i)
@@ -37758,12 +38411,12 @@ c---- set fermion mass
        zwi2=2d0/3d0*dSqrt(2d0)*g1ew*zz(l, 1)
      .	      *usqmix(j, 3 + i)
      .	      *dZsquark(s,j, msquark(s), msquark(j), mg)
-      
+
       Gisll(1)=Gisll(1)+zwi
       Gislr(1)=Gislr(1)+zwi2
-      
+
 	end do
-      
+
 c----Yukawa parts
       do j=1,3
       call dZfermion(i,j, mg, mf(i), mf(j), dZu)
@@ -37772,10 +38425,10 @@ c----Yukawa parts
 
       zwi2=(-1d0*dsqrt(2d0)/(vewsb*sinbeta)*zz(l, 4)*
      .usqmix(s, j))*dZu(2,2)
-       
+
       Gislr(2)=Gislr(2)+zwi2
       Gisll(2)=Gisll(2)+zwi
-      
+
       end do
       do j=1,6
        zwi=-mf(i)*dsqrt(2d0)/(vewsb*sinbeta)*zz(l, 4)
@@ -37783,10 +38436,10 @@ c----Yukawa parts
 
       zwi2=(-mf(i)*dsqrt(2d0)/(vewsb*sinbeta)*zz(l, 4)*
      .usqmix(j, i))*dZsquark(s,j,msquark(s), msquark(j), mg)
-      
+
       Gislr(2)=Gislr(2)+zwi2
       Gisll(2)=Gisll(2)+zwi
-      
+
       end do
       call sigfermion(i,i, sigmami, dsigmami, mf(i)**2, mg)
       dmu=1d0/2d0*Real(Real(mf(i)*sigmami(1)+mf(i)*sigmami(2)
@@ -37798,8 +38451,8 @@ c----Yukawa parts
       Gislr(2)=Gislr(2)+(-dmu*dsqrt(2d0)
      ./(vewsb*sinbeta)*zz(l, 4)*
      .usqmix(s, i))
- 
-    
+
+
 	return
 	end
 
@@ -37816,11 +38469,11 @@ c---------------------------------------
       integer a, b
       double precision ma, mb, mg, eps
       double precision dZu(2,2)
-      complex*16 sigmama(4), dsigmama(4), sigmamb(4), dsigmamb(4) 
+      complex*16 sigmama(4), dsigmama(4), sigmamb(4), dsigmamb(4)
       eps=0.0001
       call sigfermion(a,b, sigmama, dsigmama, ma**2, mg)
       call sigfermion(a,b, sigmamb, dsigmamb, mb**2, mg)
-      
+
       if(a.eq.b)then
 
       dZu(1,1)=-Real(Real(sigmama(1)-
@@ -37849,9 +38502,9 @@ c---------------------------------------
 
       dZu(2,2)=1d0/2d0*Real(-ma*mb*dsigmama(4)
      - +2d0*sigmama(3)-ma**2*dsigmama(3)-ma**2*mb*dsigmama(2)
-     - +ma*sigmama(1)-ma*mb**2*dsigmamb(1))   
-      else 
-      
+     - +ma*sigmama(1)-ma*mb**2*dsigmamb(1))
+      else
+
       dZu(1,1)=1d0/(ma**2-mb**2)*Real(Real(
      .mb**2*sigmamb(1)-ma**2*sigmama(1)
      . +ma*mb*(-sigmama(2)+sigmamb(2))+ma*sigmamb(3)-ma*sigmama(3)
@@ -37867,21 +38520,21 @@ c---------------------------------------
      - ma*mb*sigmamb(3)+ma**2*sigmama(4)-2d0*mb**2*sigmama(4)
      - +ma**2*sigmamb(4)-ma**2*mb*sigmama(1)+ma**2*mb*sigmamb(1)
      --2d0*ma*mb**2*sigmama(2)+ma*mb**2*sigmamb(2)+ma**3*sigmama(2))
-      
+
 
 
 
       dZu(2,2)=1d0/(ma**2-mb**2)/2d0*Real(-ma*mb*sigmama(4)+
      - ma*mb*sigmamb(4)+ma**2*sigmama(3)-2d0*mb**2*sigmama(3)
      - +ma**2*sigmamb(3)-ma**2*mb*sigmama(2)+ma**2*mb*sigmamb(2)
-     --2d0*ma*mb**2*sigmama(1)+ma*mb**2*sigmamb(1)+ma**3*sigmama(1)) 
+     --2d0*ma*mb**2*sigmama(1)+ma*mb**2*sigmamb(1)+ma**3*sigmama(1))
+
+
 
-    
 
- 
       end if
       end if
-     
+
 
       return
       end
@@ -37898,7 +38551,7 @@ c--- this routine computes the fermion s
       common/masses/msquark, mtop
       common/scalelightstop/sca
       PI = 4d0*DATAN(1D0)
-    
+
       sigma(1)=(0d0,0d0)
       dsigma(1)=(0d0,0d0)
       sigma(2)=(0d0,0d0)
@@ -37918,13 +38571,13 @@ c---- sigmaL
      - *gluinoright1)/(3d0*Pi**2)
 
       sigma(1)=sigma(1)+zwi(1)
-      
+
 c---- sigmaR
       zwi(2)=-SD_B1(p2,mg,msquark(i), sca)*
      -     (gluinoleft1*gluinoright
      -          )/(3d0*Pi**2)
       sigma(2)=zwi(2)+sigma(2)
-      
+
 c----- sigmalS
       zwi(3)= (SD_B02(p2,mg,
      -      msquark(i), sca)*(gluinoright
@@ -37941,7 +38594,7 @@ c------- sigmaRs
       sigma(4)=sigma(4)+zwi(4)
 
       end do
-      
+
       do i=1,6
       call coupfavgluino(gluinoleft, gluinoright, a, i)
       call coupfavgluino(gluinoright1, gluinoleft1, b, i)
@@ -37978,7 +38631,7 @@ c--- add gluon contribution
       sigma(2)=sigma(2)+1d0/2d0*g3**2
      .*SD_B1(p2,0d0,0d0, sca)/(3d0*Pi**2)
         endif
-      
+
       return
       end
 c----------------------------------------------------------------------------
@@ -37991,10 +38644,10 @@ c---------------------------------------
       double precision ma, mb, mg, eps
       complex*16 sigmama, sigmamb, dsigmama, dsigmamb
       eps=0.001d0
-	
+
       call sigmasquark(a,b, ma**2, sigmama, dsigmama, mg)
-      
-      
+
+
       call sigmasquark(a,b, mb**2, sigmamb, dsigmamb, mg)
 
 
@@ -38002,25 +38655,25 @@ c---------------------------------------
       dZsquark=-1d0/2d0*Real(Real(dsigmamb))
       else
       dZsquark=1d0/(2d0*(ma**2-mb**2))*Real(Real(sigmamb-sigmama))
-      
+
       endif
-      
+
       return
       end
 c-----------------------------------------------------------------------------
 c---- this routine computes the self-energies of the squarks
       subroutine sigmasquark(a,b, p2, sigma, dsigma, mg)
-! a, b are indices of self-energy, p2 is momentum and lim=1 is a switch for the case where the masses for two squarks are degenerated 
+! a, b are indices of self-energy, p2 is momentum and lim=1 is a switch for the case where the masses for two squarks are degenerated
       implicit none
       integer a, b, i
       double precision g3, alphas, Pi, ms, mneu, mg, mtop, msquark(6)
       double precision gluinoleft, gluinoleft1, gluinoright,
-     - gluinoright1, quarticsup, p2, sigmaquartic, mf(3), 
+     - gluinoright1, quarticsup, p2, sigmaquartic, mf(3),
      . sca, coupfavquartic
        complex*16 zwi, dsigma, sigma
       double precision SD_A01, SD_B02, SD_BP02
  	common/alfas/g3
-	common/masses/msquark, mtop 
+	common/masses/msquark, mtop
       common/scalelightstop/sca
       PI = 4d0*DATAN(1D0)
        mf(1)=0d0
@@ -38030,29 +38683,29 @@ c---- counterterms
        zwi=(0d0, 0d0)
        sigma=(0d0,0d0)
        dsigma=(0d0,0d0)
-	
+
        do i=1,3
       call coupfavgluino(gluinoleft, gluinoright, i, b)
       call coupfavgluino(gluinoright1, gluinoleft1, i, a)
 	zwi=((SD_B02(p2,mf(i),
      -         mg, sca)*
      -        (gluinoleft1*
-     -           gluinoright + 
+     -           gluinoright +
      -          gluinoleft*
-     -           gluinoright1) - 
+     -           gluinoright1) -
      -       SD_BP02(p2,mf(i),
      -         mg, sca)*
      -        (gluinoright1*
      -           (2*gluinoright*mf(i)*
-     -              mg + 
+     -              mg +
      -             gluinoleft*
-     -              (mf(i)**2 + mg**2 - 
-     -                p2)) + 
+     -              (mf(i)**2 + mg**2 -
+     -                p2)) +
      -          gluinoleft1*
      -           (2*gluinoleft*mf(i)*
-     -              mg + 
+     -              mg +
      -             gluinoright*
-     -              (mf(i)**2 + mg**2 - 
+     -              (mf(i)**2 + mg**2 -
      -                p2)))))/
      -  (3d0*Pi**2)
         dsigma=dsigma+zwi
@@ -38060,10 +38713,10 @@ c---- counterterms
         enddo
        if(a.eq.b)then
         dsigma=dsigma -(g3**2*
-     -   (SD_B02(p2,0d0,dsqrt(p2), sca) + 
+     -   (SD_B02(p2,0d0,dsqrt(p2), sca) +
      -    SD_BP02(p2,0d0,dsqrt(p2), sca)*
-     -        (2d0*p2)))/(6d0*Pi**2) 
-        
+     -        (2d0*p2)))/(6d0*Pi**2)
+
 	endif
        zwi=(0d0, 0d0)
         do i=1,3
@@ -38071,41 +38724,41 @@ c---- counterterms
       call coupfavgluino(gluinoright1, gluinoleft1, i, a)
 	zwi=-(SD_A01(mf(i)**2, sca)*
      -        (gluinoleft1*
-     -           gluinoright + 
+     -           gluinoright +
      -          gluinoleft*
-     -           gluinoright1) + 
+     -           gluinoright1) +
      -       SD_A01(mg**2, sca)*
      -        (gluinoleft1*
-     -           gluinoright + 
+     -           gluinoright +
      -          gluinoleft*
-     -           gluinoright1) + 
+     -           gluinoright1) +
      -       SD_B02(p2,mf(i),mg, sca)*
      -        (gluinoright1*
      -           (2d0*gluinoright*mf(i)*
-     -              mg + 
+     -              mg +
      -             gluinoleft*
-     -              (mf(i)**2 + mg**2 - 
-     -                p2)) + 
+     -              (mf(i)**2 + mg**2 -
+     -                p2)) +
      -          gluinoleft1*
      -           (2d0*gluinoleft*mf(i)*
-     -              mg + 
+     -              mg +
      -             gluinoright*
-     -              (mf(i)**2 + mg**2 - 
+     -              (mf(i)**2 + mg**2 -
      -                p2))))/
      -   (3.*Pi**2)
-	
+
 	 sigma=zwi+sigma
-	  
+
          enddo
-	
+
         do i=1,6
 	 zwi=SD_A01(msquark(i)**2, sca)*coupfavquartic(a,b,i)/Pi**2
-        
-	
+
+
 	sigma=zwi+sigma
-       
+
 	end do
-	
+
       return
        end
 c---- end ramona changed
@@ -38118,8 +38771,8 @@ c -- The vertex corrections -- c
 
       implicit double precision (a-h,k-z)
       complex*16 SD_C0_lam
-      
-      C1Den = - dreal(SD_C0_lam(ami,amj,amv,lamv)) - 
+
+      C1Den = - dreal(SD_C0_lam(ami,amj,amv,lamv)) -
      .    SD_C1_lam(ami,amj,amv,ami,lamv,amj,amuv,lamv)
       C2Den = SD_C2_lam(ami,amj,amv,ami,lamv,amj,amuv,lamv)
 
@@ -38141,7 +38794,7 @@ c --------------------------------------
       double precision iq3L
       complex*16 SD_C03
 
-      C1Den = - dreal(SD_C03(ami**2,amv**2,amj**2,mgluino,amq,amq)) - 
+      C1Den = - dreal(SD_C03(ami**2,amv**2,amj**2,mgluino,amq,amq)) -
      .    SD_C1(ami,amv,amj,mgluino,amq,amq,amuv)
       C2Den = SD_C2(ami,amv,amj,mgluino,amq,amq,amuv)
 
@@ -38151,7 +38804,7 @@ c --------------------------------------
      .     +(mgluino**2-amq**2)*(C1Den+C2Den) +
      .     SD_B02(amv**2,amq,amq,amuv**2))*dsin(2.D0*thetasq) +
      .     2.D0*mgluino*amq*(iq3L-2.D0*eq*sw**2)*
-     .     ( dreal(SD_C03(ami**2,amv**2,amj**2,mgluino,amq,amq)) 
+     .     ( dreal(SD_C03(ami**2,amv**2,amj**2,mgluino,amq,amq))
      .     + C1Den + C2Den )*dcos(2.D0*thetasq)
 
       return
@@ -38167,7 +38820,7 @@ c --------------------------------------
       double precision iq3L
       complex*16 SD_C03
       dimension r(2,2),rp(2,2)
-      
+
       r(1,1) = dcos(thsq)
       r(1,2) = dsin(thsq)
       r(2,1) = -dsin(thsq)
@@ -38178,7 +38831,7 @@ c --------------------------------------
       rp(2,1) = -dsin(thsqp)
       rp(2,2) = dcos(thsqp)
 
-      C1Den = - dreal(SD_C03(ami**2,amv**2,amj**2,mgluino,amq,amqp)) - 
+      C1Den = - dreal(SD_C03(ami**2,amv**2,amj**2,mgluino,amq,amqp)) -
      .    SD_C1(ami,amv,amj,mgluino,amq,amqp,amuv)
       C2Den = SD_C2(ami,amv,amj,mgluino,amq,amqp,amuv)
 
@@ -38187,8 +38840,8 @@ c --------------------------------------
      .     C1Den + C2Den )*
      .     ( amq*r(i,2)*rp(j,1) + amqp*r(i,1)*rp(j,2) )
      .     -(ami**2*C1Den + amj**2*C2Den + mgluino**2*(2.D0*
-     .       dreal(SD_C03(ami**2,amv**2,amj**2,mgluino,amq,amqp)) 
-     .      + C1Den + C2Den ) 
+     .       dreal(SD_C03(ami**2,amv**2,amj**2,mgluino,amq,amqp))
+     .      + C1Den + C2Den )
      .      + SD_B02(amv**2,amq,amqp,amuv**2) )*r(i,1)*rp(j,1)
      .     -amq*amqp*( C1Den + C2Den )*r(i,2)*rp(j,2)
 
@@ -38238,7 +38891,7 @@ c --------------------------------------
             do i=1,2,1
                do j=1,2,1
                   gvqqp(i,j) = 1.D0/2.D0/cw*gztt(i,j)
-                  amsqk  = gmst(ik) 
+                  amsqk  = gmst(ik)
                   amsqpl = gmst(il)
                   amsq1  = gmst(1)
                   amsq2  = gmst(2)
@@ -38250,7 +38903,7 @@ c --------------------------------------
             do i=1,2,1
                do j=1,2,1
                   gvqqp(i,j) = 1.D0/dsqrt(2.D0)*gwtb(i,j)
-                  amsqk  = gmst(ik) 
+                  amsqk  = gmst(ik)
                   amsqpl = gmsb(il)
                   amsq1  = gmst(1)
                   amsq2  = gmst(2)
@@ -38264,7 +38917,7 @@ c --------------------------------------
             do i=1,2,1
                do j=1,2,1
                   gvqqp(i,j) = 1.D0/2.D0/cw*gzbb(i,j)
-                  amsqk  = gmsb(ik) 
+                  amsqk  = gmsb(ik)
                   amsqpl = gmsb(il)
                   amsq1  = gmsb(1)
                   amsq2  = gmsb(2)
@@ -38276,7 +38929,7 @@ c --------------------------------------
             do i=1,2,1
                do j=1,2,1
                   gvqqp(i,j) = 1.D0/dsqrt(2.D0)*gwtb(j,i)
-                  amsqk  = gmsb(ik) 
+                  amsqk  = gmsb(ik)
                   amsqpl = gmst(il)
                   amsq1  = gmsb(1)
                   amsq2  = gmsb(2)
@@ -38385,7 +39038,7 @@ c --------------------------------------
 
 c --------------------------------------
 
-      SD_quarkmixW = 1.D0/dsqrt(2.D0)*( 
+      SD_quarkmixW = 1.D0/dsqrt(2.D0)*(
      .     cijwsq(ii,jj)*(deltathetasqsq+deltathetasqgl) +
      .     cijwsqp(ii,jj)*(deltathetasqpsq+deltathetasqpgl) )
 
@@ -38416,7 +39069,7 @@ c --------------------------------------
       lb02 = dreal(cdlog(dcmplx(b0/b2)))
 
       hint = 1.D0/4.D0/amsqi**2*(kap/2.D0*(amsqi**2+amsqpj**2+amv**2)+
-     .     2.D0*amsqi**2*amsqpj**2*lb2 + 
+     .     2.D0*amsqi**2*amsqpj**2*lb2 +
      .     2.D0*amsqi**2*amv**2*lb1 +
      .     2.D0*amsqpj**2*amv**2*lb0 )
 
@@ -38436,8 +39089,8 @@ c --------------------------------------
 
       hint01 = dreal(1.D0/4.D0/amsqi**2*(
      .     -2.D0*dlog((lamv*amsqi*amsqpj*amv)/kap**2)*lb2 +
-     .     2.D0*lb2**2 - lb0**2 - lb1**2 + 
-     .     2.D0*SD_ccspen(dcmplx(1.D0-b2**2)) - 
+     .     2.D0*lb2**2 - lb0**2 - lb1**2 +
+     .     2.D0*SD_ccspen(dcmplx(1.D0-b2**2)) -
      .     SD_ccspen(dcmplx(1-b0**2))
      .     - SD_ccspen(dcmplx(1-b1**2)) ) )
 
@@ -38456,7 +39109,7 @@ c --------------------------------------
       implicit double precision (a-h,k-z)
 
       SD_deltaZnngluon = 2.D0/3.D0*(
-     .     SD_B02(amsq**2,0.D0,amsq,amuv**2) + 
+     .     SD_B02(amsq**2,0.D0,amsq,amuv**2) +
      .     2.D0*amsq**2*SD_BP02(amsq**2,lamv,amsq,amuv**2) )
 
       return
@@ -38471,7 +39124,7 @@ c --------------------------------------
       implicit double precision (a-h,k-z)
 
       SD_deltaZnngluino = -2.D0/3.D0*(
-     .     SD_B02(amsq**2,mgluino,amq,amuv**2) + 
+     .     SD_B02(amsq**2,mgluino,amq,amuv**2) +
      .     (amsq**2-amq**2-mgluino**2)*
      .     SD_BP02(amsq**2,mgluino,amq,amuv**2) -
      .     2.D0*amq*mgluino*(-1.D0)**n*dsin(2.D0*thetasq)*
@@ -38520,13 +39173,13 @@ c -- Virtual corrections for the decays
 
       implicit double precision (a-h,k-z)
       complex*16 SD_C0_lam
-      
+
       amisq = ami**2
       amjsq = amj**2
       amhsq = amhi**2
       amusq = amuv**2
 
-      SD_gvirtgl = SD_B02(amisq,lamv,ami,amusq) + 
+      SD_gvirtgl = SD_B02(amisq,lamv,ami,amusq) +
      .             SD_B02(amjsq,lamv,amj,amusq) -
      .             SD_B02(amhsq,ami,amj,amusq)  +
      .             2.D0*(amisq+amjsq-amhsq)*
@@ -38555,7 +39208,7 @@ c --------------------------------------
      .           SD_A01(am1sq,amusq))+
      .           4.D0*c2q*amq*amgl*SD_B02(amijsq,amgl,amq,amusq)
 
-      return 
+      return
 
       end
 
@@ -38577,7 +39230,7 @@ c --------------------------------------
       SD_gvirtmixdiv = c2q*s2q*(am2sq*dlog(amusq)-am1sq*dlog(amusq) )
      .     +4.D0*c2q*amq*amgl*SD_B02_DIV(amijsq,amgl,amq,amusq)
 
-      return 
+      return
 
       end
 
@@ -38608,7 +39261,7 @@ c --- the running couplings ---
          scalt = ytewsb/dsqrt(g2)
          runmt = rmtc
          runmb = rmbc
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(ast2,0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -38621,7 +39274,7 @@ c --- the running couplings ---
       call SD_higgsst1st2(glttr,ghttr,gattr)
       call SD_phitoptop(hlttr,hhttr,hattr)
 
-c ----------------------------- 
+c -----------------------------
 
       call SD_smatrix(sm)
       amusq  = amuv**2
@@ -38636,7 +39289,7 @@ c -----------------------------
      .        sm(2,2,1)*glttr(2,1)*sm(1,1,1)*
      .        SD_B02(aml**2,ast2,ast1,amusq) +
      .        sm(2,2,1)*glttr(2,2)*sm(2,1,1)*
-     .        SD_B02(aml**2,ast2,ast2,amusq) 
+     .        SD_B02(aml**2,ast2,ast2,amusq)
       elseif(nh.eq.2) then
          coupphi = sm(2,1,1)*ghttr(1,1)*sm(1,1,1)*
      .        SD_B02(amh**2,ast1,ast1,amusq) +
@@ -38645,18 +39298,18 @@ c -----------------------------
      .        sm(2,2,1)*ghttr(2,1)*sm(1,1,1)*
      .        SD_B02(amh**2,ast2,ast1,amusq) +
      .        sm(2,2,1)*ghttr(2,2)*sm(2,1,1)*
-     .        SD_B02(amh**2,ast2,ast2,amusq) 
+     .        SD_B02(amh**2,ast2,ast2,amusq)
       elseif(nh.eq.3) then
          coupphi = sm(2,1,1)*gattr*sm(2,1,1)*
      .        SD_B02(ama**2,ast1,ast2,amusq) -
      .        sm(2,2,1)*gattr*sm(1,1,1)*
-     .        SD_B02(ama**2,ast2,ast1,amusq) 
+     .        SD_B02(ama**2,ast2,ast1,amusq)
       endif
-      
+
       coupphi = dsqrt(2.D0)*amz**2*coupphi
-      
+
 c the result Eq.(17) in the paper
-      
+
       squarktopneut = coupphi
 
 c --------------------------------------------
@@ -38711,7 +39364,7 @@ c the result Eq.(19) in the paper
       SD_topneut1719 = squarktopneut + gluinoex
 
       return
-      
+
       end
 
 c -------------------------------------------------------------------- c
@@ -38741,7 +39394,7 @@ c --- the running couplings ---
          scalt = ytewsb/dsqrt(g2)
          runmt = rmtc
          runmb = rmbc
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(asb2,0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -38754,7 +39407,7 @@ c --- the running couplings ---
       call SD_higgssb1sb2(glbbr,ghbbr,gabbr)
       call SD_phibotbot(hlbbr,hhbbr,habbr)
 
-c ----------------------------- 
+c -----------------------------
 
       call SD_smatrix(sm)
       amusq  = amuv**2
@@ -38769,7 +39422,7 @@ c -----------------------------
      .             sm(2,2,2)*glbbr(2,1)*sm(1,1,2)*
      .             SD_B02(aml**2,asb2,asb1,amusq) +
      .             sm(2,2,2)*glbbr(2,2)*sm(2,1,2)*
-     .             SD_B02(aml**2,asb2,asb2,amusq) 
+     .             SD_B02(aml**2,asb2,asb2,amusq)
       elseif(nh.eq.2) then
          coupphi = sm(2,1,2)*ghbbr(1,1)*sm(1,1,2)*
      .             SD_B02(amh**2,asb1,asb1,amusq) +
@@ -38778,12 +39431,12 @@ c -----------------------------
      .             sm(2,2,2)*ghbbr(2,1)*sm(1,1,2)*
      .             SD_B02(amh**2,asb2,asb1,amusq) +
      .             sm(2,2,2)*ghbbr(2,2)*sm(2,1,2)*
-     .             SD_B02(amh**2,asb2,asb2,amusq) 
+     .             SD_B02(amh**2,asb2,asb2,amusq)
       elseif(nh.eq.3) then
          coupphi = sm(2,1,2)*gabbr*sm(2,1,2)*
      .             SD_B02(ama**2,asb1,asb2,amusq) -
      .             sm(2,2,2)*gabbr*sm(1,1,2)*
-     .             SD_B02(ama**2,asb2,asb1,amusq) 
+     .             SD_B02(ama**2,asb2,asb1,amusq)
       endif
 
       coupphi = dsqrt(2.D0)*amz**2*coupphi
@@ -38883,7 +39536,7 @@ c --- the running couplings ---
          scalt = ytewsb/dsqrt(g2)
          runmt = rmtc
          runmb = rmbc
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(gmst(ni),0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -38896,7 +39549,7 @@ c --- the running couplings ---
       call SD_hcsbotstop(gctbr)
       call SD_higgschudb(chtbrunr,chtbrunl)
 
-c ----------------------------- 
+c -----------------------------
 
       call SD_smatrix(sm)
       amusq = amuv**2
@@ -38910,7 +39563,7 @@ c -----------------------------
      .     sm(ni,2,1)*gctbr(2,1)*sm(1,nj,2)*
      .     SD_B02(amch**2,ast2,asb1,amusq) +
      .     sm(ni,2,1)*gctbr(2,2)*sm(2,nj,2)*
-     .     SD_B02(amch**2,ast2,asb2,amusq) 
+     .     SD_B02(amch**2,ast2,asb2,amusq)
 
       coupphi = dsqrt(2.D0)*amw**2*coupphi
 
@@ -38941,7 +39594,7 @@ c --------------------------------------
 c the result Eq.(19) in the paper
 
       gluinoex = (vs*(amq*(vq(ni)*vqp(nj)+aq(ni)*aqp(nj))+
-     .     mgluino*(vq(ni)*vqp(nj)-aq(ni)*aqp(nj))) 
+     .     mgluino*(vq(ni)*vqp(nj)-aq(ni)*aqp(nj)))
      .     -as*(amq*(vq(ni)*aqp(nj)+aq(ni)*vqp(nj))+
      .     mgluino*(vq(ni)*aqp(nj)-aq(ni)*vqp(nj))))*
      .     SD_B02(gmst(ni)**2,mgluino,amq,amusq) +
@@ -39007,7 +39660,7 @@ c --- the running couplings ---
          scalt = ytewsb/dsqrt(g2)
          runmt = rmtc
          runmb = rmbc
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(gmsb(ni),0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -39020,7 +39673,7 @@ c --- the running couplings ---
       call SD_hcsbotstop(gctbr)
       call SD_higgschudb(chtbrunr,chtbrunl)
 
-c ----------------------------- 
+c -----------------------------
 
       call SD_smatrix(sm)
       amusq = amuv**2
@@ -39034,7 +39687,7 @@ c -----------------------------
      .     sm(nj,2,1)*gctbr(2,1)*sm(1,ni,2)*
      .     SD_B02(amch**2,ast2,asb1,amusq) +
      .     sm(nj,2,1)*gctbr(2,2)*sm(2,ni,2)*
-     .     SD_B02(amch**2,ast2,asb2,amusq) 
+     .     SD_B02(amch**2,ast2,asb2,amusq)
 
       coupphi = dsqrt(2.D0)*amw**2*coupphi
 
@@ -39065,7 +39718,7 @@ c --------------------------------------
 c the result Eq.(19) in the paper
 
       gluinoex = (vs*(amq*(vq(nj)*vqp(ni)+aq(nj)*aqp(ni))+
-     .     mgluino*(vq(nj)*vqp(ni)-aq(nj)*aqp(ni))) 
+     .     mgluino*(vq(nj)*vqp(ni)-aq(nj)*aqp(ni)))
      .     -as*(amq*(vq(nj)*aqp(ni)+aq(nj)*vqp(ni))+
      .     mgluino*(vq(nj)*aqp(ni)-aq(nj)*vqp(ni))))*
      .     SD_B02(gmst(nj)**2,mgluino,amq,amusq) +
@@ -39146,7 +39799,7 @@ c ---- the running couplings ----
          scalt = ytewsb/dsqrt(g2)
          runmt = rmtc
          runmb = rmbc
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(amsq,0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -39161,13 +39814,13 @@ c ---- the running couplings ----
      .                        gcdthbr)
 
 c --- the running mass ---
-      
+
       amtt = runmt
       ambb = runmb
 
 c -------------------------------
 
-      SD_dcounterhc = 1.D0/2.D0*gctbr(ic,jc)*( 
+      SD_dcounterhc = 1.D0/2.D0*gctbr(ic,jc)*(
      .     SD_deltaz(amsq,mgluino,amq,theq,amuv,lamv,ni) +
      .     SD_deltaz(amsqp,mgluino,amqp,theqp,amuv,lamv,nj) ) +
      .     gcdmtr(ic,jc)*amtt*
@@ -39185,7 +39838,7 @@ c -------------------------------
 
       SD_dcounterhc = -dsqrt(2.D0)*amw**2*SD_dcounterhc
 
-      return 
+      return
 
       end
 
@@ -39218,7 +39871,7 @@ c --- the running couplings ---
          scalt = ytewsb/dsqrt(g2)
          runmt = rmtc
          runmb = rmbc
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(amsq2,0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -39236,7 +39889,7 @@ c --- the running couplings ---
      .           dababbr,dthlbbr,dthhbbr,dthabbr)
 
 c --- the running mass ---
-      
+
       if(nq.eq.1) then
          amqq = runmt
       elseif(nq.eq.2) then
@@ -39280,7 +39933,7 @@ c --- some definitions ---
 c ------------------------
 
       SD_dcounterneut = gqqr(2,1)/2.D0*(
-     .     SD_deltaz(amsq2,mgluino,amq,theq,amuv,lamv,2) 
+     .     SD_deltaz(amsq2,mgluino,amq,theq,amuv,lamv,2)
      .     +SD_deltaz(amsq1,mgluino,amq,theq,amuv,lamv,1) )
      .     +dmqqr(2,1)*amqq*
      .     SD_deltamqdiv(amsq1,amsq2,mgluino,amq,theq,amuvdiv,lamv) +
@@ -39305,19 +39958,19 @@ c --------------------------------------
 
       amusq = amuv**2
 
-      SD_deltaz = 2.D0*( 
+      SD_deltaz = 2.D0*(
      .     (amq**2+mgluino**2-amsq**2)*
-     .     SD_BP02(amsq**2,amq,mgluino,amusq) - 
-     .     SD_B02(amsq**2,amq,mgluino,amusq) 
+     .     SD_BP02(amsq**2,amq,mgluino,amusq) -
+     .     SD_B02(amsq**2,amq,mgluino,amusq)
      .     + SD_B02(amsq**2,lamv,amsq,amusq) +
      .     2.D0*(-1.D0)**ni*dsin(2.D0*theq)*mgluino*amq*
-     .     SD_BP02(amsq**2,amq,mgluino,amusq) 
+     .     SD_BP02(amsq**2,amq,mgluino,amusq)
      .     +2.D0*amsq**2*
      .     SD_BP02(amsq**2,lamv,amsq,amusq) )
 
-      return 
+      return
 
-      end 
+      end
 
 c -------------------------------------------------------------------- c
 
@@ -39400,7 +40053,7 @@ c --------------------------------------
      .     4.D0*SD_B02(amq**2,amq,lamv,amusq) +
      .     SD_B1(amq**2,mgluino,amsq1,amusq) +
      .     SD_B1(amq**2,mgluino,amsq2,amusq) ) +
-     .     dsin(2.D0*theq)*mgluino/amq*( 
+     .     dsin(2.D0*theq)*mgluino/amq*(
      .     SD_B02(amq**2,mgluino,amsq1,amusq) -
      .     SD_B02(amq**2,mgluino,amsq2,amusq) )
 
@@ -39421,7 +40074,7 @@ c --------------------------------------
      .     4.D0*SD_B02_DIV(amq**2,amq,lamv,amusq) +
      .     SD_B1_DIV(amq**2,mgluino,amsq1,amusq) +
      .     SD_B1_DIV(amq**2,mgluino,amsq2,amusq) ) +
-     .     dsin(2.D0*theq)*mgluino/amq*( 
+     .     dsin(2.D0*theq)*mgluino/amq*(
      .     SD_B02_DIV(amq**2,mgluino,amsq1,amusq) -
      .     SD_B02_DIV(amq**2,mgluino,amsq2,amusq) )
 
@@ -39442,9 +40095,9 @@ c --------------------------------------
 
       amusq = amuv**2
       ip = 3 - i
-      
+
       if(nq.eq.1) then
-         gmsq(1) = ast1 
+         gmsq(1) = ast1
          gmsq(2) = ast2
       elseif(nq.eq.2) then
          gmsq(1) = asb1
@@ -39458,10 +40111,10 @@ c --------------------------------------
      .     1.D0/2.D0*((1.D0+dcos(2.D0*theq)**2)*SD_A01(amsq**2,amusq)
      .     + dsin(2.D0*theq)**2*SD_A01(gmsq(ip)**2,amusq) ) -
      .     2.D0*(-1.D0)**i*dsin(2.D0*theq)*mgluino*amq*
-     .     SD_B02(amsq**2,amq,mgluino,amusq) 
+     .     SD_B02(amsq**2,amq,mgluino,amusq)
 
       return
-      
+
       end
 
 c -------------------------------------------------------------------- c
@@ -39477,9 +40130,9 @@ c --------------------------------------
 
       amusq = amuv**2
       ip = 3 - i
-      
+
       if(nq.eq.1) then
-         gmsq(1) = ast1 
+         gmsq(1) = ast1
          gmsq(2) = ast2
       elseif(nq.eq.2) then
          gmsq(1) = asb1
@@ -39494,10 +40147,10 @@ c --------------------------------------
      .     SD_A01_DIV(amsq**2,amusq)
      .     + dsin(2.D0*theq)**2*SD_A01_DIV(gmsq(ip)**2,amusq) ) -
      .     2.D0*(-1.D0)**i*dsin(2.D0*theq)*mgluino*amq*
-     .     SD_B02_DIV(amsq**2,amq,mgluino,amusq) 
+     .     SD_B02_DIV(amsq**2,amq,mgluino,amusq)
 
       return
-      
+
       end
 
 c -------------------------------------------------------------------- c
@@ -39521,7 +40174,7 @@ c --- the running couplings ---
       if(scalechoice.eq.1.D0) then
          scalb = ybewsb/dsqrt(g2)
          scalt = ytewsb/dsqrt(g2)
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(scala,0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -39612,8 +40265,8 @@ c --- QCD corrections to the light squar
       endif
 
       SD_ftotqcd = -1.D0/8.D0*( (4.D0*gam**2-27.D0*gam+25.D0)/(gam-1.D0)
-     .     + (3.D0*kap-5.D0)/(kap-1.D0) ) - pi**2/3.D0 
-     .     - 2.D0*dreal(SD_ccspen(dcmplx(kap))) 
+     .     + (3.D0*kap-5.D0)/(kap-1.D0) ) - pi**2/3.D0
+     .     - 2.D0*dreal(SD_ccspen(dcmplx(kap)))
      .     - 1.D0/2.D0*(gam**2-1.D0)*
      .     dreal(cdlog(dcmplx((gam-1.D0)/gam)))
      .     + (3.D0*gam**2-4.D0*gam+2.D0)/
@@ -39627,7 +40280,7 @@ c---- end maggie changed 14 July 2012
      .     + (kap+gam-2.D0)/(1.D0-kap)**2*dreal(funci) )
 
       return
-    
+
       end
 
 c -------------------------------------------------------------------- c
@@ -39676,7 +40329,7 @@ c --- squark_i -> chargino_j/neutralino_
       amuv    = amusc
       lamv    = lamsc
       amuvdiv = amuscdiv
-      
+
       vt(1) = 1.D0/2.D0*(dcos(thet)-dsin(thet))
       vt(2) = -1.D0/2.D0*(dcos(thet)+dsin(thet))
       at(1) = -vt(2)
@@ -39698,7 +40351,7 @@ c --- the running couplings ---
          scalt = ytewsb/dsqrt(g2)
          runmt = rmtc
          runmb = rmbc
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(gmst(ni),0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -39718,7 +40371,7 @@ c -------------
 
       do k=1,2,1
          SD_gltneut = SD_gltneut - 2.D0*(
-     .        atopr(k,nj)*( 
+     .        atopr(k,nj)*(
      .        (vt(k)*vt(ni)+at(k)*at(ni))*fnt4ik(ni,nj,k) -
      .        (at(k)*vt(ni)+vt(k)*at(ni))*fnt5ik(ni,nj,k) +
      .        (vt(k)*vt(ni)-at(k)*at(ni))*fnt6ik(ni,nj,k) -
@@ -39730,7 +40383,7 @@ c -------------
      .        (at(k)*vt(ni)-vt(k)*at(ni))*fnt3ik(ni,nj,k)) )
       end do
 
-      SD_gltneut = SD_gltneut + btopr(ni,nj)*fnt1(ni,nj) + 
+      SD_gltneut = SD_gltneut + btopr(ni,nj)*fnt1(ni,nj) +
      .     atopr(ni,nj)*fnt2(ni,nj)
 
       SD_gltneut = SD_gltneut + (-1.D0)**ni*(del(1,ni)*btopr(2,nj)+
@@ -39751,7 +40404,7 @@ c -------------
      .        SD_delthdiv(amqt,mgluino,ast1,ast2,thet,amuvdiv) -
      .        (-dsqrt(2.D0))*sw*(2.D0/3.D0*zp(nj,1)-2.D0/3.D0*sw/cw*
      .        zp(nj,2))*dcos(thet)*
-     .        SD_delthdiv(amqt,mgluino,ast1,ast2,thet,amuvdiv) 
+     .        SD_delthdiv(amqt,mgluino,ast1,ast2,thet,amuvdiv)
       elseif(ni.eq.2) then
          SD_gltneut = SD_gltneut + 1.D0/2.D0*btopr(2,nj)*(
      .        SD_delztr(amqt,mgluino,ast1,ast2,thet,amuv,lamv) +
@@ -39768,7 +40421,7 @@ c -------------
 
       SD_gltneut = (-1.D0)*SD_gltneut
 
-      return 
+      return
 
       end
 
@@ -39836,7 +40489,7 @@ c --- the running couplings ---
          scalt = ytewsb/dsqrt(g2)
          runmt = rmtc
          runmb = rmbc
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(gmsb(ni),0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -39856,7 +40509,7 @@ c -------------
 
       do k=1,2,1
          SD_glbneut = SD_glbneut - 2.D0*(
-     .        abot(k,nj)*( 
+     .        abot(k,nj)*(
      .        (vb(k)*vb(ni)+ab(k)*ab(ni))*fnb4ik(ni,nj,k) -
      .        (ab(k)*vb(ni)+vb(k)*ab(ni))*fnb5ik(ni,nj,k) +
      .        (vb(k)*vb(ni)-ab(k)*ab(ni))*fnb6ik(ni,nj,k) -
@@ -39868,7 +40521,7 @@ c -------------
      .        (ab(k)*vb(ni)-vb(k)*ab(ni))*fnb3ik(ni,nj,k)) )
       end do
 
-      SD_glbneut = SD_glbneut + bbot(ni,nj)*fnb1(ni,nj) + 
+      SD_glbneut = SD_glbneut + bbot(ni,nj)*fnb1(ni,nj) +
      .     abot(ni,nj)*fnb2(ni,nj)
 
       SD_glbneut = SD_glbneut + (-1.D0)**ni*(del(1,ni)*bbot(2,nj)+
@@ -39889,7 +40542,7 @@ c -------------
      .        SD_delthdiv(amqb,mgluino,asb1,asb2,theb,amuvdiv) -
      .        (-dsqrt(2.D0))*sw*(-1.D0/3.D0*zp(nj,1)+1.D0/3.D0*sw/cw*
      .        zp(nj,2))*dcos(theb)*
-     .        SD_delthdiv(amqb,mgluino,asb1,asb2,theb,amuvdiv) 
+     .        SD_delthdiv(amqb,mgluino,asb1,asb2,theb,amuvdiv)
       elseif(ni.eq.2) then
          SD_glbneut = SD_glbneut + 1.D0/2.D0*bbot(2,nj)*(
      .        SD_delztr(amqb,mgluino,asb1,asb2,theb,amuv,lamv) +
@@ -39906,7 +40559,7 @@ c -------------
 
       SD_glbneut = (-1.D0)*SD_glbneut
 
-      return 
+      return
 
       end
 
@@ -39974,7 +40627,7 @@ c --- the running couplings ---
          scalt = ytewsb/dsqrt(g2)
          runmt = rmtc
          runmb = rmbc
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(gmst(ni),0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -39994,7 +40647,7 @@ c -------------
 
       do k=1,2,1
          SD_grtneut = SD_grtneut - 2.D0*(
-     .        btopr(k,nj)*( 
+     .        btopr(k,nj)*(
      .        (vt(k)*vt(ni)+at(k)*at(ni))*fnt4ik(ni,nj,k) +
      .        (at(k)*vt(ni)+vt(k)*at(ni))*fnt5ik(ni,nj,k) +
      .        (vt(k)*vt(ni)-at(k)*at(ni))*fnt6ik(ni,nj,k) +
@@ -40006,7 +40659,7 @@ c -------------
      .        (at(k)*vt(ni)-vt(k)*at(ni))*fnt3ik(ni,nj,k)) )
       end do
 
-      SD_grtneut = SD_grtneut + atopr(ni,nj)*fnt1(ni,nj) + 
+      SD_grtneut = SD_grtneut + atopr(ni,nj)*fnt1(ni,nj) +
      .         btopr(ni,nj)*fnt2(ni,nj)
 
       SD_grtneut = SD_grtneut + (-1.D0)**ni*(del(1,ni)*atopr(2,nj)+
@@ -40027,7 +40680,7 @@ c -------------
      .        SD_delthdiv(amqt,mgluino,ast1,ast2,thet,amuvdiv) +
      .        dsqrt(2.D0)*sw*(2.D0/3.D0*zp(nj,1)+(1.D0/2.D0-
      .         2.D0/3.D0*sw**2)*1.D0/sw/cw*zp(nj,2))*dsin(thet)*
-     .        SD_delthdiv(amqt,mgluino,ast1,ast2,thet,amuvdiv) 
+     .        SD_delthdiv(amqt,mgluino,ast1,ast2,thet,amuvdiv)
       elseif(ni.eq.2) then
          SD_grtneut = SD_grtneut + 1.D0/2.D0*atopr(2,nj)*(
      .        SD_delztl(amqt,mgluino,ast1,ast2,thet,amuv,lamv) +
@@ -40039,12 +40692,12 @@ c -------------
      .        SD_delthdiv(amqt,mgluino,ast1,ast2,thet,amuvdiv) +
      .        dsqrt(2.D0)*sw*(2.D0/3.D0*zp(nj,1)+(1.D0/2.D0-
      .         2.D0/3.D0*sw**2)*1.D0/sw/cw*zp(nj,2))*dcos(thet)*
-     .        SD_delthdiv(amqt,mgluino,ast1,ast2,thet,amuvdiv) 
+     .        SD_delthdiv(amqt,mgluino,ast1,ast2,thet,amuvdiv)
       endif
 
       SD_grtneut = (-1.D0)*SD_grtneut
 
-      return 
+      return
 
       end
 
@@ -40112,7 +40765,7 @@ c --- the running couplings ---
          scalt = ytewsb/dsqrt(g2)
          runmt = rmtc
          runmb = rmbc
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(gmsb(ni),0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -40132,7 +40785,7 @@ c -------------
 
       do k=1,2,1
          SD_grbneut = SD_grbneut - 2.D0*(
-     .        bbot(k,nj)*( 
+     .        bbot(k,nj)*(
      .        (vb(k)*vb(ni)+ab(k)*ab(ni))*fnb4ik(ni,nj,k) +
      .        (ab(k)*vb(ni)+vb(k)*ab(ni))*fnb5ik(ni,nj,k) +
      .        (vb(k)*vb(ni)-ab(k)*ab(ni))*fnb6ik(ni,nj,k) +
@@ -40144,7 +40797,7 @@ c -------------
      .        (ab(k)*vb(ni)-vb(k)*ab(ni))*fnb3ik(ni,nj,k)) )
       end do
 
-      SD_grbneut = SD_grbneut + abot(ni,nj)*fnb1(ni,nj) + 
+      SD_grbneut = SD_grbneut + abot(ni,nj)*fnb1(ni,nj) +
      .         bbot(ni,nj)*fnb2(ni,nj)
 
       SD_grbneut = SD_grbneut + (-1.D0)**ni*(del(1,ni)*abot(2,nj)+
@@ -40165,7 +40818,7 @@ c -------------
      .        SD_delthdiv(amqb,mgluino,asb1,asb2,theb,amuvdiv) +
      .        dsqrt(2.D0)*sw*(-1.D0/3.D0*zp(nj,1)+(-1.D0/2.D0+
      .         1.D0/3.D0*sw**2)*1.D0/sw/cw*zp(nj,2))*dsin(theb)*
-     .        SD_delthdiv(amqb,mgluino,asb1,asb2,theb,amuvdiv) 
+     .        SD_delthdiv(amqb,mgluino,asb1,asb2,theb,amuvdiv)
       elseif(ni.eq.2) then
          SD_grbneut = SD_grbneut + 1.D0/2.D0*abot(2,nj)*(
      .        SD_delztl(amqb,mgluino,asb1,asb2,theb,amuv,lamv) +
@@ -40177,12 +40830,12 @@ c -------------
      .        SD_delthdiv(amqb,mgluino,asb1,asb2,theb,amuvdiv) +
      .        dsqrt(2.D0)*sw*(-1.D0/3.D0*zp(nj,1)+(-1.D0/2.D0+
      .         1.D0/3.D0*sw**2)*1.D0/sw/cw*zp(nj,2))*dcos(theb)*
-     .        SD_delthdiv(amqb,mgluino,asb1,asb2,theb,amuvdiv) 
+     .        SD_delthdiv(amqb,mgluino,asb1,asb2,theb,amuvdiv)
       endif
 
       SD_grbneut = (-1.D0)*SD_grbneut
 
-      return 
+      return
 
       end
 
@@ -40256,7 +40909,7 @@ c --- the running couplings ---
          scalt = ytewsb/dsqrt(g2)
          runmt = rmtc
          runmb = rmbc
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(gmst(ni),0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -40278,7 +40931,7 @@ c -------------
 
       do k=1,2,1
          SD_gltchar = SD_gltchar -2.D0*(
-     .        alsbot(k,nj)*( 
+     .        alsbot(k,nj)*(
      .        (vb(k)*vt(ni)+ab(k)*at(ni))*fct4ik(ni,nj,k) -
      .        (ab(k)*vt(ni)+vb(k)*at(ni))*fct5ik(ni,nj,k) +
      .        (vb(k)*vt(ni)-ab(k)*at(ni))*fct6ik(ni,nj,k) -
@@ -40290,7 +40943,7 @@ c -------------
      .        (ab(k)*vt(ni)-vb(k)*at(ni))*fct3ik(ni,nj,k)) )
       end do
 
-      SD_gltchar = SD_gltchar + 
+      SD_gltchar = SD_gltchar +
      .         akstor(ni,nj)*fct1(ni,nj) + alstor(ni,nj)*fct2(ni,nj)
 
       SD_gltchar = SD_gltchar + (-1.D0)**ni*(del(1,ni)*akstor(2,nj)+
@@ -40318,7 +40971,7 @@ c -------------
 
       SD_gltchar = (-1.D0)*SD_gltchar
 
-      return 
+      return
 
       end
 
@@ -40392,7 +41045,7 @@ c --- the running couplings ---
          scalt = ytewsb/dsqrt(g2)
          runmt = rmtc
          runmb = rmbc
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(gmsb(ni),0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -40414,7 +41067,7 @@ c -------------
 
       do k=1,2,1
          SD_glbchar = SD_glbchar - 2.D0*(
-     .        alstor(k,nj)*( 
+     .        alstor(k,nj)*(
      .        (vt(k)*vb(ni)+at(k)*ab(ni))*fcb4ik(ni,nj,k) -
      .        (at(k)*vb(ni)+vt(k)*ab(ni))*fcb5ik(ni,nj,k) +
      .        (vt(k)*vb(ni)-at(k)*ab(ni))*fcb6ik(ni,nj,k) -
@@ -40426,7 +41079,7 @@ c -------------
      .        (at(k)*vb(ni)-vt(k)*ab(ni))*fcb3ik(ni,nj,k)) )
       end do
 
-      SD_glbchar = SD_glbchar + 
+      SD_glbchar = SD_glbchar +
      .         aksbot(ni,nj)*fcb1(ni,nj) + alsbot(ni,nj)*fcb2(ni,nj)
 
       SD_glbchar = SD_glbchar + (-1.D0)**ni*(del(1,ni)*aksbot(2,nj)+
@@ -40454,7 +41107,7 @@ c -------------
 
       SD_glbchar = (-1.D0)*SD_glbchar
 
-      return 
+      return
 
       end
 
@@ -40528,7 +41181,7 @@ c --- the running couplings ---
          scalt = ytewsb/dsqrt(g2)
          runmt = rmtc
          runmb = rmbc
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(gmst(ni),0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -40550,7 +41203,7 @@ c -------------
 
       do k=1,2,1
          SD_grtchar = SD_grtchar -2.D0*(
-     .        aksbot(k,nj)*( 
+     .        aksbot(k,nj)*(
      .        (vb(k)*vt(ni)+ab(k)*at(ni))*fct4ik(ni,nj,k) +
      .        (ab(k)*vt(ni)+vb(k)*at(ni))*fct5ik(ni,nj,k) +
      .        (vb(k)*vt(ni)-ab(k)*at(ni))*fct6ik(ni,nj,k) +
@@ -40562,7 +41215,7 @@ c -------------
      .        (ab(k)*vt(ni)-vb(k)*at(ni))*fct3ik(ni,nj,k)) )
       end do
 
-      SD_grtchar = SD_grtchar + 
+      SD_grtchar = SD_grtchar +
      .         alstor(ni,nj)*fct1(ni,nj) + akstor(ni,nj)*fct2(ni,nj)
 
       SD_grtchar = SD_grtchar + (-1.D0)**ni*(del(1,ni)*alstor(2,nj)+
@@ -40582,7 +41235,7 @@ c -------------
      .        v(nj,1)*dsin(thet)*
      .        SD_delthdiv(amqt,mgluino,ast1,ast2,thet,amuvdiv) +
      .        runmt*v(nj,2)/dsqrt(2.D0)/amw/dsin(bet)*dcos(thet)*
-     .        SD_delthdiv(amqt,mgluino,ast1,ast2,thet,amuvdiv) 
+     .        SD_delthdiv(amqt,mgluino,ast1,ast2,thet,amuvdiv)
       elseif(ni.eq.2) then
          SD_grtchar = SD_grtchar + 1.D0/2.D0*alstor(2,nj)*(
      .        SD_delztl(amqb,mgluino,asb1,asb2,theb,amuv,lamv) +
@@ -40598,7 +41251,7 @@ c -------------
 
       SD_grtchar = (-1.D0)*SD_grtchar
 
-      return 
+      return
 
       end
 
@@ -40672,7 +41325,7 @@ c --- the running couplings ---
          scalt = ytewsb/dsqrt(g2)
          runmt = rmtc
          runmb = rmbc
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(gmsb(ni),0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -40694,7 +41347,7 @@ c -------------
 
       do k=1,2,1
          SD_grbchar = SD_grbchar - 2.D0*(
-     .        akstor(k,nj)*( 
+     .        akstor(k,nj)*(
      .        (vt(k)*vb(ni)+at(k)*ab(ni))*fcb4ik(ni,nj,k) +
      .        (at(k)*vb(ni)+vt(k)*ab(ni))*fcb5ik(ni,nj,k) +
      .        (vt(k)*vb(ni)-at(k)*ab(ni))*fcb6ik(ni,nj,k) +
@@ -40706,7 +41359,7 @@ c -------------
      .        (at(k)*vb(ni)-vt(k)*ab(ni))*fcb3ik(ni,nj,k)) )
       end do
 
-      SD_grbchar = SD_grbchar + 
+      SD_grbchar = SD_grbchar +
      .         alsbot(ni,nj)*fcb1(ni,nj) + aksbot(ni,nj)*fcb2(ni,nj)
 
       SD_grbchar = SD_grbchar + (-1.D0)**ni*(del(1,ni)*alsbot(2,nj)+
@@ -40726,7 +41379,7 @@ c -------------
      .        u(nj,1)*dsin(theb)*
      .        SD_delthdiv(amqb,mgluino,asb1,asb2,theb,amuvdiv) +
      .        runmb*u(nj,2)/dsqrt(2.D0)/amw/dcos(bet)*dcos(theb)*
-     .        SD_delthdiv(amqb,mgluino,asb1,asb2,theb,amuvdiv) 
+     .        SD_delthdiv(amqb,mgluino,asb1,asb2,theb,amuvdiv)
       elseif(ni.eq.2) then
          SD_grbchar = SD_grbchar + 1.D0/2.D0*alsbot(2,nj)*(
      .        SD_delztl(amqt,mgluino,ast1,ast2,thet,amuv,lamv) +
@@ -40742,7 +41395,7 @@ c -------------
 
       SD_grbchar = (-1.D0)*SD_grbchar
 
-      return 
+      return
 
       end
 
@@ -40780,7 +41433,7 @@ c --------------------------------------
 
       do i=1,2,1
          do j=1,4,1
-            fnt1(i,j) = SD_B02(gmst(i)**2,lamv,gmst(i),amuv**2) + 
+            fnt1(i,j) = SD_B02(gmst(i)**2,lamv,gmst(i),amuv**2) +
      .        2.D0*amqt**2*dreal(SD_C0_lam(amqt,gmst(i),amneut(j),lamv))
      .         -2.D0*gmst(i)**2*(
      .         SD_C1_lam(amqt,gmst(i),amneut(j),amqt,lamv,gmst(i),amuv,
@@ -40789,7 +41442,7 @@ c --------------------------------------
      .                lamv))
      .         +2.D0*amneut(j)**2*
      .         SD_C1_lam(amqt,gmst(i),amneut(j),amqt,lamv,gmst(i),amuv,
-     .                lamv) 
+     .                lamv)
 
             fnt2(i,j) = -2.D0*amqt*xmneut(j)*(
      .         dreal(SD_C0_lam(amqt,gmst(i),amneut(j),lamv)) +
@@ -40845,8 +41498,8 @@ c --------------------------------------
      .                      amqt,amuv) ) + amneut(j)**2*
      .              SD_C2(amqt,gmst(i),amneut(j),gmst(k),mgluino,
      .                      amqt,amuv) +
-     .              SD_B02(gmst(i)**2,mgluino,amqt,amuv**2) 
-               fnt7ik(i,j,k) = gmst(k)**2* 
+     .              SD_B02(gmst(i)**2,mgluino,amqt,amuv**2)
+               fnt7ik(i,j,k) = gmst(k)**2*
      .              dreal(SD_C03(amqt**2,gmst(i)**2,amneut(j)**2,
      .              gmst(k),mgluino,amqt)) - amqt*amqt*(
      .              dreal(SD_C03(amqt**2,gmst(i)**2,amneut(j)**2,
@@ -40861,15 +41514,15 @@ c --------------------------------------
      .                      amqt,amuv) ) + amneut(j)**2*
      .              SD_C2(amqt,gmst(i),amneut(j),gmst(k),mgluino,
      .                      amqt,amuv) +
-     .              SD_B02(gmst(i)**2,mgluino,amqt,amuv**2) 
+     .              SD_B02(gmst(i)**2,mgluino,amqt,amuv**2)
             enddo
          enddo
       enddo
 
       do i=1,2,1
          do j=1,2,1
-            fct1(i,j) = SD_B02(gmst(i)**2,lamv,gmst(i),amuv**2) + 
-     .       2.D0*amqb**2*dreal(SD_C0_lam(amqb,gmst(i),amchar(j),lamv)) 
+            fct1(i,j) = SD_B02(gmst(i)**2,lamv,gmst(i),amuv**2) +
+     .       2.D0*amqb**2*dreal(SD_C0_lam(amqb,gmst(i),amchar(j),lamv))
      .         -2.D0*gmst(i)**2*(
      .         SD_C1_lam(amqb,gmst(i),amchar(j),amqb,lamv,gmst(i),amuv,
      .                lamv) -
@@ -40918,7 +41571,7 @@ c --------------------------------------
      .                      amqt,amuv) -
      .              SD_C2(amqb,gmst(i),amchar(j),gmsb(k),mgluino,
      .                      amqt,amuv) ) )
-               fct6ik(i,j,k) = gmsb(k)**2* 
+               fct6ik(i,j,k) = gmsb(k)**2*
      .              dreal(SD_C03(amqb**2,gmst(i)**2,amchar(j)**2,
      .              gmsb(k),mgluino,amqt)) + amqt*amqb*(
      .              dreal(SD_C03(amqb**2,gmst(i)**2,amchar(j)**2,
@@ -40949,7 +41602,7 @@ c --------------------------------------
      .                      amqt,amuv) ) + amchar(j)**2*
      .              SD_C2(amqb,gmst(i),amchar(j),gmsb(k),mgluino,
      .                      amqt,amuv) +
-     .              SD_B02(gmst(i)**2,mgluino,amqt,amuv**2) 
+     .              SD_B02(gmst(i)**2,mgluino,amqt,amuv**2)
             enddo
          enddo
       enddo
@@ -40992,7 +41645,7 @@ c      call SD_runmass(gmsb(idec),0.D0,0
 
       do i=1,2,1
          do j=1,4,1
-            fnb1(i,j) = SD_B02(gmsb(i)**2,lamv,gmsb(i),amuv**2) + 
+            fnb1(i,j) = SD_B02(gmsb(i)**2,lamv,gmsb(i),amuv**2) +
      .       2.D0*amqb**2*dreal(SD_C0_lam(amqb,gmsb(i),amneut(j),lamv))
      .         -2.D0*gmsb(i)**2*(
      .         SD_C1_lam(amqb,gmsb(i),amneut(j),amqb,lamv,gmsb(i),amuv,
@@ -41001,7 +41654,7 @@ c      call SD_runmass(gmsb(idec),0.D0,0
      .                lamv))
      .         +2.D0*amneut(j)**2*
      .         SD_C1_lam(amqb,gmsb(i),amneut(j),amqb,lamv,gmsb(i),amuv,
-     .                lamv) 
+     .                lamv)
 
             fnb2(i,j) = -2.D0*amqb*xmneut(j)*(
      .         dreal(SD_C0_lam(amqb,gmsb(i),amneut(j),lamv)) +
@@ -41058,7 +41711,7 @@ c      call SD_runmass(gmsb(idec),0.D0,0
      .              SD_C2(amqb,gmsb(i),amneut(j),gmsb(k),mgluino,
      .                      amqb,amuv) +
      .              SD_B02(gmsb(i)**2,mgluino,amqb,amuv**2)
-               fnb7ik(i,j,k) = gmsb(k)**2* 
+               fnb7ik(i,j,k) = gmsb(k)**2*
      .              dreal(SD_C03(amqb**2,gmsb(i)**2,amneut(j)**2,
      .              gmsb(k),mgluino,amqb)) - amqb*amqb*(
      .              dreal(SD_C03(amqb**2,gmsb(i)**2,amneut(j)**2,
@@ -41073,15 +41726,15 @@ c      call SD_runmass(gmsb(idec),0.D0,0
      .                      amqb,amuv) ) + amneut(j)**2*
      .              SD_C2(amqb,gmsb(i),amneut(j),gmsb(k),mgluino,
      .                      amqb,amuv) +
-     .              SD_B02(gmsb(i)**2,mgluino,amqb,amuv**2) 
+     .              SD_B02(gmsb(i)**2,mgluino,amqb,amuv**2)
             enddo
          enddo
       enddo
 
       do i=1,2,1
          do j=1,2,1
-            fcb1(i,j) = SD_B02(gmsb(i)**2,lamv,gmsb(i),amuv**2) + 
-     .       2.D0*amqt**2*dreal(SD_C0_lam(amqt,gmsb(i),amchar(j),lamv)) 
+            fcb1(i,j) = SD_B02(gmsb(i)**2,lamv,gmsb(i),amuv**2) +
+     .       2.D0*amqt**2*dreal(SD_C0_lam(amqt,gmsb(i),amchar(j),lamv))
      .         -2.D0*gmsb(i)**2*(
      .         SD_C1_lam(amqt,gmsb(i),amchar(j),amqt,lamv,gmsb(i),amuv,
      .                lamv) -
@@ -41130,7 +41783,7 @@ c      call SD_runmass(gmsb(idec),0.D0,0
      .                      amqb,amuv) -
      .              SD_C2(amqt,gmsb(i),amchar(j),gmst(k),mgluino,
      .                      amqb,amuv) ) )
-               fcb6ik(i,j,k) = gmst(k)**2* 
+               fcb6ik(i,j,k) = gmst(k)**2*
      .              dreal(SD_C03(amqt**2,gmsb(i)**2,amchar(j)**2,
      .              gmst(k),mgluino,amqb)) + amqb*amqt*(
      .              dreal(SD_C03(amqt**2,gmsb(i)**2,amchar(j)**2,
@@ -41161,7 +41814,7 @@ c      call SD_runmass(gmsb(idec),0.D0,0
      .                      amqb,amuv) ) + amchar(j)**2*
      .              SD_C2(amqt,gmsb(i),amchar(j),gmst(k),mgluino,
      .                      amqb,amuv) +
-     .              SD_B02(gmsb(i)**2,mgluino,amqb,amuv**2) 
+     .              SD_B02(gmsb(i)**2,mgluino,amqb,amuv**2)
             enddo
          enddo
       enddo
@@ -41180,9 +41833,9 @@ c --------------------------------------
      .     SD_sigmal(amq,mgluino,ast1,ast2,thet,amuv,lamv) ) +
      .     SD_sigmas(amq,mgluino,ast1,ast2,thet,amuv,lamv)
 
-      return 
-      
-      end 
+      return
+
+      end
 
 c -------------------------------------------------------------------- c
 
@@ -41196,9 +41849,9 @@ c --------------------------------------
      .     SD_sigmaldiv(amq,mgluino,ast1,ast2,thet,amuv,lamv) ) +
      .     SD_sigmasdiv(amq,mgluino,ast1,ast2,thet,amuv,lamv)
 
-      return 
-      
-      end 
+      return
+
+      end
 
 c -------------------------------------------------------------------- c
 
@@ -41244,7 +41897,7 @@ c --------------------------------------
      .     -2.D0*amsq**2*SD_BP1(amsq**2,amsq,lamv,amuv**2) +
      .     (amqt**2+mgluino**2-amsq**2)*
      .     SD_BP02(amsq**2,amqt,mgluino,amuv**2) -
-     .     SD_B02(amsq**2,amqt,mgluino,amuv**2) + 
+     .     SD_B02(amsq**2,amqt,mgluino,amuv**2) +
      .     (-1.D0)**ni*2.D0*dsin(2.D0*thet)*amqt*mgluino*
      .     SD_BP02(amsq**2,amqt,mgluino,amuv**2) )
 
@@ -41259,14 +41912,14 @@ c --------------------------------------
 
       implicit double precision (a-h,k-z)
 
-      SD_sigmar = -(2.D0*SD_B1(amq**2,amq,lamv,amuv**2)+ 
+      SD_sigmar = -(2.D0*SD_B1(amq**2,amq,lamv,amuv**2)+
      .     (1.D0-dcos(2.D0*thet))*SD_B1(amq**2,mgluino,ast1,amuv**2)
      .    +(1.D0+dcos(2.D0*thet))*SD_B1(amq**2,mgluino,ast2,amuv**2)
      .     )
 
       return
 
-      end 
+      end
 
 c -------------------------------------------------------------------- c
 
@@ -41275,14 +41928,14 @@ c --------------------------------------
 
       implicit double precision (a-h,k-z)
 
-      SD_sigmardiv = -(2.D0*SD_B1_DIV(amq**2,amq,lamv,amuv**2)+ 
+      SD_sigmardiv = -(2.D0*SD_B1_DIV(amq**2,amq,lamv,amuv**2)+
      .     (1.D0-dcos(2.D0*thet))*SD_B1_DIV(amq**2,mgluino,ast1,amuv**2)
      .    +(1.D0+dcos(2.D0*thet))*SD_B1_DIV(amq**2,mgluino,ast2,amuv**2)
      .     )
 
       return
 
-      end 
+      end
 
 c -------------------------------------------------------------------- c
 
@@ -41291,14 +41944,14 @@ c --------------------------------------
 
       implicit double precision (a-h,k-z)
 
-      SD_sigmarp = -(2.D0*SD_BP1(amq**2,amq,lamv,amuv**2)+ 
+      SD_sigmarp = -(2.D0*SD_BP1(amq**2,amq,lamv,amuv**2)+
      .     (1.D0-dcos(2.D0*thet))*SD_BP1(amq**2,mgluino,ast1,amuv**2)
      .    +(1.D0+dcos(2.D0*thet))*SD_BP1(amq**2,mgluino,ast2,amuv**2)
      .     )
 
       return
 
-      end 
+      end
 
 c -------------------------------------------------------------------- c
 
@@ -41307,14 +41960,14 @@ c --------------------------------------
 
       implicit double precision (a-h,k-z)
 
-      SD_sigmal = -(2.D0*SD_B1(amq**2,amq,lamv,amuv**2)+ 
+      SD_sigmal = -(2.D0*SD_B1(amq**2,amq,lamv,amuv**2)+
      .     (1.D0+dcos(2.D0*thet))*SD_B1(amq**2,mgluino,ast1,amuv**2)
      .    +(1.D0-dcos(2.D0*thet))*SD_B1(amq**2,mgluino,ast2,amuv**2)
      .     )
 
       return
 
-      end 
+      end
 
 c -------------------------------------------------------------------- c
 
@@ -41323,14 +41976,14 @@ c --------------------------------------
 
       implicit double precision (a-h,k-z)
 
-      SD_sigmaldiv = -(2.D0*SD_B1_DIV(amq**2,amq,lamv,amuv**2)+ 
+      SD_sigmaldiv = -(2.D0*SD_B1_DIV(amq**2,amq,lamv,amuv**2)+
      .     (1.D0+dcos(2.D0*thet))*SD_B1_DIV(amq**2,mgluino,ast1,amuv**2)
      .    +(1.D0-dcos(2.D0*thet))*SD_B1_DIV(amq**2,mgluino,ast2,amuv**2)
      .     )
 
       return
 
-      end 
+      end
 
 c -------------------------------------------------------------------- c
 
@@ -41339,14 +41992,14 @@ c --------------------------------------
 
       implicit double precision (a-h,k-z)
 
-      SD_sigmalp = -(2.D0*SD_BP1(amq**2,amq,lamv,amuv**2)+ 
+      SD_sigmalp = -(2.D0*SD_BP1(amq**2,amq,lamv,amuv**2)+
      .     (1.D0+dcos(2.D0*thet))*SD_BP1(amq**2,mgluino,ast1,amuv**2)
      .    +(1.D0-dcos(2.D0*thet))*SD_BP1(amq**2,mgluino,ast2,amuv**2)
      .     )
 
       return
 
-      end 
+      end
 
 c -------------------------------------------------------------------- c
 
@@ -41355,7 +42008,7 @@ c --------------------------------------
 
       implicit double precision (a-h,k-z)
 
-      SD_sigmas = -(4.D0*SD_B02(amq**2,amq,lamv,amuv**2)+ 
+      SD_sigmas = -(4.D0*SD_B02(amq**2,amq,lamv,amuv**2)+
      .     mgluino/amq*dsin(2.D0*thet)*(
      .     SD_B02(amq**2,mgluino,ast1,amuv**2)
      .    -SD_B02(amq**2,mgluino,ast2,amuv**2)
@@ -41363,7 +42016,7 @@ c --------------------------------------
 
       return
 
-      end 
+      end
 
 c -------------------------------------------------------------------- c
 
@@ -41372,7 +42025,7 @@ c --------------------------------------
 
       implicit double precision (a-h,k-z)
 
-      SD_sigmasdiv = -(4.D0*SD_B02_DIV(amq**2,amq,lamv,amuv**2)+ 
+      SD_sigmasdiv = -(4.D0*SD_B02_DIV(amq**2,amq,lamv,amuv**2)+
      .     mgluino/amq*dsin(2.D0*thet)*(
      .     SD_B02_DIV(amq**2,mgluino,ast1,amuv**2)
      .    -SD_B02_DIV(amq**2,mgluino,ast2,amuv**2)
@@ -41380,7 +42033,7 @@ c --------------------------------------
 
       return
 
-      end 
+      end
 
 c -------------------------------------------------------------------- c
 
@@ -41389,7 +42042,7 @@ c --------------------------------------
 
       implicit double precision (a-h,k-z)
 
-      SD_sigmasp = -(4.D0*SD_BP02(amq**2,amq,lamv,amuv**2)+ 
+      SD_sigmasp = -(4.D0*SD_BP02(amq**2,amq,lamv,amuv**2)+
      .     mgluino/amq*dsin(2.D0*thet)*(
      .     SD_BP02(amq**2,mgluino,ast1,amuv**2)
      .    -SD_BP02(amq**2,mgluino,ast2,amuv**2)
@@ -41397,7 +42050,7 @@ c --------------------------------------
 
       return
 
-      end 
+      end
 
 c -------------------------------------------------------------------- c
 
@@ -41442,7 +42095,7 @@ c --- the running couplings ---
          scalt = ytewsb/dsqrt(g2)
          runmt = rmtc
          runmb = rmbc
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(amsti,0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -41454,7 +42107,7 @@ c --- the running couplings ---
 
       call SD_neutstoptop(atopr,btopr)
       call SD_charstopbot(alstor,akstor)
-      call SD_neutsbotbot(abot,bbot) 
+      call SD_neutsbotbot(abot,bbot)
       call SD_charsbottop(alsbot,aksbot)
 
 c ----------------------------
@@ -41478,18 +42131,18 @@ c ----------------------------
      .     dlog(kap**2/(lamv*amsti*amq*mcharneut)) - kap -
      .     (amsti**2-mcharneut**2)*lb02 - amq**2*lb1)
       hi01 = dreal(1.D0/(4.D0*amsti**2)*(-2.D0*
-     .     dlog((lamv*amsti*amq*mcharneut)/kap**2)*lb2 + 
+     .     dlog((lamv*amsti*amq*mcharneut)/kap**2)*lb2 +
      .     2.D0*lb2**2 - lb0**2 - lb1**2 +
-     .     2.D0*SD_ccspen(dcmplx(1.D0-b2**2)) - 
+     .     2.D0*SD_ccspen(dcmplx(1.D0-b2**2)) -
      .     SD_ccspen(dcmplx(1-b0**2))
      .     - SD_ccspen(dcmplx(1-b1**2)) ) )
       hi = 1.D0/(4.D0*amsti**2)*(kap/2.D0*
      .     (amsti**2+amq**2+mcharneut**2) + 2.D0*amsti**2*amq**2*
-     .     lb2 + 2.D0*amsti**2*mcharneut**2*lb1 + 
+     .     lb2 + 2.D0*amsti**2*mcharneut**2*lb1 +
      .     2.D0*amq**2*mcharneut**2*lb0)
       hi0 = 1.D0/(4.D0*amsti**2)*(-2.D0*amq**2*lb2
      .     -2.D0*mcharneut**2*lb1-kap)
-      hi1 = 1.D0/(4.D0*amsti**2)*(-2.D0*amsti**2*lb2 
+      hi1 = 1.D0/(4.D0*amsti**2)*(-2.D0*amsti**2*lb2
      .     -2.D0*mcharneut**2*lb0-kap)
       hi10 = 1.D0/(4.D0*amsti**2)*(amsti**4*lb2-
      .     mcharneut**2*(2.D0*amq**2-2.D0*amsti**2+mcharneut**2)*
@@ -41515,7 +42168,7 @@ c ----------------------------
       elseif(isign.eq.0) then
          epschi = 1.D0
       endif
-         
+
       SD_corrreali = 8.D0*cli*cri*amq*mcharneut*epschi*((amsti**2+amq**2
      .     -mcharneut**2)*hi01+amsti**2*hi00+amq**2*hi11+hi0+hi1)
      .     +(cli**2+cri**2)*(2.D0*(amq**2+mcharneut**2-amsti**2)*
@@ -41554,7 +42207,7 @@ c --- the running couplings ---
          scalt = ytewsb/dsqrt(g2)
          runmt = rmtc
          runmb = rmbc
-      elseif(scalechoice.eq.2.D0) then         
+      elseif(scalechoice.eq.2.D0) then
          call SD_runmass(mcharneut,0.D0,0.D0,runmb,runmt)
          scalb = SD_yuk(2,runmb)
          scalt = SD_yuk(1,runmt)
@@ -41566,7 +42219,7 @@ c --- the running couplings ---
 
       call SD_neutstoptop(atopr,btopr)
       call SD_charstopbot(alstor,akstor)
-      call SD_neutsbotbot(abot,bbot) 
+      call SD_neutsbotbot(abot,bbot)
       call SD_charsbottop(alsbot,aksbot)
 
 c ----------------------------
@@ -41591,18 +42244,18 @@ c ----------------------------
      .     dlog(kap**2/(lamv*amsti*amq*mcharneut)) - kap -
      .     (mcharneut**2-amq**2)*lb01 - amsti**2*lb2)
       hi21 = dreal(1.D0/(4.D0*mcharneut**2)*(-2.D0*
-     .     dlog((lamv*amsti*amq*mcharneut)/kap**2)*lb0 + 
+     .     dlog((lamv*amsti*amq*mcharneut)/kap**2)*lb0 +
      .     2.D0*lb0**2 - lb2**2 - lb1**2 +
-     .     2.D0*SD_ccspen(dcmplx(1.D0-b0**2)) - 
+     .     2.D0*SD_ccspen(dcmplx(1.D0-b0**2)) -
      .     SD_ccspen(dcmplx(1-b2**2))
      .     - SD_ccspen(dcmplx(1-b1**2)) ) )
       hi = 1.D0/(4.D0*mcharneut**2)*(kap/2.D0*
      .     (mcharneut**2+amq**2+amsti**2) + 2.D0*mcharneut**2*amq**2*
-     .     lb2 + 2.D0*amsti**2*mcharneut**2*lb1 + 
+     .     lb2 + 2.D0*amsti**2*mcharneut**2*lb1 +
      .     2.D0*amq**2*amsti**2*lb0)
       hi2 = 1.D0/(4.D0*mcharneut**2)*(-2.D0*mcharneut**2*lb1
      .     -2.D0*amq**2*lb0-kap)
-      hi1 = 1.D0/(4.D0*mcharneut**2)*(-2.D0*mcharneut**2*lb2 
+      hi1 = 1.D0/(4.D0*mcharneut**2)*(-2.D0*mcharneut**2*lb2
      .     -2.D0*amsti**2*lb0-kap)
       hi12 = 1.D0/(4.D0*mcharneut**2)*(amsti**4*lb0-
      .     mcharneut**2*(2.D0*amq**2-2.D0*amsti**2+mcharneut**2)*
@@ -41628,7 +42281,7 @@ c ----------------------------
       elseif(isign.eq.0) then
          epschi = 1.D0
       endif
-         
+
       SD_realicorr = 8.D0*cli*cri*amq*mcharneut*epschi*((amsti**2+amq**2
      .     -mcharneut**2)*hi21+amsti**2*hi22+amq**2*hi11+hi2+hi1)
      .     +(cli**2+cri**2)*(2.D0*(amq**2+mcharneut**2-amsti**2)*
@@ -41646,20 +42299,20 @@ c --------------------------------------
 c - QCD corrections to the decays light squark -> light quark + gluino c
 
       double precision function SD_gama(r)
- 
+
       implicit double precision (a-h,k-z)
       complex*16 SD_ccspen
 
       pi = 4.D0*datan(1.D0)
 
-      SD_gama = 3.D0/(r-1.D0)*dreal(SD_ccspen(dcmplx(1.D0-r))) - 
-     .     r/(r-1.D0)*dreal(SD_ccspen(dcmplx(-r))) 
+      SD_gama = 3.D0/(r-1.D0)*dreal(SD_ccspen(dcmplx(1.D0-r))) -
+     .     r/(r-1.D0)*dreal(SD_ccspen(dcmplx(-r)))
      .     + (5.D0*r-6.D0)/(12.D0*(r-1.D0))*pi**2 +
-     .     59.D0/24.D0 + r/(4.D0*(r-1.D0)) + 
+     .     59.D0/24.D0 + r/(4.D0*(r-1.D0)) +
      .     ( (3.D0+r)/(2.D0*(r-1.D0))*dlog(r) - 2.D0)*
-     .     dlog(dabs(1.D0-r)) + 
-     .     ( (r*(5.D0*r-6.D0))/(4.D0*(r-1.D0)**2) - 
-     .     r/(r-1.D0)*dlog(1.D0+r) )*dlog(r) 
+     .     dlog(dabs(1.D0-r)) +
+     .     ( (r*(5.D0*r-6.D0))/(4.D0*(r-1.D0)**2) -
+     .     r/(r-1.D0)*dlog(1.D0+r) )*dlog(r)
 
       return
 
@@ -41674,12 +42327,12 @@ c --------------------------------------
 
       pi = 4.D0*datan(1.D0)
 
-      SD_gamfcap = -2.D0/(r-1.D0)*dreal(SD_ccspen(dcmplx(1.D0-r))) + 
-     .     (2.D0*r)/(r-1.D0)*dreal(SD_ccspen(dcmplx(-r))) + 
-     .     (4.D0-3.D0*r)/(6.D0*(r-1.D0))*pi**2 + 5.D0/2.D0 - r/2.D0 + 
+      SD_gamfcap = -2.D0/(r-1.D0)*dreal(SD_ccspen(dcmplx(1.D0-r))) +
+     .     (2.D0*r)/(r-1.D0)*dreal(SD_ccspen(dcmplx(-r))) +
+     .     (4.D0-3.D0*r)/(6.D0*(r-1.D0))*pi**2 + 5.D0/2.D0 - r/2.D0 +
      .     ( r- r**2/2.D0 - (r+1.D0)/(r-1.D0)*dlog(r) )*
-     .     dlog(dabs(1.D0-r)) + 
-     .     ( 2.D0*r/(r-1.D0)*dlog(1.D0+r)-r+r**2/2.D0)*dlog(r) 
+     .     dlog(dabs(1.D0-r)) +
+     .     ( 2.D0*r/(r-1.D0)*dlog(1.D0+r)-r+r**2/2.D0)*dlog(r)
 
       return
 
@@ -41691,7 +42344,7 @@ c --------------------------------------
 
       implicit double precision (a-h,k-z)
 
-      SD_gamf = -3.D0/(4.D0*r) + 
+      SD_gamf = -3.D0/(4.D0*r) +
      .     ((r-1.D0)*(r+3.D0))/(4.D0*r**2)*dlog(dabs(1.D0-r))
 
       return
@@ -41713,10 +42366,10 @@ c maggie changed with respect to the pap
 
       SD_gamrendec =  SD_gamrendec + 4.D0/12.D0*dlog(mur**2/amsq**2)
      .     + 1.D0/24.D0*dlog(mur**2/amsb1**2) + 1.D0/24.D0*
-     .     dlog(mur**2/amsb2**2) 
+     .     dlog(mur**2/amsb2**2)
      .     + 1.D0/24.D0*dlog(mur**2/amst1**2) + 1.D0/24.D0*
      .     dlog(mur**2/amst2**2) + 1.D0/6.D0*dlog(mur**2/amt**2)
-     .     + 1.D0/2.D0*dlog(mur**2/amgl**2) 
+     .     + 1.D0/2.D0*dlog(mur**2/amgl**2)
 
       return
 
@@ -41744,16 +42397,16 @@ c -------- gluino -> sbottom1/2 bottom -
          isign = 1.D0
       elseif(ival.eq.2) then
          isign = -1.D0
-      endif 
+      endif
 
       sig2t = isign*amt*amgl*dsin(2.D0*thet)
 
-      SD_gamtop1 = 2.D0*SD_A01(amt**2,amuv**2) -2.D0*amt**2 + 
+      SD_gamtop1 = 2.D0*SD_A01(amt**2,amuv**2) -2.D0*amt**2 +
      .   2.D0*SD_A01(amgl**2,amuv**2) - SD_A01(amst1**2,amuv**2)
      .   - SD_A01(amst2**2,amuv**2) +
      .   (amt**2+amst1**2-amgl**2)*SD_B02(amt**2,amgl,amst1,amuv**2)
      .  +(amt**2+amst2**2-amgl**2)*SD_B02(amt**2,amgl,amst2,amuv**2)
-     .   -4.D0*amt**2*sig2t*(SD_BP02(amt**2,amgl,amst1,amuv**2) 
+     .   -4.D0*amt**2*sig2t*(SD_BP02(amt**2,amgl,amst1,amuv**2)
      .   - SD_BP02(amt**2,amgl,amst2,amuv**2) ) + 2.D0*amt**2*(
      .   (amgl**2+amt**2-amst1**2)*SD_BP02(amt**2,amgl,amst1,amuv**2)
      .  +(amgl**2+amt**2-amst2**2)*SD_BP02(amt**2,amgl,amst2,amuv**2)
@@ -41779,9 +42432,9 @@ c --------------------------------------
          isign = 1.D0
       elseif(ival.eq.2) then
          isign = -1.D0
-      endif 
+      endif
 
-      SD_gamtop2 = SD_A01(amst2**2,amuv**2) - 
+      SD_gamtop2 = SD_A01(amst2**2,amuv**2) -
      .  SD_A01(amst1**2,amuv**2)
      .  -(amgl**2+amt**2-amst1**2)*SD_B02(amt**2,amgl,amst1,amuv**2)
      .  +(amgl**2+amt**2-amst2**2)*SD_B02(amt**2,amgl,amst2,amuv**2)
@@ -41828,7 +42481,7 @@ c --------------------------------------
          isign = 1.D0
       elseif(ival.eq.2) then
          isign = -1.D0
-      endif 
+      endif
 
       sig2t = isign*amt*amgl*dsin(2.D0*thet)
       sig2b = isign*amb*amgl*dsin(2.D0*theb)
@@ -41836,13 +42489,13 @@ c --------------------------------------
       SD_gamglui2 = 2.D0*SD_A01(amt**2,amuv**2) -
      .     SD_A01(amst1**2,amuv**2) - SD_A01(amst2**2,amuv**2)
      .     + (amst1**2+amgl**2-amt**2)*
-     .     SD_B02(amgl**2,amst1,amt,amuv**2) + 
+     .     SD_B02(amgl**2,amst1,amt,amuv**2) +
      .     (amst2**2+amgl**2-amt**2)*
-     .     SD_B02(amgl**2,amst2,amt,amuv**2) - 
+     .     SD_B02(amgl**2,amst2,amt,amuv**2) -
      .     4.D0*amgl**2*sig2t*( SD_BP02(amgl**2,amst1,amt,amuv**2)
      .     - SD_BP02(amgl**2,amst2,amt,amuv**2) )
      .     + 2.D0*amgl**2*( (amgl**2+amt**2-amst1**2)*
-     .     SD_BP02(amgl**2,amst1,amt,amuv**2) + 
+     .     SD_BP02(amgl**2,amst1,amt,amuv**2) +
      .     (amgl**2+amt**2-amst2**2)*
      .     SD_BP02(amgl**2,amst2,amt,amuv**2) )
 
@@ -41851,13 +42504,13 @@ c maggie changed with respect to the pap
      .     2.D0*SD_A01(amb**2,amuv**2) -
      .     SD_A01(amsb1**2,amuv**2) - SD_A01(amsb2**2,amuv**2)
      .     + (amsb1**2+amgl**2-amb**2)*
-     .     SD_B02(amgl**2,amsb1,amb,amuv**2) + 
+     .     SD_B02(amgl**2,amsb1,amb,amuv**2) +
      .     (amsb2**2+amgl**2-amb**2)*
-     .     SD_B02(amgl**2,amsb2,amb,amuv**2) - 
+     .     SD_B02(amgl**2,amsb2,amb,amuv**2) -
      .     4.D0*amgl**2*sig2b*( SD_BP02(amgl**2,amsb1,amb,amuv**2)
      .     - SD_BP02(amgl**2,amsb2,amb,amuv**2) )
      .     + 2.D0*amgl**2*( (amgl**2+amb**2-amsb1**2)*
-     .     SD_BP02(amgl**2,amsb1,amb,amuv**2) + 
+     .     SD_BP02(amgl**2,amsb1,amb,amuv**2) +
      .     (amgl**2+amb**2-amsb2**2)*
      .     SD_BP02(amgl**2,amsb2,amb,amuv**2) )
 c end maggie changed
@@ -41876,7 +42529,7 @@ c --------------------------------------
 
       pi = 4.D0*datan(1.D0)
 
-      SD_gamglui3 =  SD_A01(amgl**2,amuv**2) - amgl**2 - 
+      SD_gamglui3 =  SD_A01(amgl**2,amuv**2) - amgl**2 -
      .     4.D0*amgl**4*SD_BP02(amgl**2,lamv,amgl,amuv**2)
 
       SD_gamglui3 = -1.D0/16.D0/pi**2*SD_gamglui3
@@ -41899,12 +42552,12 @@ c --------------------------------------
          isign = 1.D0
       elseif(ival.eq.2) then
          isign = -1.D0
-      endif 
+      endif
 
       sig2t = isign*amt*amgl*dsin(2.D0*thet)
 
-      SD_gam11 = SD_B02(amst1**2,amgl,amt,amuv**2) - 
-     .     SD_B02(amst1**2,lamv,amst1,amuv**2) + 
+      SD_gam11 = SD_B02(amst1**2,amgl,amt,amuv**2) -
+     .     SD_B02(amst1**2,lamv,amst1,amuv**2) +
      .     2.D0*sig2t*SD_BP02(amst1**2,amgl,amt,amuv**2) -
      .     (amgl**2+amt**2-amst1**2)*
      .     SD_BP02(amst1**2,amgl,amt,amuv**2) - 2.D0*amst1**2*
@@ -41930,7 +42583,7 @@ c --------------------------------------
          isign = 1.D0
       elseif(ival.eq.2) then
          isign = -1.D0
-      endif 
+      endif
 
       sig2t = isign*amt*amgl*dsin(2.D0*thet)
 
@@ -41938,8 +42591,8 @@ c --------------------------------------
      .     + 4.D0*amt**2*amgl**2/sig2t*
      .     SD_B02(amst1**2,amgl,amt,amuv**2)
 
-      SD_gam12 = SD_gam12 - 
-     .     ( SD_A01_DIV(amst2**2,(amuv/scala)**2) 
+      SD_gam12 = SD_gam12 -
+     .     ( SD_A01_DIV(amst2**2,(amuv/scala)**2)
      .     - SD_A01_DIV(amst1**2,(amuv/scala)**2)
      .     + 4.D0*amt**2*amgl**2/sig2t*
      .       SD_B02_DIV(amst1**2,amgl,amt,(amuv/scala)**2) )
@@ -41997,7 +42650,7 @@ c --------------------------------------
       end
 
 c -------------------------------------------------------------------- c
-c --- this function is for the stop1/2, sbottom1/2 decays --- 
+c --- this function is for the stop1/2, sbottom1/2 decays ---
 
       double precision function SD_gamreal(amst1,amt,amgl,thet,ival,
      .                                     lamv)
@@ -42029,18 +42682,18 @@ c --- this function is for the stop1/2,
       b1 = (m0**2-m1**2+m2**2-kap)/(2.D0*m0*m2)
       b2 = (m0**2+m1**2-m2**2-kap)/(2.D0*m0*m1)
 
-      ist1gl = dreal( 
+      ist1gl = dreal(
      .     1.D0/(4.D0*m0**2)*(-2.D0*dlog((lamv*m0*m1*m2)/kap**2)*
-     .     dlog(b1) + 2.D0*(dlog(b1))**2 - (dlog(b0))**2 - 
-     .     (dlog(b2))**2 + 2.D0*SD_ccspen(dcmplx(1.D0-b1**2)) 
-     .     - SD_ccspen(dcmplx(1.D0-b0**2)) - 
+     .     dlog(b1) + 2.D0*(dlog(b1))**2 - (dlog(b0))**2 -
+     .     (dlog(b2))**2 + 2.D0*SD_ccspen(dcmplx(1.D0-b1**2))
+     .     - SD_ccspen(dcmplx(1.D0-b0**2)) -
      .     SD_ccspen(dcmplx(1.D0-b2**2)) ) )
 
-      ist1t = dreal( 
+      ist1t = dreal(
      .     1.D0/(4.D0*m0**2)*(-2.D0*dlog((lamv*m0*m1*m2)/kap**2)*
-     .     dlog(b2) + 2.D0*(dlog(b2))**2 - (dlog(b0))**2 - 
-     .     (dlog(b1))**2 + 2.D0*SD_ccspen(dcmplx(1.D0-b2**2)) 
-     .     - SD_ccspen(dcmplx(1.D0-b0**2)) - 
+     .     dlog(b2) + 2.D0*(dlog(b2))**2 - (dlog(b0))**2 -
+     .     (dlog(b1))**2 + 2.D0*SD_ccspen(dcmplx(1.D0-b2**2))
+     .     - SD_ccspen(dcmplx(1.D0-b0**2)) -
      .     SD_ccspen(dcmplx(1.D0-b1**2)) ) )
 
       iglgl = 1.D0/(4.D0*m2**2*m0**2)*(kap*dlog(kap**2/(lamv*m0*m1*m2))
@@ -42062,9 +42715,9 @@ c --- this function is for the stop1/2,
      .     -kap)
 
       itgl = -1.D0/(4.D0*m0**2)*(-m2**4*dlog(b0)+m0**2*(2.D0*m1**2
-     .     -2.D0*m2**2)*dlog(b2) + m0**4*dlog(b2) + 
+     .     -2.D0*m2**2)*dlog(b2) + m0**4*dlog(b2) +
      .     kap/4.D0*(m1**2+5.D0*m0**2-3.D0*m2**2) )
-      
+
       iglst1 = 1.D0/(4.D0*m0**2)*(m0**4*dlog(b1)-m1**2*(2.D0*m2**2
      .     -2.D0*m0**2+m1**2)*dlog(b0) -kap/4.D0*(m2**2-3.D0*m0**2
      .     +5.D0*m1**2) )
@@ -42082,7 +42735,7 @@ c --- this function is for the stop1/2,
       end
 
 c -------------------------------------------------------------------- c
-c --- this function is for the gluino decays --- 
+c --- this function is for the gluino decays ---
 
       double precision function SD_gamrealgl(amst1,amt,amgl,thet,ival,
      .                                       lamv)
@@ -42114,18 +42767,18 @@ c --- this function is for the gluino de
       b1 = (m0**2-m1**2+m2**2-kap)/(2.D0*m0*m2)
       b2 = (m0**2+m1**2-m2**2-kap)/(2.D0*m0*m1)
 
-      ist1gl = dreal( 
+      ist1gl = dreal(
      .     1.D0/(4.D0*m0**2)*(-2.D0*dlog((lamv*m0*m1*m2)/kap**2)*
-     .     dlog(b1) + 2.D0*(dlog(b1))**2 - (dlog(b0))**2 - 
-     .     (dlog(b2))**2 + 2.D0*SD_ccspen(dcmplx(1.D0-b1**2)) 
-     .     - SD_ccspen(dcmplx(1.D0-b0**2)) - 
+     .     dlog(b1) + 2.D0*(dlog(b1))**2 - (dlog(b0))**2 -
+     .     (dlog(b2))**2 + 2.D0*SD_ccspen(dcmplx(1.D0-b1**2))
+     .     - SD_ccspen(dcmplx(1.D0-b0**2)) -
      .     SD_ccspen(dcmplx(1.D0-b2**2)) ) )
 
-      ist1t = dreal( 
+      ist1t = dreal(
      .     1.D0/(4.D0*m0**2)*(-2.D0*dlog((lamv*m0*m1*m2)/kap**2)*
-     .     dlog(b0) + 2.D0*(dlog(b0))**2 - (dlog(b1))**2 - 
-     .     (dlog(b2))**2 + 2.D0*SD_ccspen(dcmplx(1.D0-b0**2)) 
-     .     - SD_ccspen(dcmplx(1.D0-b1**2)) - 
+     .     dlog(b0) + 2.D0*(dlog(b0))**2 - (dlog(b1))**2 -
+     .     (dlog(b2))**2 + 2.D0*SD_ccspen(dcmplx(1.D0-b0**2))
+     .     - SD_ccspen(dcmplx(1.D0-b1**2)) -
      .     SD_ccspen(dcmplx(1.D0-b2**2)) ) )
 
       iglgl = 1.D0/(4.D0*m0**4)*(kap*dlog(kap**2/(lamv*m0*m1*m2))
@@ -42148,7 +42801,7 @@ c --- this function is for the gluino de
      .     -kap)
 
       itgl = -1.D0/(4.D0*m0**2)*(-m0**4*dlog(b2)+m2**2*(2.D0*m1**2
-     .     -2.D0*m0**2)*dlog(b0) + m2**4*dlog(b0) + 
+     .     -2.D0*m0**2)*dlog(b0) + m2**4*dlog(b0) +
      .     kap/4.D0*(m1**2+5.D0*m2**2-3.D0*m0**2) )
 
       iglst1 = 1.D0/(4.D0*m0**2)*(m2**4*dlog(b1)-m1**2*(2.D0*m0**2
@@ -42183,7 +42836,7 @@ c --------------------------------------
 c maggie changed with respect to the paper 26/3/03
       SD_gamcfdec = SD_gamcfdec + 4.D0*( 4.D0/12.D0*dlog(mur**2/amsq**2)
      .     + 1.D0/24.D0*dlog(mur**2/amsb1**2) + 1.D0/24.D0*
-     .     dlog(mur**2/amsb2**2) 
+     .     dlog(mur**2/amsb2**2)
      .     + 1.D0/24.D0*dlog(mur**2/amst1**2) + 1.D0/24.D0*
      .     dlog(mur**2/amst2**2) + 1.D0/6.D0*dlog(mur**2/amt**2)
      .     + 1.D0/2.D0*dlog(mur**2/amgl**2) )
@@ -42209,20 +42862,20 @@ c --------------------------------------
       pi = 4.D0*datan(1.D0)
 
       fffunc(1) = 2.D0*(amt**2+amgl**2)*
-     .   SD_B02(amst1**2,amgl,amt,amuv**2) + 
+     .   SD_B02(amst1**2,amgl,amt,amuv**2) +
      .   (amst1**2+amt**2+amgl**2)*SD_B02(amst1**2,lamv,amst1,amuv**2)
      .   + 2.D0*(amgl**2-amst1**2)*SD_B02(amt**2,lamv,amt,amuv**2)
      .   - 2.D0*amt**2*SD_B02(amt**2,amgl,amst2,amuv**2)
      .   - 4.D0*amgl**2*SD_B02(amgl**2,amt,amst1,amuv**2)
      .   + 4.D0*amgl**2*(amst1**2-amgl**2)*
      .   dreal( SD_C03(amst1**2,amt**2,amgl**2,amt,amgl,amst1) )
-     .   + 2.D0*amt**2*(amst1**2+amst2**2-2.D0*amt**2)* 
+     .   + 2.D0*amt**2*(amst1**2+amst2**2-2.D0*amt**2)*
      .   dreal( SD_C03(amst1**2,amt**2,amgl**2,amt,amgl,amst2) )
 
-      fffunc(2) = -2.D0*SD_B02(amst1**2,lamv,amst1,amuv**2) 
-     .   -2.D0*SD_B02(amt**2,lamv,amt,amuv**2) 
-     .   -4.D0*SD_B02(amst1**2,amgl,amt,amuv**2) 
-     .   +2.D0*SD_B02(amt**2,amgl,amst1,amuv**2) 
+      fffunc(2) = -2.D0*SD_B02(amst1**2,lamv,amst1,amuv**2)
+     .   -2.D0*SD_B02(amt**2,lamv,amt,amuv**2)
+     .   -4.D0*SD_B02(amst1**2,amgl,amt,amuv**2)
+     .   +2.D0*SD_B02(amt**2,amgl,amst1,amuv**2)
      .   +4.D0*SD_B02(amgl**2,amt,amst1,amuv**2)
      .   +4.D0*(amgl**2+amt**2-amst1**2)*
      .   dreal( SD_C03(amst1**2,amt**2,amgl**2,amt,amgl,amst1) )
@@ -42230,40 +42883,40 @@ c --------------------------------------
      .   dreal( SD_C03(amst1**2,amt**2,amgl**2,amt,amgl,amst2) )
 
       fffunc(3) = 1.D0/(amgl**2*amt**2)*( 2.D0*amt**2*(
-     .   SD_B02(amt**2,amgl,amst2,amuv**2) - 
-     .   SD_B02(amt**2,amgl,amst1,amuv**2) ) + 
+     .   SD_B02(amt**2,amgl,amst2,amuv**2) -
+     .   SD_B02(amt**2,amgl,amst1,amuv**2) ) +
      .   (amgl**2+amt**2-amst1**2)*( (amgl**2+amt**2-amst1**2) - 4.D0*
      .   amt**2 )*
-     .   dreal( SD_C03(amst1**2,amt**2,amgl**2,amt,amgl,amst1) ) 
-     .   -((amgl**2+amt**2-amst1**2)*(amgl**2+amt**2-amst2**2) - 
+     .   dreal( SD_C03(amst1**2,amt**2,amgl**2,amt,amgl,amst1) )
+     .   -((amgl**2+amt**2-amst1**2)*(amgl**2+amt**2-amst2**2) -
      .   2.D0*amt**2*(amgl**2+amt**2-amst1**2) - 2.D0*amt**2*
      .   (amgl**2+amt**2-amst2**2) )*
      .   dreal( SD_C03(amst1**2,amt**2,amgl**2,amt,amgl,amst2) ) )
 
-      fafunc(1) = -2.D0*(amgl**2+amt**2-amst1**2) + 
+      fafunc(1) = -2.D0*(amgl**2+amt**2-amst1**2) +
      .   4.D0*(amt**2-amst1**2)*SD_B02(amgl**2,lamv,amgl,amuv**2)
      .   +2.D0*amt**2*( SD_B02(amt**2,amgl,amst2,amuv**2) -
      .   SD_B02(amt**2,amgl,amst1,amuv**2) ) + 4.D0*amgl**2*
-     .   SD_B02(amgl**2,amt,amst1,amuv**2)  
-     .   + 4.D0*amgl**2*(amgl**2-amst1**2)* 
+     .   SD_B02(amgl**2,amt,amst1,amuv**2)
+     .   + 4.D0*amgl**2*(amgl**2-amst1**2)*
      .   dreal( SD_C03(amst1**2,amt**2,amgl**2,amt,amgl,amst1) )
      .   -2.D0*amt**2*(amst1**2+amst2**2-2.D0*amt**2)*
      .   dreal( SD_C03(amst1**2,amt**2,amgl**2,amt,amgl,amst2) )
 
       fafunc(2) = 4.D0 - 4.D0*SD_B02(amgl**2,lamv,amgl,amuv**2)
-     .   -4.D0*SD_B02(amgl**2,amt,amst1,amuv**2) 
+     .   -4.D0*SD_B02(amgl**2,amt,amst1,amuv**2)
      .   -4.D0*(amgl**2+amt**2-amst1**2)*
      .   dreal( SD_C03(amst1**2,amt**2,amgl**2,amt,amgl,amst1) )
      .   -2.D0*(amst1**2-amst2**2)*
      .   dreal( SD_C03(amst1**2,amt**2,amgl**2,amt,amgl,amst2) )
 
-      fafunc(3) = 1.D0/(amgl**2*amt**2)*( 
-     .   2.D0*amt**2*( SD_B02(amt**2,amgl,amst1,amuv**2) 
-     .   - SD_B02(amt**2,amgl,amst2,amuv**2) ) 
+      fafunc(3) = 1.D0/(amgl**2*amt**2)*(
+     .   2.D0*amt**2*( SD_B02(amt**2,amgl,amst1,amuv**2)
+     .   - SD_B02(amt**2,amgl,amst2,amuv**2) )
      .   + (amgl**2+amt**2-amst1**2)*(4.D0*amt**2-(amgl**2+amt**2-
      .   amst1**2))*
      .   dreal( SD_C03(amst1**2,amt**2,amgl**2,amt,amgl,amst1) )
-     .   + ( (amgl**2+amt**2-amst1**2)*(amgl**2+amt**2-amst2**2) 
+     .   + ( (amgl**2+amt**2-amst1**2)*(amgl**2+amt**2-amst2**2)
      .   -2.D0*amt**2*(amgl**2+amt**2-amst1**2) - 2.D0*amt**2*
      .   (amgl**2+amt**2-amst2**2) )*
      .   dreal( SD_C03(amst1**2,amt**2,amgl**2,amt,amgl,amst2) ))
@@ -42275,7 +42928,7 @@ c --------------------------------------
      .   - (amst1**2+amgl**2-amt**2)*
      .   dreal( SD_C0_lam(amgl,amst1,amt,lamv) ) )
      .   - 8.D0/3.D0*(amt**2+amst1**2-amgl**2)*
-     .   dreal( SD_C0_lam(amst1,amt,amgl,lamv) ) 
+     .   dreal( SD_C0_lam(amst1,amt,amgl,lamv) )
 
       do i=1,3,1
          fffunc(i) = -1.D0/16.D0/pi**2*fffunc(i)
@@ -42337,10 +42990,10 @@ c----end ramona chnaged
      .     +(m2**2-m1**2-s)*SD_B02(s,m1,m2,mu2) )
 c---- ramona chnaged 5/6/13
       endif
-c--- end ramona chnaged         
-      return 
+c--- end ramona chnaged
+      return
 
-      end 
+      end
 
 c -------------------------------------------------------------------- c
 c ----------------------- The divergent piece of B1 ------------------ c
@@ -42351,10 +43004,10 @@ c ----------------------- The divergent
 
       SD_B1_DIV = 1.D0/2.D0/s*( m1**2*log(mu2)-m2**2*log(mu2)
      .     +(m2**2-m1**2-s)*SD_B02_DIV(s,m1,m2,mu2) )
-      
-      return 
 
-      end 
+      return
+
+      end
 
 c -------------------------------------------------------------------- c
 c ------------------- The derivative of B1: dB1/ ds ------------------ c
@@ -42370,7 +43023,7 @@ c---- ramona changed 5/6/13
      .-(2d0*m1**2*m2**2*(m1**2+m2**2))/(m1**2-m2**2)**5
      .*dlog(m1**2/m2**2))
       else
-c---- end ramona changed  
+c---- end ramona changed
       SD_BP1 = -1.D0/2.D0/s**2*( SD_A01(m1**2,mu2)-
      .     SD_A01(m2**2,mu2)+(m2**2-m1**2)*SD_B02(s,m1,m2,mu2) )
      .     +1.D0/2.D0/s*(m2**2-m1**2)*SD_BP02(s,m1,m2,mu2)
@@ -42378,9 +43031,9 @@ c---- end ramona changed
 c---- ramona changed 5/6/13
       endif
 c--- end ramona changed
-      return 
+      return
 
-      end 
+      end
 
 c -------------------------------------------------------------------- c
 c ------- The C function for a small mass lambda: -------------------- c
@@ -42411,10 +43064,10 @@ c --------------------------------------
       dlxs = cdlog(xs)
       dlfc = cdlog(1.D0-xs**2)
 
-      SD_C0_lam = xs/(m1*m2*(1.D0-xs**2))*( 
+      SD_C0_lam = xs/(m1*m2*(1.D0-xs**2))*(
      .     dlxs*(-dlog(lamv**2/(m1*m2))-1.D0/2.D0*dlxs+
      .     2.D0*dlfc ) +
-     .     SD_ccspen(1.D0-xs*m1/m2) + 
+     .     SD_ccspen(1.D0-xs*m1/m2) +
      .     SD_ccspen(1.D0-xs*m2/m1) + SD_ccspen(xs**2) +
      .     1.D0/2.D0*(dlog(m1/m2))**2 - pi**2/6.D0 )
 
@@ -42436,7 +43089,7 @@ c --------------------------------------
 
       ieps = dcmplx(0.d0,1.d-17)
 
-      if(A.eq.B) then 
+      if(A.eq.B) then
          SD_KAPPA = cdsqrt((C*(C-4.D0*A))*(1+IEPS*D))
       elseif(B.eq.C) then
          SD_KAPPA = cdsqrt((A*(A-4.D0*B))*(1+IEPS*D))
@@ -42452,13 +43105,13 @@ c----ramona chnaged 4/6/13
 c---------------------------------------------------------------------
        complex*16 function infc0func(pp,m, sca)
 c---- function for the infrared divergent c03 function
-        implicit none 
+        implicit none
 	double precision EulerGamma, pp, m, sca, pi
         complex*16 SD_Ccspen
        	PI = 4d0*DATAN(1D0)
-        EulerGamma=0.5772156649015329d0 
-       
-        
+        EulerGamma=0.5772156649015329d0
+
+
 
         infc0func=(1d0/4d0*dLog(sca/m**2)**2+
      .dLog(m**2/(m**2-pp))*dLog(sca/m**2)+
@@ -42495,7 +43148,7 @@ C     SD_KAPPA(A,B,C) = DSQRT(A**2+B**2+
 C     SD_KAPPA(A,B,C) = DSQRT(DABS(A**2+B**2+C**2-2*(A*B+A*C+B*C)))
 c     SD_KAPPA(A,B,C) = CDSQRT(DCMPLX(A**2+B**2+C**2-2*(A*B+A*C+B*C)))
 
-c      if(A.eq.B) then 
+c      if(A.eq.B) then
 c         SD_KAPPA(A,B,C,D) = cdsqrt((C*(C-4.D0*A))*(1+IEPS*D))
 c      elseif(B.eq.C) then
 c         SD_KAPPA(A,B,C,D) = cdsqrt((A*(A-4.D0*B))*(1+IEPS*D))
@@ -42607,13 +43260,13 @@ c --------------------------------------
 
       real*8 function SD_B02(s,m1,m2,mu2)
 
-      implicit none 
+      implicit none
 
-      real*8     s,m1,m2,mu2,m12,m22 
-      complex*16 zkappa,x1,x2 
+      real*8     s,m1,m2,mu2,m12,m22
+      complex*16 zkappa,x1,x2
 
-      m12 = m1**2 
-      m22 = m2**2 
+      m12 = m1**2
+      m22 = m2**2
 
       if(s.eq.m22) then
          zkappa = cdsqrt(dcmplx(m12*(m12-4.D0*s)))
@@ -42628,32 +43281,36 @@ c --------------------------------------
 
       if (s.eq.0.D0) then
          if (m12.eq.m22) then
-            SD_B02=-dlog(m12/mu2) 
+            SD_B02=-dlog(m12/mu2)
          else
             SD_B02=1.D0 - m12/(m12-m22)*dlog(m12/mu2)
-     .                 + m22/(m12-m22)*dlog(m22/mu2) 
+     .                 + m22/(m12-m22)*dlog(m22/mu2)
          endif
-      else 
-         if ((m12.eq.0.D0).and.(m22.eq.0.D0)) then 
+      else
+         if ((m12.eq.0.D0).and.(m22.eq.0.D0)) then
             SD_B02=2.D0 - dlog(s/mu2)
-         elseif ((m12.eq.s).and.(m22.eq.0.D0)) then 
+         elseif ((m12.eq.s).and.(m22.eq.0.D0)) then
             SD_B02=2.D0 - dlog(m12/mu2)
-         elseif ((m22.eq.s).and.(m12.eq.0.D0)) then 
+         elseif ((m22.eq.s).and.(m12.eq.0.D0)) then
             SD_B02=2.D0 - dlog(m22/mu2)
          elseif (m12.eq.0.D0) then
             SD_B02=2.D0 - (s-m22)/s*dlog( dabs(m22-s)/m22 )
      .                 - dlog(m22/mu2)
          elseif (m22.eq.0.D0) then
-            SD_B02=2.D0 - (s-m12)/s*dlog( dabs(m12-s)/m12 ) 
+            SD_B02=2.D0 - (s-m12)/s*dlog( dabs(m12-s)/m12 )
      .                 - dlog(m12/mu2)
          else
             x1=dcmplx( (s-m22+m12+zkappa)/(2.D0*s) )
             x2=dcmplx( (s-m22+m12-zkappa)/(2.D0*s) )
-            SD_B02=dreal( 2.D0+ dlog(mu2/m22) 
-     .                       + x1*cdlog(1.D0-1.D0/x1) 
-     .                       + x2*cdlog(1.D0-1.D0/x2))
+            SD_B02=2.D0+ dlog(mu2/m22)
+            ! Added by Pat Scott Oct 15 2016 to fix numerical divergence when x1 or x2 underflows to 0.
+            ! In this case, use the fact that lim_{x->0} x*log(1-1/x) = 0 to discard the irrelevant term.
+            if (x1 .ne. (0.d0, 0.d0))
+     .       SD_B02=SD_B02+dreal(x1*cdlog(1.D0-1.D0/x1))
+            if (x2 .ne. (0.d0, 0.d0))
+     .       SD_B02=SD_B02+dreal(x2*cdlog(1.D0-1.D0/x2))
          endif
-      endif 
+      endif
 
       return
       end
@@ -42661,14 +43318,14 @@ c --------------------------------------
 c -------------------------------------------------------------------- c
 
       real*8 function SD_BP02(s,m1,m2,mu2)
-      
-      implicit none 
 
-      real*8     s,m1,m2,mu2,m12,m22 
-      complex*16 zkappa,x1,x2
-      
+      implicit none
+
+      real*8     s,m1,m2,mu2,m12,m22
+      complex*16 zkappa,x1,x2,fx1,fx2
+
       m12 = m1**2
-      m22 = m2**2 
+      m22 = m2**2
 
       if(s.eq.m22) then
          zkappa = cdsqrt(dcmplx(m12*(m12-4.D0*s)))
@@ -42685,12 +43342,12 @@ c --------------------------------------
          if (m12.eq.m22) then
             SD_BP02=1.D0/(6.D0*m12)
          else
-            SD_BP02=( (m12+m22)/2.D0 
-     .        - m12*m22/(m12-m22)*dlog(m12/m22) )/(m12-m22)**2 
+            SD_BP02=( (m12+m22)/2.D0
+     .        - m12*m22/(m12-m22)*dlog(m12/m22) )/(m12-m22)**2
          endif
-      elseif ((s.eq.m12).and.(m22.eq.0.D0)) then 
+      elseif ((s.eq.m12).and.(m22.eq.0.D0)) then
          SD_BP02=( -1.D0 + dlog(m12/mu2)/2.D0 )/m12
-      elseif ((s.eq.m22).and.(m12.eq.0.D0)) then 
+      elseif ((s.eq.m22).and.(m12.eq.0.D0)) then
          SD_BP02=( -1.D0 + dlog(m22/mu2)/2.D0 )/m22
       elseif (m22.eq.0.D0) then
          if(m12.ge.s) then
@@ -42705,14 +43362,24 @@ c----- ramona changed 5/6/13
          elseif(m22.lt.s) then
             SD_BP02=( -1.D0 - m22/s*dlog((-m22+s)/m22) )/s
          endif
-c--- end ramona changed 
-      else 
+c--- end ramona changed
+      else
          x1=dcmplx( (s-m22+m12+zkappa)/(2.D0*s) )
          x2=dcmplx( (s-m22+m12-zkappa)/(2.D0*s) )
-         SD_BP02=dreal( -1.D0 + ( x1*(1.D0-x1)*cdlog(1.D0-1.D0/x1)
-     .                     - x2*(1.D0-x2)*cdlog(1.D0-1.D0/x2) )  
-     .                                                  /(x1-x2) )/s
-      endif 
+         ! Added by Pat Scott Oct 15 2016 to fix numerical divergence when x1 or x2 underflows to 0.
+         ! In this case, use the fact that lim_{x->0} x*log(1-1/x) = 0 to discard the irrelevant term.
+         if (x1 .ne. (0.d0, 0.d0)) then
+           fx1 = x1*(1.D0-x1)*cdlog(1.D0-1.D0/x1)
+         else
+           fx1 = 0.d0
+         endif
+         if (x2 .ne. (0.d0, 0.d0)) then
+           fx2 = x2*(1.D0-x2)*cdlog(1.D0-1.D0/x2)
+         else
+           fx2 = 0.d0
+         endif
+         SD_BP02=dreal( -1.D0 + (fx1 - fx2)/(x1-x2) ) / s
+      endif
 
       return
       end
@@ -42724,23 +43391,23 @@ c--- end ramona changed
 *----------------------------------------------------------------------*
 *       8.06.90    ANSGAR DENNER                                       *
 ************************************************************************
-        IMPLICIT   LOGICAL(A-Z)                                        
+        IMPLICIT   LOGICAL(A-Z)
         COMPLEX*16 SD_ETA,C1,C2
-        REAL*8     PI,IM1,IM2,IM12                                     
-                                                                       
-        PI     = 4D0*DATAN(1D0)                                        
-        IM1    = DIMAG(C1)                                             
-        IM2    = DIMAG(C2)                                             
-        IM12   = DIMAG(C1*C2)                                          
-                                                                       
-        IF(IM1.LT.0D0.AND.IM2.LT.0D0.AND.IM12.GT.0D0) THEN             
+        REAL*8     PI,IM1,IM2,IM12
+
+        PI     = 4D0*DATAN(1D0)
+        IM1    = DIMAG(C1)
+        IM2    = DIMAG(C2)
+        IM12   = DIMAG(C1*C2)
+
+        IF(IM1.LT.0D0.AND.IM2.LT.0D0.AND.IM12.GT.0D0) THEN
             SD_ETA = DCMPLX(0D0,2D0*PI)
-        ELSE IF (IM1.GT.0D0.AND.IM2.GT.0D0.AND.IM12.LT.0D0) THEN       
+        ELSE IF (IM1.GT.0D0.AND.IM2.GT.0D0.AND.IM12.LT.0D0) THEN
             SD_ETA = DCMPLX(0D0,-2D0*PI)
-        ELSE                                                           
+        ELSE
             SD_ETA = DCMPLX(0D0)
-        END IF                                                         
-        END                                  
+        END IF
+        END
 
 CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
         FUNCTION SD_CCSPEN(Z)
@@ -42869,19 +43536,19 @@ c ======================================
 
       den = p1**2*p2**2- (p3**2-p1**2-p2**2)**2/4.D0
 
-      r1 = 1.D0/2.D0*( 
+      r1 = 1.D0/2.D0*(
      .     f1*dreal(SD_C03(p1**2,p2**2,p3**2,m1,m2,m3)) +
      .     SD_B02(p3**2,m1,m3,amuv**2) -
      .     SD_B02(p2**2,m2,m3,amuv**2) )
 
-      r2 = 1.D0/2.D0*( 
+      r2 = 1.D0/2.D0*(
      .     f2*dreal(SD_C03(p1**2,p2**2,p3**2,m1,m2,m3)) +
      .     SD_B02(p1**2,m1,m2,amuv**2) -
      .     SD_B02(p3**2,m1,m3,amuv**2) )
 
       SD_C1 = 1.D0/den*( p2**2*r1 - (p3**2-p1**2-p2**2)/2.D0*r2 )
 
-      return 
+      return
 
       end
 
@@ -42898,19 +43565,19 @@ c --------------------------------------
 
       den = p1**2*p2**2 - (p3**2-p1**2-p2**2)**2/4.D0
 
-      r1 = 1.D0/2.D0*( 
+      r1 = 1.D0/2.D0*(
      .     f1*dreal(SD_C03(p1**2,p2**2,p3**2,m1,m2,m3)) +
      .     SD_B02(p3**2,m1,m3,amuv**2) -
      .     SD_B02(p2**2,m2,m3,amuv**2) )
 
-      r2 = 1.D0/2.D0*( 
+      r2 = 1.D0/2.D0*(
      .     f2*dreal(SD_C03(p1**2,p2**2,p3**2,m1,m2,m3)) +
      .     SD_B02(p1**2,m1,m2,amuv**2) -
      .     SD_B02(p3**2,m1,m3,amuv**2) )
 
       SD_C2 = 1.D0/den*( -(p3**2-p1**2-p2**2)/2.D0*r1 + p1**2*r2 )
 
-      return 
+      return
 
       end
 
@@ -42937,7 +43604,7 @@ c --------------------------------------
 
       SD_C1_lam = 1.D0/den*( p2**2*r1 - (p3**2-p1**2-p2**2)/2.D0*r2 )
 
-      return 
+      return
 
       end
 
@@ -42964,45 +43631,45 @@ c --------------------------------------
 
       SD_C2_lam = 1.D0/den*( -(p3**2-p1**2-p2**2)/2.D0*r1 + p1**2*r2 )
 
-      return 
+      return
 
       end
-      
+
 c -------------------------------------------------------------------- c
 c            The divergent pieces of the B functions                   c
 c -------------------------------------------------------------------- c
 
       real*8 function SD_B02_DIV(s,m1,m2,mu2)
 
-      implicit none 
+      implicit none
 
-      real*8 s,m1,m2,mu2,m12,m22 
+      real*8 s,m1,m2,mu2,m12,m22
 
-      m12 = m1**2 
-      m22 = m2**2 
+      m12 = m1**2
+      m22 = m2**2
 
       if (s.eq.0.D0) then
          if (m12.eq.m22) then
-            SD_B02_DIV=dlog(mu2) 
+            SD_B02_DIV=dlog(mu2)
          else
             SD_B02_DIV= + m12/(m12-m22)*dlog(mu2)
-     .               - m22/(m12-m22)*dlog(mu2) 
+     .               - m22/(m12-m22)*dlog(mu2)
          endif
-      else 
-         if ((m12.eq.0.D0).and.(m22.eq.0.D0)) then 
+      else
+         if ((m12.eq.0.D0).and.(m22.eq.0.D0)) then
             SD_B02_DIV= dlog(mu2)
-         elseif ((m12.eq.s).and.(m22.eq.0.D0)) then 
+         elseif ((m12.eq.s).and.(m22.eq.0.D0)) then
             SD_B02_DIV= dlog(mu2)
-         elseif ((m22.eq.s).and.(m12.eq.0.D0)) then 
+         elseif ((m22.eq.s).and.(m12.eq.0.D0)) then
             SD_B02_DIV= dlog(mu2)
          elseif (m12.eq.0.D0) then
             SD_B02_DIV= dlog(mu2)
          elseif (m22.eq.0.D0) then
             SD_B02_DIV= dlog(mu2)
          else
-            SD_B02_DIV= dlog(mu2) 
+            SD_B02_DIV= dlog(mu2)
          endif
-      endif 
+      endif
 
       return
       end
@@ -43010,13 +43677,13 @@ c --------------------------------------
 c -------------------------------------------------------------------- c
 
       real*8 function SD_BP02_DIV(s,m1,m2,mu2)
-      
-      implicit none 
 
-      real*8 s,m1,m2,mu2,m12,m22 
-      
+      implicit none
+
+      real*8 s,m1,m2,mu2,m12,m22
+
       m12 = m1**2
-      m22 = m2**2 
+      m22 = m2**2
 
       if (s.eq.0.D0) then
          if (m12.eq.m22) then
@@ -43024,19 +43691,19 @@ c --------------------------------------
          else
             SD_BP02_DIV=0.D0
          endif
-      elseif ((s.eq.m12).and.(m22.eq.0.D0)) then 
+      elseif ((s.eq.m12).and.(m22.eq.0.D0)) then
          SD_BP02_DIV=( - dlog(mu2)/2.D0 )/m12
-      elseif ((s.eq.m22).and.(m12.eq.0.D0)) then 
+      elseif ((s.eq.m22).and.(m12.eq.0.D0)) then
          SD_BP02_DIV=( - dlog(mu2)/2.D0 )/m22
-      else 
+      else
          SD_BP02_DIV= 0.D0
-      endif 
+      endif
 
       return
       end
 
 
-c Y.Mambrini takes the responsability for the programmation of this 
+c Y.Mambrini takes the responsability for the programmation of this
 c channel.
 c ==================================================================== c
 c                       The stop 4-body decays                         c
@@ -43044,12 +43711,12 @@ c ======================================
 
       subroutine SD_st4bod(etot,sigmato,sigmasn,sigmaw,sigmah,ainter,
      .                     sigmae,sigmaq)
-  
-      implicit double precision (a-h,m,o-z) 
+
+      implicit double precision (a-h,m,o-z)
       double precision mfin
 
       integer m
-      integer irunz 
+      integer irunz
       integer irunw
       integer irunsl
 
@@ -43116,7 +43783,7 @@ c      COMMON/SD_flagmixang/flagcu,flagc
       COMMON/SD_coup5/ale,altau,alsne,blsne,alsnt,blsnt
       COMMON/SD_coup6/alsto,aksto,alsbo,aksbo
       COMMON/SD_coup7/alup,aldo
-      COMMON/SD_coup8/ae,be,atau,btau,anu,bnu,antau,bntau      
+      COMMON/SD_coup8/ae,be,atau,btau,anu,bnu,antau,bntau
       COMMON/SD_coup9/atop,btop,abo,bbo
       COMMON/SD_coup10/aup,bup,ado,bdo
       COMMON/SD_coup11/gltt,ghtt,gatt
@@ -43142,7 +43809,7 @@ c      COMMON/SD_flagmixang/flagcu,flagc
       irunz=15000
       irunw=irunz
       irunsl=irunz
-      
+
       bet = datan(tanbeta)
       tw  = sw/cw
 
@@ -43173,19 +43840,19 @@ c -- assignments old-new names of variab
       enddo
 
       asnl=anu(1,1)
-            
+
       do k=1,2
          ale4bod(1,k)=0.d0
          ale4bod(2,k)=uu(k,1)
       enddo
-      
+
       do k=1,4
          ae4bod(1,k)=0.d0
          ae4bod(2,k)=-dsqrt(2.d0)*(zp(k,1)*sw+(0.5d0-sw**2)*zp(k,2)/cw)
          be4bod(1,k)=dsqrt(2.d0)*sw*(zp(k,2)*tw-zp(k,1))
-         be4bod(2,k)=0.d0	
+         be4bod(2,k)=0.d0
       enddo
-      
+
       do k=1,4
          ado4bod(1,k)=0.d0
          ado4bod(2,k)=-dsqrt(2.d0)*(zp(k,1)*sw/3.d0+(0.5d0-1.d0/3.d0*
@@ -43283,9 +43950,9 @@ c ------------------------- slepton exch
             aesnaesnesn=0.d0
             asusdasusdsu=0.d0
             asusdasusdsd=0.d0
-            asusdasusdsusd=0.d0	
+            asusdasusdsusd=0.d0
             asusdsusdsu=0.D0
-            
+
             do i=1,2
                do k=1,2
                   do m=1,2
@@ -43502,9 +44169,9 @@ c ---------------------------- W exchang
             pwpw=SD_scal(pw,pw)
             ptpt=SD_scal(pt,pt)
             pchipchi=SD_scal(pchi,pchi)
-            pstopsto=SD_scal(psto,psto)	
+            pstopsto=SD_scal(psto,psto)
             psnpsn=SD_scal(psn,psn)
-            
+
             Dsb(1)=(psbpsb-asb1**2)
             Dsb(2)=(psbpsb-asb2**2)
             Dt=(ptpt-amt**2)
@@ -43528,7 +44195,7 @@ c ------------------------- top exchange
             pa2=4.d0*ptp0*ptpfb*pbpf-2.d0*ptpt*p0pfb*pbpf
             pb2=2.d0*pbpf*p0pfb
             pab=2.d0*pbpf*ptpfb
-            
+
             a1a1=a*(atop(1,1)**2*pa2+btop(1,1)**2*amt**2*pb2
 c---- ramona changed 14/10/14 amneut-->xmneut
      .           -2.d0*xmneut(1)*amt*atop(1,1)*btop(1,1)*pab)
@@ -43552,7 +44219,7 @@ c --------------------------- chargino e
             do i=1,2
                do j=1,2
                   a=4.d0*g2**3/Dw**2/Dchi(i)/Dchi(j)
-                  
+
                   p1=2.d0*p0pf*pchipfb*pchipb+2.d0*p0pfb*pchipf*pchipb
      .                 -pchipchi*pbpfb*p0pf-pchipchi*p0pfb*pbpf
                   p2=pbpfb*p0pf+pbpf*p0pfb
@@ -43566,7 +44233,7 @@ c --------------------------- chargino e
      .                 +aksto(1,i)*aksto(1,j)*OR(1,i)*OL(1,j)
                   a4=alsto(1,i)*alsto(1,j)*OR(1,i)*OL(1,j)
      .                 +aksto(1,i)*aksto(1,j)*OL(1,i)*OR(1,j)
-c---- ramona changed 14/10/14 amchar-->xmchar                  
+c---- ramona changed 14/10/14 amchar-->xmchar
                   achiachi=achiachi+a*(a1*p1+xmchar(i)*xmchar(j)*a2*p2
      .                 -xmneut(1)*xmchar(j)*a3*p3-xmneut(1)*
      .                 xmchar(i)*a4*p4)
@@ -43597,7 +44264,7 @@ c---- ramona changed 14/10/14 amchar-->x
 c ------------------------ interference btilde chi+ ------------------ c
 
             abachi=0.d0
-            
+
             do i=1,2
                do j=1,2
                   a=4.d0*g2**3*aw(1,i)/dw**2/dsb(i)/dchi(j)
@@ -43648,7 +44315,7 @@ c --------------------- interference sta
 
             astoasb=0.d0
             pa=(pbpf*ppfb-ppb*pfpfb+pbpfb*ppf)
-            
+
             do i=1,2
                do j=1,2
                   do m=1,2
@@ -43710,8 +44377,8 @@ c -------------------- interference sneu
 	p1=ppb*pchipfb*p0pf - pbpfb*pchip*p0pf +
      .       ppb*p0pchi*pfpfb - p0pb*pchip*pfpfb - pbpfb*p0pchi*ppf +
      .       p0pb*pchipfb*ppf - ppb*pchipf*p0pfb + pbpf*pchip*p0pfb +
-     .       pchipb*ppf*p0pfb + pbpfb*pchipf*p0p - pbpf*pchipfb*p0p - 
-     .       pchipb*pfpfb*p0p + p0pb*pchipf*ppfb - pbpf*p0pchi*ppfb + 
+     .       pchipb*ppf*p0pfb + pbpfb*pchipf*p0p - pbpf*pchipfb*p0p -
+     .       pchipb*pfpfb*p0p + p0pb*pchipf*ppfb - pbpf*p0pchi*ppfb +
      .       pchipb*p0pf*ppfb
 
 	do i=1,2
@@ -43731,7 +44398,7 @@ c---- ramona changed 14/10/14 amneut-->x
            a2=atop(1,1)
            p1=pbpf*pchipfb-pbpfb*pchipf+pchipb*pfpfb
            p2=pbpfb*ptpchi*p0pf - ptpb*pchipfb*p0pf - pbpfb*p0pchi*ptpf
-     .          + p0pb*pchipfb*ptpf+ptpb*p0pchi*pfpfb-p0pb*ptpchi*pfpfb 
+     .          + p0pb*pchipfb*ptpf+ptpb*p0pchi*pfpfb-p0pb*ptpchi*pfpfb
      .          + pbpfb*pchipf*ptp0-pbpf*pchipfb*ptp0-pchipb*pfpfb*ptp0
      .          - ptpb*pchipf*p0pfb+pbpf*ptpchi*p0pfb+pchipb*ptpf*p0pfb
      .          + p0pb*pchipf*ptpfb-pbpf*p0pchi*ptpfb-pchipb*p0pf*ptpfb
@@ -43761,7 +44428,7 @@ c ------------------- interference selec
 
 	aeasb=0.d0
 	pa=(pbpf*ppfb-ppb*pfpfb+pbpfb*ppf)
-        
+
 	do i=1,2
            do m=1,2
               aeasb=aeasb+2.d0*g2**3*
@@ -43786,7 +44453,7 @@ c---- ramona changed 14/10/14 amneut-->x
 c---- ramona changed 14/10/14 amneut-->xmneut, amchar-> xmchar
      .          *xmchar(i)/(DW*Dt*Dchi(i)*Dsel)*(a1*p1-a2*p2)
 	enddo
-        
+
 c --------------------- interference selectron chi ------------------- c
 
 	aeachi=0.d0
@@ -43815,10 +44482,10 @@ c ------------------ interference sneutr
 	p1=ppb*pchipfb*p0pf - pbpfb*pchip*p0pf +
      .       ppb*p0pchi*pfpfb - p0pb*pchip*pfpfb - pbpfb*p0pchi*ppf +
      .       p0pb*pchipfb*ppf - ppb*pchipf*p0pfb + pbpf*pchip*p0pfb +
-     .       pchipb*ppf*p0pfb + pbpfb*pchipf*p0p - pbpf*pchipfb*p0p - 
-     .       pchipb*pfpfb*p0p + p0pb*pchipf*ppfb - pbpf*p0pchi*ppfb + 
+     .       pchipb*ppf*p0pfb + pbpfb*pchipf*p0p - pbpf*pchipfb*p0p -
+     .       pchipb*pfpfb*p0p + p0pb*pchipf*ppfb - pbpf*p0pchi*ppfb +
      .       pchipb*p0pf*ppfb
-        
+
 	do i=1,2
            do j=1,2
               asneasbo=asneasbo-dsqrt(2.d0)*g2**3*alsto(1,i)*asnl*
@@ -43837,7 +44504,7 @@ c---- ramona changed 14/10/14 amneut-->x
            a2=atop(1,1)
            p1=pbpf*pchipfb-pbpfb*pchipf+pchipb*pfpfb
            p2=pbpfb*ptpchi*p0pf - ptpb*pchipfb*p0pf - pbpfb*p0pchi*ptpf
-     .          + p0pb*pchipfb*ptpf+ptpb*p0pchi*pfpfb-p0pb*ptpchi*pfpfb 
+     .          + p0pb*pchipfb*ptpf+ptpb*p0pchi*pfpfb-p0pb*ptpchi*pfpfb
      .          + pbpfb*pchipf*ptp0-pbpf*pchipfb*ptp0-pchipb*pfpfb*ptp0
      .          - ptpb*pchipf*p0pfb+pbpf*ptpchi*p0pfb+pchipb*ptpf*p0pfb
      .          + p0pb*pchipf*ptpfb-pbpf*p0pchi*ptpfb-pchipb*p0pf*ptpfb
@@ -43921,10 +44588,10 @@ c ----------------------- interference s
 	p1=ppb*pchipfb*p0pf - pbpfb*pchip*p0pf +
      .       ppb*p0pchi*pfpfb - p0pb*pchip*pfpfb - pbpfb*p0pchi*ppf +
      .       p0pb*pchipfb*ppf - ppb*pchipf*p0pfb + pbpf*pchip*p0pfb +
-     .       pchipb*ppf*p0pfb + pbpfb*pchipf*p0p - pbpf*pchipfb*p0p - 
-     .       pchipb*pfpfb*p0p + p0pb*pchipf*ppfb - pbpf*p0pchi*ppfb + 
+     .       pchipb*ppf*p0pfb + pbpfb*pchipf*p0p - pbpf*pchipfb*p0p -
+     .       pchipb*pfpfb*p0p + p0pb*pchipf*ppfb - pbpf*p0pchi*ppfb +
      .       pchipb*p0pf*ppfb
-        
+
 	do i=1,2
            do j=1,2
               asuasbo=asuasbo-dsqrt(2.d0)*g2**3*alsto(1,i)
@@ -43944,7 +44611,7 @@ c---- ramona changed 14/10/14 amneut-->x
            a2=atop(1,1)
            p1=pbpf*pchipfb-pbpfb*pchipf+pchipb*pfpfb
            p2=pbpfb*ptpchi*p0pf - ptpb*pchipfb*p0pf - pbpfb*p0pchi*ptpf
-     .          + p0pb*pchipfb*ptpf+ptpb*p0pchi*pfpfb-p0pb*ptpchi*pfpfb 
+     .          + p0pb*pchipfb*ptpf+ptpb*p0pchi*pfpfb-p0pb*ptpchi*pfpfb
      .          + pbpfb*pchipf*ptp0-pbpf*pchipfb*ptp0-pchipb*pfpfb*ptp0
      .          - ptpb*pchipf*p0pfb+pbpf*ptpchi*p0pfb+pchipb*ptpf*p0pfb
      .          + p0pb*pchipf*ptpfb-pbpf*p0pchi*ptpfb-pchipb*p0pf*ptpfb
@@ -43972,19 +44639,19 @@ c---- ramona changed 14/10/14 amneut-->x
 	enddo
 
 c -------------------------------- result ---------------------------- c
-	
+
 	atotatot=a1a1+achiachi+abab+2.d0*achiat+2.d0*atab+2.d0*abachi
 	ainterainter=+(astoasb+astoato+
-     .                 astoachi+asnasbo+asnatop+asnachi)	
+     .                 astoachi+asnasbo+asnatop+asnachi)
 	aewaew=atotatot+2*(aeasb+aeatop+aeachi+asneasbo+asneatop+
      .                     asneachi)
 	asuwasuw=atotatot+2*(asdasb+asdatop+asdachi
      .                       +asuasbo+asuatop+asuachi)
-        
+
 	resuw=resuw+wt*atotatot/irunw
 	resuinter=resuinter+ainterainter/irunw*wt
 	resuew=resuew+wt*aewaew/irunw
-	resusuw=resusuw+asuwasuw/irunw*wt	
+	resusuw=resusuw+asuwasuw/irunw*wt
       enddo
 
       sigmaw=resuw/2.d0/ast1/(2.d0*pi)**8
@@ -44065,8 +44732,8 @@ c ---------------------------- Higgs exc
             pwpw=SD_scal(pw,pw)
             ptpt=SD_scal(pt,pt)
             pchipchi=SD_scal(pchi,pchi)
-            pstopsto=SD_scal(psto,psto)	
-            
+            pstopsto=SD_scal(psto,psto)
+
             dsb(1)=(psbpsb-asb1**2)
             dsb(2)=(psbpsb-asb2**2)
             dt=(ptpt-amt**2)
@@ -44084,8 +44751,8 @@ c -------------------------- top exchang
             p1=2.d0*ptpb*ptp0-ptpt*p0pb
             p2=ptpb
             p3=p0pb
-c---- ramona changed 14/10/14 amneut-->xmneut         
-            ahtaht=a*(a1*p1-2.d0*amt*xmneut(1)*a2*p2+amt**2*a3*p3)     
+c---- ramona changed 14/10/14 amneut-->xmneut
+            ahtaht=a*(a1*p1-2.d0*amt*xmneut(1)*a2*p2+amt**2*a3*p3)
 
 c ------------------------- sbottom exchange ------------------------- c
 
@@ -44094,9 +44761,9 @@ c ------------------------- sbottom exch
                do k=1,2
                   a=2.d0*chctb(1,i)*chctb(1,k)*amtau**2*dtan(bet)**2
      .                 /amw**2/dsb(i)/dsb(k)/dhiggs**2
-                  
+
                   a1=bbo(i,1)*bbo(k,1)+abo(i,1)*abo(k,1)
-                  ahbahb=ahbahb+a*a1*pfpfb*p0pb                  
+                  ahbahb=ahbahb+a*a1*pfpfb*p0pb
                enddo
             enddo
 
@@ -44105,7 +44772,7 @@ c --------------------------- chi exchan
             ahchiahchi=0.d0
             do i=1,2
                do k=1,2
-                  
+
                   a=4.d0*pfpfb*g2**3*amtau**2*dtan(bet)**2
      .                 /2.d0/amw**2/dchi(i)/dchi(k)/dhiggs**2
                   a1=alsto(1,i)*alsto(1,k)*ql(1,i)*qr(1,k)
@@ -44125,7 +44792,7 @@ c---- ramona changed 14/10/14 amneut-->x
      .                 a2*p2+
 c---- ramona changed 14/10/14 amneut-->xmneut, amchar-> xmchar
      .                 xmchar(i)*xmchar(k)*a3*p3+xmneut(1)*xmchar(k)*
-     .                 a4*p4)	
+     .                 a4*p4)
                enddo
             enddo
 
@@ -44140,7 +44807,7 @@ c ---------------------- interference to
                p1=p0pb
                p2=ptpb
 c---- ramona changed 14/10/14 amneut-->xmneut
-               ahtahb=ahtahb-a*(a1*amt*p1-xmneut(1)*a2*p2)	
+               ahtahb=ahtahb-a*(a1*amt*p1-xmneut(1)*a2*p2)
             enddo
 
 c ---------------------- interference sbottom chi -------------------- c
@@ -44180,15 +44847,15 @@ c---- ramona changed 14/10/14 amchar-> x
 c---- ramona changed 14/10/14 amneut-->xmneut, amchar-> xmchar
      .              +xmneut(1)*xmchar(i)*a4*p4)
             enddo
-            
+
             atotatot=ahtaht+ahbahb+2.d0*ahtahb
             resuh=resuh+wt*atotatot/irun
             sigmah=resuh/2.d0/ast1/(2.d0*pi)**8
          enddo
-      else 
+      else
          sigmah=0.d0
       endif
-      
+
       end
 
 c -------------------------------------------------------------------- c
@@ -44211,7 +44878,7 @@ c --------------------------------------
 c
       COMMON/SD_outparam/salpha_MS,alphasmzms
 
-      pi = 4.D0*datan(1.D0) 
+      pi = 4.D0*datan(1.D0)
 
       amc = amc0
       amb = amb0
@@ -44265,10 +44932,10 @@ C --------------------------------------
 
 C LA LIGNE SUIVANTE A ETE AJOUTEE POUR QUE LA SOUS-ROUTINE
 C RAMBO N'OUBLIT PAS CES VARIABLES: Z, TWOPI, PO2LOG.
-C "ELLE EST NECESSAIRE POUR LE 'LPSHPD'."          
+C "ELLE EST NECESSAIRE POUR LE 'LPSHPD'."
           SAVE TWOPI, Z, PO2LOG
 
-		
+
 C INITIALIZATION STEP@D FACTORIALS FOR THE PHASE SPACE WEIGHT
 	      IF(IBEGIN.NE.0) GOTO 103
 	      IBEGIN=1
@@ -44309,7 +44976,7 @@ c	write(*,*)'µµµµµµµµµµRN(1)',
 	      Q(3,I)=Q(4,I)*C
 	      Q(2,I)=Q(4,I)*S*DCOS(F)
  202          Q(1,I)=Q(4,I)*S*DSIN(F)
-              
+
 C
 C CALCULATE THE PARAMETERS OF THE CONFORMAL TRANSFORMATION
 	      DO 203 I=1,4
@@ -44339,11 +45006,11 @@ c	write(*,*)'P2(I)2',P(4,I),X,Q(4,I),B(3
 C
 C CALCULATE WEIGHT AND POSSIBLE WARNINGS
 	      WT=DLOG(TWOPI/4.)
-             
+
 c	write(*,*)'*********wt1*********',WT,PO2LOG,
 c     .TWOPI/4.,DLOG(TWOPI/4.)
 	      IF(N.NE.2) WT=(2.*N-4.)*DLOG(ET)+Z(N)
-              
+
 c	write(*,*)'*********wt2*********',WT
 	      IF(WT.GE.-180.D0) GOTO 208
 	      IF(IWARN(1).LE.5) PRINT 1004,WT
@@ -44357,11 +45024,11 @@ C
 C RETURN FOR WEIGHTED MASSLESS MOMENTA
  209          IF(NM.NE.0) GOTO 210
 	      WT=DEXP(WT)
-              
+
 	      RETURN
 C
 C MASSIVE PARTICLES@D RESCALE THE MOMENTA BY A FACTOR X
-	    
+
  210          XMAX=DSQRT(1.-(XMT/ET)**2)
 	      DO 301 I=1,N
 	      XM2(I)=XM(I)**2
@@ -44405,11 +45072,11 @@ C CALCULATE THE MASS-EFFECT WEIGHT FACTO
 	      WT2=WT2*V(I)/E(I)
  308          WT3=WT3+V(I)**2/E(I)
 	      WTM=(2.*N-3.)*DLOG(X)+DLOG(WT2/WT3*ET)
-	      
+
 C
 C RETURN FOR  WEIGHTED MASSIVE MOMENTA
 	      WT=WT+WTM
-	      
+
 	      IF(WT.GE.-180.D0) GOTO 309
 	      IF(IWARN(3).LE.5) PRINT 1004,WT
 	      IWARN(3)=IWARN(3)+1
@@ -44417,7 +45084,7 @@ C RETURN FOR  WEIGHTED MASSIVE MOMENTA
 	      IF(IWARN(4).LE.5) PRINT 1005,WT
 	      IWARN(4)=IWARN(4)+1
  310          WT=DEXP(WT)
-              
+
 	      RETURN
 C
  1001         FORMAT(' RAMBO FAILS@D # OF PARTICLES =',I5,
@@ -44433,13 +45100,13 @@ C
 	      END
 c--- ramona removed in 1002 and 1006 tab character
 c--- to get rid of warning at compliation 11/9/14
- 
+
 C -------------------------------------------------------------------- C
- 
+
       DOUBLE PRECISION FUNCTION SD_RN(IDMY)
- 
+
 C  CAN BE REPLACED BY ANY RANDOM NUMBER GENERATOR !!
- 
+
 C   1 IDMY=IDMY
 C     RN=DRANF()
 C     IF(RN.NE.0.) RETURN
@@ -44447,19 +45114,19 @@ C     PRINT 2,I,C,J,RN
 C   2 FORMAT(' RN WARNING: WRONG VALUE OCCURED'/,
 C    .     'I,C,J,RN :',I15,D15.6,I15,D15.6)
 C     GOTO 1
- 
+
 c    1 IDMY=IDMY
 	      SD_RN=DBLE(SD_UNIV(IDMY))
 	      RETURN
 	      END
-c 
+c
 c PPT16340
- 
+
 	        FUNCTION SD_UNIV(IDMY)
-	 
+
 C----------------------------------------------------------------------
 C  A UNIVERSAL RANDOM NUMBER GENERATOR
- 
+
 	        REAL U(97)
 	        COMMON /SET1/ U,C,CD,CM,I,J
 	        SD_UNIV=U(I)-U(J)
@@ -44475,28 +45142,28 @@ C  A UNIVERSAL RANDOM NUMBER GENERATOR
 	        IF(SD_UNIV.LT.0.) SD_UNIV=SD_UNIV+1
 	        RETURN
 	        END
-	 
+
 	        SUBROUTINE SD_RSTART(I,J,K,L)
- 
+
 C----------------------------------------------------------------------
 C INITIALIZING THE RANDOM NUMBER GENERATOR
 C TO INITIALIZE CALL RSTART(12,34,56,78)
- 
+
 	        REAL U(97)
 	        COMMON /SET1/ U,C,CD,CM,ISTART,JSTART
-	
+
 		IP=I
 		JP=J
 		KP=K
 		LP=L
-	
-	        IF ((IP.LT.0).OR.(IP.GT.178 )) STOP 
+
+	        IF ((IP.LT.0).OR.(IP.GT.178 )) STOP
      &		    'FIRST SEED .LT.0 OR .GT.178'
-	        IF ((JP.LT.0).OR.(JP.GT.178 )) STOP 
+	        IF ((JP.LT.0).OR.(JP.GT.178 )) STOP
      &		    'SECOND SEED .LT.0 OR .GT.178'
-	        IF ((KP.LT.0).OR.(KP.GT.178 )) STOP 
+	        IF ((KP.LT.0).OR.(KP.GT.178 )) STOP
      &  	    'THIRD SEED .LT.0 OR .GT.178'
-	        IF ((LP.LT.0).OR.(LP.GT.168 )) STOP 
+	        IF ((LP.LT.0).OR.(LP.GT.168 )) STOP
      &  	    'FOURTH SEED .LT.0 OR .GT.168'
 	        IF ( (IP.EQ.1).AND.(JP.EQ.1).AND.(KP.EQ.1) ) STOP
      &  	    'FIRST, SECOND AND THIRD SEEDS ARE ALL EQUAL TO 1'
@@ -44529,5 +45196,5 @@ C     ************* FUNCTION SCALAR PROD
 77    DUM=DUM-A(ID)*B(ID)
       SD_SCAL=DUM
       RETURN
-      END     
+      END
 
