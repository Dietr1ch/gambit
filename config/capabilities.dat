# GAMBIT central capabilities description database
#
# GAMBIT will parse this file and try to match the entries
# to the capabilities it has registered. If there are any
# conflicts it will report them, and if any capabilities
# are lacking descriptions those will be reported too.
# This is then merged with internally known information
# to create a centralised database of capability
# information.
# This is found in the file "<insert name here>"
#
# Note: Yaml syntax for multi-line strings is this:
#
#body: |
#  This is a multi-line string.
#  "special" metacharacters may
#  appear here. The extent of this string is
#  indicated by indentation.
#
# We can break this into categories however we want; yaml will just ignore comments


#-------------------------------------
#  Test capabilities
#-------------------------------------

test_vector: |
   An example vector.

charge: |
   The charge of some make-believe particle.

xsection: |
   A cross-section for some make-believe process.

nevents: |
   Number of events for some make-believe process.

nevents_postcuts: |
   Number of events post cuts for some make-believe process.

Example_lnL_A: |
   An example likelihood that ExampleBitA can calculate.

eventLoopManagement: |
   An example of a manager for loops over other module functions.

event: |
   An event of some make-believe process.

eventAccumulation: |
   An example of a collector of events.

particle_id: |
   Name of some make-believe particle.

damu: |
   Mock muon (g-2) anomalous contribution;
   an example of how to interact with models.

normaldist_loglike: |
   A test likelihood: normal distribution.

function_pointer: |
   Example of how to retrieve a pointer to some backend function.

test_Farrays: |
   Test interaction with arrays in Fortran backends.

test_marg_lnlike: |
   Tester for marginalised Poisson likelihood.

test_Pythia: |
   Tester for Pythia backend.

test_BE_Array: |
   Tester for C/C++ backend array interfaces.

test_flat_likelihood: |
   Tester for C/C++ backend array interfaces.

LibFarrayTest_1_0_init: |
   Initialize function for the LibFarrayTest backend.

libFarrayTestCommonBlock: |
   Tester for Fortran common blocks in the backend LibFarrayTest.

libFarrayTestCommonBlock2: |
   Tester for Fortran common blocks in the backend LibFarrayTest.

libFarrayTestCommonBlock3: |
   Tester for Fortran common blocks in the backend LibFarrayTest.

libFarrayTest_doubleFuncArray: |
   Tester for Fortran functions using arrays in the backend LibFarrayTest.

libFarrayTest_doubleFuncArray2: |
   Tester for Fortran functions using arrays in the backend LibFarrayTest.

libFarrayTest_doubleFuncArray3: |
   Tester for Fortran functions using arrays in the backend LibFarrayTest.

libFarrayTest_fillArrays: |
   Tester for filling Fortran arrays in the backend LibFarrayTest.

libFarrayTest_fptrRoutine: |
   Tester for pointers to Fortran routines in the backend LibFarrayTest.

libFarrayTest_printStuff: |
   Test printer for the backend LibFarrayTest.

libFarrayTest_testcomplex: |
   Fortran subroutine that test complex numbers.

LibFirst_1_0_init: |
   Initialize the C++ testing LibFirst backend, version 1.0.

LibFirst_1_1_init: |
   Initialize the C++ testing LibFirst backend, version 1.1.

LibSecond_1_0_init: |
   Initialize the Python testing LibSecond backend, version 1.0.

LibSecond_1_1_init: |
   Initialize the Python testing LibSecond backend, version 1.1.

LibThird_1_0_init: |
   Initialize the Python package testing LibThird backend, version 1.0.

LibThird_1_1_init: |
   Initialize the Python package testing LibThird backend, version 1.1.

initialize_capability: |
   Tester function for the initialization of backends.

returnResult_capability: |
   Tester function for the return of results from backends.

LibFortran_1_0_init: |
   Initialize the Fortran testing LibFortran backend.

average: |
   Test Fortran function that supposedly calculates an average.

externalFunction: |
   Simple example external function that output a double in inputs an integer.

externalComplicatedFunction: |
   Simple example external function that output a double in inputs an integer and a double.

example_be_array_1D: |
   Example 1D backend array.

example_be_array_2D: |
   Example 2D backend array.

example_be_array_3D: |
   Example 3D backend array.

funcGauss: |
   Test Fortran function that supposedly calculates a Gaussian function.

awesomeness: |
   Awesome example function by Anders that returns an awesome double and inputs
   an awesome integer.  It runs an awesome example initalize function and some other
   awesome function, and returns some awesome result.  It also send an awesome message from
   "awesomenessByAnders" to the logger.

SomeArray: |
   Example double array in libfirst and friends.

SomeDouble: |
   Example double in libfirst and friends.

SomeInt: |
   Example integer in libfirst and friends.

SomeOtherInt: |
   Another example integer; in libthird.

funcBE: |
   Example Fortran backend function that simulates a backend function
   in a Fortran library.

runMe: |
   Example fortran subroutine that simulated a main functionality.

refex: |
   Example function in libfirst that inputs a variable by refernce.

refex2: |
   Example function in libfirst that inputs a variable by refernce
   and another variable to value.

someFunction: |
   Example void function that does nothing.

someOtherFunction: |
   An example function that just multiplies two numbers.

varex: |
   Return value of a nasty example variadic function in libfirst.

varex2: |
   Return value of a nasty variadic convenience function in libfirst.

run_MSSMspectrum_test: |
   Function to thest the Spectrum object for the MSSM.

run_light_quark_test: |
   Tests the Standrad Model Spectrum wrapper (QedQcdWrapper).

ptr_arr_tests: |
   Function that tests array and -> operators on deps and BE vars.

libMathematicaTest_1_0_init: |
   Initialises the backend for Mathematica tests.

MathematicaTest: |
   Performs serveral tests of Mathematica backends.

MathTest: |
   Runs a series of test in libMathematicaTest.

MathTest_CalculateSquare: |
   Test function for Mathematica backends that calculates the square of a number.

MathTest_CalculateSum: |
   Test function for Mathematica backends that calculates the sum of two numbers.

MathTest_ExtractElement: |
   Test function for Mathematica backends that extracts an element from a list.

MathTest_PrintVar: |
   Test function for Mathematica backends that prints a variable.

MathTest_PrintVarorVar2: |
   Test function for Mathematica backends that prints a variable depeding on a boolean argument.

MathTest_SquareList: |
   Test function for Mathematica backends that calculates the square of a list.

MathTest_StringTest: |
   Test function for Mathematica backends to test strings.

MathTest_Var: |
   Test integer variable for Mathematica backends.

MathTest_Var2: |
   Test real variable for Mathematica backends.

MathTest_VarEqualVar2: |
   Test function for Mathematica backends checks the equality of two variables.

MathTest_VoidTest: |
   Test function for Mathematica backends for testing void functions

MathTest_Gammafunc: |
   Test function for Mathematica backends for testing non-alphanumerical characters in function names

MathTest_deltabar: |
   Test function for Mamthematica backends for tsting non-alphanumerical characters in variable names



#-------------------------------------
#  SpecBit
#-------------------------------------

#####  Scalar singlet Higgs-portal models  #####

ScalarSingletDM_Z2_spectrum: |
    Create spectrum object for scalar singlet dark matter model, available functions
    are a simple container spectrum and one produced by a spectrum generator.

ScalarSingletDM_Z3_spectrum: |
    Create spectrum object for scalar singlet dark matter model with a Z3 symmetry.

high_scale_vacuum_info: |
    Run the quartic Higgs coupling to high scales, in order to determine
    the expected lifetime of the electroweak vacuum, the instability scale, and
    the perturbativity of the couplings up to the necessary scale.

check_perturbativity_to_lambda_min: |
    Check that dimensionless couplings are sufficiently small up to the smaller
    of the Planck scale and the scale at which the quartic Higgs coupling is
    minimised and non-positive.

lnL_high_scale_vacuum: |
    Compute likelihood of no decays of the electroweak vacuum to high-scale minima in the past light cone.

lnL_EW_vacuum: |
    Check that the scalar potential is bounded from below at the electroweak scale and
    compute the likelihood of the EW vacuum decaying to other low-scale minima.

expected_vacuum_lifetime: |
    Return the expected lifetime of the electroweak vacuum.

lambdaB: |
    The scale at which the Higgs quartic coupling is minimised (in GeV).

scale_of_nonperturbativity: |
    The lowest scale at which one or more couplings become non-perturbative.


#####   Other Higgs-portal models  #####

VectorSingletDM_Z2_spectrum: |
    Create spectrum object for the vector dark matter model, available functions
    are a simple container spectrum and one produced by a spectrum generator.

MajoranaSingletDM_Z2_spectrum: |
    Create spectrum object for the Majorana fermion dark matter model, available functions
    are a simple container spectrum and one produced by a spectrum generator.

DiracSingletDM_Z2_spectrum: |
    Create spectrum object for the Dirac fermion dark matter model, available functions
    are a simple container spectrum and one produced by a spectrum generator.


#####   Minimal Dark Matter  #####

MDM_spectrum: |
    Create a spectrum object for the mimimal electroweak fermionic quintuplet dark matter model.


#####   Standard model  #####

SMINPUTS: |
    Provide Standard Model parameters in SLHA2 input conventions.

qedqcd_subspectrum: |
    Create QedQcdWrapper version of Spectrum* from SMInputs structs.

SM_spectrum: |
    Create Spectrum object from SMInputs structs and SM Higgs parameters.

#####   MSSM  #####

unimproved_MSSM_spectrum: |
    Returns unimproved MSSM spectrum object calculated with boundary conditions
    depedent on the choice of function used.

SM_subspectrum: |
    Return the standard model subspectrum object from the MSSM_spectrum

FH_MSSMMasses: |
    SUSY masses and mixings, as computed by FeynHiggs.

FH_HiggsMasses: |
    Higgs masses and mixings with theoretical uncertainties, as computed by FeynHiggs.

Higgs_Couplings: |
    Higgs couplings, as computed by FeynHiggs

SPheno_3_3_8_init: |
    Initalises SPheno 3.3.8 and sets the internal model type according to the one being scanned.

SPheno_MSSMspectrum: |
    Calculates and returns a MSSM spectrum object using SPheno.

SPheno_internal: |
    Exclusively used for internal variables and function for the SPheno backend.


#-------------------------------------
#  ColliderBit capabilities
#-------------------------------------


DummyColliderObservable: |
   Dummy observable that creates a dependency on TestModel1D, which is used
   to satisfy the normal GAMBIT model requrements in a minimal way. Used
   for testing.

ColliderOperator: |
   Controls the parallelization and execution of the entire
   event loop of the collider simulation.

LHCEventLoopInfo: |
   Info about the event loop.

LHC_signals: |
   Signal predictions and uncertainties in all LHC analyses.

LHC_LogLikes: |
   Computes analysis-specific log-likelihood values,
   from AllAnalysisNumbers.

LHC_Combined_LogLike: |
   A final, single delta-log-likelihood value for LHC searches.

LHC_LogLike_per_SR: |
   Delta-log-likelihood values for every signal region in the LHC analyses.

LHC_LogLike_per_analysis: |
   One delta-log-likelihood value per LHC analysis.

LHC_LogLike_SR_indices: |
   The indices of the signal regions whose delta-log-likelihood values contribute to
   LHC_Combined_LogLike and LHC_LogLike_per_analysis.

LHC_LogLike_SR_labels: |
   The indices of the signal regions whose delta-log-likelihood values contribute to
   LHC_Combined_LogLike and LHC_LogLike_per_analysis.

MC_ConvergenceSettings : |
   Convergence settings to be used for terminating Monte Carlo event generation.

HardScatteringSim: |
   Provides a Pythia 8 instance within a container which is
   ready to simulate collision events for a model chosen by ScannerBit.

HardScatteringEvent: |
   Uses the given HardScatteringSim to generate the next event
   of the collider simulation chain.

DetectorSim: |
   Provides a Delphes instance within a container which is
   ready to perform detector simulation.

SimpleSmearingSim: |
   Provides a set of BuckFast functions within a container
   which is ready to apply ATLAS smearing and reconstruction
   efficiencies to an event.

ReconstructedEvent: |
   Uses the given DetectorSim to perform detector simulation
   upon the given HardScatteringEvent.

ATLASSmearedEvent: |
   Uses the given SimpleSmearingSim to apply smearing and
   reconstruction efficiencies upon the given HardScatteringEvent.

ATLASnoeffSmearedEvent: |
   Uses the given SimpleSmearingSim to apply smearing upon the
   given HardScatteringEvent. No efficiencies are applied.

CMSSmearedEvent: |
   Uses the given SimpleSmearingSim to apply smearing and
   reconstruction efficiencies upon the given HardScatteringEvent.

CMSnoeffSmearedEvent: |
   Uses the given SimpleSmearingSim to apply smearing upon the
   given HardScatteringEvent. No efficiencies are applied.

CopiedEvent: |
   Uses the given SimpleSmearingSim to do absolutely nothing to
   the given HardScatteringEvent.

ATLASAnalysisContainer: |
   Provides a container of ATLAS analyses to be used with the detector simulation
   capability ATLASSmearedEvent. The container is ready to apply each analysis to
   each event.

ATLASnoeffAnalysisContainer: |
   Provides a container of ATLAS analyses to be used with the detector simulation
   capability ATLASnoeffSmearedEvent. The container is ready to apply each analysis to
   each event.

CMSAnalysisContainer: |
   Provides a container of CMS analyses to be used with the detector simulation
   capability CMSSmearedEvent. The container is ready to apply each analysis to
   each event.

CMSnoeffAnalysisContainer: |
   Provides a container of CMS analyses to be used with the detector simulation
   capability CMSnoeffSmearedEvent. The container is ready to apply each analysis to
   each event.

DetAnalysisContainer: |
   Provides a container of analyses to be used with the detector simulation
   capability DetectorSim (Delphes). The container is ready to apply each
   analysis to each event.

IdentityAnalysisContainer: |
   Provides a list of “identity” analyses (no detector
   smearing) within a container that is ready to apply
   them to an event.

ATLASAnalysisNumbers: |
   Uses the given ATLASAnalysisContainer to perform all its
   analyses upon the given ATLASSmearedEvent.

ATLASnoeffAnalysisNumbers: |
   Uses the given ATLASnoeffAnalysisContainer to perform all its
   analyses upon the given ATLASSmearedEvent.

CMSAnalysisNumbers: |
   Uses the given CMSAnalysisContainer to perform all its analyses
   upon the given CMSSmearedEvent.

CMSnoeffAnalysisNumbers: |
   Uses the given CMSnoeffAnalysisContainer to perform all its analyses
   upon the given CMSSmearedEvent.

DetAnalysisNumbers: |
   Uses the given DetAnalysisContainer to perform all its analyses
   upon the given ReconstructedEvent.

IdentityAnalysisNumbers: |
   Uses the given IdentityAnalysisContainer
   to perform all its analyses upon the given
   CopiedEvent.

AllAnalysisNumbers: |
   Combined analysis numbers from all LHC analyses used in a scan.

ALEPH_Selectron_LLike: |
   Compares the cross section times branching ratio
   for selectron pair production to the model-independent limit according
   to the ALEPH collaboration. Returns a log likelihood value.

ALEPH_Smuon_LLike: |
   Compares the cross section times branching ratio for smuon pair
   production to the model-independent limit according to the ALEPH
   collaboration. Returns a log likelihood value.

ALEPH_Stau_LLike: |
   Compares the cross section times branching ratio for stau pair
   production to the model-independent limit according to the ALEPH
   collaboration. Returns a log likelihood value.

L3_Selectron_LLike: |
   Compares the cross section times branching ratio for selectron pair
   production to the model-independent limit according to the L3
   collaboration. Returns a log likelihood value.

L3_Smuon_LLike: |
    Compares the cross section times branching ratio for smuon pair
    production to the model-independent limit according to the L3
    collaboration. Returns a log likelihood value.

L3_Stau_LLike: |
    Compares the cross section times branching ratio for stau pair
    production to the model-independent limit according to the L3
    collaboration. Returns a log likelihood value.

L3_Neutralino_All_Channels_LLike: |
   Compares the cross section times branching ratio for neutralino
   pair production to the model-independent limit according to the
   L3 collaboration. Returns a log likelihood value.

L3_Neutralino_Leptonic_LLike: |
   Compares the cross section times branching ratio for neutralino
   pair production (with leptonically decaying Z bosons) to the
   model-independent limit according to the L3 collaboration.
   Returns a log likelihood value.

L3_Chargino_All_Channels_LLike: |
   Compares the cross section times branching ratio for chargino
   pair production to the model-independent limit according to the
   L3 collaboration. Returns a log likelihood value.

L3_Chargino_Leptonic_LLike: |
   Compares the cross section times branching ratio for chargino
   pair production (with leptonically decaying W bosons) to the
   model-independent limit according to the L3 collaboration.
   Returns a log likelihood value.

OPAL_Neutralino_Hadronic_LLike: |
    Compares the cross section times branching ratio for neutralino
    pair production (with hadronically decaying Z bosons) to the
    model-independent limit according to the OPAL collaboration.
    Returns a log likelihood value.

OPAL_Chargino_All_Channels_LLike: |
   Compares the cross section times branching ratio for chargino
   pair production to the model-independent limit according to
   the OPAL collaboration. Returns a log likelihood value.

OPAL_Chargino_Hadronic_LLike: |
   Compares the cross section times branching ratio for chargino
   pair production (with hadronically decaying W bosons) to the
   model-independent limit according to the OPAL collaboration.
   Returns a log likelihood value.

OPAL_Chargino_Leptonic_LLike: |
   Compares the cross section times branching ratio for chargino
   pair production (with leptonically decaying W bosons) to the
   model-independent limit according to the OPAL collaboration.
   Returns a log likelihood value.

OPAL_Chargino_SemiLeptonic_LLike: |
   Compares the cross section times branching ratio for chargino
   pair production (with one leptonic and one hadronic decaying W boson)
   to the model-independent limit according to the OPAL collaboration.
   Returns a log likelihood value.

OPAL_Degenerate_Chargino_LLike: |
   Compares the cross section times branching ratio for chargino
   pair production to the limit on degenerate charginos and neutralinos
   according to the OPAL collaboration.
   Returns a likelihood value

LEP_Higgs_LogLike: |
    Provides log-likelihood for combined model-independent LEP
    neutral Higgs searches.

LHC_Higgs_LogLike: |
   Provides log-likelihood for LHC Higgs mass and signal
   strength measurements.

HB_ModelParameters: |
   Provides SM and MSSM input parameters for LEP and LHC Higgs
   likelihood calculations.

# LEP cross-section capabilities


LEP188_xsec_chi00_11: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi01' and 'chi01' at centre of mass energy 188 GeV.

LEP188_xsec_chi00_12: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi01' and 'chi02' at centre of mass energy 188 GeV.

LEP188_xsec_chi00_13: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi01' and 'chi03' at centre of mass energy 188 GeV.

LEP188_xsec_chi00_14: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi01' and 'chi04' at centre of mass energy 188 GeV.

LEP188_xsec_chi00_22: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi02' and 'chi02' at centre of mass energy 188 GeV.

LEP188_xsec_chi00_23: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi02' and 'chi03' at centre of mass energy 188 GeV.

LEP188_xsec_chi00_24: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi02' and 'chi04' at centre of mass energy 188 GeV.

LEP188_xsec_chi00_33: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi03' and 'chi03' at centre of mass energy 188 GeV.

LEP188_xsec_chi00_34: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi03' and 'chi04' at centre of mass energy 188 GeV.

LEP188_xsec_chi00_44: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi04' and 'chi04' at centre of mass energy 188 GeV.

LEP205_xsec_chi00_11: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi01' and 'chi01' at centre of mass energy 205 GeV.

LEP205_xsec_chi00_12: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi01' and 'chi02' at centre of mass energy 205 GeV.

LEP205_xsec_chi00_13: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi01' and 'chi03' at centre of mass energy 205 GeV.

LEP205_xsec_chi00_14: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi01' and 'chi04' at centre of mass energy 205 GeV.

LEP205_xsec_chi00_22: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi02' and 'chi02' at centre of mass energy 205 GeV.

LEP205_xsec_chi00_23: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi02' and 'chi03' at centre of mass energy 205 GeV.

LEP205_xsec_chi00_24: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi02' and 'chi04' at centre of mass energy 205 GeV.

LEP205_xsec_chi00_33: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi03' and 'chi03' at centre of mass energy 205 GeV.

LEP205_xsec_chi00_34: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi03' and 'chi04' at centre of mass energy 205 GeV.

LEP205_xsec_chi00_44: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi04' and 'chi04' at centre of mass energy 205 GeV.

LEP208_xsec_chi00_11: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi01' and 'chi01' at centre of mass energy 208 GeV.

LEP208_xsec_chi00_12: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi01' and 'chi02' at centre of mass energy 208 GeV.

LEP208_xsec_chi00_13: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi01' and 'chi03' at centre of mass energy 208 GeV.

LEP208_xsec_chi00_14: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi01' and 'chi04' at centre of mass energy 208 GeV.

LEP208_xsec_chi00_22: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi02' and 'chi02' at centre of mass energy 208 GeV.

LEP208_xsec_chi00_23: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi02' and 'chi03' at centre of mass energy 208 GeV.

LEP208_xsec_chi00_24: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi02' and 'chi04' at centre of mass energy 208 GeV.

LEP208_xsec_chi00_33: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi03' and 'chi03' at centre of mass energy 208 GeV.

LEP208_xsec_chi00_34: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi03' and 'chi04' at centre of mass energy 208 GeV.

LEP208_xsec_chi00_44: |
   The LEP neutralino pair production cross-section for
   mass eigenstates 'chi04' and 'chi04' at centre of mass energy 208 GeV.


LEP188_xsec_chipm_11: |
   The LEP chargino pair production cross-section for
   mass eigenstates 'chipm1' and 'chipm1' at centre of mass energy 188 GeV.

LEP188_xsec_chipm_12: |
   The LEP chargino pair production cross-section for
   mass eigenstates 'chipm1' and 'chipm2' at centre of mass energy 188 GeV.

LEP188_xsec_chipm_21: |
   The LEP chargino pair production cross-section for
   mass eigenstates 'chipm2' and 'chipm1' at centre of mass energy 188 GeV.

LEP188_xsec_chipm_22: |
   The LEP chargino pair production cross-section for
   mass eigenstates 'chipm2' and 'chipm2' at centre of mass energy 188 GeV.

LEP205_xsec_chipm_11: |
   The LEP chargino pair production cross-section for
   mass eigenstates 'chipm1' and 'chipm1' at centre of mass energy 205 GeV.

LEP205_xsec_chipm_12: |
   The LEP chargino pair production cross-section for
   mass eigenstates 'chipm1' and 'chipm2' at centre of mass energy 205 GeV.

LEP205_xsec_chipm_21: |
   The LEP chargino pair production cross-section for
   mass eigenstates 'chipm2' and 'chipm1' at centre of mass energy 205 GeV.

LEP205_xsec_chipm_22: |
   The LEP chargino pair production cross-section for
   mass eigenstates 'chipm2' and 'chipm2' at centre of mass energy 205 GeV.

LEP208_xsec_chipm_11: |
   The LEP chargino pair production cross-section for
   mass eigenstates 'chipm1' and 'chipm1' at centre of mass energy 208 GeV.

LEP208_xsec_chipm_12: |
   The LEP chargino pair production cross-section for
   mass eigenstates 'chipm1' and 'chipm2' at centre of mass energy 208 GeV.

LEP208_xsec_chipm_21: |
   The LEP chargino pair production cross-section for
   mass eigenstates 'chipm2' and 'chipm1' at centre of mass energy 208 GeV.

LEP208_xsec_chipm_22: |
   The LEP chargino pair production cross-section for
   mass eigenstates 'chipm2' and 'chipm2' at centre of mass energy 208 GeV.


LEP188_xsec_se1se1bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'se1' and 'se1bar' at centre of mass energy 188 GeV.

LEP188_xsec_se1se2bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'se1' and 'se2bar' at centre of mass energy 188 GeV.

LEP188_xsec_se2se1bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'se2' and 'se1bar' at centre of mass energy 188 GeV.

LEP188_xsec_se2se2bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'se2' and 'se2bar' at centre of mass energy 188 GeV.

LEP188_xsec_smu1smu1bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smu1' and 'smu1bar' at centre of mass energy 188 GeV.

LEP188_xsec_smu1smu2bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smu1' and 'smu2bar' at centre of mass energy 188 GeV.

LEP188_xsec_smu2smu1bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smu2' and 'smu1bar' at centre of mass energy 188 GeV.

LEP188_xsec_smu2smu2bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smu2' and 'smu2bar' at centre of mass energy 188 GeV.

LEP188_xsec_stau1stau1bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'stau1' and 'stau1bar' at centre of mass energy 188 GeV.

LEP188_xsec_stau1stau2bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'stau1' and 'stau2bar' at centre of mass energy 188 GeV.

LEP188_xsec_stau2stau1bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'stau2' and 'stau1bar' at centre of mass energy 188 GeV.

LEP188_xsec_stau2stau2bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'stau2' and 'stau2bar' at centre of mass energy 188 GeV.

LEP205_xsec_se1se1bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'se1' and 'se1bar' at centre of mass energy 205 GeV.

LEP205_xsec_se1se2bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'se1' and 'se2bar' at centre of mass energy 205 GeV.

LEP205_xsec_se2se1bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'se2' and 'se1bar' at centre of mass energy 205 GeV.

LEP205_xsec_se2se2bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'se2' and 'se2bar' at centre of mass energy 205 GeV.

LEP205_xsec_smu1smu1bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smu1' and 'smu1bar' at centre of mass energy 205 GeV.

LEP205_xsec_smu1smu2bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smu1' and 'smu2bar' at centre of mass energy 205 GeV.

LEP205_xsec_smu2smu1bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smu2' and 'smu1bar' at centre of mass energy 205 GeV.

LEP205_xsec_smu2smu2bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smu2' and 'smu2bar' at centre of mass energy 205 GeV.

LEP205_xsec_stau1stau1bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'stau1' and 'stau1bar' at centre of mass energy 205 GeV.

LEP205_xsec_stau1stau2bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'stau1' and 'stau2bar' at centre of mass energy 205 GeV.

LEP205_xsec_stau2stau1bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'stau2' and 'stau1bar' at centre of mass energy 205 GeV.

LEP205_xsec_stau2stau2bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'stau2' and 'stau2bar' at centre of mass energy 205 GeV.

LEP208_xsec_se1se1bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'se1' and 'se1bar' at centre of mass energy 208 GeV.

LEP208_xsec_se1se2bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'se1' and 'se2bar' at centre of mass energy 208 GeV.

LEP208_xsec_se2se1bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'se2' and 'se1bar' at centre of mass energy 208 GeV.

LEP208_xsec_se2se2bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'se2' and 'se2bar' at centre of mass energy 208 GeV.

LEP208_xsec_smu1smu1bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smu1' and 'smu1bar' at centre of mass energy 208 GeV.

LEP208_xsec_smu1smu2bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smu1' and 'smu2bar' at centre of mass energy 208 GeV.

LEP208_xsec_smu2smu1bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smu2' and 'smu1bar' at centre of mass energy 208 GeV.

LEP208_xsec_smu2smu2bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smu2' and 'smu2bar' at centre of mass energy 208 GeV.

LEP208_xsec_stau1stau1bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'stau1' and 'stau1bar' at centre of mass energy 208 GeV.

LEP208_xsec_stau1stau2bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'stau1' and 'stau2bar' at centre of mass energy 208 GeV.

LEP208_xsec_stau2stau1bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'stau2' and 'stau1bar' at centre of mass energy 208 GeV.

LEP208_xsec_stau2stau2bar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'stau2' and 'stau2bar' at centre of mass energy 208 GeV.



LEP188_xsec_selselbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'sel' and 'selbar' at centre of mass energy 188 GeV.

LEP188_xsec_selserbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'sel' and 'serbar' at centre of mass energy 188 GeV.

LEP188_xsec_serselbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'ser' and 'selbar' at centre of mass energy 188 GeV.

LEP188_xsec_serserbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'ser' and 'serbar' at centre of mass energy 188 GeV.

LEP188_xsec_smulsmulbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smul' and 'smulbar' at centre of mass energy 188 GeV.

LEP188_xsec_smulsmurbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smul' and 'smurbar' at centre of mass energy 188 GeV.

LEP188_xsec_smursmulbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smur' and 'smulbar' at centre of mass energy 188 GeV.

LEP188_xsec_smursmurbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smur' and 'smurbar' at centre of mass energy 188 GeV.

LEP188_xsec_staulstaulbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'staul' and 'staulbar' at centre of mass energy 188 GeV.

LEP188_xsec_staulstaurbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'staul' and 'staurbar' at centre of mass energy 188 GeV.

LEP188_xsec_staurstaulbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'staur' and 'staulbar' at centre of mass energy 188 GeV.

LEP188_xsec_staurstaurbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'staur' and 'staurbar' at centre of mass energy 188 GeV.

LEP205_xsec_selselbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'sel' and 'selbar' at centre of mass energy 205 GeV.

LEP205_xsec_selserbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'sel' and 'serbar' at centre of mass energy 205 GeV.

LEP205_xsec_serselbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'ser' and 'selbar' at centre of mass energy 205 GeV.

LEP205_xsec_serserbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'ser' and 'serbar' at centre of mass energy 205 GeV.

LEP205_xsec_smulsmulbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smul' and 'smulbar' at centre of mass energy 205 GeV.

LEP205_xsec_smulsmurbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smul' and 'smurbar' at centre of mass energy 205 GeV.

LEP205_xsec_smursmulbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smur' and 'smulbar' at centre of mass energy 205 GeV.

LEP205_xsec_smursmurbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smur' and 'smurbar' at centre of mass energy 205 GeV.

LEP205_xsec_staulstaulbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'staul' and 'staulbar' at centre of mass energy 205 GeV.

LEP205_xsec_staulstaurbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'staul' and 'staurbar' at centre of mass energy 205 GeV.

LEP205_xsec_staurstaulbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'staur' and 'staulbar' at centre of mass energy 205 GeV.

LEP205_xsec_staurstaurbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'staur' and 'staurbar' at centre of mass energy 205 GeV.

LEP208_xsec_selselbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'sel' and 'selbar' at centre of mass energy 208 GeV.

LEP208_xsec_selserbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'sel' and 'serbar' at centre of mass energy 208 GeV.

LEP208_xsec_serselbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'ser' and 'selbar' at centre of mass energy 208 GeV.

LEP208_xsec_serserbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'ser' and 'serbar' at centre of mass energy 208 GeV.

LEP208_xsec_smulsmulbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smul' and 'smulbar' at centre of mass energy 208 GeV.

LEP208_xsec_smulsmurbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smul' and 'smurbar' at centre of mass energy 208 GeV.

LEP208_xsec_smursmulbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smur' and 'smulbar' at centre of mass energy 208 GeV.

LEP208_xsec_smursmurbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'smur' and 'smurbar' at centre of mass energy 208 GeV.

LEP208_xsec_staulstaulbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'staul' and 'staulbar' at centre of mass energy 208 GeV.

LEP208_xsec_staulstaurbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'staul' and 'staurbar' at centre of mass energy 208 GeV.

LEP208_xsec_staurstaulbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'staur' and 'staulbar' at centre of mass energy 208 GeV.

LEP208_xsec_staurstaurbar: |
   The LEP pair production cross-section for sfermion
   eigenstates 'staur' and 'staurbar' at centre of mass energy 208 GeV.

Pythia_8_212_EM_init: |
   Initializes Pythia 8.212 EM.

Pythia_8_212_init: |
   Initializes Pythia 8.212.



#-------------------------------------
#  DarkBit capabilities
#-------------------------------------

TH_ProcessCatalog: |
   One of the central structures in DarkBit, carrying all relevant
   information about the decay and annihilation of particles.
   See Section 6.3.1 of DarkBit paper.

DD_couplings: |
   Provides WIMP mass and couplings to nucleons.

mwimp: |
   DM mass in GeV.

sigmav: |
   Thermally averaged annihilation cross section <sigma v>, for v=0, in cm^3 s^-1.

sigma_SI_p: |
   Spin-independent WIMP-proton cross section, in cm^2.

sigma_SD_p: |
   Spin-dependent WIMP-proton cross section, in cm^2.

sigma_SI_n: |
   Spin-independent WIMP-neutron cross section, in cm^2.

sigma_SD_n: |
   Spin-dependent WIMP-neutron cross section, in cm^2.

DarkMatter_ID: |
   Contains string ID to identify dark matter particle.

RD_spectrum: |
   Contains degrees of freedom and masses of all (co)-annihilating
   particles, as well as location of thresholds and resonances.

RD_spectrum_ordered: |
   Same as RD_spectrum, but with all resonances and thresholds
   ordered with increasing p_eff, and coannihilation thresholds
   included

RD_eff_annrate_DSprep: |
   Ensures that DarkSUSY is correctly initialized for relic density
   calculations.

RD_eff_annrate: |
   The effective invariant rate W_eff that enters in the calculation
   of the thermally averaged cross section <sv>.

RD_oh2: |
   The dark matter relic density.

Xf: |
   X_f = m_DM / T_f, where T_f is the freezeout temperature of the
   thermal relic DM.

RD_oh2_Xf: |
   The dark matter relic density and the X_f = m_DM / T_f, where T_f
   is the freezeout temperature of the thermal relic DM.

RD_fraction: |
   Contains the fraction of the observed dark matter density that is
   used to calculate direct and indirect detection observables.

lnL_oh2: |
   Contains the log likelihood function constraining the relic density.

relic_density_contributions: |
   The contributions of different final states to the relic density of
   dark matter.

semi_annihilation_fraction: |
   The contribution of semi-annihilation to the relic density of dark
   matter.

LocalHalo: |
   Provides the parameters of the Maxwell-Boltzmann velocity distribution,
   in terms of the strucutre LocalMaxwellianHalo containing the parameters
   rho0, v0, vrot, vesc.

GalacticHalo: |
   Provides the properties of the dark matter density distribution in the Galaxy,
   in terms of the structure GalacticHaloProperties containing the function rho(r)
   and the Sun-GC distance r_sun.

lnL_rho0: |
   Log-likelihood for the local DM density.

lnL_vrot: |
   Log-likelihood for the local disk rotational speed.

lnL_v0: |
   Log-likelihood for the most-probable DM speed.

lnL_vesc: |
   Log-likelihood for the escape velocity.

XENON100_2012_Calculate: |
   Perform rate and likelihood calculations for the XENON100 2012 direct detection analysis.

XENON100_2012_Events: |
   The number of observed events for the XENON100 2012 direct detection analysis.

XENON100_2012_Background: |
   The number of background events for the XENON100 2012 direct detection analysis.

XENON100_2012_Signal: |
   The number of signal events for the XENON100 2012 direct detection analysis.

XENON100_2012_SignalSI: |
   The number of spin-independent signal events for the XENON100 2012 direct detection analysis.

XENON100_2012_SignalSD: |
   The number of spin-dependent signal events for the XENON100 2012 direct detection analysis.

XENON100_2012_LogLikelihood: |
   Calculate the log-likelihood for the XENON100 2012 direct detection analysis.

XENON100_2012_BinBackground: |
   The number of expected background events in each bin for the XENON100 2012 direct detection analysis.

XENON100_2012_BinEvents: |
   The number of expected events in each bin for the XENON100 2012 direct detection analysis.

XENON100_2012_BinSignal: |
   The number of expected signal events in each bin for the XENON100 2012 direct detection analysis.

XENON100_2012_Bins: |
   The number of bins used in the XENON100 2012 direct detection analysis.

XENON1T_2017_Calculate: |
   Perform rate and likelihood calculations for the XENON1T 2017 direct detection analysis.

XENON1T_2017_Events: |
   The number of observed events for the XENON1T 2017 direct detection analysis.

XENON1T_2017_Background: |
   The number of background events for the XENON1T 2017 direct detection analysis.

XENON1T_2017_BinBackground: |
   The number of expected background events in each bin for the XENON1T 2017 direct detection analysis.

XENON1T_2017_BinEvents: |
   The number of expected events in each bin for the XENON1T 2017 direct detection analysis.

XENON1T_2017_BinSignal: |
   The number of expected signal events in each bin for the XENON1T 20178 direct detection analysis.

XENON1T_2017_Bins: |
   The number of bins used in the XENON1T 2017 direct detection analysis.

XENON1T_2017_Signal: |
   The number of signal events for the XENON1T 2017 direct detection analysis.

XENON1T_2017_SignalSI: |
   The number of spin-independent signal events for the XENON1T 2017 direct detection analysis.

XENON1T_2017_SignalSD: |
   The number of spin-dependent signal events for the XENON1T 2017 direct detection analysis.

XENON1T_2017_LogLikelihood: |
   Calculate the log-likelihood for the XENON1T 2017 direct detection analysis.

XENON1T_2018_Background: |
   The number of background events for the XENON1T 2018 direct detection analysis.

XENON1T_2018_BinBackground: |
   The number of expected background events in each bin for the XENON1T 2018 direct detection analysis.

XENON1T_2018_BinEvents: |
   The number of expected events in each bin for the XENON1T 2018 direct detection analysis.

XENON1T_2018_BinSignal: |
   The number of expected signal events in each bin for the XENON1T 2018 direct detection analysis.

XENON1T_2018_Bins: |
   The number of bins used in the XENON1T 2018 direct detection analysis.

XENON1T_2018_Calculate: |
   Perform rate and likelihood calculations for the XENON1T 2018 direct detection analysis.

XENON1T_2018_Events: |
   The number of observed events for the XENON1T 2018 direct detection analysis.

XENON1T_2018_LogLikelihood: |
   Calculate the log-likelihood for the XENON1T 2018 direct detection analysis.

XENON1T_2018_Signal: |
   The number of signal events for the XENON1T 2018 direct detection analysis.

XENON1T_2018_SignalSI: |
   The number of spin-idependent signal events for the XENON1T 2018 direct detection analysis.

XENON1T_2018_SignalSD: |
   The number of spin-dependent signal events for the XENON1T 2018 direct detection analysis.

LUX_2013_Calculate: |
   Perform rate and likelihood calculations for the LUX 2013 direct detection analysis.

LUX_2013_Events: |
   The number of observed events for the LUX 2013 direct detection analysis.

LUX_2013_Background: |
   The number of background events for the LUX 2013 direct detection analysis.

LUX_2013_Signal: |
   The number of signal events for the LUX 2013 direct detection analysis.

LUX_2013_SignalSI: |
   The number of spin-independent signal events for the LUX 2013 direct detection analysis.

LUX_2013_SignalSD: |
   The number of spin-dependent signal events for the LUX 2013 direct detection analysis.

LUX_2013_LogLikelihood: |
   Calculate the log-likelihood for the LUX 2013 direct detection analysis.

LUX_2013_BinBackground: |
   The number of expected background events in each bin for the LUX 2013 direct detection analysis.

LUX_2013_BinEvents: |
   The number of expected events in each bin for the LUX 2013 direct detection analysis.

LUX_2013_BinSignal: |
   The number of expected signal events in each bin for the LUX 2013 direct detection analysis.

LUX_2013_Bins: |
   The number of bins used in the LUX 2013 direct detection analysis.

LUX_2015_Calculate: |
   Perform rate and likelihood calculations for the LUX 2015 direct detection analysis.

LUX_2015_Events: |
   The number of observed events for the LUX 2015 direct detection analysis.

LUX_2015_Background: |
   The number of background events for the LUX 2015 direct detection analysis.

LUX_2015_Signal: |
   The number of signal events for the LUX 2015 direct detection analysis.

LUX_2015_SignalSI: |
   The number of spin-independent signal events for the LUX 2015 direct detection analysis.

LUX_2015_SignalSD: |
   The number of spin-dependent signal events for the LUX 2015 direct detection analysis.

LUX_2015_LogLikelihood: |
   Calculate the log-likelihood for the LUX 2015 direct detection analysis.

LUX_2015_BinBackground: |
   The number of expected background events in each bin for the LUX 2015 direct detection analysis.

LUX_2015_BinEvents: |
   The number of expected events in each bin for the LUX 2015 direct detection analysis.

LUX_2015_BinSignal: |
   The number of expected signal events in each bin for the LUX 2015 direct detection analysis.

LUX_2015_Bins: |
   The number of bins used in the LUX 2015 direct detection analysis.

LUX_2016_Calculate: |
   Perform rate and likelihood calculations for the LUX 2016 direct detection analysis.

LUX_2016_Events: |
   The number of observed events for the LUX 2016 direct detection analysis.

LUX_2016_Background: |
   The number of background events for the LUX 2016 direct detection analysis.

LUX_2016_Signal: |
   The number of signal events for the LUX 2016 direct detection analysis.

LUX_2016_SignalSI: |
   The number of spin-independent signal events for the LUX 2016 direct detection analysis.

LUX_2016_SignalSD: |
   The number of spin-dependent signal events for the LUX 2016 direct detection analysis.

LUX_2016_LogLikelihood: |
   Calculate the log-likelihood for the LUX 2016 direct detection analysis.

LUX_2016_BinBackground: |
   The number of expected background events in each bin for the LUX 2016 direct detection analysis.

LUX_2016_BinEvents: |
   The number of expected events in each bin for the LUX 2016 direct detection analysis.

LUX_2016_BinSignal: |
   The number of expected signal events in each bin for the LUX 2016 direct detection analysis.

LUX_2016_Bins: |
   The number of bins used in the LUX 2016 direct detection analysis.

LZ_Calculate: |
   Perform rate and likelihood calculations for the LZ direct detection analysis.

LZ_Events: |
   The number of observed events for the LZ direct detection analysis.

LZ_Background: |
   The number of background events for the LZ direct detection analysis.

LZ_Signal: |
   The number of signal events for the LZ direct detection analysis.

LZ_SignalSI: |
   The number of spin-independent signal events for the LZ direct detection analysis.

LZ_SignalSD: |
   The number of spin-dependent signal events for the LZ direct detection analysis.

LZ_LogLikelihood: |
   Calculate the log-likelihood for the LZ direct detection analysis.

LZ_BinBackground: |
   The number of expected background events in each bin for the LZ direct detection analysis.

LZ_BinEvents: |
   The number of expected events in each bin for the LZ direct detection analysis.

LZ_BinSignal: |
   The number of expected signal events in each bin for the LZ direct detection analysis.

LZ_Bins: |
   The number of bins used in the LZ direct detection analysis.

PandaX_2016_Calculate: |
   Perform rate and likelihood calculations for the PandaX 2016 direct detection analysis.

PandaX_2016_Events: |
   The number of observed events for the PandaX 2016 direct detection analysis.

PandaX_2016_Background: |
   The number of background events for the PandaX 2016 direct detection analysis.

PandaX_2016_Signal: |
   The number of signal events for the PandaX 2016 direct detection analysis.

PandaX_2016_SignalSI: |
   The number of spin-independent signal events for the PandaX 2016 direct detection analysis.

PandaX_2016_SignalSD: |
   The number of spin-dependent signal events for the PandaX 2016 direct detection analysis.

PandaX_2016_LogLikelihood: |
   Calculate the log-likelihood for the PandaX 2016 direct detection analysis.

PandaX_2016_BinBackground: |
   The number of expected background events in each bin for the PandaX 2016 direct detection analysis.

PandaX_2016_BinEvents: |
   The number of expected events in each bin for the PandaX 2016 direct detection analysis.

PandaX_2016_BinSignal: |
   The number of expected signal events in each bin for the PandaX 2016 direct detection analysis.

PandaX_2016_Bins: |
   The number of bins used in the PandaX 2016 direct detection analysis.

PandaX_2017_Calculate: |
   Perform rate and likelihood calculations for the PandaX 2017 direct detection analysis.

PandaX_2017_Events: |
   The number of observed events for the PandaX 2017 direct detection analysis.

PandaX_2017_Background: |
   The number of background events for the PandaX 2017 direct detection analysis.

PandaX_2017_Signal: |
   The number of signal events for the PandaX 2017 direct detection analysis.

PandaX_2017_SignalSI: |
   The number of spin-independent signal events for the PandaX 2017 direct detection analysis.

PandaX_2017_SignalSD: |
   The number of spin-dependent signal events for the PandaX 2017 direct detection analysis.

PandaX_2017_LogLikelihood: |
   Calculate the log-likelihood for the PandaX 2017 direct detection analysis.

PandaX_2017_BinBackground: |
   The number of expected background events in each bin for the PandaX 2017 direct detection analysis.

PandaX_2017_BinEvents: |
   The number of expected events in each bin for the PandaX 2017 direct detection analysis.

PandaX_2017_BinSignal: |
   The number of expected signal events in each bin for the PandaX 2017 direct detection analysis.

PandaX_2017_Bins: |
   The number of bins used in the PandaX 2017 direct detection analysis.

SuperCDMS_2014_Calculate: |
   Perform rate and likelihood calculations for the SuperCDMS 2014 direct detection analysis.

SuperCDMS_2014_Events: |
   The number of observed events for the SuperCDMS 2014 direct detection analysis.

SuperCDMS_2014_Background: |
   The number of background events for the SuperCDMS 2014 direct detection analysis.

SuperCDMS_2014_Signal: |
   The number of signal events for the SuperCDMS 2014 direct detection analysis.

SuperCDMS_2014_SignalSI: |
   The number of spin-independent signal events for the SuperCDMS 2014 direct detection analysis.

SuperCDMS_2014_SignalSD: |
   The number of spin-dependent signal events for the SuperCDMS 2014 direct detection analysis.

SuperCDMS_2014_LogLikelihood: |
   Calculate the log-likelihood for the SuperCDMS 2014 direct detection analysis.

SuperCDMS_2014_BinBackground: |
   The number of expected background events in each bin for the SuperCDMS 2014 direct detection analysis.

SuperCDMS_2014_BinEvents: |
   The number of expected events in each bin for the SuperCDMS 2014 direct detection analysis.

SuperCDMS_2014_BinSignal: |
   The number of expected signal events in each bin for the SuperCDMS 2014 direct detection analysis.

SuperCDMS_2014_Bins: |
   The number of bins used in the SuperCDMS 2014 direct detection analysis.

SIMPLE_2014_Calculate: |
   Perform rate and likelihood calculations for the SIMPLE 2014 direct detection analysis.

SIMPLE_2014_Events: |
   The number of observed events for the SIMPLE 2014 direct detection analysis.

SIMPLE_2014_Background: |
   The number of background events for the SIMPLE 2014 direct detection analysis.

SIMPLE_2014_Signal: |
   The number of signal events for the SIMPLE 2014 direct detection analysis.

SIMPLE_2014_SignalSI: |
   The number of spin-independent signal events for the SIMPLE 2014 direct detection analysis.

SIMPLE_2014_SignalSD: |
   The number of spin-dependent signal events for the SIMPLE 2014 direct detection analysis.

SIMPLE_2014_LogLikelihood: |
   Calculate the log-likelihood for the SIMPLE 2014 direct detection analysis.

SIMPLE_2014_BinBackground: |
   The number of expected background events in each bin for the SIMPLE 2014 direct detection analysis.

SIMPLE_2014_BinEvents: |
   The number of expected events in each bin for the SIMPLE 2014 direct detection analysis.

SIMPLE_2014_BinSignal: |
   The number of expected signal events in each bin for the SIMPLE 2014 direct detection analysis.

SIMPLE_2014_Bins: |
   The number of bins used in the SIMPLE 2014 direct detection analysis.

PICO_2L_Calculate: |
   Perform rate and likelihood calculations for the PICO-2L direct detection analysis.

PICO_2L_Events: |
   The number of observed events for the PICO-2L direct detection analysis.

PICO_2L_Background: |
   The number of background events for the PICO-2L direct detection analysis.

PICO_2L_Signal: |
   The number of signal events for the PICO-2L direct detection analysis.

PICO_2L_SignalSI: |
   The number of spin-independent signal events for the PICO-2L direct detection analysis.

PICO_2L_SignalSD: |
   The number of spin-dependent signal events for the PICO-2L direct detection analysis.

PICO_2L_LogLikelihood: |
   Calculate the log-likelihood for the PICO-2L direct detection analysis.

PICO_2L_BinBackground: |
   The number of expected background events in each bin for the PICO-2L direct detection analysis.

PICO_2L_BinEvents: |
   The number of expected events in each bin for the PICO-2L direct detection analysis.

PICO_2L_BinSignal: |
   The number of expected signal events in each bin for the PICO-2L direct detection analysis.

PICO_2L_Bins: |
   The number of bins used in the PICO-2L direct detection analysis.

PICO_60_F_Calculate: |
   Perform rate and likelihood calculations for the PICO-60 direct detection analysis (flourine only).

PICO_60_F_Events: |
   The number of observed events for the PICO-60 direct detection analysis (flourine only).

PICO_60_F_Background: |
   The number of background events for the PICO-60 direct detection analysis (flourine only).

PICO_60_F_Signal: |
   The number of signal events for the PICO-60 direct detection analysis (flourine only).

PICO_60_F_SignalSI: |
   The number of spin-independent signal events for the PICO-60 direct detection analysis (flourine only).

PICO_60_F_SignalSD: |
   The number of spin-dependent signal events for the PICO-60 direct detection analysis (flourine only).

PICO_60_F_LogLikelihood: |
   Calculate the log-likelihood for the PICO-60 direct detection analysis (flourine only).

PICO_60_F_BinBackground: |
   The number of expected background events in each bin for the PICO-60 direct detection analysis (flourine only).

PICO_60_F_BinEvents: |
   The number of expected events in each bin for the PICO-60 direct detection analysis (flourine only).

PICO_60_F_BinSignal: |
   The number of expected signal events in each bin for the PICO-60 direct detection analysis (flourine only).

PICO_60_F_Bins: |
   The number of bins used in the PICO-60 direct detection analysis (flourine only).

PICO_60_I_Calculate: |
   Perform rate and likelihood calculations for the PICO-60 direct detection analysis (iodine only).

PICO_60_I_Events: |
   The number of observed events for the PICO-60 direct detection analysis (iodine only).

PICO_60_I_Background: |
   The number of background events for the PICO-60 direct detection analysis (iodine only).

PICO_60_I_Signal: |
   The number of signal events for the PICO-60 direct detection analysis (iodine only).

PICO_60_I_SignalSI: |
   The number of spin-independent signal events for the PICO-60 direct detection analysis (iodine only).

PICO_60_I_SignalSD: |
   The number of spin-dependent signal events for the PICO-60 direct detection analysis (iodine only).

PICO_60_I_LogLikelihood: |
   Calculate the log-likelihood for the PICO-60 direct detection analysis (iodine only).

PICO_60_I_BinBackground: |
   The number of expected background events in each bin for the PICO-60 direct detection analysis (iodine only).

PICO_60_I_BinEvents: |
   The number of expected events in each bin for the PICO-60 direct detection analysis (iodine only).

PICO_60_I_BinSignal: |
   The number of expected signal events in each bin for the PICO-60 direct detection analysis (iodine only).

PICO_60_I_Bins: |
   The number of bins used in the PICO-60 direct detection analysis (iodine only).

PICO_60_2017_Calculate: |
   Perform rate and likelihood calculations for the PICO-60 2017 direct detection analysis.

PICO_60_2017_Events: |
   The number of observed events for the PICO-60 2017 direct detection analysis.

PICO_60_2017_Background: |
   The number of background events for the PICO-60 2017 direct detection analysis.

PICO_60_2017_Signal: |
   The number of signal events for the PICO-60 2017 direct detection analysis.

PICO_60_2017_SignalSI: |
   The number of spin-independent signal events for the PICO-60 2017 direct detection analysis.

PICO_60_2017_SignalSD: |
   The number of spin-dependent signal events for the PICO-60 2017 direct detection analysis.

PICO_60_2017_LogLikelihood: |
   Calculate the log-likelihood for the PICO-60 2017 direct detection analysis.

PICO_60_2017_BinBackground: |
   The number of expected background events in each bin for the PICO-60 2017 direct detection analysis.

PICO_60_2017_BinEvents: |
   The number of expected events in each bin for the PICO-60 2017 direct detection analysis.

PICO_60_2017_BinSignal: |
   The number of expected signal events in each bin for the PICO-60 2017 direct detection analysis.

PICO_60_2017_Bins: |
   The number of bins used in the PICO-60 2017 direct detection analysis.

PICO_60_Calculate: |
   Perform rate and likelihood calculations for the PICO-60 direct detection analysis.

PICO_60_Events: |
   The number of observed events for the PICO-60 direct detection analysis.

PICO_60_Background: |
   The number of background events for the PICO-60 direct detection analysis.

PICO_60_Signal: |
   The number of signal events for the PICO-60 direct detection analysis.

PICO_60_SignalSI: |
   The number of spin-independent signal events for the PICO-60 direct detection analysis.

PICO_60_SignalSD: |
   The number of spin-dependent signal events for the PICO-60 direct detection analysis.

PICO_60_LogLikelihood: |
   Calculate the log-likelihood for the PICO-60 direct detection analysis.

PICO_60_BinBackground: |
   The number of expected background events in each bin for the PICO-60 direct detection analysis.

PICO_60_BinEvents: |
   The number of expected events in each bin for the PICO-60 direct detection analysis.

PICO_60_BinSignal: |
   The number of expected signal events in each bin for the PICO-60 direct detection analysis.

PICO_60_Bins: |
   The number of bins used in the PICO-60 direct detection analysis.

PICO_500_Calculate: |
   Perform rate and likelihood calculations for the PICO-500 direct detection analysis.

PICO_500_Events: |
   The number of observed events for the PICO-500 direct detection analysis.

PICO_500_Background: |
   The number of background events for the PICO-500 direct detection analysis.

PICO_500_Signal: |
   The number of signal events for the PICO-500 direct detection analysis.

PICO_500_SignalSI: |
   The number of spin-independent signal events for the PICO-500 direct detection analysis.

PICO_500_SignalSD: |
   The number of spin-dependent signal events for the PICO-500 direct detection analysis.

PICO_500_LogLikelihood: |
   Calculate the log-likelihood for the PICO-500 direct detection analysis.

PICO_500_BinBackground: |
   The number of expected background events in each bin for the PICO-500 direct detection analysis.

PICO_500_BinEvents: |
   The number of expected events in each bin for the PICO-500 direct detection analysis.

PICO_500_BinSignal: |
   The number of expected signal events in each bin for the PICO-500 direct detection analysis.

PICO_500_Bins: |
   The number of bins used in the PICO-500 direct detection analysis.

DARWIN_Ar_Calculate: |
   Perform rate and likelihood calculations for the DARWIN Ar 2015 direct detection analysis.

DARWIN_Ar_Events: |
   The number of observed events for the DARWIN Ar 2015 direct detection analysis.

DARWIN_Ar_Background: |
   The number of background events for the DARWIN Ar 2015 direct detection analysis.

DARWIN_Ar_Signal: |
   The number of signal events for the DARWIN Ar 2015 direct detection analysis.

DARWIN_Ar_SignalSI: |
   The number of spin-independent signal events for the DARWIN Ar 2015 direct detection analysis.

DARWIN_Ar_SignalSD: |
   The number of spin-dependent signal events for the DARWIN Ar 2015 direct detection analysis.

DARWIN_Ar_LogLikelihood: |
   Calculate the log-likelihood for the DARWIN Ar 2015 direct detection analysis.

DARWIN_Ar_BinBackground: |
   The number of expected background events in each bin for the DARWIN Ar 2015 direct detection analysis.

DARWIN_Ar_BinEvents: |
   The number of expected events in each bin for the DARWIN Ar 2015 direct detection analysis.

DARWIN_Ar_BinSignal: |
   The number of expected signal events in each bin for the DARWIN Ar 2015 direct detection analysis.

DARWIN_Ar_Bins: |
   The number of bins used in the DARWIN Ar 2015 direct detection analysis.

DARWIN_Xe_Calculate: |
   Perform rate and likelihood calculations for the DARWIN Xe 2015 direct detection analysis.

DARWIN_Xe_Events: |
   The number of observed events for the DARWIN Xe 2015 direct detection analysis.

DARWIN_Xe_Background: |
   The number of background events for the DARWIN Xe 2015 direct detection analysis.

DARWIN_Xe_Signal: |
   The number of signal events for the DARWIN Xe 2015 direct detection analysis.

DARWIN_Xe_SignalSI: |
   The number of spin-independent signal events for the DARWIN Xe 2015 direct detection analysis.

DARWIN_Xe_SignalSD: |
   The number of spin-dependent signal events for the DARWIN Xe 2015 direct detection analysis.

DARWIN_Xe_LogLikelihood: |
   Calculate the log-likelihood for the DARWIN Xe 2015 direct detection analysis.

DARWIN_Xe_BinBackground: |
   The number of expected background events in each bin for the DARWIN Xe 2015 direct detection analysis.

DARWIN_Xe_BinEvents: |
   The number of expected events in each bin for the DARWIN Xe 2015 direct detection analysis.

DARWIN_Xe_BinSignal: |
   The number of expected signal events in each bin for the DARWIN Xe 2015 direct detection analysis.

DARWIN_Xe_Bins: |
   The number of bins used in the DARWIN Xe 2015 direct detection analysis.

DARWIN_Calculate: |
   Perform rate and likelihood calculations for the DARWIN 2015 direct detection analysis.

DARWIN_Events: |
   The number of observed events for the DARWIN 2015 direct detection analysis.

DARWIN_Background: |
   The number of background events for the DARWIN 2015 direct detection analysis.

DARWIN_Signal: |
   The number of signal events for the DARWIN 2015 direct detection analysis.

DARWIN_SignalSI: |
   The number of spin-independent signal events for the DARWIN 2015 direct detection analysis.

DARWIN_SignalSD: |
   The number of spin-dependent signal events for the DARWIN 2015 direct detection analysis.

DARWIN_LogLikelihood: |
   Calculate the log-likelihood for the DARWIN 2015 direct detection analysis.

DARWIN_BinBackground: |
   The number of expected background events in each bin for the DARWIN 2015 direct detection analysis.

DARWIN_BinEvents: |
   The number of expected events in each bin for the DARWIN 2015 direct detection analysis.

DARWIN_BinSignal: |
   The number of expected signal events in each bin for the DARWIN 2015 direct detection analysis.

DARWIN_Bins: |
   The number of bins used in the DARWIN 2015 direct detection analysis.

CDMSlite_Background: |
   The number of background events for the CDMSlite direct detection analysis.

CDMSlite_BinBackground: |
   The number of expected background events in each bin for the CDMSlite direct detection analysis.

CDMSlite_BinEvents: |
   The number of expected events in each bin for the CDMSlite direct detection analysis.

CDMSlite_BinSignal: |
   The number of expected signal events in each bin for the CDMSlite direct detection analysis.

CDMSlite_Bins: |
   The number of bins used in the CDMSlite direct detection analysis.

CDMSlite_Calculate: |
   Perform rate and likelihood calculations for the CDMSlite direct detection analysis.

CDMSlite_Events: |
   The number of observed events for the CDMSlite direct detection analysis.

CDMSlite_LogLikelihood: |
   Calculate the log-likelihood for the CDMSlite direct detection analysis.

CDMSlite_Signal: |
   The number of signal events for the CDMSlite direct detection analysis.

CDMSlite_SignalSI: |
   The number of spin-idependent signal events for the CDMSlite direct detection analysis.

CDMSlite_SignalSD: |
   The number of spin-dependent signal events for the CDMSlite direct detection analysis.

CRESST_II_Background: |
   The number of background events for the CRESST-II direct detection analysis.

CRESST_II_BinBackground: |
   The number of expected background events in each bin for the CRESST-II direct detection analysis.

CRESST_II_BinEvents: |
   The number of expected events in each bin for the CRESST-II direct detection analysis.

CRESST_II_BinSignal: |
   The number of expected signal events in each bin for the CRESST-II direct detection analysis.

CRESST_II_Bins: |
   The number of bins used in the CRESST-II direct detection analysis.

CRESST_II_Calculate: |
   Perform rate and likelihood calculations for the CRESST-II direct detection analysis.

CRESST_II_Events: |
   The number of observed events for the CRESST-II direct detection analysis.

CRESST_II_LogLikelihood: |
   Calculate the log-likelihood for the CRESST-II direct detection analysis.

CRESST_II_Signal: |
   The number of signal events for the CRESST-II direct detection analysis.

CRESST_II_SignalSI: |
   The number of spin-idependent signal events for the CRESST-II direct detection analysis.

CRESST_II_SignalSD: |
   The number of spin-dependent signal events for the CRESST-II direct detection analysis.

DarkSide_50_Background: |
   The number of background events for the DarkSide 50 direct detection analysis.

DarkSide_50_BinBackground: |
   The number of expected background events in each bin for the DarkSide 50 direct detection analysis.

DarkSide_50_BinEvents: |
   The number of expected events in each bin for the DarkSide 50 direct detection analysis.

DarkSide_50_BinSignal: |
   The number of expected signal events in each bin for the DarkSide 50 direct detection analysis.

DarkSide_50_Bins: |
   The number of bins used in the DarkSide 50 direct detection analysis.

DarkSide_50_Calculate: |
   Perform rate and likelihood calculations for the DarkSide 50 direct detection analysis.

DarkSide_50_Events: |
   The number of observed events for the DarkSide 50 direct detection analysis.

DarkSide_50_LogLikelihood: |
   Calculate the log-likelihood for the DarkSide 50 direct detection analysis.

DarkSide_50_Signal: |
   The number of signal events for the DarkSide 50 direct detection analysis.

DarkSide_50_SignalSI: |
   The number of spin-idependent signal events for the DarkSide 50 direct detection analysis.

DarkSide_50_SignalSD: |
   The number of spin-dependent signal events for the DarkSide 50 direct detection analysis.

lnL_SI_nuclear_parameters: |
   The log-likehood for the spin-independent nuclear parameters.

lnL_SD_nuclear_parameters: |
   The log-likehood for the spin-dependent nuclear parameters.

SimYieldTable: |
   Table of simulated particle yields.

GA_missingFinalStates: |
   Final states that are not avaialable with tabulated spectra.

GA_AnnYield: |
   Calculate the gamma-ray yield from the process catalogue.

cascadeMC_FinalStates: |
   List of final states for cascade decays.

cascadeMC_DecayTable: |
   Decay table for the decay chain.

cascadeMC_gammaSpectra: |
   Gamma-ray spectrum from cascade decays.

cascadeMC_LoopManagement: |
   Controls the loop for the cascade decay Monte Carlo simulation.

cascadeMC_InitialState: |
   The intial state for the cascade decay chain.

cascadeMC_EventCount: |
   Event counter for cascade decays.

cascadeMC_ChainEvent: |
   Generates decay chains.

cascadeMC_Histograms: |
   Creates histograms and evaluates the end conditions for the event loop in the cascade decay simulation.

lnL_FermiLATdwarfs: |
   Log-likelihood for the Fermi-LAT dwarf galaxy search.

lnL_FermiGC: |
   Log-likelihood for the Fermi-LAT GeV excess at the Galactic centre.

lnL_HESSGC: |
   Log-likelihood for the HESS Galactic halo searches.

lnL_CTAGC: |
   Log-likelihood for projected dark matter searches with CTA.

set_gamLike_GC_halo: |
   Intialises the Galactic DM distribution in GamLike.

capture_rate_Sun: |
   Capture rate of regular dark matter in the Sun (no v-dependent or q-dependent cross-sections; s^−1).

equilibration_time_Sun: |
   Timescale on which capture and annihilation of dark matter in the Sun equilibrate (s).

annihilation_rate_Sun: |
   Annihilation rate of dark matter in the Sun (s^-1).

nuyield_ptr: |
   A pointer to a function that returns the neutrino yield from dark matter in the Sun.

IC22_data: |
   Do signal, likelihood and related calculations for neutrino indirect detection analysis IC22.

IC22_signal: |
   Number of signal events for neutrino indirect detection analysis IC22.

IC22_bg: |
   Number of background events for neutrino indirect detection analysis IC22.

IC22_loglike: |
   Log-likelihood for neutrino indirect detection analysis IC22.

IC22_bgloglike: |
   Background-only log-likelihood for neutrino indirect detection analysis IC22.

IC22_pvalue: |
   p-value for neutrino indirect detection analysis IC22.

IC22_nobs: |
   Number of observed events for neutrino indirect detection analysis IC22.

IC79SL_data: |
   Do signal, likelihood and related calculations for neutrino indirect detection analysis IC79SL.

IC79SL_signal: |
   Number of signal events for neutrino indirect detection analysis IC79SL.

IC79SL_bg: |
   Number of background events for neutrino indirect detection analysis IC79SL.

IC79SL_loglike: |
   Log-likelihood for neutrino indirect detection analysis IC79SL.

IC79SL_bgloglike: |
   Background-only log-likelihood for neutrino indirect detection analysis IC79SL.

IC79SL_pvalue: |
   p-value for neutrino indirect detection analysis IC79SL.

IC79SL_nobs: |
   Number of observed events for neutrino indirect detection analysis IC79SL.

IC79WL_data: |
   Do signal, likelihood and related calculations for neutrino indirect detection analysis IC79WL.

IC79WL_signal: |
   Number of signal events for neutrino indirect detection analysis IC79WL.

IC79WL_bg: |
   Number of background events for neutrino indirect detection analysis IC79WL.

IC79WL_loglike: |
   Log-likelihood for neutrino indirect detection analysis IC79WL.

IC79WL_bgloglike: |
   Background-only log-likelihood for neutrino indirect detection analysis IC79WL.

IC79WL_pvalue: |
   p-value for neutrino indirect detection analysis IC79WL.

IC79WL_nobs: |
   Number of observed events for neutrino indirect detection analysis IC79WL.

IC79WH_data: |
   Do signal, likelihood and related calculations for neutrino indirect detection analysis IC79WH.

IC79WH_signal: |
   Number of signal events for neutrino indirect detection analysis IC79WH.

IC79WH_bg: |
   Number of background events for neutrino indirect detection analysis IC79WH.

IC79WH_loglike: |
   Log-likelihood for neutrino indirect detection analysis IC79WH.

IC79WH_bgloglike: |
   Background-only log-likelihood for neutrino indirect detection analysis IC79WH.

IC79WH_pvalue: |
   p-value for neutrino indirect detection analysis IC79WH.

IC79WH_nobs: |
   Number of observed events for neutrino indirect detection analysis IC79WH.

IC79_loglike: |
   The full 79-string IceCube log-likelihood.

IceCube_likelihood: |
   The complete IceCube log-likelihood, including 22-string and 79-string data.

DarkSUSY_PointInit: |
   Initialises DarkSUSY for a specific model point.

DarkSUSY_PointInit_LocalHalo: |
   Initialises Milky Way halo model parameters in DarkSUSY

dump_GammaSpectrum: |
   Dumps gamma-ray yield into ASCII table

UnitTest_DarkBit: |
   Prints various DarkBit results into YAML file.

DD_SetDetectorEmin: |
   Sets the minimum recoil energy relevant for a given direct detection experiment.

DDCalc_1_0_0_init: |
   Initialises DDCalc 1.0.0.

DDCalc_1_1_0_init: |
   Initialises DDCalc 1.1.0.

DDCalc_1_2_0_init: |
   Initialises DDCalc 1.2.0.

DDCalc_2_0_0_init: |
   Initialises DDCalc 2.0.0.

DD_Experiment: |
   The name of the DDcalc experiment corresponding to a specific experiment index.

DD_Background: |
   The number of background events for a given direct detection experiment.

DD_CalcRates: |
   Perform rate and likelihood calculations for a given direct detection experiment.

DD_Events: |
   The number of observed events for a given direct detection experiment.

DD_LogLikelihood: |
   Calculate the log-likelihood for a given direct detection experiment.

DD_LogPValue: |
   Calculate the log p-value for a given direct detection experiment.

DD_Signal: |
   The number of signal events for a given direct detection experiment.

DD_SignalSD: |
   The number of spin-dependent signal events for a given direct detection experiment.

DD_SignalSI: |
   The number of spin-independent signal events for a given direct detection experiment.

DD_BinBackground: |
   The number of background events in a specific bin for a given direct detection experiment.

DD_BinEvents: |
   The number of events in a specific bin for a given direct detection experiment.

DD_BinSignal: |
   The number of signal events in a specific bin for a given direct detection experiment.

DD_Bins: |
   The number of bins for a given direct detection experiment.

LUX_2013_Init: |
   Initialises a direct detection experiment with the properties of the 2013 analysis of LUX.

LUX_2015_Init: |
   Initialises a direct detection experiment with the properties of the 2015 reanalysis of LUX.

LUX_2016_Init: |
   Initialises a direct detection experiment with the properties of the 2016 analysis of LUX.

SIMPLE_2014_Init: |
   Initialises a direct detection experiment with the properties of the 2014 analysis of SIMPLE.

PICO_2L_Init: |
   Initialises a direct detection experiment with the properties of the analysis of PICO-2L.

PICO_60_F_Init: |
   Initialises a direct detection experiment with the properties of the analysis of PICO-60, including only fluorine.

PICO_60_I_Init: |
   Initialises a direct detection experiment with the properties of the analysis of PICO-60, including only iodine.

PICO_60_2017_Init: |
   Initialises a direct detection experiment with the properties of the 2017 analysis of PICO-60.

PICO_60_Init: |
   Initialises a direct detection experiment with the properties of the analysis of PICO-60.

PICO_500_Init: |
   Initialises a direct detection experiment with the properties of the analysis of PICO-500.

PandaX_2016_Init: |
   Initialises a direct detection experiment with the properties of the 2016 analysis of PandaX.

PandaX_2017_Init: |
   Initialises a direct detection experiment with the properties of the 2017 analysis of PandaX.

XENON100_2012_Init: |
   Initialises a direct detection experiment with the properties of the 2012 analysis of Xenon100.

XENON1T_2017_Init: |
   Initialises a direct detection experiment with the properties of the 2017 analysis of Xenon1T.

XENON1T_2018_Init: |
   Initialises a direct detection experiment with the properties of the 2018 analysis of Xenon1T.

SuperCDMS_2014_Init: |
   Initialises a direct detection experiment with the properties of the 2014 analysis of SuperCDMS.

CDMSlite_Init: |
   Initialises a direct detection experiment with the properties of the analysis of CDMSlite.

CRESST_II_Init: |
   Initialises a direct detection experiment with the properties of the analysis of CRESST-II.

DarkSide_50_Init: |
   Initialises a direct detection experiment with the properties of the analysis of DarkSide-50.

DARWIN_Init: |
   Initialises a direct detection experiment with the properties of the analysis of DARWIN.

LZ_Init: |
   Initialises a direct detection experiment with the properties of the analysis of LZ.

FreeDetectorss: |
   Deletes the detector object held internally by DDCalc (relevant for the C/C++ interface of DDCalc).

FreeHalos: |
   Deletes the halo object held internally by DDCalc (relevant for the C/C++ interface of DDCalc).

FreeWIMPs: |
   Deletes the WIMP object held internally by DDCalc (relevant for the C/C++ interface of DDCalc).

FreeAll: |
   Deletes the detector, halo and WIMP objects held internally by DDCalc (relevant for the C/C++ interface of DDCalc).

GetWIMP_mG: |
   Gets the WIMP parameters m, GpSI, GnSI, GpSD, GnSD (used in DDCalc)

GetWIMP_mfa: |
   Gets the WIMP parameters m, fp, fn, ap, an (used in DDCalc)

GetWIMP_msigma: |
   Gets the WIMP parameters m, sigmapSI, sigmanSI, sigmapSD, sigmanSD (used in DDCalc)

GetWIMP_higgsportal: |
   Gets the WIMP parameters m, fsp, fsn, app, apn (used in DDCalc_2_0_0)

SetWIMP_mG: |
   Sets the WIMP parameters m, GpSI, GnSI, GpSD, GnSD (used in DDCalc)

SetWIMP_mfa: |
   Sets the WIMP parameters m, fp, fn, ap, an (used in DDCalc)

SetWIMP_msigma: |
   Sets the WIMP parameters m, sigmapSI, sigmanSI, sigmapSD, sigmanSD (used in DDCalc)

SetWIMP_higgsportal: |
   Sets the WIMP parameters m, fsp, fsn, app, apn (used in DDCalc_2_0_0)

SetWIMP_NREffectiveTheory: |
   Sets the WIMP parameters m, spin for a non-relativistic effective field theory.

GetNRCoefficient: |
   Get the value of a given non-relativistic operator

SetNRCoefficient: |
   Set the value of a given non-relativistic operator

InitDetector: |
  Default detector setup used in DDCalc

InitWIMP: |
  Default WIMP structure used in DDCalc

InitHalo: |
  Default Halo structure used in DDCalc

SetSHM: |
  Sets the dark matter halo to the Standard Halo Model (SHM), used in DDCalc

nulike_init: |
  Initializes nulike.

nulike_1_0_4_init: |
  Initializes nulike_1_0_4.

nulike_1_0_5_init: |
  Initializes nulike_1_0_5.

nulike_1_0_6_init: |
  Initializes nulike_1_0_5.

nubounds:
  Counts, likelihoods and p-values from neutrino telescope searches for dark matter annihilation in the Sun.

Example_lnL_B: |
  Example log likelihood in ExampleBit B.

lnlike_marg_poisson_gaussian_error: |
  log of the convolution of a Poisson and Gausian distributions.

lnlike_marg_poisson_lognormal_error: |
  log of the convolution of a poisson and log-normal distributions.

#-------------------------------------
#  HiggsBounds capabilities
#-------------------------------------

Higgs_Production_Xsecs: |
   Higss Production cross section

HiggsBounds_4_2_1_init:
   Initialises HiggsBounds backend, version 4.2.1.

HiggsBounds_4_3_1_init:
   Initialises HiggsBounds backend, version 4.3.1.

finish_HiggsBounds: |
   Finishes HiggsBound.

initialize_HiggsBounds_int: |
   Initialises HiggsBounds for library linking.

HiggsBounds_charged_input: |
   Required charged input values to initialise HiggsBounds.

HiggsBounds_neutral_input_part: |
   Required neutral input values to initialise HiggsBounds.

HiggsBounds_input_SLHA: |
   HiggsBounds SLHA file reader

HiggsBounds_set_mass_uncertainties: |
   Assign mass uncertainties for HiggsBounds backend.

run_HiggsBounds_classic: |
   Runs HiggsBounds after initialization.

finish_HiggsBounds_chisqtables: |
   Generates chi squared tables from HiggsBounds.

initialize_HiggsBounds_chisqtables: |
   Initializes HiggsBounds to produce chi squared tables.

HB_calc_stats: |
   To quote from HiggsBounds: "this is in the middle of development! DO NOT USE!"


#-------------------------------------
#  HiggsSignals capabilities
#-------------------------------------

HiggsSignals_1_4_init: |
   Initialise HiggsSignals backend.

HiggsSignals_neutral_input_MassUncertainty: |
   Assign mass uncertainties for HiggsSignals backend.

HiggsBounds_charged_input_HS: |
   Required charged input values to initialise HiggsSignals.

HiggsBounds_neutral_input_part_HS: |
   Required neutral input values to initialise HiggsSignals.

HiggsBounds_input_SLHA_HS: |
   HiggsSignals SLHA file reader

initialize_HiggsBounds_int_HS: |
   Initialises HiggsBounds for library linking from HiggsSignals.

finish_HiggsBounds_HS: |
   Finishes HiggsBounds from HiggsSignals.

finish_HiggsSignals: |
   Finishes HiggsSignal Backend.

initialize_HiggsSignals: |
   Initializes HiggsSignals.

initialize_HiggsSignals_latestresults: |
   Initializes HiggsSignals.

run_HiggsSignals: |
   Runs HiggsSignals after Initialization.

setup_pdf: |
   Set pdf shape in HiggsSignals.

setup_rate_uncertainties: |
   Set the rate uncertainties in HiggsSignals.

#-------------------------------------
#  DarkSUSY capabilities
#-------------------------------------

DarkSUSY_5_1_3_init: |
   Initialise DarkSUSY backend.

dsIBffdxdy: |
   Differential internal bremsstrahlung photon yield for fermion final states.

dsIBfsrdxdy: |
   Differential final state radiation photon yield for fermion final states.

dsIBhhdxdy: |
   Differential internal bremsstrahlung photon yield for the H+ H- final state.

dsIBwhdxdy: |
   Differential internal bremsstrahlung photon yield for W+- H-+ final states.

dsIBwwdxdy: |
   Differential internal bremsstrahlung photon yield for the W+ W- final state.

dsSLHAread: |
   DarkSUSY SLHA file reader.

dsanwx: |
   Neutralino self-annihilation invariant rate.

dsddgpgn: |
   Neutralino nucleon four-fermion couplings.

dsgf2s2thw: |
   Determines sin^2(theta_W) based on Fermi constant.

dsgive_model_isasugra: |
   Sets CMSSM model parameters in ISASUGRA included with DarkSUSY.

dshainit: |
   Intialises and loads common block values needed by DarkSUSY halo yield routines.

dshayield: |
   Integrated or differential yield of a range of SM species from various final states.

dshigwid: |
   Choose which Higgs width calculation to use in DarkSUSY.

dshmcom: |
   Halo model density, distance, and velocity parameters.

dshmframevelcom: |
   Velocity of observer in frame of galaxy.

dshmisodf: |
   Velocity dispersion and escape velocity.

dshmnoclue: |
   Mysterious DarkSUSY halo model common block (contains observer velocity).

dsibyieldone: |
   Inverse bremsstrahlung yield from one channel.

dsinit: |
   Initialise DarkSUSY.

dsmqpole4loop: |
   Calculate quark pole mass.

dsmssmzero: |
   Zeros all electroweak parameters in DarkSUSY.

dsorder_flavour: |
   Orders sfermions based on flavour content as expected by DarkSUSY routines.

dsprep: |
   Calculates cross sections and brnaching ratios and sets common block variables in DarkSUSY

dsrdeqn: |
   Solves the relic density evolution equation.

dsrdinit: |
   Initialise the DarkSUSY relic density routines (read in the degree of freedom table).

dsrdomega: |
   Calculates Omega h^2 for the MSSM neutralino.

dsrdset: |
   Set parameters for DarkSUSY relic density routines (which DOF table is used).

dsrdtab: |
   Tabulate the invariant annihilation rate in DarkSUSY.

dsrdthlim: |
   Determine which limits in p_eff for DarkSUSY to use when integrating for the thermal average.

dsrdwintp: |
   Interpolation of tabulated invariant rate.

dssigmav: |
   Neutralino self-annihilation cross section <sigma v> in zero velocity limit.

dsspectrum: |
   Sets up particle mass spectrum and mixing matrices in DarkSUSY.

dsspwid: |
   Sets widths of particles in DarkSUSY.

dssuconst: |
   Sets many useful constants in DarkSUSY.

dssuconst_ckm: |
   Sets CKM mixing parameters in DarkSUSY.

dssuconst_yukawa_running: |
   Calculates Yukawa couplings in DarkSUSY with running masses.

dssusy: |
   Sets up supersymmetric model routines in DarkSUSY.

dssusy_isasugra: |
   Sets up supersymmetric model routines in DarkSUSY using ISASUGRA.

dsvertx: |
   Sets up SUSY vertices in DarkSUSY.

dswspectrum: |
   Writes out mass spectrum.

dswwidth: |
   Writes out widths.

cap_Sun_v0q0_isoscalar: |
   Capture rate of dark matter in the sun.

raw_muonyield: |
   Gives either the differential or total yield of muons in a neutrino telescope from dark matter annihilation in the sun.

pacodes: |
   Common block containing particle codes used in DarkSUSY.

mssmiuseful: |
   Common block containing DarkSUSY particle codes for lightest supersymmmetric particle and neutralino.

mspctm: |
   DarkSUSY mass spectrum.

widths: |
   DarkSUSY particle widths. (Capability is defined twice.)

intdof: |
   Number of spin and color states for each particle for DarkSUSY.

vrtxs: |
   DarkSUSY interaction vertices.

smruseful: |
   Various standard model parameters.

smcuseful: |
   Contains option to determine how DarkSUSY runs particle masses.

couplingconstants: |
   Coupling constants.

sckm: |
   CKM matrix parameters.

mixing: |
   The CKM matrix.

mssmtype: |
   DarkSUSY parameter that specifies parameterisation of MSSM.

mssmpar: |
   MSSM parameters for DarkSUSY.

mssmswitch: |
   Switches that tell DarkSUSY how to calculate various quantities.

sfermionmass: |
   Sfermion masses for DarkSUSY.

mssmwidths: |
   Widths of Higgs sector particle for DarkSUSY.

mssmmixing: |
   MSSM mixing matrices.

rdmgev: |
   Information about (co)annihilating particles for the DarkSUSY relic density routines.

rdpth: |
   Momentum thresholds relevant for DarkSUSY relic density calculation.

rddof: |
   Common block for effective degrees of freedom in DarkSUSY.

rderrors: |
   Common block containing information about errors and warnings from DarkSUSY relic density routines.

rdpars: |
   Parameters that effect the DarkSUSY relic density calculation.

rdswitch: |
   Options for the DarkSUSY relic density calculation.

rdlun: |
   Logical units for DarkSUSY relic density calculation.

rdpadd: |
   Parameters that effect the tabulation of the invariant annihilation rate in DarkSUSY.

rdtime: |
   Timing parameters for DarkSUSY relic density calculations.

IBintvars: |
   Common block for DarkSUSY internal Bremsstrahlung routines.

ddcom: |
   Common block containing DM nucleon couplings and options for their calculation in DarkSUSY.

nu_common_block: |
   Annihilation branching rates and scalar decay rates used by DarkSUSY routines for DM annihilation in sun.

nuyield: |
   Neutrino yields at the top of the atmosphere.

nuyield_setup: |
   Sets DarkSUSY common blocks with all necessary information to calculate neutrino yields.

particle_code: |
   Translates GAMBIT string particle identifiers to corresponding DarkSUSY integer codes.

initFromSLHAeaAndDecayTable: |
   Initialises an MSSM model in DarkSUSY from an SLHAea object and a DecayTable.

get_DS_neutral_h_decay_channels: |
   Vector containing neutral Higgs decay channels in DarkSUSY.

get_DS_charged_h_decay_channels: |
   Vector containing charged Higgs decay channels in DarkSUSY.

#-------------------------------------
#  MicrOmegas capabilities
#-------------------------------------

MicrOmegas_MSSM_3_6_9_2_init: |
   Initialise MicrOmegas MSSM backend.

MicrOmegas_ScalarSingletDM_Z2_3_6_9_2_init: |
   Initialise MicrOmegas ScalarSingletDM_Z2 backend.

MicrOmegas_ScalarSingletDM_Z3_3_6_9_2_init: |
   Initialise MicrOmegas ScalarSingletDM_Z3 backend.

MicrOmegas_VectorSingletDM_Z2_3_6_9_2_init: |
   Initialise MicrOmegas VectorSingletDM_Z2 backend.

MicrOmegas_MajoranaSingletDM_Z2_3_6_9_2_init: |
   Initialise MicrOmegas MajoranaSingletDM_Z2 backend.

MicrOmegas_DiracSingletDM_Z2_3_6_9_2_init: |
   Initialise MicrOmegas DiracSingletDM_Z2 backend.

get_oneChannel: |
   Get the contribution to the relic density from one channel

momegas_print_channels: |
   Print the contributions to the relic density from all channels

assignVal: |
   Assigns a value to a model parameter in MicrOmegas.

vSigma: |
   The velocity averaged cross section calculated at a specified temperature.

oh2: |
   The dark matter relic density (Omega h^2).

suspectSUGRA: |
   Calculates MSSM mass spectrum using SuSpect and use that to intialise MicrOmegas.

lesHinput: |
   Initialises MicrOmegas using an SLHA file.

mass_spectrum: |
   Calculates all masses/couplings in MicrOmegas and sorts odd particles by mass.

cleanDecayTable: |
   Removes all information from MicrOmegas decay table.

nucleonAmplitudes: |
   Calculates WIMP-nucleon scattering amplitudes.

FeScLoop: |
   Calculates loop contributions to WIMP-nucleon scattering.

calcScalarQuarkFF: |
   Calculates nuclear matrix elements for scalar DM-quark interactions.

mInterp: |
   MicrOmegas routine to interpolate between different center of mass energies to determine cosmic ray yields.

zInterp: |
   MicrOmegas routine for interpolating cosmic ray spectra.

readSpectra: |
   MicrOmegas routine to initialise cosmic-ray yield tables.

MOcommon: |
   MicrOmegas global variables.

ForceUG: |
   Flag to force CalcHEP in MicrOmegas to do calculation in unitary gauge.

VZdecay: |
   MicrOmegas flag that turns on 3 body decays via a virtual Z.

VWdecay: |
   MicrOmegas flag that turns on 3 body decays via a virtual W.

dNdE: |
   Differential cosmic-ray yield.

calcSpectrum: |
   MicrOmegas routine for calculating the dark matter annihilation spectrum at rest
   along with the zero velocity annihilation cross section (sigmav)_0 in cm^3 s^-1.

vSigmaCh: |
   MicrOmegas array containing the relative contribution and particle names for each
   annihilation channel. It is filled by the calcSpectrum function in micrOmegas.

#-------------------------------------
#  DecayBit capabilities
#-------------------------------------

decay_rates: |
   Collect all the decay rates into a table.

Z_decay_rates : |
   All decays of the Z gauge boson.

Higgs_decay_rates : |
   All decays of the most SM-like Higgs boson.

Reference_SM_Higgs_decay_rates : |
   All decays of the Higgs boson in the SM.

eta_decay_rates : |
   All decays of the η meson.

omega_decay_rates : |
   All decays of the ω meson.

lnL_Higgs_invWidth : |
   The log-likelihood of the (SM-like) Higgs invisible width.

h0_2_decay_rates : |
   Decays of the heaviest CP-even MSSM Higgs boson.

A0_decay_rates : |
   Decays of the CP-odd MSSM Higgs boson.

gluino_decay_rates : |
   Decays of the gluino.

t_decay_rates : |
   All decays of the t quark.

snu_electronl_decay_rates : |
   Decays of the ν_eL sneutrinos.

snu_muonl_decay_rates : |
   Decays of the ν_μL sneutrinos.

snu_taul_decay_rates : |
   Decays of the ν_τL sneutrinos.

stop_1_decay_rates : |
   Decays of the t_1 squarks.

sbottom_1_decay_rates : |
   Decays of the b_1 squarks.

stau_1_decay_rates : |
   Decays of the τ_1 sleptons.

stau_1_decay_rates_SH : |
   Decays of the τ_1 sleptons calculated with SUSY-HIT.

stau_1_decay_rates_smallsplit : |
   Decays of the τ_1 sleptons for small stau--neutralino mass splittings.

stop_2_decay_rates : |
   Decays of the t_2 squarks.

sbottom_2_decay_rates : |
   Decays of the b_2 squarks.

stau_2_decay_rates : |
   Decays of the τ_2 sleptons.

tbar_decay_rates : |
   All decays of the anti-t quark.

snubar_electronl_decay_rates : |
   Decays of the anti-ν_eL sneutrinos.

snubar_muonl_decay_rates : |
   Decays of the anti-ν_μL sneutrinos.

snubar_taul_decay_rates : |
   Decays of the anti-ν_τL sneutrinos.

stopbar_1_decay_rates : |
   Decays of the anti-t_1 squarks.

sbottombar_1_decay_rates : |
   Decays of the anti-b_1 squarks.

staubar_1_decay_rates : |
   Decays of the anti-τ_1 sleptons.

stopbar_2_decay_rates : |
   Decays of the anti-t_2 squarks.

sbottombar_2_decay_rates : |
   Decays of the anti-b_2 squarks.

staubar_2_decay_rates : |
   Decays of the anti-τ_2 sleptons.

mu_plus_decay_rates : |
  All decays of the μ+ lepton.

tau_plus_decay_rates : |
  All decays of the τ+ lepton.

W_plus_decay_rates : |
  All decays of the W+ gauge boson.

H_plus_decay_rates : |
   Decays of the MSSM H+.

chargino_plus_1_decay_rates : |
   Decays of the chargino+ 1.

chargino_plus_1_decay_rates_SH : |
   Decays of the chargino+ 1 calculated using SUSY-HIT.

chargino_plus_1_decay_rates_smallsplit : |
   Decays of the chargino+ 1 at small chargino--neutralino mass splittings.

chargino_plus_2_decay_rates : |
   Decays of the chargino+ 2.

mu_minus_decay_rates : |
  All decays of the μ- lepton.

tau_minus_decay_rates : |
  All decays of the τ- lepton.

W_minus_decay_rates : |
  All decays of the W- gauge boson.

chargino_minus_1_decay_rates : |
   Decays of the chargino- 1.

chargino_minus_2_decay_rates : |
   Decays of the chargino- 2.

rho1450_decay_rates : |
  Decays of the ρ(1450) meson.

neutralino_1_decay_rates : |
   Decays of the neutralino 1.

neutralino_2_decay_rates : |
   Decays of the neutralino 2.

neutralino_3_decay_rates : |
   Decays of the neutralino 3.

neutralino_4_decay_rates : |
   Decays of the neutralino 4.

SLHA1_violation: |
   Checks if the first or second generation left-right mixing exceeds the specified tolerance (which means that SLHA1 is an invalid format for this model point).

SLHA_pseudonyms: |
   Get MSSM mass eigenstate pseudonyms for the gauge eigenstates

Reference_SM_A0_decay_rates: |
   Computation of decays of SM Higgs with mass equal to the mass of the CP-odd Higgs boson.

Reference_SM_other_Higgs_decay_rates: |
   Computation of decays of SM Higgs with mass equal to the mass of the least SM-like CP-even Higgs.

Z_gamma_nu: |
   Decay width of the Z boson to neutrinos in MeV.

Z_gamma_chi_0: |
   Decay width of the Z boson to neutralinos in MeV.

lnL_Z_inv: |
   Log Likelihood for the inivislbe decay width of the Z boson.

inv_Higgs_BF: |
   Invisible decay branching fraction of the SM-like Higgs boson.

#-------------------------------------
#  PrecisionBit capabilities
#-------------------------------------


MSSM_spectrum: |
    Provide an updated MSSM spectrum from the unimproved version with
    precision W and Higgs masses.

lnL_alpha_em : |
   Log-likelihood of α_EM (m_Z), the MSBar value of the fine structure constant at μ = m_Z.

lnL_alpha_s : |
   Log-likelihood of α_s (m_Z), the MSBar value of the strong coupling constant at μ = m_Z.

lnL_GF : |
   Log-likelihood of the Fermi coupling constant G_F.

lnL_light_quark_masses : |
   Joint log-likelihood of the MSbar masses of the u, d and s quarks at μ = 2 GeV.

lnL_mcmc : |
   Log-likelihood of the MSbar mass of the c quark at scale m_c.

lnL_mbmb : |
   Log-likelihood of the MSbar mass of the b quark at scale m_b.

lnL_t_mass : |
   Log-likelihood of the top quark pole mass.

lnL_Z_mass : |
   Log-likelihood of the Z boson pole mass.

lnL_h_mass : |
   Simple log-likelihood of the SM-like Higgs boson pole mass.

lnL_W_mass : |
   Log-likelihood of the W boson pole mass.

mw : |
   The W boson pole mass.

mh : |
   The SM-like Higgs boson pole mass.

FH_Precision : |
   Precision observable tableau, as calculated with FeynHiggs.

SP_PrecisionObs : |
   Precision observable tableau, as calculated with SUSY-POPE.

deltarho : |
   Deviation from one (∆ρ) of the ratio of the Fermi effective coupling (G_F) in W and Z-mediated processes.

prec_mw : |
   Precision value of the W mass.

prec_mh : |
   Precision value of the mass of the most SM-like Higgs boson.

prec_HeavyHiggsMasses : |
   Precision values of the masses of the A^0, H+ and the least SM-like neutral Higgs boson.

prec_sinW2_eff : |
   Precision value of the effective leptonic weak mixing angle sin^2 θ_W,eff.

edm_e : |
   The electric dipole moment of the electron.

edm_n : |
   The electric dipole moment of the neutron.

edm_hg : |
   The electric dipole moment of mercury.

muon_gm2: |
   The BSM contribution to g−2 of the muon.

muon_gm2_SM: |
   The SM contribution to g−2 of the muon.

lnL_sinW2_eff : |
   Log-likelihood of the effective leptonic weak mixing angle sin^2 θ_W,eff.

lnL_gm2 : |
   Log-likelihood of the muon g−2.

lnL_deltarho : |
   Log-likelihood of ∆ρ, the departure from one of the ratio of the Fermi effective coupling (G_F) in W and Z-mediated processes.


#-------------------------------------
#  FlavBit capabilities
#-------------------------------------

AI_BKstarmumu : |
   The isospin asymmetry in B-> K* μ+ μ-.

AI_BKstarmumu_zero : |
   The zero-crossing of the isospin asymmetry in B-> K* μ+ μ-.

A_BXsll_highq2 : |
   The integrated forward-backward asymmetry of B->Xs l+ l- in the high-q2 bin.

A_BXsll_lowq2 : |
   The integrated forward-backward asymmetry of B->Xs l+ l- in the low-q2 bin.

A_BXsll_zero : |
   The zero crossing of the forward-backward asymmetry of B->Xs l+ l-.

A_BXsmumu_highq2 : |
   The integrated forward-backward asymmetry of B->Xs μ+ μ- in the high-q2 bin.

A_BXsmumu_highq2_CONV : |
   The Wilson coefficients and the integrated forward-backward asymmetry of B->Xs μ+ μ- in the high-q2 bin.

A_BXsmumu_lowq2 : |
   The integrated forward-backward asymmetry of B->Xs μ+ μ- in the low-q2 bin.

A_BXsmumu_lowq2_CONV : |
   The Wilson coefficients and the integrated forward-backward asymmetry of B->Xs μ+ μ- in the low-q2 bin.

A_BXsmumu_zero : |
   The zero crossing of the forward-backward asymmetry of B->Xs μ+ μ-.

A_BXsmumu_zero_CONV : |
   The Wilson coefficients and the zero crossing of the forward-backward asymmetry of B->Xs μ+ μ-.

A_BXstautau_highq2 : |
   The integrated forward-backward asymmetry of B->Xs tau+ tau- in the high-q2 bin.

A_BXstautau_highq2_CONV : |
   The Wilson coefficients and the integrated forward-backward asymmetry of B->Xs tau+ tau- in the high-q2 bin.

BDmunu : |
   The branching ratio of B-> D mu nu.

BDtaunu : |
   The branching ratio of B-> D tau nu.

BRBDlnu : |
   The branching ratio of B-> D l nu.

BDtaunu_BDenu : |
   The ratio of BR(B-> D tau nu)/BR(B-> D e nu).

BDstarmunu : |
   The branching ratio of B-> D* mu nu.

BDstartaunu : |
   The branching ratio of B-> D* tau nu.

BRBDstarlnu : |
   The branching ratio of B-> D* l nu.

BDstartaunu_BDstarenu : |
   The ratio of BR(B-> D* tau nu)/BR(B-> D* e nu).

BKstarmumu_11_25 : |
   The integrated differential cross-section and angular observables of B-> K* μ+ μ- for q2 between 1.1 and 2.5 GeV^2.

BKstarmumu_25_40 : |
   The integrated differential cross-section and angular observables of B-> K* μ+ μ- for q2 between 2.5 and 4 GeV^2.

BKstarmumu_40_60 : |
   The integrated differential cross-section and angular observables of B-> K* μ+ μ- for q2 between 4 and 6 GeV^2.

BKstarmumu_60_80 : |
   The integrated differential cross-section and angular observables of B-> K* μ+ μ- for q2 between 6 and 8 GeV^2.

BKstarmumu_15_17 : |
   The integrated differential cross-section and angular observables of B-> K* μ+ μ- for q2 between 15 and 17 GeV^2.

BKstarmumu_17_19 : |
   The integrated differential cross-section and angular observables of B-> K* μ+ μ- for q2 between 17 and 19 GeV^2.

BKstarmumu_CONV : |
   The Wilson coefficients and the integrated differential cross-section and angular observables of B-> K* μ+ μ-.

BRBKll : |
   The differential cross-section and angular observables of B-> K l+ l-.

BRBKstarll : |
   The differential cross-section and angular observables of B-> K* l+ l-.

BRBXsll_highq2 : |
   The branching ratio B-> Xs l+ l- in the high-q2 bin.

BRBXsll_lowq2 : |
   The branching ratio B-> Xs l+ l- in the low-q2 bin.

BRBXsmumu_highq2 : |
   The branching ratio B-> Xs μ+ μ- in the high-q2 bin.

BRBXsmumu_highq2_CONV : |
   The Wilson coefficients and the branching ratio B-> Xs μ+ μ- in the high-q2 bin.

BRBXsmumu_lowq2 : |
   The branching ratio B-> Xs μ+ μ- in the low-q2 bin.

BRBXsmumu_lowq2_CONV : |
   The Wilson coefficients and the branching ratio B-> Xs μ+ μ- in the low-q2 bin.

BRBXstautau_highq2 : |
   The branching ratio B-> Xs tau+ tau- in the low-q2 bin.

BRBXstautau_highq2_CONV : |
   The Wilson coefficients and the branching ratio B-> Xs tau+ tau- in the low-q2 bin.

BRBsphill : |
   The differential cross-section and angular observables of Bs-> phi l+ l-.

Bll : |
   The branching ratio of Bd-> l+ l-.

Bll_CONV : |
   The Wilson coefficients and the branching ratio of Bd-> l+ l-.

Blnu : |
   The branching ratio of B-> l nu.

Bmumu : |
   The branching ratio of Bd-> μ+ μ-.

Bsee_untag : |
   The untagged branching ratio of Bs-> e+ e-.

Bsll_untag : |
   The untagged branching ratio of Bs-> l+ l-.

Bsll_untag_CONV : |
   The Wilson coefficients and the untagged branching ratio of Bs-> l+ l-.

Bsmumu : |
   The branching ratio of Bs-> μ+ μ-.

Bsmumu_untag : |
   The untagged branching ratio of Bs-> μ+ μ-.

Btaunu : |
   The branching ratio of B-> tau nu.

CQ_calculator : |
   The scalar and pseudoscalar Wilson coefficients.

CW_calculator : |
   The Wilson coefficients at the W mass scale.

C_calculator_base1 : |
   The Wilson coefficients at the b mass scale in the operator basis 1.

C_calculator_base2 : |
   The Wilson coefficients at the b mass scale in the operator basis 2.

Cprime_calculator : |
   The primed Wilson coefficients.

DeltaMs : |
   The Bs meson mass difference.

Dmunu : |
   The branching ratio of D-> mu nu.

Dsmunu : |
   The branching ratio of Ds-> mu nu.

Dstaunu : |
   The branching ratio of Ds-> tau nu.

Kmunu_pimunu : |
   The ratio of BR(K-> mu nu)/BR(pi-> mu nu).

RD : |
   The ratio of BR(B-> D tau nu)/BR(B-> D e nu).

RDstar : |
   The ratio of BR(B-> D* tau nu)/BR(B-> D* e nu).

Rmu : |
   The ratio of BR(K-> mu nu)/BR(pi-> mu nu).

Rmu23 : |
   The Rmu23 observable related to K-> mu nu and pi-> mu nu.

SI_AI_BKstarmumu_CONV : |
   The Wilson coefficients and the isospin asymmetry in B-> K* μ+ μ-.

SI_AI_BKstarmumu_zero_CONV : |
   The Wilson coefficients and the zero crossing of isospin asymmetry in B-> K* μ+ μ-.

SL_LL : |
  Log-likelihood for the tree-level leptonic and semileptonic B and D decays.

SL_M : |
  Measurements related to the tree-level leptonic and semileptonic B and D decays.

SuperIso_3_6_init : |
   Initalise SuperIso v3.6.

SuperIso_modelinfo : |
   SuperIso internal model information.

b2ll_LL : |
   Log-likelihood for BR(Bd-> μ+ μ-) and BR(Bs-> μ+ μ-).

b2ll_M : |
   Measurements related to BR(Bd-> μ+ μ-) and BR(Bs-> μ+ μ-).

b2sgamma_LL : |
   Log-likelihood for inclusive branching ratio of B-> Xs gamma.

b2sll_LL : |
   Log-likelihood for B-> K* μ+ μ- observables.

b2sll_M : |
   Measurements for B-> K* μ+ μ- observables.

bsgamma : |
   The inclusive branching ratio of B-> Xs gamma with a photon energy cut of 1.6 GeV.

bsgamma_CONV : |
   The Wilson coefficients and the inclusive branching ratio of B-> Xs gamma.

bsgamma_Ecut : |
   The inclusive branching ratio of B-> Xs gamma with a photon energy cut Ecut.

delta0 : |
   The isospin asymmetry of B-> K* gamma.

deltaMB_LL : |
   Log-likelihood for the Bs meson mass difference.

mb_1S : |
   The 1S bottom quark mass.

SUSYPOPE_0_2_init: |
   Initialize SUSYPOPE backend

CalcObs_SUSYPOPE: |
   Calculate precision observables using SUSYPOPE

SetFlags_SUSYPOPE: |
   Set internal flags for SUSYPOPE

SetPara_SUSYPOPE: |
   Set internal parameters for SUSYPOPE

Init_param : |
   Initialiases the SuperIso parameter structure.

alphas_running : |
   Computes the alphas running coupling at a given energy.

slha_adjust : |
   Adjusts the SLHA parameters to the SuperIso standard.

LUV_LL :  |
   Calculate the likelihood function of the b->sll LUV observables (RK, RK*)

LUV_M :  |
   Measurements related to LUV in b->sll

RK :  |
   Calculation R_K in 1-6GeVGeV

RK_CONV:  |
   Conv function from SuperIso to calculate the R_K

RKstar_0045_11:  |
   Calculation R_K* in 0.045-1.1GeVGeV

RKstar_11_60:  |
   Calculation R_K* in 1.1 -  6.0 GeVGeV

RKstar_CONV:  |
   Conv function from SuperIso to calculate the R_K*




#-------------------------------------
#  SUSY-HIT capabilities
#-------------------------------------

SUSY_HIT_1_5_init: |
   Initialise SUSY-HIT backend

sdecay: |
   Computation of all MSSM decays.

unlikely: |
   An unlikely double (used for SUSY-HIT initialisation).

cb_checkfavvio: |
   Common block containing options for flavour violation.

cb_susyhitin: |
   Various standard model parameters used by SUSY-HIT.

cb_sd_leshouches1: |
   SLHA1 values for SDecay.

cb_sd_leshouches2: |
   SLHA2 values for SDecay

cb_slha_leshouches1_hdec: |
   SLHA1 values for HDecay.

cb_slha_leshouches2_hdec: |
   SLHA2 values for HDecay.

cb_widtha_hdec: |
   Decay width and branching fractions to SM and Higgs sector particles of A_0.

cb_widthhl_hdec: |
   Decay width and branching fractions to SM and Higgs sector particles of h0_1.

cb_widthhh_hdec: |
   Decay width and branching fractions to SM and Higgs sector particles of h0_2.

cb_widthhc_hdec: |
   Decay width and branching fractions to SM and Higgs sector particles of H_+.

cb_wisusy_hdec: |
   Branching fractions of various particles to SUSY particles.

cb_wisfer_hdec: |
   Branching fractions of various particles to sfermions.

cb_hd_golddec: |
   Goldstino decay widths.

cb_sd_char2body: |
   Branching fractions for two body decays of chargino_+_1.

cb_sd_char2bodygrav: |
   Branching fractions for two body decays of chargino_+_1 with gravitino in final state.

cb_sd_char3body: |
   Branching fractions for three body decays of chargino_+_1.

cb_sd_charwidth: |
   The total width of chargino_+_1.

cb_sd_neut2body: |
   Branching fractions for two body decays of neutralino_1.

cb_sd_neut2bodygrav: |
   Branching fractions for two body decays of neutralino_1 with gravitino in final state.

cb_sd_neut3body: |
   Branching fractions for three body decays of neutralino_1.

cb_sd_neutloop: |
   Branching fractions for loop induced decays of neutralino_1.

cb_sd_neutwidth: |
   Total width of neutralino_1.

cb_sd_glui2body: |
   Branching fractions for two body decays of gluino.

cb_sd_glui3body: |
   Branching fractions for three body decays of gluino.

cb_sd_gluiloop: |
   Branching fractions for loop induced decays of gluino.

cb_sd_gluiwidth: |
   Total width of gluino.

cb_sd_sup2body: |
   Branching fractions for two body decays of sups.

cb_sd_supwidth: |
   Total width of sups.

cb_sd_sdown2body: |
   Branching fractions for two body decays of sdowns.

cb_sd_sdownwidth: |
   Total width of sdowns.

cb_sd_stop2body: |
   Branching fractions for two body decays of stops.

cb_sd_stop3body: |
   Branching fractions for three body decays of stops.

cb_sd_stoploop: |
   Branching fractions for loop induced decays of stops.

cb_sd_stop4body: |
   Branching fractions for four body decays of stops.

cb_sd_stopwidth: |
   Total width of stops.

cb_sd_sbot2body: |
   Branching fractions for two body decays of sbottoms.

cb_sd_sbot3body: |
   Branching fractions for three body decays of sbottoms.

cb_sd_sbotwidth: |
   Total width of sbottoms.

cb_sd_sel2body: |
   Branching fractions for two body decaus of selectrons.

cb_sd_selwidth: |
   Total width of selectrons.

cb_sd_snel2body: |
   Branching fractions for two body decays of electron sneutrinos.

cb_sd_snelwidth: |
   Total width of electron sneutrinos.

cb_sd_stau2body: |
   Branching fractions for two body decauys of staus.

cb_sd_stau2bodygrav: |
   Branching fractions for two body decays of staus with gravitinos in the final state.

cb_sd_stauwidth: |
   Total width of staus.

cb_sd_sntau2body: |
   Branching fractions for two body decays of tau sneutrinos.

cb_sd_sntauwidth: |
   Total width of tau sneutrinos.

cb_sd_top2body: |
   Branching fractions for tops to two body final states.

cb_sd_topwidth: |
   Total width of top.

cb_flavviolation: |
   Mixing matrices.

cb_sd_mbmb: |
   Mb(Mb) in the MSbar scheme.

cb_sd_selectron: |
   Selectron mixing matrix.

susy_hit_backend_level_init: |
   Runs SUSY-HIT decay calculations.

H_minus_decay_rates: |
   Decay rate of the negative chared higgs.

scharm_l_decay_rates: |
   Decay rate of the left-handed scharm.

scharm_r_decay_rates: |
   Decay rate of the right-handed scharm.

scharmbar_l_decay_rates: |
   Decay rate of the left-handed anti-scharm.

scharmbar_r_decay_rates: |
   Decay rate of the right-handed anti-scharm.

sdown_l_decay_rates: |
   Decay rate of the left-handed sdown.

sdown_r_decay_rates: |
   Decay rate of the right-handed sdown.

sdownbar_l_decay_rates: |
   Decay rate of the left-handed anti-sdown.

sdownbar_r_decay_rates: |
   Decay rate of the right-handed auti-sdown.

selectron_l_decay_rates: |
   Decay rate of the left-handed selectron.

selectron_r_decay_rates: |
   Decay rate of the right-handed selectron.

selectronbar_l_decay_rates: |
   Decay rate of the left-handed anti-selectron.

selectronbar_r_decay_rates: |
   Decay rate of the right-handed anti-selectron.

pi_0_decay_rates: |
   Decay rate of the pi_0 meson.

pi_minus_decay_rates: |
   Decay rate of the pi minus mesaon.

pi_plus_decay_rates: |
   Decay rate of the pi plus meson.

rho_0_decay_rates: |
   Decay rate of the rho_0 meson.

rho_minus_decay_rates: |
   Decay rate of the rho minus meson.

rho_plus_decay_rates: |
   Decay rate of the rho plus meson.

smuon_l_decay_rates: |
   Decay rate of the left-handed smuon.

smuon_r_decay_rates: |
   Decay rate of the right-handed smuon.

smuonbar_l_decay_rates: |
   Decay rate of the left-handed anti-smuon.

smuonbar_r_decay_rates: |
   Decay rate of the right-handed anti-smuon.

sstrange_l_decay_rates: |
   Decay rate of the left-handed sstrang.

sstrange_r_decay_rates: |
   Decay rate of the right-handed sstrang.

sstrangebar_l_decay_rates: |
   Decay rate of the left-handed anti-sstrang.

sstrangebar_r_decay_rates: |
   Decay rate of the right-handed anti-sstrang.

sup_l_decay_rates: |
   Decay rate of the left-handed sup.

sup_r_decay_rates: |
   Decay rate of the right-handed sup.

supbar_l_decay_rates: |
   Decay rate of the left-handed anti-sup.

supbar_r_decay_rates: |
   Decay rate of the right-handed anti-sup.

#-------------------------------------
#  Model capabilities
#-------------------------------------

Halo_Einasto_parameters: |
   Parameters of the Einasto halo profile (rho0, rhos, vrot, v0, vesc, rs, r_sun, alpha).
   See also ./gambit Halo_Einasto

Halo_Einasto_rho0_parameters: |
   Parameters of the Einasto halo profile, with rhos being internally calculated from rho0 and the other parameters.
   See also ./gambit Halo_Einasto_rho0

Halo_Einasto_rhos_parameters: |
   Parameters of the Einasto halo profile, with rho0 being internally calculated from rhos and the other parameters.
   See also ./gambit Halo_Einasto_rhos

Halo_gNFW_parameters: |
   Parameters of the generalized NFW halo profile (rho0, rhos, vrot, v0, vesc, rs, r_sun, alpha, beta, gamma).
   See also ./gambit Halo_gNFW

Halo_gNFW_rho0_parameters: |
   Parameters of the generalized NFW halo profile, with rhos being internally calculated from rho0 and the other parameters.
   See also ./gambit Halo_gNFW_rho0

Halo_gNFW_rhos_parameters: |
   Parameters of the generalized NFW halo profile, with rho0 being internally calculated from rhos and the other parameters.
   See also ./gambit Halo_gNFW_rhos

MSSM10atQ_parameters: |
   Parameters for the model MSSM10atQ (see ./gambit MSSM10atQ)

MSSM10batQ_parameters: |
   Parameters for the model MSSM10batQ (see ./gambit MSSM10batQ)

MSSM10catQ_parameters: |
   Parameters for the model MSSM10catQ (see ./gambit MSSM10catQ)

MSSM11atQ_parameters: |
   Parameters for the model MSSM11atQ (see ./gambit MSSM11atQ)

MSSM15atQ_parameters: |
   Parameters for the model MSSM15atQ (see ./gambit MSSM15atQ)

MSSM16atQ_parameters: |
   Parameters for the model MSSM16atQ (see ./gambit MSSM16atQ)

MSSM19atQ_parameters: |
   Parameters for the model MSSM19atQ (see ./gambit MSSM19atQ)

MSSM20atMSUSY_parameters: |
   Parameters for the model MSSM20atMSUSY (see ./gambit MSSM20atMSUSY)

MSSM20atMSUSY_mA_parameters: |
   Parameters for the model MSSM20atMSUSY_mA (see ./gambit MSSM20atMSUSY_mA)

MSSM20atMGUT_parameters: |
   Parameters for the model MSSM20atMGUT (see ./gambit MSSM20atMGUT)

MSSM20atMGUT_mA_parameters: |
   Parameters for the model MSSM20atMGUT_mA (see ./gambit MSSM20atMGUT_mA)

MSSM20atQ_parameters: |
   Parameters for the model MSSM20atQ (see ./gambit MSSM20atQ)

MSSM24atQ_parameters: |
   Parameters for the model MSSM24atQ (see ./gambit MSSM24atQ)

MSSM25atMSUSY_parameters: |
   Parameters for the model MSSM25atMSUSY (see ./gambit MSSM25atMSUSY)

MSSM25atMSUSY_mA_parameters: |
   Parameters for the model MSSM25atMSUSY_mA (see ./gambit MSSM25atMSUSY_mA)

MSSM25atMGUT_parameters: |
   Parameters for the model MSSM25atMGUT (see ./gambit MSSM25atMGUT)

MSSM25atMGUT_mA_parameters: |
   Parameters for the model MSSM25atMGUT_mA (see ./gambit MSSM25atMGUT_mA)

MSSM25atQ_parameters: |
   Parameters for the model MSSM25atQ (see ./gambit MSSM25atQ)

MSSM30atMSUSY_parameters: |
   Parameters for the model MSSM30atMSUSY (see ./gambit MSSM30atMSUSY)

MSSM30atMSUSY_mA_parameters: |
   Parameters for the model MSSM30atMSUSY_mA (see ./gambit MSSM30atMSUSY_mA)

MSSM30atMGUT_parameters: |
   Parameters for the model MSSM30atMGUT (see ./gambit MSSM30atMGUT)

MSSM30atMGUT_mA_parameters: |
   Parameters for the model MSSM30atMGUT_mA (see ./gambit MSSM30atMGUT_mA)

MSSM30atQ_parameters: |
   Parameters for the model MSSM30atQ (see ./gambit MSSM30atQ)

MSSM63atMGUT_parameters: |
   Parameters for the model MSSM63atMGUT (see ./gambit MSSM63atMGUT)

MSSM63atMSUSY_parameters: |
   Parameters for the model MSSM63atMSUSY (see ./gambit MSSM63atMSUSY)

MSSM63atQ_parameters: |
   Parameters for the model MSSM63atQ (see ./gambit MSSM63atQ)

MSSM63atMGUT_mA_parameters: |
   Parameters for the model MSSM63atMGUT_mA (see ./gambit MSSM63atMGUT_mA)

MSSM63atMSUSY_mA_parameters: |
   Parameters for the model MSSM63atMSUSY_mA (see ./gambit MSSM63atMSUSY_mA)

MSSM7atQ_parameters: |
   Parameters for the model MSSM7atQ (see ./gambit MSSM7atQ)

MSSM9atQ_parameters: |
   Parameters for the model MSSM9atQ (see ./gambit MSSM9atQ)

MSSM9batQ_parameters: |
   Parameters for the model MSSM9batQ (see ./gambit MSSM9batQ)

MSSM10atQ_mA_parameters: |
   Parameters for the model MSSM10atQ_mA (see ./gambit MSSM10atQ_mA)

MSSM10batQ_mA_parameters: |
   Parameters for the model MSSM10batQ_mA (see ./gambit MSSM10batQ_mA)

MSSM10catQ_mA_parameters: |
   Parameters for the model MSSM10catQ_mA (see ./gambit MSSM10catQ_mA)

MSSM11atQ_mA_parameters: |
   Parameters for the model MSSM11atQ_mA (see ./gambit MSSM11atQ_mA)

MSSM15atQ_mA_parameters: |
   Parameters for the model MSSM15atQ_mA (see ./gambit MSSM15atQ_mA)

MSSM16atQ_mA_parameters: |
   Parameters for the model MSSM16atQ_mA (see ./gambit MSSM16atQ_mA)

MSSM19atQ_mA_parameters: |
   Parameters for the model MSSM19atQ_mA (see ./gambit MSSM19atQ_mA)

MSSM20atQ_mA_parameters: |
   Parameters for the model MSSM20atQ_mA (see ./gambit MSSM20atQ_mA)

MSSM24atQ_mA_parameters: |
   Parameters for the model MSSM24atQ_mA (see ./gambit MSSM24atQ_mA)

MSSM25atQ_mA_parameters: |
   Parameters for the model MSSM25atQ_mA (see ./gambit MSSM25atQ_mA)

MSSM30atQ_mA_parameters: |
   Parameters for the model MSSM30atQ_mA (see ./gambit MSSM30atQ_mA)

MSSM63atQ_mA_parameters: |
   Parameters for the model MSSM63atQ_mA (see ./gambit MSSM63atQ_mA)

MSSM7atQ_mA_parameters: |
   Parameters for the model MSSM7atQ_mA (see ./gambit MSSM7atQ_mA)

MSSM9atQ_mA_parameters: |
   Parameters for the model MSSM9atQ_mA (see ./gambit MSSM9atQ_mA)

MSSM9batQ_mA_parameters: |
   Parameters for the model MSSM9batQ_mA (see ./gambit MSSM9batQ_mA)

NUHM1_parameters: |
   Parameters for the model NUHM1 (see ./gambit NUHM1)

NUHM2_parameters: |
   Parameters for the model NUHM2 (see ./gambit NUHM2)

CMSSM_parameters: |
   Parameters for the model CMSSM (see ./gambit CMSSM)

NormalDist_parameters: |
   Parameters for the model NormalDist (see ./gambit NormalDist)

ScalarSingletDM_Z3_parameters: |
   Parameters for the model ScalarSingletDM_Z3 (see ./gambit ScalarSingletDM_Z3)

ScalarSingletDM_Z3_running_parameters: |
   Parameters for the model ScalarSingletDM_Z3_running (see ./gambit ScalarSingletDM_Z3)

ScalarSingletDM_Z2_parameters: |
   Parameters for the model ScalarSingletDM_Z2 (see ./gambit ScalarSingletDM_Z2)

ScalarSingletDM_Z2_running_parameters: |
   Parameters for the model ScalarSingletDM_Z2_running (see ./gambit ScalarSingletDM_Z2_running)

VectorSingletDM_Z2_parameters: |
   Parameters for the model VectorSingletDM_Z2 (see ./gambit VectorSingletDM_Z2)

MajoranaSingletDM_Z2_parameters: |
   Parameters for the model MajoranaSingletDM_Z2 (see ./gambit MajoranaSingletDM_Z2)

MajoranaSingletDM_Z2_sps_parameters: |
   Parameters for the model MajoranaSingletDM_Z2_sps (see ./gambit MajoranaSingletDM_Z2_sps)

DiracSingletDM_Z2_parameters: |
   Parameters for the model DiracSingletDM_Z2 (see ./gambit DiracSingletDM_Z2)

DiracSingletDM_Z2_sps_parameters: |
   Parameters for the model DiracSingletDM_Z2_sps (see ./gambit DiracSingletDM_Z2_sps)

MDM_parameters: |
   Parameters for the mimimal dark matter (MDM) model (see ./gambit MDM)

StandardModel_Higgs_parameters: |
   Parameters for the model StandardModel_Higgs (see ./gambit StandardModel_Higgs)

StandardModel_Higgs_running_parameters: |
   Parameters for the model StandardModel_Higgs_running (see ./gambit StandardModel_Higgs_running)

StandardModel_SLHA2_parameters: |
   Parameters for the model StandardModel_SLHA2 (see ./gambit StandardModel_SLHA2)

TestModel1D_parameters: |
   Parameters for the model TestModel1D (see ./gambit TestModel1D)

WC_parameters: |
   Parameters for the model WC (see ./gambit WC)

mSUGRA_parameters: |
   Parameters for the model mSUGRA (see ./gambit mSUGRA)

nuclear_params_fnq_parameters: |
   Parameters for the model nuclear_params_fnq (see ./gambit nuclear_params_fnq)

nuclear_params_sigma0_sigmal_parameters: |
   Parameters for the model nuclear_params_sigma0_sigmal (see ./gambit nuclear_params_sigma0_sigmal)

nuclear_params_sigmas_sigmal_parameters: |
   Parameters for the model nuclear_params_sigmas_sigmal (see ./gambit nuclear_params_sigmas_sigmal)
#-------------------------------------
#  FeynHiggs capabilities
#-------------------------------------

FeynHiggs_2_11_2_init: |
   Initialisation of FeynHiggs.

FeynHiggs_2_11_3_init: |
   Initialisation of FeynHiggs.

FeynHiggs_2_12_0_init: |
   Initialisation of FeynHiggs.

FHConstraints: |
   FeynHiggs precision constraint observables.

FHCouplings: |

FHFlavour: |

FHGetPara: |

FHHiggsCorr: |

FHHiggsProd: |

FHSelectUZ: |

FHSetDebug: |

FHSetFlags: |

FHSetLFV: |

FHSetNMFV: |

FHSetPara: |

FHSetSMPara: |

FHUncertainties: |

FH_Couplings_output: |

FH_FlavourObs: |

#----------------------------
#  gamLike capabilities
#----------------------------

gamLike_1_0_0_init: |
   Initialisation of gamLike.

init: |
   Initialise variables in gamLike.
lnL: |
   Calculates the likelihood for gamma-ray indirect searches for dark matter.

set_data_path: |
   Set the data path for gamLike.

set_halo_profile: |
   Set the halo profile in gamLike.

#----------------------------
#  gm2calc capabilities
#----------------------------

gm2calc_1_2_0_init: |
   Initialises gm2calc, version 1.2.0.

gm2calc_1_3_0_init: |
   Initialised gm2calc, version 1.3.0.

calculate_amu_1loop: |
   Calculates the anomalous magnetic moment of the muon at 1 loop.

calculate_amu_1loop_non_tan_beta_resummed: |
   Calculates the anomalous magnetic moment of the muon at 1 loop with no resummation of tan beta.

calculate_amu_2loop: |
   Calculates the anomalous magnetic moment of the muon at 2 loops.

calculate_amu_2loop_non_tan_beta_resummed: |
   Calculates the anomalous magnetic moment of the muon at 2 loops with no resummation of tan beta.

calculate_uncertainty_amu_2loop: |
   Calculates the uncertainty on the anomalous magnetic moment of the muon at 2 loops.

#------------------------------
#  SUSYHD capabilities
#------------------------------

SUSYHD_1_0_2_init: |
   Initialises SUSYHD, version 1.0.2

SUSYHD_SetSMparameters: |
   Sets the SM parameters to be used in SUSYHD

SUSYHD_MHiggs: |
   Calculates the Higgs mass using SUSYHD

SUSYHD_DeltaMHiggs : |
   Calculates the uncertainty on the Higgs mass using SUSYHD
   
#----------------------------
#  plc
#----------------------------

plc_2_0_init: |
   initialize the planck likelihood from an cldf file.

clik_cleanup: |
   cleanup delete allocated pointers to a planck likelihood object.

clik_compute_loglike: |
   compute a log likelyhood value
   cl_and_pars is order this way
   first the powerspectra from l=0 to l=lmax[cli] (included) in the order
   TT EE BB TE TB EB. Only the one where lmax[cli]!=-1 have to be included
   then the extra parameters in the order given by clik_get_extra_parameters.
   The power spectra are in microK^2
   for example, for a likelihood acting on TT, EE and TE with 3 extra parameters
   will expect an array ordered this way
   C_0^TT ... C_lmax[0]^TT C_0^EE ... C_lmax[1]^EE C_0^TE ... C_lmax[3]^T3 extrapar1 extrapar2 extrapar3

clik_lensing_compute_loglike: |
   same as clik_compute_loglike but for the use with the lensing likelihood
   of Planck.

clik_get_extra_parameter_names: |
   retrieve the number of extra parameters and their names
   names is allocated by the function. It has to be cleaned after.

clik_get_list_cls: |
   retrieve the list of cls as a list of flags
   order is  TT EE BB TE TB EB
   for example for a likelihood acting on TT
   has_cl = 1 0 0 0 0 0

clik_get_lmax: |
   retrieve the lmax for each power spectrum
   -1 --> no cl
   order is TT EE BB TE TB EB
   for example for a likelihood acting ont TT EE TE with same lmax 2000
   lmax = 2000 2000 -1 2000 -1 -1 -1

clik_get_version: |
   get the version.

clik_initialize: |
   initialize the planck likelihood from an cldf file.

clik_lensing_initialize: |
   initialize the planck lensing likelihood.

clik_initialize_error: |
   initialize the error object.

data_cleanup: |
   free objects plik_dx11dr2_HM_v18_TT and
   lowl_SMW_70_dx11d_2014 by means of calling
   backend function clik_cleanup

set_planck_path: |
   Set the absolute path to the location of the
   Planck likelihoods.
   (Path to the 'plc_2.0'-folder)

data_initialize: |
   initalize objects plik_dx11dr2_HM_v18_TT and
   lowl_SMW_70_dx11d_2014 by means of calling
   backend function clik_init

initialize_high_TTTEEE: |
   Load the TT,TE,EE-likelihood for high-l.
   Will be executed by plc_2_0_init when this
   likelihood is wanted.

initialize_high_TT: |
   Load the TT-likelihood for high-l.
   Will be executed by plc_2_0_init when this
   likelihood is wanted.

initialize_high_TT_lite: |
   Load the marginalized (lite) TT-likelihood for high-l.
   Will be executed by plc_2_0_init when this
   likelihood is wanted.

initialize_high_TTTEEE_lite: |
   Load the marginalized (lite) TTTEEE-likelihood for high-l.
   Will be executed by plc_2_0_init when this
   likelihood is wanted.

initialize_lensing: |
   Load the lensing-likelihood.
   Will be executed by plc_2_0_init when this
   likelihood is wanted.

initialize_lowp_TT: |
   Load the TT-likelihood for low-l.
   Will be executed by plc_2_0_init when this
   likelihood is wanted.

lowl_SMW_70_dx11d_2014_10_03_v5c_Ap_parameters: |
   See model parameters in config/models.dat

plik_dx11dr2_HM_v18_TT_parameters: |
  See model parameters in config/models.dat

Planck_TTTEEE_parameters: |
  See model parameters in config/models.dat

Planck_TT_parameters: |
  See model parameters in config/models.dat

Planck_lite_parameters: |
  See model parameters in config/models.dat

return_lowp_TT: |
   return the likelihood result for low-l temperature
   and polarization Cl's

return_lensing: |
   return the likelihood result for lensing, temperature
   and polarization Cl's

return_high_TTTEEE: |
   return the likelihood result for high-l temperature
   and polarization Cl's (above l=30)

return_high_TT: |
   return the likelihood result for high-l temperature
   Cl's (above l=30)

return_high_TT_lite: |
   return the (marginalized) likelihood result for
   high-l temperature Cl's (above l=30)

return_high_TTTEEE_lite: |
   return the (marginalized) likelihood result for
   high-l temperature and polarization Cl's (above l=30)

#----------------------------
#  MultiModeCode
#----------------------------

multimodecode_gambit_driver: |
   multimodecode driver for gambit, takes in all
   input parameters as well as ode solver and other
   initialization parameters and solves the inflationary
   dynamics with multimodecode.

MultiModeCode_2_0_0_init: |
   initializer for multimodecode.

multimodecode_gambit_driver_test: |
   some test function with less parameters for input.
   will be deleted.

#----------------------------
#  Class
#----------------------------

class_2_6_1_init: |
   The main initialisation for Class structures (version 2.6.1).

class_2_6_3_init: |
   The main initialisation for Class structures (version 2.6.3).

class_background_free: |
   Free all memory space allocated by background_init.

class_background_initialize: |
   Initialize the background structure, and in particular the background interpolation table.

class_input_initialize: |
   Initialize each parameter, first to its default values,
   and then from what can be interpreted from the values passed
   in the input 'file_content' structure.

class_lensing_free: |
   This routine frees all the memory space allocated by lensing_init.

class_lensing_initialize: |
   This routine initializes the lensing structure (in particular,
   computes table of lensed anisotropy spectra).

class_nonlinear_free: |
   This routine frees all the memory space allocated by nonlinear_init.

class_nonlinear_initialize: |
   First deal with the case where non non-linear corrections requested.

class_output_initialize: |
   This routine writes the output in files.

class_output_total_cl_at_l: |
   This routines writes the output in files for anisotropy power spectra Cl.

class_parser_initialize: |
   Contains purely numerical algorithms.

class_perturb_free: |
   Free all memory space allocated by perturb_init.

class_perturb_initialize: |
   Initialize the perturbs structure, and in particular the table of source functions.

class_primordial_free: |
   This routine frees all the memory space allocated by primordial_init.

class_primordial_initialize: |
   This routine initializes the primordial structure
   (in particular, it computes table of primordial spectrum values)

class_spectra_free: |
   This routine frees all the memory space allocated by spectra_init.

class_spectra_initialize: |
   This routine initializes the spectra structure
   (in particular, computes table of anisotropy and Fourier spectra).

class_thermodynamics_free: |
   Free all memory space allocated by thermodynamics_init.

class_thermodynamics_initialize: |
   Initialize the thermo structure, and in particular the thermodynamics interpolation table.

class_transfer_free: |
   This routine frees all the memory space allocated by transfer_init.

class_transfer_initialize: |
   This routine initializes the transfers structure,
   (in particular, computes table of transfer functions).

class_get_spectra: |
   Returns a pointer to the CMB-spectra C_xx[l], where
   xx = [TT, TE, EE, phiphi, ...].

class_run_internal: |
   This routine runs CLASS (invokes all xxx_init() in the right order.

class_set_parameter_internal: |
   This routine initializes the input of CLASS.

class_free_internal: |
   This routine runs through all xxx_free() of all successfully computated levels of the previuos run of Class.

get_ptr_to_class: |
   Returns a pointer to the Backend internal instance of CosmoBit::Class_container

#----------------------------
#  DarkAges
#----------------------------

DarkAges_1_0_0_init: |
   Convenience function to initialize the instance of the DarkAges package.
   Retrieve all input dependencies (DM-mass, injection spectra, ...) and
   perform the convolution wit the transfer functions to get f(z).

DA_efficiency_function: |
   Convenience function to map the f(z)-table from python to c++ vectors.

DA_initialize: |
   BE function loading all the DarkAges python module and setting
   the redshift array to its glaobal default.

DA_calc_f: |
   BE function performing the convolution to get f(z).

DA_get_result: |
   BE function returning an array containing f(z) for a given channel.

DA_reset: |
   BE function to release the 'alreadyCalculated'-flag of the module.

#----------------------------
#  PyArrayTest
#----------------------------

PyArrayTest_1_0_init: |
   Initializes the PyArrayTest-backend. (v1.0)

PyArrayTest_Py_to_cpp: |
   (Convenience function) Example of how to map a python array (list) onto std::vector.

PyArrayTest_cpp_to_Py: |
   (Convenience function) Example of how to map std::vector onto a python array (list).

PyArrayTest_initialize: |
   (BE function) Prepares global variables of the backend.

PyArrayTest_multiply: |
   (BE function) Multiplies the backend internal array with 'someFactor'

readPythonArray: |
   (BE function) Reads an array or list and returns the sum of its components

returnPythonArray: |
   (BE function) Returns the backend internal array to be used in GAMBIT.

SomeFactor: |
   (BE variable) Number which will multiplied to the backend internal array.

arrayLen: |
   (BE variable) Length of the backend internal array.

#----------------------------
#  CosmoBit
#----------------------------

TestDecayingDM_parameters: |
   mass, mass of the dark matter candidate [in GeV]
   lifetime, lifetime of said DM candidate [in s]
   fraction, fraction of how much the decaying DM component contributes to all DM.
   BR, the fraction of how much energy will be contributed in e+/e-. (1-BR will be asinged to photons)

LCDM_parameters: |
   omega_b, baryon density parameter.
   omega_cdm, dark matter density parameter.
   H0, Hubble constant.
   ln10A_s, primordial curvature fluctuation amplitude.
   n_s, parametrises the primordial scale dependence.
   tau_reio, reionization optical depth.

LCDMtensor_parameters: |
   in addition to the above, r_tensor, amplitute of
   tensor power spectrum over scalar power spectrum.

inf_SR1quad_LCDMt_parameters: |
   omega_b, baryon density parameter.
   omega_cdm, dark matter density parameter.
   H0, Hubble constant.
   tau_reio, reionization optical depth.
   N_pivot, number of efolds before the end of inflation.
   mass, inflaton mass.

inf_1quarInf_LCDMt_parameters: |
    6 parameter cosmology+inflation model: 0.25 lambda phi^4
    quartic inflation A_s, n_s and r are given by inflationary
    model parameters: N_piv, lambda.

inf_1mono32Inf_LCDMt_parameters: |
    6 parameter cosmology+inflation model: 2/3
    lambda phi^2/3 --- inflation, A_s, n_s and r are
    given by inflationary model parameters: N_piv, lambda.

inf_1linearInf_LCDMt_parameters: |
    6 parameter cosmology+inflation model: m phi
    linear inflation, A_s, n_s and r are given by
    inflationary model parameters: N_piv, m^2.

inf_smashInf_LCDMt_parameters: |
    8 parameter cosmology smash inflation model --- smash inflation
    A_s, n_s and r are given by inflationary model parameters: xi, m^2.

inf_1hilltopInf_LCDMt_parameters: |
    7 parameter cosmology and inflation model with hilltop inflation.

inf_1naturalInf_LCDMt_parameters: |
    7 parameter cosmology and inflation model with axion motivated natural inflation.

class_set_parameter: |
   Gathers all input parameters to  run Class.

compute_Planck_lowp_TT_loglike: |
   function computes the planck log-likelihood for a  given
   set of  Cl's for low values of l (below 30).

compute_Planck_high_TT_loglike: |
   function computes the planck log-likelihood for a  given
   set of  Cl's for high values of l (above 30).

compute_Planck_lensing_loglike: |
   function computes the planck lensing- log-likelihood for
   a  given set of  Cl's.

lnL_A_planck : |
   "prior"-likelihood for A_planck. Applies the Gauss bell on
    A_planck if a flat prior is chosen. Should have the same
    effect than using a gaussian prior on it in the first place.

f_effective: |
    returns f(z) at  z~600 summed over all channels.

DM_mass: |
    Dark matter mass (in GeV).

    --> DUMMY for the use with TestDecayingDM <--

DM_fraction: |
    fraction of the abundance of the dark matter candidate in question
    (mostly a decaying component) contributing to the total DM abundance.

    --> DUMMY for the use with TestDecayingDM <--

lifetime: |
    lifetime of the decaying dark matter component (in s).

    --> DUMMY for the use with TestDecayingDM <--

injection_spectrum: |
    Spectrum of electrons/positrons and photons injected by
    the decay of a DM particle with certain mass.
    An dirac-like injection (at an energy of m/2) is assumed.
    The relative contribution of the electron and photon channel is
    given by the branching ratio (BR).

    --> DUMMY for the use with TestDecayingDM <--

PyTest_cap_1: |
    First test of the mapping of std::vector onto python lists
    and vice versa.
    Recieves an std::vector from the PyArrayTest and computes
    the sum of its entries.

PyTest_cap_2: |
    As 'PyTest_cap_2', but the sum will be performed by the
    PyArrayTest backend and the result is taken.

#-------------------------------------
#  Capgen capabilities
#-------------------------------------

CaptnGeneral_1_0_init: |
  Initialize Captn' general backend.

captn_init: |
  Actually initialize Captn' general.

cap_sun_saturation: |
  Compute the saturation value of dark matter capture in the Sun based on halo params.

cap_Sun_vnqn_isoscalar: |
  Compute v^n or q^n solar capture rate.
