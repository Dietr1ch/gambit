##########################################################################
## GAMBIT configuration file to validate the analysis
## ATLAS_13TeV_2OSLEP_Z_139invfb
##########################################################################


Parameters:

# Dummy parameters that will be ignored by Pythia File Reader
  MSSM11atQ_mA:
    Ad_3: 0
    Ae_3: 0
    Au_3: 0
    M1: 0.223728
    M2: 7.0931
    M3: 5000
    Qin: 3000
    TanBeta: 38.2681
    mA: 5000
    ml2: 9e+06
    mq2: 9e+06
    mu: 748.21
  StandardModel_SLHA2:
    CKM_A: 0.814
    CKM_etabar: 0.353
    CKM_lambda: 0.22537
    CKM_rhobar: 0.117
    GF: 1.16638e-05
    alpha1: 0
    alpha2: 0
    alphaS: 0.117328
    alphainv: 127.94
    delta13: 0
    mBmB: 4.18
    mCmC: 1.275
    mD: 0.0048
    mE: 0.000510999
    mMu: 0.105658
    mNu1: 0
    mNu2: 0
    mNu3: 0
    mS: 0.095
    mT: 173.791
    mTau: 1.77682
    mU: 0.0023
    mZ: 91.1876
    theta12: 0.58376
    theta13: 0.15495
    theta23: 0.76958

Priors:

  # All priors simple, so specified in Parameters section


Printer:

  # These lines tell GAMBIT to use the hdf5 printer
  # Can switch to the ascii printer by commenting out and
  # using the ascii lines below

  # printer: cout

#  printer: hdf5
#  options:
#    output_file: "MSSMEW.hdf5"
#    group: "/MSSMEW"
#    delete_file_on_restart: false

   printer: ascii
   options:
    output_file: "gambit_output.txt"


Scanner:

  use_scanner: random

  scanners:

    multinest:
      plugin: multinest
      like:  LogLike
      nlive: 1000
      tol: 0.5

    random:
      plugin: random
      point_number: 1
      output_file:  output
      like:  Likelihood
      files:
        output_file: "weights ..."

    de:
      plugin: diver
      like: LogLike
      NP: 19200
      convthresh: 1e-5
      verbosity: 1
      lambdajDE: false


ObsLikes:

    # Likelihoods for SM nuisance parameters
    - purpose:    LogLike
      capability: lnL_t_mass

    - purpose:    LogLike
      capability: lnL_alpha_s

    # Combined LHC likelihood
    - purpose:    LogLike
      capability: LHC_Combined_LogLike

    # LEP likelihoods
    - purpose:    LogLike
      capability: L3_Neutralino_Leptonic_LLike

    - purpose:    LogLike
      capability: L3_Chargino_Leptonic_LLike

    - purpose:    LogLike
      capability: OPAL_Chargino_Hadronic_LLike

    - purpose:    LogLike
      capability: OPAL_Chargino_SemiLeptonic_LLike

    - purpose:    LogLike
      capability: OPAL_Chargino_Leptonic_LLike

    - purpose:    LogLike
      capability: OPAL_Neutralino_Hadronic_LLike

    - purpose:    LogLike
      capability: OPAL_Degenerate_Chargino_LLike

    # Likelihoods for invisible decays of Z and Higgs bosons
    - purpose: LogLike
      capability: lnL_Z_inv

    - purpose: LogLike
      capability: lnL_Higgs_invWidth

    # Observables (not included in likelihood)
    - purpose:    likelihood_details
      capability: LHC_LogLike_per_analysis

    - purpose:    Observable
      capability: LHC_signals

    - purpose:    Observable
      capability: LHCEventLoopInfo

    # - purpose:    Observable
    #   capability: mw

    # - purpose:    Observable
    #   capability: deltarho

    # - purpose:    Observable
    #   capability: prec_sinW2_eff

    - purpose:    Observable
      capability: SLHA1_violation

    - purpose:    Observable
      capability: MSSM_spectrum
      type:       map_str_dbl

    # Observables for invisible decays of Z and Higgs bosons
    - purpose: Observable
      capability: Z_gamma_nu
    
    - purpose: Observable
      capability: Z_gamma_chi_0
    
    - purpose: Observable
      capability: inv_Higgs_BF
    
Rules:

  # Set any pole masses by hand?
  # NOTE: This will break the internal spectrum consistency -- use at your own risk!
  - options:
      override_FS_pole_masses:
        h0_1: 125.09

  # Choose to get decays from DecayBit proper, not from an SLHA file.
  - capability: decay_rates
    function: all_decays
    options:
      allow_stable_charged_particles: false
      drop_SLHA_file: true

  # Choose to get the spectrum from SpecBit proper, not an SLHA file.
  # Options set to match benchmark point specified in SpecBit/MSSM_benchmark_points/LesHouches.in.MSSM_1
  - capability: unimproved_MSSM_spectrum
    function: get_MSSMatQ_mA_spectrum_FS
    options:
      precision_goal:        1.0e-4
      max_iterations:        0
      calculate_sm_masses:   false
      pole_mass_loop_order:  2
      ewsb_loop_order:       2
      beta_loop_order:       2
      threshold_corrections_loop_order: 2
      use_higgs_2loop_at_as: true
      use_higgs_2loop_ab_as: true
      use_higgs_2loop_at_at: true
      use_higgs_2loop_atau_atau: true
      invalid_point_fatal: false
      # Only consider chargino masses > 45 GeV as masses lighter than this are excluded by 
      # LEP measurements of the Z width.
      drop_SLHA_file: true


  # This simply relables the "unimproved_MSSM_spectrum" to "MSSM_spectrum",
  # so that things depending on "MSSM_spectrum" will be happy.
  - capability: MSSM_spectrum 
    type: Spectrum
    function: make_MSSM_precision_spectrum_none

  # These options set various tolerances in the spectrum generation
  - options:
      gauge_mixing_tolerance: 0.5
      family_mixing_tolerance: 0.5
      #gauge_mixing_tolerance_invalidates_point_only: false
      #family_mixing_tolerance_invalidates_point_only: false

  # Choose to use functions that get Higgs decays from SUSY-HIT, and t decays from DecayBit native implementation (instead of FeynHiggs)
  - capability: Reference_SM_Higgs_decay_rates
    function: Ref_SM_Higgs_decays_table
  - capability: Reference_SM_other_Higgs_decay_rates
    function: Ref_SM_other_Higgs_decays_table
  - capability: Reference_SM_A0_decay_rates
    function: Ref_SM_A0_decays_table
  - capability: Higgs_decay_rates
    function: MSSM_h0_1_decays
  - capability: h0_2_decay_rates
    function: h0_2_decays
  - capability: A0_decay_rates
    function: A0_decays
  - capability: H_plus_decay_rates
    function: H_plus_decays
  - capability: t_decay_rates
    function: t_decays

  # Choose where to get the Higgs couplings from
  - capability: Higgs_Couplings
    function: MSSM_higgs_couplings_pwid

  # Choose to estimate cross-sections from Monte Carlo
  - capability: CrossSection
    function: getMCxsec
    module: ColliderBit

  # Choose colliders to simulate and their convergence settings, and pick analyses to run with each collider.
  - capability: RunMC
    function: operateLHCLoop
    options:
      silenceLoop: false
      LHC_13TeV:
        min_nEvents: 125715
        max_nEvents: 125715
        events_between_convergence_checks: 5000
        target_fractional_uncert: 0.3
        halt_when_systematic_dominated: true
        all_analyses_must_converge: false
        all_SR_must_converge: false
        maxFailedEvents: 10
        analyses:
          - CMS_13TeV_2LEPsoft_36invfb

  # Choose Monte Carlo event simulator and options.
  - capability:  HardScatteringSim
    type: Py8Collider_defaultversion
    function: getPythia
    options:
      SLHA_filenames: ["./ColliderBit/data/Cutflows/CMS_13TeV_2LEPsoft_36invfb/SRST_2.slha"]
      LHC_13TeV:
        # 0.028 fb corresponds to ~1 expected event at L = 36 fb^-1.
        xsec_veto: 0.028
        partonOnly: false
        antiktR: 0.4
        pythia_settings:
          - Print:quiet = on
          - PartonLevel:MPI = off
          - PartonLevel:ISR = on
          - PartonLevel:FSR = on
          - HadronLevel:all = on
          - Beams:eCM = 13000
          - SUSY:all = on
          - SUSY:idA = 1000006
          - SUSY:idB = 1000006
          - TauDecays:mode = 0
          - TimeShower:pTmin = 20
          - Next:numberCount = 1000

  # Choose LHC likelihood form and options.
  - capability: LHC_LogLikes
    backends:
    - {capability: lnlike_marg_poisson_lognormal_error}
    options:
      covariance_marg_convthres_abs: 0.05
      covariance_marg_convthres_rel: 0.05
      covariance_nsamples_start: 100000

  # Generate the event with Pythia
  - capability: ATLASSmearedEvent
    function: smearEventATLAS
    dependencies:
      - capability: HardScatteringEvent
        function: generateEventPythia 
        module: ColliderBit

   # Generate the event with Pythia
  - capability: CMSSmearedEvent
    function: smearEventCMS
    dependencies:
      - capability: HardScatteringEvent
        function: generateEventPythia
        module: ColliderBit

  - capability: CopiedEvent
    function: copyEvent
    dependencies:
      - capability: HardScatteringEvent
        function: generateEventPythia
        module: ColliderBit

  # Invisible Higgs branching ratio from CMS-PAS-HIG-17-023 with 10% theory error
  # Path relative to GAMBIT build
  - capability: lnL_Higgs_invWidth
    function: lnL_Higgs_invWidth_SMlike
    options:
      BR_h_inv_chi2_data_file: ./DecayBit/data/CMS-PAS-HIG-17-023_Figure_7-b_10_profiled.dat

# Set the names of key log files
Logger:

  redirection:
    [Debug] : "debug.log"
    [Default] : "default.log"
    [DecayBit] : "DecayBit.log"
    [DarkBit] : "DarkBit.log"
    [PrecisionBit] : "PrecisionBit.log"
    [FlavBit] : "FlavBit.log"
    [ColliderBit] : "ColliderBit.log"
    [SpecBit] : "SpecBit.log"
    [Dependency Resolver] : "dep_resolver.log"

KeyValues:

  debug: false

  dependency_resolution:
    prefer_model_specific_functions: true

  # Choose a lower cutoff for the likelihood
  likelihood:
    model_invalid_for_lnlike_below: -5e5
    model_invalid_for_lnlike_below_alt: -1e5

  # Set the default output path
  default_output_path: "runs/MSSMEW/"

  # We set the errors from the physics modules to be non-fatal
  # to avoid crashing the entire scan due to a rare problem point.
  # This means we should pay close attention to the log files...
  exceptions:
    ColliderBit_error: fatal
    DarkBit_error: fatal
    DecayBit_error: fatal
    FlavBit_error: fatal
    PrecisionBit_error: fatal
    SpecBit_error: fatal
