#! /usr/bin/env python

import optparse
op = optparse.OptionParser()
op.add_option("-n", dest="ORDER", type=int, help="order of polynomial fit", default=3)
opts, args = op.parse_args()

xs, ys = [], []
with open(args[0], "r") as f:
    for l in f:
        x, y = (float(s) for s in l.strip().split())
        xs.append(x)
        ys.append(y)


import numpy as np
xs = np.array(xs)
ys = np.array(ys)
logys = np.log(ys)

z = np.polyfit(xs, logys, opts.ORDER)
f = np.poly1d(z)
print f
#print f(1010), np.exp(f(1010))

xs_new = np.linspace(200, 1500, 1000)
logys_new = f(xs_new)
ys_new = np.exp(logys_new)

import matplotlib.pyplot as plt
plt.hold(True)
plt.yscale("log")
plt.plot(xs, ys, "bo")
plt.plot(xs_new, ys_new, "r-")
plt.show()

#import scipy as sp
# curve_fit and pyeq2
