##########################################################################
## GAMBIT configuration for an ultra-minimal MultiNest scan of a toy model.
##
## Only needs ExampleBit_A and a scanner (either one of the built-ins like
## the random sampler or TWalk, or an external like Diver, MultiNest,
## GreAT or Polychord).
##########################################################################


Parameters:
  symmetron:
    mass:
      range: [-7, -3] #GeV
    mu:
      range: [-37, -32] # GeV
    vval:
      range: [-18, 0] # GeV
    phi_init:
      range: [2, 3] # unitless


Priors:

  # None needed: flat priors are automatically generated for NormalDist::mu and NormalDist::sigma
  # If you wanted to use a Gaussian prior on these parameters instead, you would comment
  # out their ranges above, and do e.g.
  #prior1:
  #  parameters: ["NormalDist::mu", "NormalDist::sigma"]
  #  prior_type: gaussian
  # mu: [18, 5]
  #  sigma: [3.0, 1]

Printer:

  #printer: sqlite
  #options:
  #  output_file: "results.sql"
  #  table_name: "spartan"
  #  buffer_length: 1000
  #  delete_file_on_restart: true

  printer: hdf5
  options:
    output_file: "solarsystemtest.hdf5"
    group: "/symmetron"
    delete_file_on_restart: true
    buffer_length: 1000
    disable_autorepair: true

  # printer: ascii
  # options:
  #  output_file: "results.txt"
  #  buffer_length: 10
  #  delete_file_on_restart: true

  #printer: cout

  #printer: none

Scanner:

  use_scanner: random

  scanners:

    random:
      plugin: random
      like: LogLike
      point_number: 1000

    de:
      plugin: diver
      like: LogLike
      NP: 1000

    multinest:
      plugin: multinest
      like:  LogLike
      nlive: 5000
      #tol: 0.0001
      tol: 0.001

    mcmc:
      plugin: great
      like: LogLike
      nTrialLists: 5
      nTrials: 10000

    twalk:
      plugin: twalk
      like: LogLike
      sqrtR: 1.001

    polychord:
      plugin: polychord
      like:  LogLike
      print_parameters_in_native_output: true
      tol: 0.1


ObsLikes:

  - purpose:      LogLike
    capability:   gamma_loglike
    module:       CosmoBit
    type:         double

  - purpose:      LogLike
    capability:   vmin_loglike
    module:       CosmoBit
    type:         double

  - purpose:      LogLike
    capability:   eta_loglike
    module:       CosmoBit
    type:         double

Rules:

  # None required, since no module dependencies to be resolved.
  - capability: gamma_loglike
    options:
        probability_of_validity: 1.0

  - capability: gamma_loglike
    options:
        gammaminus1_tol: 1e-9

  - capability: vmin_loglike
    options:
        gravstrength: 1.0


Logger:

  redirection:
    [Default]      : "default.log"
    [CosmoBit] : "CosmoBit.log" # or stdout
    [Scanner]      : "Scanner.log"
  debug: false

KeyValues:

  default_output_path: "${PWD}/runs/symmetron"

  rng:
    generator: ranlux48
    seed: -1

  print_timing_data: true

  print_unitcube: true

  likelihood:
    model_invalid_for_lnlike_below: -1e6
