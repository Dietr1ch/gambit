# Ultra-minimal GAMBIT Initialization file (in YAML)
# Only needs example modules ExampleBit_A and ExampleBit_B,
# plus example backends libfirst and libFortran.
#
# To use this you'll need to
# make
# make libfirst
# make libfortran
#
# Don't commit modified versions of this file!
# If you want to change it in order to test
# your own modifications to the code, copy
# it to spartan_personal.yaml, which will be
# ignored by git.
#
# Pat Scott <p.scott@imperial.ac.uk>
# Oct 2014
#

###################################
# Input parameter declarations
###################################

Parameters:


##############################
# Prior setup
##############################

Priors:

  # Here specify the priors, the parameters they work with, and any options as needed for that prior
  # A prior object is built for every entry here (along with any coming from 'ranges' keywords above),
  # and then they are combined into a "composite" prior

##############################
# Printer setup
##############################

Printer:

  # Select printer to use via string tag
  # (currently only ascii printer available)
  #printer: ascii
  printer: hdf5

  # This options node is passed on wholesale to
  # the printer object; required options may
  # therefore vary according to the selected
  # printer.
  options:
    # name of output file
    #output_file: "runs/spartan/samples/gambit_output2.txt"
    # name of info file (explains content of output file)
    #info_file: "runs/spartan/samples/gambit_output2.info"

    output_file: "gambit_output.hdf5"
    group: "/test/test2"
    delete_file_on_restart: true

##############################
# Scanner setup
##############################

Scanner:

  use_objectives: EggBox
  #use_scanner: gal_0, gal_1, gal_2, gal_3, gal_4, gal_5, gal_6, gal_m
  use_scanner: multinest
  #find_shift
  #find_kernel
  #object_detection
  #use_scanner: gal_1
  #find_kernel
  #gnest, bin_grid_greg

  scanners:

    mcmc:
      plugin: GreAT
      nTrialLists: 5
      nTrials: 40000
      like: LogLike

    twalk:
      plugin: twalk
      like: LogLike
      tolerance: 1.003
      kwalk_ratio: 0.9
      #chain_number: 20
      projection_dimension: 4

    tnest:
      plugin: tnest
      options:
        tolerance: 0.1
        mh_iter: 100
        min_iter: 10
        live_points: 2000
        sampler: 1

    de:
      plugin: Diver
      like: LogLike
      NP: 1000
      path: "runs"
      verbosity: 1
      aux_printer_txt_options:

    random:
      plugin: random
      point_number: 1000008
      like: LogLike

    toy:
      like: LogLike
      plugin: toy_mcmc
      point_number: 2000
      #plugin_path: /home/gmartine/libsample.so

    square_grid:
      plugin: square_grid
      version: ">=1.0"
      like: LogLike
      grid_pts: 3 #NxN grid

    grid:
      plugin: grid
      version: ">=1.0"
      like: LogLike
      grid_pts: [5, 5]

    multinest:
      plugin: MultiNest
      like: LogLike
      nlive: 2000
      tol: 0.1

    gnest:
      plugin: gnest
      file_name: "output_file"
      like: LogLike
      live_number: 2000

    raster:
      plugin: raster
      like: LogLike
      parameters:
        "EggBox::param_0": 3.14
        #"EggBox::param_1": [.2, .3]

    bin_grid:
      plugin: bin_grid
      input_files: ["runs/spartan_multinest/samples/gambit_output.txt"]
      output_file: "output"
      xrange: [0, 1]
      yrange: [0, 1]
      grid: [100, 100]
      selected_pts: [2, 3]
      mult: 5
      like: LogLike
      flags: ["linear"]

    bin_grid_greg:
      plugin: bin_grid
      input_files: ["output_file"]
      output_file: "output"
      xrange: [0.0, 1.0]
      yrange: [0.0, 1.0]
      grid: [100, 100]
      selected_pts: [0, 1]
      like: LogLike
      mult: 0
      flags: ["linear"]

##########################################

    hdf5:
      plugin: bin_grid
      use_hdf5: true
      input_files: ["runs/scan/samples/gambit_output.hdf5"]
      groups: ["/test/test2"]
      output_file: "output_hdf5"
      #xrange: [2.0, 6.0]
      #xrange: [0, 1]
      #yrange: [0, 1]
      xrange: [-5, 5]
      yrange: [-5, 5]
      grid: [50, 50]
      #selected_pts:
      #  - "EggBox::param_0"
      #  - "EggBox::param_1"
      selected_pts:
        - "gaussian::param_0"
        - "gaussian::param_1"
      mult: ["mult"]
      #loglike: 1
      flags: ["linear"]
      #flags: ["linear", "noadjx", "logx"]

  objectives:

    object_detection:
      plugin: object_detection
      purpose: LogLike
      psf_file: "/home/gmartine/fits/c0052_psf_grid.fits"
      image_file: "/home/gmartine/fits/c0052.fits"
      grid_file: "/home/gmartine/fits/grid.fits"
      min_pixel_number: -1
      parameters:
        pos_x:
          range: [200, 800]
        pos_y:
          range: [200, 800]
        #intensity:
        #  range: [0, 10000]

    uniform:
      purpose: LogLike
      plugin: uniform
      #version: ">=1.0 & <2.0"
      parameters:
        param...2:
          range: [0, 4]

    uniform_prior:
      plugin: flat_prior
      purpose: LogLike
      options:
        range: [2, 1]
      parameters:
        param...2:
          range: [1, 2]

    EggBox:
      plugin: EggBox
      purpose: LogLike
      parameters:
        param_0:
          #prior_type: none
          #plugin: flat
          range: [0, 1]
        param_1:
          range: [0, 1]

    flat:
      plugin: flat_prior
      range: [0, 1]

    gaussian:
      plugin: gaussian
      purpose: LogLike
      #options:
      #  cov: [[0.01, 0.0], [0.0, 0.01]]
      #  mean: [1.5, 1.5]
      parameters:
        ##same:
        ##  same_as: "gaussian::param_0"
        ##  scale: -2
        ##  shift: -1
        param...20:
          range: [-5, 5]
        #params...2:
        #  fixed_value: [-1, 1]
    test:
      plugin: test_plug
      #plugin_path: /home/gmartine/test.so

  #parameters:
    #uniform:
      #param...2:
        #range: [1, 2]

  #priors:
    #flat_prior:
      #parameters: [uniform::param...2]
      #prior_type: plugin
      #options:
        #plugin: uniform_prior
    #m12_prior:
      #parameters: [uniform::param...2]
      #prior_type: composite
      #options:
        #new_prior:
          #parameters: [uniform::param_0]
          #prior_type: flat
          #range: [10,20]
        #newnewprior:
          #parameters: [uniform::param_1]
          #prior_type: flat
          #range: [10,20]

###############################
# Observables of interest
###############################

ObsLikes:


  ## Test CMSSM_I, ExampleBit_A and ExampleBit_B
  #- purpose:      LogLike
    #capability:   lnL_ExampleBitB
    #type:         double
    #function:     ""
    #module:       ""

  ## Test array and -> operators in safety buckets.
  #- purpose:      Observable
    #capability:   ptrmeth_arr_tester

  ## Test loop manager
  #- purpose:      LogLike
    #capability:   nevents_like
    #type:         double

  ## Test vector output of printer
  #- purpose:      Observable
    #capability:   test_vector
    #type:         std::vector<double>


#########################
# Rule entries
#########################

Rules:

  - capability:   "LibFirst_1_1_init"
    dependencies:
    - {capability: "nevents", module: "ExampleBit_A"}

  - capability:    "nevents_postcuts"
    dependencies:
    - {capability: "id", module: "ExampleBit_B"}

  - capability:    "MSSM_parameters"
    dependencies:
    - {capability: "id", module: "ExampleBit_B"}

  - capability:    "xsection"
    options:
      scale: 15.5

  - capability:    "function_pointer"
    backends:
    - {function: "externalFunction2"}


#########################
# Logging setup
#########################

Logger:

  # Redirection of specific messages according to tags
  # Can redirect to stdout or stderr by specifying these as the "filenames".
  # Obviously this also means it is impossible to redirect output to actual
  # files with these names.

  redirection:
    [Debug] : "debug.log"
    [Default] : "default.log"
    [Error] : "errors.log"
    [Warning] : "warnings.log"

###############################
## Printer (output) setup
###############################

# Ben: Here we will choose which printer(s?) we want to use. For now
# it is hardcoded: I'll come back to this.


##########################
# Name/Value Section
##########################

KeyValues:

  dependency_resolution:
    prefer_model_specific_functions: true

  likelihood:
    model_invalid_for_lnlike_below: -1e6

  default_output_path: "runs/ScannerBit"
