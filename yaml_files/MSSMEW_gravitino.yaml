#
# GAMBIT configuration file for scans of the EWMSSM + gravitino model
#

# To use FlexibleSUSY for the spectrum generation, build GAMBIT with 
# the cmake flag -DBUILD_FS_MODELS="MSSM_mAmu"


Parameters:

  # SM nuisance parameters fixed for now.
  StandardModel_SLHA2: !import ./include/StandardModel_SLHA2_defaults.yaml

  MSSM11atQ_mA_lightgravitino:
    Ad_3:
      fixed_value: 0
    Ae_3:
      fixed_value: 0
    Au_3:
      fixed_value: 0
    M1:
      # fixed_value: 900
      prior_type: flat
      range: [-1e3, 1e3]
      # prior_type: double_log_flat_join
      # ranges: [-1e3, -1e1, 1e1, 1e3]
    M2:
      # fixed_value: 90
      prior_type: flat
      range: [0, 1e3]
      # prior_type: double_log_flat_join
      # ranges: [0, 0, 1e1, 1e3]
    M3:
      fixed_value: 5000
    Qin:
      fixed_value: 3000  # 3000 = sqrt(mQL3*mUR3) = mSUSY, since we have mQL3 = mUR3 = mq2 = (3000)^2
    TanBeta:
      # fixed_value: 10
      prior_type: log
      range: [1.0, 70.0]
    ml2:
      fixed_value: 9000000
    mq2:
      fixed_value: 9000000
    mu:
      # fixed_value: 500
      prior_type: flat
      range: [-1e3, 1e3]
      # prior_type: double_log_flat_join
      # ranges: [-1e3, -1e1, 1e1, 1e3]
    mA:
      fixed_value: 5000
    mG:
      fixed_value: 1.0e-9


Priors:

  # All priors simple, so specified in Parameters section


Printer:

  # printer: cout

  printer: hdf5
  options:
    output_file: "MSSMEW_gravitino.hdf5"
    group: "/MSSMEW_gravitino"
    buffer_length: 11 # 2
    # disable_combine_routines: true
    # delete_file_on_restart: true


Scanner:

  use_scanner: de

  scanners:

    random:
      plugin: random
      point_number: 1
      output_file:  output
      like:  LogLike
      files:
        output_file: "weights ..."

    de:
      plugin: diver
      like: LogLike
      NP: 2000
      convthresh: 1e-4
      init_population_strategy: 1
      max_initialisation_attempts: 5000
      verbosity: 1
      lambdajDE: false


ObsLikes:

    #
    # Likelihoods
    #

    # Combined LHC likelihood
    - purpose:    LogLike
      capability: LHC_Combined_LogLike

    # LEP likelihoods
    - purpose:    LogLike
      capability: L3_Gravitino_LLike

    # ====================== 
    # Need new versions of these functions that use
    # the gravitino rather than neutralino1 as LSP:

    # - purpose:    LogLike
    #   capability: L3_Chargino_Leptonic_LLike

    # - purpose:    LogLike
    #   capability: OPAL_Chargino_Hadronic_LLike

    # - purpose:    LogLike
    #   capability: OPAL_Chargino_SemiLeptonic_LLike

    # - purpose:    LogLike
    #   capability: OPAL_Chargino_Leptonic_LLike
    # ====================== 


    #
    # Observables
    #

    - purpose:    Observable
      capability: all_BFs

    - purpose:    Observable 
      capability: TotalCrossSectionAsMap

    - purpose:    Observable
      capability: LHC_signals

    - purpose:    Observable
      capability: LHC_LogLike_per_SR

    - purpose:    Observable
      capability: LHC_LogLike_per_SR_scaledsignals

    - purpose:    Observable
      capability: LHC_LogLike_SR_indices

    - purpose:    Observable
      capability: LHCEventLoopInfo

    # Other
    - purpose:    Observable
      capability: SLHA1_violation

    - purpose:    Observable
      capability: MSSM_spectrum
      type:       map_str_dbl


    
Rules:

  # Generate SLHA files (for debugging)?
  - options:
      drop_SLHA_file: true

  # Some spectrum settings
  - options:
      # Set any pole masses by hand?
      # NOTE: This will break the internal spectrum consistency -- use at your own risk!
      override_FS_pole_masses:
        h0_1: 125.09
      # Explicitly require the gravitino to be LSP (it always is in this scan, since we fix the mass ~0)
      only_gravitino_LSP: true


  # Choose to get decays from DecayBit proper, not from an SLHA file.
  - capability: decay_rates
    function: all_decays

  # Require a small, additional mass difference before switching on new decay decay modes in the 
  # limit of small chargino--neutralino mass difference. Can help avoid problems with chargino
  # decays in Pythia (due to Pythia's MSAFETY check).
  - capability: chargino_plus_1_decay_rates_smallsplit
    function: chargino_plus_1_decays_smallsplit
    options:
      m_safety: 0.0011  

  # Print branching ratios for all the EWinos to the output file
  - capability: all_BFs
    function: get_decaytable_as_map
    options:
      # printall: true 
      BFs: [
              ["~chi0_1",  "gamma", "~G"],
              ["~chi0_1",  "Z0", "~G"],
              ["~chi0_1",  "h0_1", "~G"],
              ["~chi0_1",  "W+", "~chi-_1"],
              ["~chi0_2",  "gamma", "~G"],
              ["~chi0_2",  "Z0", "~G"],
              ["~chi0_2",  "Z0", "~chi0_1"],
              ["~chi0_2",  "h0_1", "~G"],
              ["~chi0_2",  "h0_1", "~chi0_1"],
              ["~chi0_2",  "W+", "~chi-_1"],
              ["~chi0_2",  "W+", "~chi-_2"],
              ["~chi0_3",  "gamma", "~G"],
              ["~chi0_3",  "Z0", "~G"],
              ["~chi0_3",  "Z0", "~chi0_1"],
              ["~chi0_3",  "Z0", "~chi0_2"],
              ["~chi0_3",  "h0_1", "~G"],
              ["~chi0_3",  "h0_1", "~chi0_1"],
              ["~chi0_3",  "h0_1", "~chi0_2"],
              ["~chi0_3",  "W+", "~chi-_1"],
              ["~chi0_3",  "W+", "~chi-_2"],
              ["~chi0_4",  "gamma", "~G"],
              ["~chi0_4",  "Z0", "~G"],
              ["~chi0_4",  "Z0", "~chi0_1"],
              ["~chi0_4",  "Z0", "~chi0_2"],
              ["~chi0_4",  "Z0", "~chi0_3"],
              ["~chi0_4",  "h0_1", "~G"],
              ["~chi0_4",  "h0_1", "~chi0_1"],
              ["~chi0_4",  "h0_1", "~chi0_2"],
              ["~chi0_4",  "h0_1", "~chi0_3"],
              ["~chi0_4",  "W+", "~chi-_1"],
              ["~chi0_4",  "W+", "~chi-_2"],
              ["~chi+_1",  "W+", "~G"],
              ["~chi+_1",  "W+", "~chi0_1"],
              ["~chi+_1",  "W+", "~chi0_2"],
              ["~chi+_1",  "W+", "~chi0_3"],
              ["~chi+_1",  "W+", "~chi0_4"],
              ["~chi+_2",  "Z0", "~chi+_1"],
              ["~chi+_2",  "h0_1", "~chi+_1"],
              ["~chi+_2",  "W+", "~G"],
              ["~chi+_2",  "W+", "~chi0_1"],
              ["~chi+_2",  "W+", "~chi0_2"],
              ["~chi+_2",  "W+", "~chi0_3"],
              ["~chi+_2",  "W+", "~chi0_4"],
            ]

  # Choose to get the spectrum from SpecBit proper, not an SLHA file.
  # Options set to match benchmark point specified in SpecBit/MSSM_benchmark_points/LesHouches.in.MSSM_1
  - capability: unimproved_MSSM_spectrum
    function: get_MSSMatQ_mA_spectrum_FS
    options:
      precision_goal:        1.0e-4
      max_iterations:        0
      calculate_sm_masses:   false
      pole_mass_loop_order:  2
      ewsb_loop_order:       2
      beta_loop_order:       2
      threshold_corrections_loop_order: 2
      use_higgs_2loop_at_as: true
      use_higgs_2loop_ab_as: true
      use_higgs_2loop_at_at: true
      use_higgs_2loop_atau_atau: true
      invalid_point_fatal: false
      # Only consider chargino masses > 45 GeV as masses lighter than this are excluded by 
      # LEP measurements of the Z width.
      mass_cut: [ ["|~chi+_1|", 45., 1e6] ]


  # This simply relables the "unimproved_MSSM_spectrum" to "MSSM_spectrum",
  # so that things depending on "MSSM_spectrum" will be happy.
  - capability: MSSM_spectrum 
    type: Spectrum
    function: make_MSSM_precision_spectrum_none

  # These options set various tolerances in the spectrum generation
  - options:
      gauge_mixing_tolerance: 0.5
      family_mixing_tolerance: 0.5
      #gauge_mixing_tolerance_invalidates_point_only: false
      #family_mixing_tolerance_invalidates_point_only: false

  # Choose to use functions that get Higgs decays from SUSY-HIT, and t decays from DecayBit native implementation (instead of FeynHiggs)
  - capability: Reference_SM_Higgs_decay_rates
    function: Ref_SM_Higgs_decays_table
  - capability: Reference_SM_other_Higgs_decay_rates
    function: Ref_SM_other_Higgs_decays_table
  - capability: Reference_SM_A0_decay_rates
    function: Ref_SM_A0_decays_table
  - capability: Higgs_decay_rates
    function: MSSM_h0_1_decays
  - capability: h0_2_decay_rates
    function: h0_2_decays
  - capability: A0_decay_rates
    function: A0_decays
  - capability: H_plus_decay_rates
    function: H_plus_decays
  - capability: t_decay_rates
    function: t_decays

 # Choose where to get the Higgs couplings from
  - capability: Higgs_Couplings
    function: MSSM_higgs_couplings_pwid


  ##### LHC Detector and Analysis rules #####

  # Choose to where to get total cross-sections from
  - capability: TotalCrossSection
    function: getEvGenCrossSection_as_base

  # Choose how to do event weighting 
  - capability: EventWeighterFunction
    function: setEventWeight_unity
    # function: setEventWeight_fromCrossSection

  # # Choose where to get PID pair cross-sections from.
  # # Note: This is not required if the "setEventWeight_unity" 
  # #       function is chosen above.
  # - capability: PIDPairCrossSectionsMap
  #   function: getPIDPairCrossSectionsMap_prospino
  #   options:
  #     fixed_relative_cross_section_uncertainty: 0.10
  #     set_missing_cross_sections_to_zero: true
  #     # inlo: 1
  #     # isq_ng_in: 1
  #     # icoll_in: 1
  #     # energy_in: 13000.0
  #     # i_error_in: 0
  #   # function: getPIDPairCrossSectionsMap_xsecBE



  # Choose where to get scattering events from
  - capability: HardScatteringEvent
    function: generateEventPythia

  # Set SLHA version for spectrum + decays passed to Pythia
  - capability: SpectrumAndDecaysForPythia
    function: getSpectrumAndDecaysForPythia
    options:
      slha_version: 1
      write_summary_to_log: true


  # Choose colliders to simulate and their convergence settings, and pick analyses to run with each collider.
  - capability: RunMC
    function: operateLHCLoop
    options:
      silenceLoop: false
      Pythia_SUSY_LHC_13TeV_EWonly:
        min_nEvents: 10000  # 16000000
        max_nEvents: 10000  # 16000000
        events_between_convergence_checks: 10000000
        target_fractional_uncert: 0.1
        halt_when_systematic_dominated: true
        all_analyses_must_converge: true
        all_SR_must_converge: false
        maxFailedEvents: 100
        analyses:
          - ATLAS_13TeV_RJ3L_2Lep2Jets_36invfb
          - ATLAS_13TeV_RJ3L_3Lep_36invfb
          #
          - ATLAS_13TeV_0LEP_36invfb  # skip
          - ATLAS_13TeV_0LEP_139invfb
          #
          - ATLAS_13TeV_0LEPStop_36invfb
          - ATLAS_13TeV_1LEPStop_36invfb
          - ATLAS_13TeV_2LEPStop_36invfb
          #
          - ATLAS_13TeV_MultiLEP_2Lep0Jets_36invfb
          - ATLAS_13TeV_MultiLEP_2LepPlusJets_36invfb
          - ATLAS_13TeV_MultiLEP_3Lep_36invfb
          #
          - ATLAS_13TeV_MultiLEP_strong_139invfb
          #
          - ATLAS_13TeV_2OSLEP_chargino_inclusive_139invfb  
          - ATLAS_13TeV_2OSLEP_chargino_binned_139invfb  # skip
          #
          - ATLAS_13TeV_4LEP_36invfb
          - ATLAS_13TeV_4LEP_139invfb
          #
          - ATLAS_13TeV_2bMET_36invfb
          #
          - ATLAS_13TeV_3b_24invfb
          - ATLAS_13TeV_3b_discoverySR_24invfb  # skip
          - ATLAS_13TeV_3b_36invfb  # skip
          - ATLAS_13TeV_3b_discoverySR_36invfb  # skip
          #
          - ATLAS_13TeV_PhotonGGM_36invfb
          - ATLAS_13TeV_ZGammaGrav_CONFNOTE_80invfb
          #
          - ATLAS_13TeV_2OSLEP_Z_139invfb
          #
          - CMS_13TeV_0LEP_36invfb  # skip
          - CMS_13TeV_0LEP_137invfb
          #
          - CMS_13TeV_1LEPbb_36invfb
          #
          - CMS_13TeV_1LEPStop_36invfb
          - CMS_13TeV_2LEPStop_36invfb
          #
          - CMS_13TeV_2LEPsoft_36invfb
          - CMS_13TeV_2LEPsoft_36invfb_nocovar  # skip
          - CMS_13TeV_2LEPsoft_stop_36invfb
          - CMS_13TeV_2LEPsoft_stop_36invfb_nocovar  # skip
          #
          - CMS_13TeV_2OSLEP_36invfb
          - CMS_13TeV_2OSLEP_36invfb_nocovar  # skip
          #
          - CMS_13TeV_2OSLEP_for_stop_36invfb
          - CMS_13TeV_2OSLEP_for_chargino_36invfb
          #
          - CMS_13TeV_2SSLEP_Stop_inclusive_36invfb  
          - CMS_13TeV_2SSLEP_Stop_exclusive_36invfb  # skip
          - CMS_13TeV_2SSLEP_Stop_137invfb  # skip (too many SRs?)
          #
          - CMS_13TeV_Photon_GMSB_36invfb
          - CMS_13TeV_2Photon_GMSB_36invfb
          - CMS_13TeV_1Photon1Lepton_36invfb  # skip
          - CMS_13TeV_1Photon1Lepton_emu_combined_36invfb
          #
          - CMS_13TeV_MultiLEP_2SSLep_36invfb  # skip
          - CMS_13TeV_MultiLEP_3Lep_36invfb  # skip
          - CMS_13TeV_MultiLEP_Full_2SSLep_36invfb 
          - CMS_13TeV_MultiLEP_Full_3Lep_36invfb  # skip
          - CMS_13TeV_MultiLEP_Full_3Lep_rebinned_36invfb
          #
          - CMS_13TeV_MONOJET_36invfb  # skip


  # Choose Monte Carlo event simulator and options.
  - capability:  HardScatteringSim
    type: Py8Collider_defaultversion
    function: getPythia
    options:
      Pythia_SUSY_LHC_13TeV_EWonly:
        # 0.028 fb corresponds to ~1 expected event at L = 36 fb^-1.
        xsec_veto: 0.028
        antiktR: 0.4
        partonOnly: false
        pythia_settings:
          - Print:quiet = off
          - Next:numberCount = 100
          - Random:setSeed = on
          - Beams:eCM = 13000
          - PartonLevel:MPI = off
          - PartonLevel:ISR = on
          - PartonLevel:FSR = on
          - HadronLevel:all = on
          - SUSY:all = off
          - SUSY:qqbar2chi0chi0 = on
          - SUSY:qqbar2chi+-chi0 = on
          - SUSY:qqbar2chi+chi- = on
          - TauDecays:mode = 0
          - TimeShower:pTmin = 2
          - 23:mMin = 0.1
          - 24:mMin = 0.1


  - module: ColliderBit
    options:
      output_expected_loglike_single_SRs: true
      output_expected_loglike_SR_combination: true

  # Choose LHC likelihood form and options.
  - capability: LHC_LogLikes
    backends:
    - {capability: lnlike_marg_poisson_lognormal_error}
    options:
      use_covariances: true
      use_marginalising: false
      combine_SRs_without_covariances: false
      nuisance_prof_initstep: 0.1
      nuisance_prof_convtol: 0.01
      nuisance_prof_maxsteps: 10000
      nuisance_prof_convacc: 0.01
      nuisance_prof_simplexsize: 1e-5
      nuisance_prof_method: 6 #1
      nuisance_prof_verbosity: 0
      # covariance_marg_convthres_abs: 0.05
      # covariance_marg_convthres_rel: 0.05
      # covariance_nsamples_start: 1000000

  - capability: LHC_LogLikes_scaledsignals
    backends:
    - {capability: lnlike_marg_poisson_lognormal_error}


  # List any analyses that should *NOT* be included in the total log-likelihood!
  # These will still be computed if listed in the analysis setup above, 
  # but their likelihood will not added to the combined likelihood.
  - capability: LHC_Combined_LogLike
    options:
      write_summary_to_log: true
      cap_loglike: false
      cap_loglike_individual_analyses: false
      skip_analyses: 
          # - ATLAS_13TeV_RJ3L_2Lep2Jets_36invfb
          # - ATLAS_13TeV_RJ3L_3Lep_36invfb
          #
          - ATLAS_13TeV_0LEP_36invfb  # skip
          # - ATLAS_13TeV_0LEP_139invfb
          #
          # - ATLAS_13TeV_0LEPStop_36invfb
          # - ATLAS_13TeV_1LEPStop_36invfb
          # - ATLAS_13TeV_2LEPStop_36invfb
          #
          # - ATLAS_13TeV_MultiLEP_2Lep0Jets_36invfb
          # - ATLAS_13TeV_MultiLEP_2LepPlusJets_36invfb
          # - ATLAS_13TeV_MultiLEP_3Lep_36invfb
          #
          # - ATLAS_13TeV_2OSLEP_chargino_inclusive_139invfb  
          - ATLAS_13TeV_2OSLEP_chargino_binned_139invfb  # skip
          #
          - ATLAS_13TeV_4LEP_36invfb
          #
          # - ATLAS_13TeV_2bMET_36invfb
          #
          # - ATLAS_13TeV_3b_24invfb
          - ATLAS_13TeV_3b_discoverySR_24invfb  # skip
          - ATLAS_13TeV_3b_36invfb  # skip
          - ATLAS_13TeV_3b_discoverySR_36invfb  # skip
          #
          # - ATLAS_13TeV_PhotonGGM_36invfb
          # - ATLAS_13TeV_ZGammaGrav_CONFNOTE_80invfb
          #
          # - ATLAS_13TeV_2OSLEP_Z_139invfb
          #
          - CMS_13TeV_0LEP_36invfb  # skip
          # - CMS_13TeV_0LEP_137invfb
          #
          # - CMS_13TeV_1LEPbb_36invfb
          #
          # - CMS_13TeV_1LEPStop_36invfb
          # - CMS_13TeV_2LEPStop_36invfb
          #
          # - CMS_13TeV_2LEPsoft_36invfb
          - CMS_13TeV_2LEPsoft_36invfb_nocovar  # skip
          # - CMS_13TeV_2LEPsoft_stop_36invfb
          - CMS_13TeV_2LEPsoft_stop_36invfb_nocovar  # skip
          #
          # - CMS_13TeV_2OSLEP_36invfb
          - CMS_13TeV_2OSLEP_36invfb_nocovar  # skip
          #
          # - CMS_13TeV_2OSLEP_for_stop_36invfb
          # - CMS_13TeV_2OSLEP_for_chargino_36invfb
          #
          # - CMS_13TeV_2SSLEP_Stop_inclusive_36invfb
          - CMS_13TeV_2SSLEP_Stop_exclusive_36invfb  # skip  
          - CMS_13TeV_2SSLEP_Stop_137invfb  # skip (too many SRs?)
          #
          # - CMS_13TeV_Photon_GMSB_36invfb
          # - CMS_13TeV_2Photon_GMSB_36invfb
          - CMS_13TeV_1Photon1Lepton_36invfb
          # - CMS_13TeV_1Photon1Lepton_emu_combined_36invfb
          #
          - CMS_13TeV_MultiLEP_2SSLep_36invfb  # skip
          - CMS_13TeV_MultiLEP_3Lep_36invfb  # skip
          # - CMS_13TeV_MultiLEP_Full_2SSLep_36invfb 
          - CMS_13TeV_MultiLEP_Full_3Lep_36invfb  # skip
          # - CMS_13TeV_MultiLEP_Full_3Lep_rebinned_36invfb
          #
          - CMS_13TeV_MONOJET_36invfb  # skip




# Set the names of key log files
Logger:

  redirection:
    [Debug] : "debug.log"
    [Default] : "default.log"
    [DecayBit] : "DecayBit.log"
    # [DarkBit] : "DarkBit.log"
    [PrecisionBit] : "PrecisionBit.log"
    # [FlavBit] : "FlavBit.log"
    [ColliderBit] : "ColliderBit.log"
    [SpecBit] : "SpecBit.log"
    [Dependency Resolver] : "dep_resolver.log"

KeyValues:

  debug: true

  dependency_resolution:
    prefer_model_specific_functions: true

  rng:
    generator: default
    seed: -1

  # Choose a lower cutoff for the likelihood
  likelihood:
    model_invalid_for_lnlike_below: -5e5
    model_invalid_for_lnlike_below_alt: -1e5
    print_invalid_points: false

  # Set the default output path
  default_output_path: "./output/MSSMEW_gravitino/"

  # We set the errors from the physics modules to be non-fatal
  # to avoid crashing the entire scan due to a rare problem point.
  # This means we should pay close attention to the log files...
  exceptions:
    ColliderBit_error: non-fatal
    DarkBit_error: non-fatal
    DecayBit_error: non-fatal
    FlavBit_error: non-fatal
    PrecisionBit_error: non-fatal
    SpecBit_error: non-fatal


