# This is a simple example usage of the postprocessor scanner to 
# calculate a new likelihood contribution.
# Here we postprocess the results of spartan.yaml (make sure to
# run this first!), and calculate a new likelihood (actually
# just the same one again) and add it to the previously
# computed likelihood.

Parameters:
  NormalDist:
    mu:
      # No priors, parameters read out of previous scan output
      prior_type: none
    sigma:
      prior_type: none

Priors:

Printer:

  printer: hdf5

  options:
    output_file: "spartan_pp.hdf5"
    group: "/spartan"
    disable_combine_routines: false

Scanner:

  use_scanner: postprocess

  scanners:

    postprocess:

      plugin: postprocessor
      # Name of the new global likelihood contribution. This will be zero in this simple example
      like: New_LogLike 
       
      # Add LogLike in the old output to New_LogLike in the new output.   
      add_to_like: [LogLike]                                             
      # Allow overwriting of the old output with the new output (won't happen in this case because names are different).
      permit_discard_old_likes: true
      ## This will appear alongside New_Loglike, which will be the new things only.
      reweighted_like: Reweighted_LogLike       
      # Interval between progress reports to stdout (0=none, default 1000)
      update_interval: 1000
 
      # Throw away all points outside the cuts
      discard_points_outside_cuts: true

      # Choose the input stream
      reader:
        type: hdf5
        file: "runs/spartan/samples/results.hdf5"
        group: "/spartan"

ObsLikes:

  - purpose:      New_LogLike
    capability:   normaldist_loglike
    module:       ExampleBit_A
    type:         double

Rules:

Logger:

  redirection:
    [Default] : "default.log"

KeyValues:

  dependency_resolution:
    prefer_model_specific_functions: true

  likelihood:
    model_invalid_for_lnlike_below: -5e5
    model_invalid_for_lnlike_below_alt: -1e5

  default_output_path: "runs/spartan_pp"
