##########################################################################
## Minimal CosmoBit application  (in YAML)
##   - Using the Planck-lite likelihood for high-l
##     (Either TT or TTTEEE -> Specified in 'Rules')
##   - Using Multinest as sampler
##
## Selim Hotinli <selim.hotinli14@imperial.ac.uk>
## 2016-17
##
## Patrick Stoecker <stoecker@physik.rwth-aachen.de>
## 2017 Nov
## 2018 Jan,Feb
##########################################################################


#======== Input parameter declarations =======
Parameters:

 LCDM_dNeff_Smu: !import include/LCDM_dNeff_Smu_scan.yaml
 #LCDM_dNeff_Smu_etaBBN: !import include/LCDM_dNeff_Smu_etaBBN_scan.yaml
 #LCDM: !import include/LCDM_scan.yaml

 #eta:
 #  prior_type: flat
 #  range: [4,8]
 Planck_lite: !import include/Planck_lite_scan.yaml

#======== Prior setup ========
Priors:

#======== Output setup ========
Printer:
  printer: ascii
  options:
    output_file: "gambit_output.data"
    buffer_length: 100

#======== Scanner setup ========
Scanner:
  use_scanner: random

  scanners:
    multinest:
      plugin: multinest
      like:  LogLike
      nlive: 1000
      tol: 0.01
      aux_printer_txt_options:
      aux_printer_stats_options:
      aux_printer_live_options:

    random:
      plugin: random
      point_number: 2
      like:  LogLike

#======== Observables of interest ========
ObsLikes:
  - purpose:      LogLike
    capability:   BBN_LogLike
    module:       CosmoBit
    type:         double
  
  - purpose:      LogLike
    capability:   H0_LogLike
    module:       CosmoBit
    type:         double

  - purpose:      LogLike
    capability:   BAO_LogLike
    module:       CosmoBit
    type:         double

  - purpose:      LogLike
    capability:   compute_Planck_high_TT_loglike
    module:       CosmoBit
    type:         double

#======== Rule entries ========
Rules:

#####
##  Since the "Planck_lite" model fits to be used by 
##  the marginalized (lite) versions of both, the TT
##  and the TTTEEE, likelihoods, we need to resolve
##  this ambiguity manually.
#####


#####
##  To reproduce the LCDM results of Planck it is
##  apparently needed to include one massive neutrino
##  species with a mass of 0.06 eV. To include this
##  the following optional inputs must be given to
##  CLASS. (k_pivot = 0.05 is needed for the right
##  value of A_s, according to J. Lesgourgues)
####
 # - capability: class_set_parameter
 #   options:
 #     class_dict:
 #       T_ncdm: 0.71611
 #       k_pivot: 0.05

  - capability: compute_Planck_high_TT_loglike
    function: function_Planck_high_TT_lite_loglike
    module: CosmoBit

  - capability: BBN_LogLike
    options:
        DataFile: PDG_2017.dat
  
  - capability: H0_LogLike
    options:
      DataFile:  SH0ES.dat

  - capability: BAO_LogLike
    options:
      DataFile:  BAO_2014.dat

  - capability: plc_2_0_init
    options:
      planck_path: /home/janina/code/PlanckLike/plc_2.0
      
#======== Logging setup ========
Lxogger:
  redirection:
    [Debug]      : "debug.log"
    [Default]      : "default.log"
    [CosmoBit]  : "CosmoBit.log"
    [Scanner]      : "Scanner.log"

#======== Generic Name/Value Section ========
KeyValues:

  debug: true

  default_output_path: "runs/CosmoBit_CMB_BAO_H0_BBN"

  rng: ranlux48

  likelihood:
    model_invalid_for_lnlike_below: -1e6
