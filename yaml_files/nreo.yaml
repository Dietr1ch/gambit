##########################################################################
## GAMBIT configuration for Non-relativistic effective oppperator DM
##########################################################################


Parameters:
    #NREO:
    #  j: 0.5
    #  m:
    #    range: [10, 20]
    #  sig_v: 3.0e+26 #cm^3/s, standard WIMP
    #  c0_1: 1.65e-8  # 1.65*10**(-8)
    #  c0_2: 0
    #  c0_3: 0
    #  c0_4: 0
    #  c0_5: 0
    #  c0_6: 0
    #  c0_7: 0
    #  c0_8: 0
    #  c0_9: 0
    #  c0_10: 0
    #  c0_11: 0
    #  c0_12: 0
    #  c0_13: 0
    #  c0_14: 0
    #  c0_15: 0
    #  c1_1: 0
    #  c1_2: 0
    #  c1_3: 0
    #  c1_4: 0
    #  c1_5: 0
    #  c1_6: 0
    #  c1_7: 0
    #  c1_8: 0
    #  c1_9: 0
    #  c1_10: 0
    #  c1_11: 0
    #  c1_12: 0
    #  c1_13: 0
    #  c1_14: 0
    #  c1_15: 0

  Halo_gNFW_rho0:
    rho0: .5
      #range: [.2, .8]
    v0: 235.0
    vesc: 550.0
    vrot: 235.0
    rs: 20.0
    r_sun: 8.5
    alpha: 1
    beta: 3
    gamma: 1

  # Halo_Einasto_rho0:
  #  rho0:
  #    range: [.2, .8]
  #  v0: 235.0
  #  vesc: 550.0
  #  vrot: 235.0
  #  rs: 20.0
  #  r_sun: 8.5
  #  alpha: .17

  # SUSY parameters. from the HP_Develop branch in file capgentest.yaml
  CMSSM:
    M0: 200
    M12: 80
    A0: 0
    TanBeta: 10
    SignMu: 1

  # # SUSY parameters. from CMSSM.yaml
  # # needed by DarkSUSY_PointInit_MSSM in DarkBit/src/MSSM.cpp
  # CMSSM:
  #   M0:
  #     range: [50, 1e4]
  #     prior_type: log
  #   M12:
  #     range: [50, 1e4]
  #     prior_type: log
  #   A0:
  #     range: [-1e4, 1e4]
  #     flat_start: -1e2
  #     flat_end: 1e2
  #     prior_type: double_log_flat_join
  #   TanBeta:
  #     range: [3.0, 70]
  #   SignMu: 1

  # SM parameters.
  # needed by get_SMINPUTS
  StandardModel_SLHA2: !import include/StandardModel_SLHA2_defaults.yaml

  # # Nuclear matrix parameters. from NUHM1.yaml (for capture_rate_sun_const_xsec)
  # nuclear_params_sigmas_sigmal:
  #   sigmas:
  #     range:  [19, 67]
  #   sigmal:
  #     range:  [31, 85]
  #   deltau:
  #     fixed_value:  0.842
  #   deltad:
  #     fixed_value: -0.427
  #   deltas:
  #     fixed_value: -0.085

Priors:

  # none


Printer:

  # printer: hdf5
  # options:
  #   output_file: "nreo.hdf5"
  #   group: "/nreo"
  #   delete_file_on_restart: true

  printer: ascii
  options:
   output_file: "nreo.dat"
   buffer_length: 10
   delete_file_on_restart: true

  # printer: cout

Scanner:

  use_scanner: sqrgrd

  scanners:

    random:
      plugin: random
      like: LogLike
      point_number: 10

    # de:
    #   plugin: diver
    #   like: LogLike
    #   NP: 500

    multinest:
      plugin: multinest
      like:  LogLike
      nlive: 500
      tol: 0.5

    # mcmc:
    #   plugin: great
    #   like: LogLike
    #   nTrialLists: 5
    #   nTrials: 10000

    twalk:
      plugin: twalk
      like: LogLike

    polychord:
      plugin: polychord
      like:  LogLike
      tol: 0.1

    sqrgrd:
      plugin: square_grid
      like: LogLike
      grid_pts: 20


ObsLikes:

  # - purpose:      LogLike
  #   capability:   capture_rate_Sun
  #   module:       DarkBit
  #   function: capture_rate_Sun_NREO
  #   type:         double

  # Indirect detection
  # Ice Cube
  - purpose: LogLike
    capability: IC79_loglike

  # Direct detection
  # - capability: LUX_2016_LogLikelihood
  #   purpose:    LogLike

  # - capability: XENON1T_2018_LogLikelihood
  #   purpose:    LogLike

  # - capability: PandaX_2016_LogLikelihood
  #   purpose:    LogLike

  # - capability: PandaX_2017_LogLikelihood
  #   purpose:    LogLike

  # - capability: PICO_60_2017_LogLikelihood
  #   purpose:    LogLike

  # - capability: CRESST_II_LogLikelihood
  #   purpose:    LogLike

  # - capability: CDMSlite_LogLikelihood
  #   purpose:    LogLike

  # - capability: DarkSide_50_LogLikelihood
  #   purpose:    LogLike

  # - purpose: Observable
  #   capability: mwimpNREO


Rules:
  #testing my capture code
    - capability: capture_rate_Sun
      function: capture_rate_Sun_NREO

    #RD_fraction needed by the captn init function, _one sets to one
    - capability: RD_fraction
      function: RD_fraction_one # RD_fraction_leq_one, RD_fraction_rescaled
    
    - capability: mwimp
      function: m
    
    - capability: sigmav
      function: sig_v
    
    - capability: DarkMatter_ID
      function: DarkMatter_ID_MSSM #DarkMatter_ID_NREO
    
    # Use DarkSUSY or MicrOmegas for calculating direct detection couplings. from the HP_Develop branch in file capgentest.yaml
    - capability: DD_couplings
      function: DD_couplings_DarkSUSY
      #function: DD_couplings_MicrOmegas

    - capability: TH_ProcessCatalog
      function: TH_ProcessCatalog_MSSM

    # Choose to get decays from DecayBit proper, not from an SLHA file. from the HP_Develop branch in file capgentest.yaml
    - capability: decay_rates
      function: all_decays

    # Choose to use functions that get Higgs decays from SUSY-HIT, and t decays from DecayBit native implementation (instead of FeynHiggs). from the HP_Develop branch in file capgentest.yaml
    - capability: Reference_SM_Higgs_decay_rates
      function: Ref_SM_Higgs_decays_table
    - capability: Reference_SM_other_Higgs_decay_rates
      function: Ref_SM_other_Higgs_decays_table
    - capability: Reference_SM_A0_decay_rates
      function: Ref_SM_A0_decays_table
    - capability: Higgs_decay_rates
      function: MSSM_h0_1_decays
    - capability: h0_2_decay_rates
      function: h0_2_decays
    - capability: A0_decay_rates
      function: A0_decays
    - capability: H_plus_decay_rates
      function: H_plus_decays
    - capability: t_decay_rates
      function: t_decays

    # Choose where to get the precision spectrum from. from the HP_Develop branch in file capgentest.yaml
    - capability: MSSM_spectrum
      type: Spectrum
      function: make_MSSM_precision_spectrum_none
      #function: make_MSSM_precision_spectrum_W
      #function: make_MSSM_precision_spectrum_H_W
      # The following options only have an impact when using make_MSSM_precision_spectrum_H_W.
      # Choose to take FeynHiggs' prediction for the Higgs mass (rather then FlexibleSUSY's).
      # Choose to use the difference between the FeynHiggs and spectrum generator predictions, along
      # with the FH error estimate, to estimate the theoretical error on the prediction.
      #options:
      #  Higgs_predictions_source: 1
      #  Higgs_predictions_error_method: 4

    # Choose to get the spectrum from SpecBit proper, not an SLHA file. from the HP_Develop branch in file capgentest.yaml
    # Options set to match benchmark point specified in SpecBit/MSSM_benchmark_points/LesHouches.in.MSSM_1
    - capability: unimproved_MSSM_spectrum
      function: get_CMSSM_spectrum_FS
      options:
        precision_goal:        1.0e-4
        max_iterations:        0
        calculate_sm_masses:   false
        pole_mass_loop_order:  2
        ewsb_loop_order:       2
        beta_loop_order:       2
        threshold_corrections_loop_order: 2
        use_higgs_2loop_at_as: true
        use_higgs_2loop_ab_as: true
        use_higgs_2loop_at_at: true
        use_higgs_2loop_atau_atau: true
        invalid_point_fatal: false

Logger:

  redirection:
    [Debug]   : "debug.log"
    [Default]      : "default.log"
    [DarkBit] : "DarkBit.log"
    [PrecisionBit] : "PrecisionBit.log"
    [DecayBit] : "DecayBit.log"
    [SpecBit] : "SpecBit.log"
    [Scanner]      : "Scanner.log"


KeyValues:

  # dependency_resolution:
  #   prefer_model_specific_functions: true

  likelihood:
    model_invalid_for_lnlike_below: -5e5
    model_invalid_for_lnlike_below_alt: -1e5

  default_output_path: "runs/nreo"

  rng: ranlux48

  print_timing_data: true

  debug: true
