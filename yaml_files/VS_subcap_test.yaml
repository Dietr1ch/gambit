##########################################################################
## GAMBIT configuration for testing vacuum stability likelihood and
## Vevacious interface for the MSSM  (CMSSM by default)
##
##
##########################################################################


Parameters:

  # SM parameters
  StandardModel_SLHA2: !import include/StandardModel_SLHA2_defaults.yaml

  # SUSY parameters
  # Choose here the model and parameters to be tested, as well as the equivalent function below

  # SUSY parameters.
  CMSSM:
    M0: 343.892130517788
      #range: [243.731, 243.733]
      #prior_type: flat
     # soft susy breaking mass
    M12: 927.395382468553
      #range: [836.993, 836.995]
      #prior_type: flat
     # mass term for gauginos
    A0: -3204.969986352231   # trilinear couplings
      #range: [-1818.63, -1818.65]
      #prior_type: flat
      # ratio of vews of two higgses
    SignMu: -1.0000000 # units of energy in super potential  
    TanBeta: 10.626449029809
      #range: [10.2067, 10.2069]
      #prior_type: flat


Priors:

  # None: all parameters are fixed


Printer:

  printer: ascii
  options:
    output_file: "VS_MSSM_test.txt"


Scanner:

  # Use trivial scanner toy_mcmc with the minumum number of points

  use_scanner: random

  scanners:
    random:
      plugin: random
      point_number: 1
      like:  LogLike

    toy_mcmc:
      plugin: toy_mcmc
      point_number: 10
      output_file:  output
      like:  Likelihood

    multinest:
      plugin: multinest
      like:  LogLike
      nlive: 10
      tol: 0.1
      updInt: 1

    de:
      plugin: diver
      like: LogLike
      NP: 10
      convthresh: 1e-5
      verbosity: 1



ObsLikes:


  # Vacuum Stability Likelihood
  - capability:   VS_likelihood
    purpose:      LogLike
    sub_capabilities:   
      global: [quantum]
      nearest: [quantum]

#  - capability: lnL_W_mass
#    purpose:    LogLike

#  - capability:  lnL_gm2
#    purpose:     LogLike


  #- capability:   VS_StraightPathGoodEnough
  #  purpose:      Obs
  #  #type:         int
  #
  #- capability:   VS_ThresholdAndBounceActions
  #  purpose:      Obs
#
#  #- capability:   VS_StraightPathGoodEnough_Thermal
#  #  purpose:      Obs
#  # # type:         int
#
#  #- capability:   VS_ThresholdAndBounceActions_Thermal
  #  purpose:      Obs


Rules:
  # Tell all functions that are able to dump SLHA files to do so.
  - options:
     drop_SLHA_file: true

  - capability: vevacious_file_location
    options: 
      where_to_save_input: runs/Vevacious_iniFiles/

  - capability: initialize_vevacious
    options:
      tunneling_strategy: QuantumThenThermal
      homotopy_backend: hom4ps
      minuit_strategy: 1
      global_minimum_is_panic: false
      path_finding_timeout: 3600

  # - capability: make_vevaciousPlusPlus_inputs
  #   options:
  #     tunneling_strategy: QuantumThenThermal
  #     homotopy_backend: hom4ps
  #     where_to_save_input: output/Vevacious_iniFiles/
  #     minuit_strategy: 1
  #     global_minimum_is_panic: false
  #     path_finding_timeout: 3600

  # Globally permit maximal mixing between gauge and family eigenstates
  - options:
      gauge_mixing_tolerance: 0.5
      family_mixing_tolerance: 0.5

  

  # Choose to use gm2calc for g-2
 # - capability: muon_gm2
 #   function: GM2C_SUSY

  # Choose to base the SM prediction for g-2 on e+e- data
 # - capability: muon_gm2_SM
 #   function: gm2_SM_ee

  # Choose to get the spectrum from SpecBit proper, not an SLHA file.
  # Options set to match benchmark point specified in SpecBit/MSSM_benchmark_points/LesHouches.in.MSSM_1
  - capability: unimproved_MSSM_spectrum
    function: get_CMSSM_spectrum_FS
    options:
      precision_goal:        1.0e-4
      max_iterations:        0
      calculate_sm_masses:   false
      pole_mass_loop_order:  2
      ewsb_loop_order:       2
      beta_loop_order:       2
      threshold_corrections_loop_order: 2
      use_higgs_2loop_at_as: true
      use_higgs_2loop_ab_as: true
      use_higgs_2loop_at_at: true
      use_higgs_2loop_atau_atau: true
      invalid_point_fatal: false

  # Choose where to get the precision spectrum from
  #- capability: MSSM_spectrum
  #  type: Spectrum
  #  function: make_MSSM_precision_spectrum_none
    #function: make_MSSM_precision_spectrum_W
    #function: make_MSSM_precision_spectrum_H_W
    # The following options only have an impact when using make_MSSM_precision_spectrum_H_W.
    # Choose to take FeynHiggs' prediction for the Higgs mass (rather then FlexibleSUSY's).
    # Choose to use the difference between the FeynHiggs and spectrum generator predictions, along
    # with the FH error estimate, to estimate the theoretical error on the prediction.
    #options:
    #  Higgs_predictions_source: 1
    #  Higgs_predictions_error_method: 4


  # Values to be used in PrecisionBit likelihood function for light quark masses
#  - capability: lnL_light_quark_masses
#    options:
      # m_u/m_d
#      mud_central: 0.48
#      mud_error: 0.10
      # m_s / ((m_u + m_d)/2)
#      msud_central: 27.5
#      msud_error: 1.0
      # m_s
#      ms_central: 95.E-03
#      ms_error: 5.E-03

Logger:

  # Select the log files
  redirection:
    [Debug] : "debug.log"
    [Default] : "default.log"
    [SpecBit] : "SpecBit.log"
    [Dependency Resolver] : "dep_resolver.log"


KeyValues:

  # Choose the output path
  default_output_path: "runs/VS_test"

  # Choose to use model spectific funtions during dependency resolution
  dependency_resolution:
    prefer_model_specific_functions: true

  # Choose a lower cutoff for the likelihood
  likelihood:
    model_invalid_for_lnlike_below: -1e6

  debug: true
