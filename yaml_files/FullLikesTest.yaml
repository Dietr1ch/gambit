
Parameters:

  # Dummy model to allow ColliderBit to loop through a set of SLHA files
  CB_SLHA_file_model:
    dummy: 1.0



Priors:
  # All priors simple, so specified in Parameters section


Printer:

  printer: cout

Scanner:

  use_scanner: random

  scanners:

    random:
      plugin: random
      point_number: 1
      output_file:  output
      like:  LogLike
      files:
        output_file: "weights ..."


ObsLikes:

    # Combined LHC likelihood
    - purpose:    LogLike
      capability: LHC_Combined_LogLike

    # Observables (not included in likelihood)
    - purpose:    Observable
      capability: LHC_signals

    - purpose:    likelihood_details
      capability: LHC_LogLike_per_SR

    - purpose:    likelihood_details
      capability: LHC_LogLike_SR_indices

    - purpose:    Observable
      capability: LHCEventLoopInfo

    - purpose:    Observable
      capability: SLHAFileElements


Rules:

  ## Just use unweighted cross-sections
  - capability: EventWeighterFunction
    function: setEventWeight_unity

  # Give the set of SLHA files that ColliderBit should use
  - capability: SLHAFileNameAndContent
    function: getNextSLHAFileNameAndContent
    options:
      SLHA_filenames:
        - ColliderBit/data/param_card.SM.C1N2.Whall.slha
        #- ColliderBit/data/ATLAS_13TeV_2OSLEP_chargino_80invfb.slha

  # List the SLHA file entries that should be stored in the GAMBIT output.
  # Use SLHAea syntax for the SLHA_keys: <block/pdg> ; <line identifier> ; <line index of requested element>
  - capability: SLHAFileElements
    function: getSLHAFileElements
    type: map_str_dbl
    options:
      value_for_missing_elements: -9999
      SLHA_keys:
        - MASS;1000022;1
        - MASS;1000024;1
        - NMIX;1,1;2
        - NMIX;1,2;2
        - NMIX;1,3;2
        - NMIX;1,4;2
        - 1000024;DECAY;2               # <-- Total decay width for 1000024 (chargino1)
        - 1000024;(any),2,1000022,24;0  # <-- BR for two-body decay 1000024 -> 1000022 24

  # Assign cross-sections and uncertainties for each SLHA file
  - capability: TotalCrossSection
    function: getYAMLCrossSection_SLHA
    options:
      cross_section_fb:
        ColliderBit/data/param_card.SM.C1N2.Whall.slha: 1.1
      cross_section_fractional_uncert:
        ColliderBit/data/param_card.SM.C1N2.Whall.slha: 0.1


  # Generate evens (don't read LH event files)
  - capability: HardScatteringEvent
    function: generateEventPythia
    module: ColliderBit
    options:
      drop_HepMC_file: false
      # Warning: the HepMC files can quickly become very large... (20 events take ~1MB)

  # # Generate evens (don't read LH event files)
  #- capability: HardScatteringEvent
  #  function: generateEventPythia_SLHA
  #  module: ColliderBit

  # Choose colliders to simulate and their convergence settings, and pick analyses to run with each collider.
  - capability: RunMC
    function: operateLHCLoop
    options:
      silenceLoop: false
      FullLikesAnalyses: # TODO: I really should find a way so I dont have to double list it (I will do once validated)
        - ATLAS_13TeV_1Lep2b_139invfb
      LHC_13TeV:
        min_nEvents: 50000
        max_nEvents: 50000
        events_between_convergence_checks: 5000
        target_fractional_uncert: 0.3
        halt_when_systematic_dominated: true
        all_analyses_must_converge: false
        all_SR_must_converge: false
        maxFailedEvents: 10
        analyses:
          - ATLAS_13TeV_1Lep2b_139invfb

  # Choose Monte Carlo event simulator and options.
  - capability:  HardScatteringSim
    type: Py8Collider_defaultversion
    function: getPythia_SLHA 
    options:
      LHC_13TeV:
        xsec_veto: 0.028
        pythia_settings:
          - SLHA:verbose = 1
          - Next:numberShowProcess = 1
          - Print:quiet = off
          - Next:numberCount = 1000
          - Beams:eCM = 13000
          - PartonLevel:MPI = off
          - PartonLevel:ISR = on
          - PartonLevel:FSR = on
          - HadronLevel:all = on
          #- SUSY:all = on
          - SUSY:qqbar2chi0chi0 = on
          - SUSY:qqbar2chi+-chi0 = on
          - SUSY:qqbar2chi+chi- = on
          - TauDecays:mode = 0
          - TimeShower:pTmin = 2
          # These settings should force the W boson to only decay to leptons. For validating a certain analysis
          - 24:onMode=off
          - 24:onIfAny = 13 11 # 15
          - 25:onMode=off # Forcing the higgs to decay to b bar
          - 25:onIfAny = 5

  - capability: HardScatteringSim
    type: const BaseCollider*
    function: getPythiaAsBase
    module: ColliderBit

  # Choose LHC likelihood form and options.
  - capability: LHC_LogLikes
    backends:
    - {capability: lnlike_marg_poisson_lognormal_error}
    options:
      use_ATLAS_Fulllikes: true
      FullLikesAnalyses:
        - ATLAS_13TeV_1Lep2b_139invfb
      use_covariances: false
      combine_SRs_without_covariances: false
      covariance_marg_convthres_abs: 0.05
      covariance_marg_convthres_rel: 0.05
      covariance_nsamples_start: 100000

  # Choose options for the LHC likelihood combination
  - capability: LHC_Combined_LogLike
    options:
      skip_analyses: [ ]

  # Choose ATLAS detector simulation and options.
  - capability: ATLASDetectorSim
    options:
      LHC_13TeV:
        partonOnly: false
        antiktR: 0.4


# Set the names of key log files
Logger:

  redirection:
    [Debug] : "debug.log"
    [Default] : "default.log"
    # [DecayBit] : "DecayBit.log"
    # [DarkBit] : "DarkBit.log"
    # [PrecisionBit] : "PrecisionBit.log"
    # [FlavBit] : "FlavBit.log"
    [ColliderBit] : "ColliderBit.log"
    # [SpecBit] : "SpecBit.log"
    [Dependency Resolver] : "dep_resolver.log"

KeyValues:

  debug: true

  dependency_resolution:
    prefer_model_specific_functions: true

  # Choose a lower cutoff for the likelihood
  likelihood:
    model_invalid_for_lnlike_below: -5e5
    model_invalid_for_lnlike_below_alt: -1e5

  # Set the default output path
  default_output_path: "runs/Analysis_Validation/"
