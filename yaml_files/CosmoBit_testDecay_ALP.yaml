##########################################################################
## Test CosmoBit Likelihoods
##   - Using random sampler
##   - Using the Planck-lite likelihood for high-l
##     (Either TT or TTTEEE -> Specified in 'Rules')
##   - Using BBN Likelihood
##   - Using BAO Likelihood
##   - Using Sigma8 Likelihood
##   - Computing local H0 Likelihood as observable
##
##  To test this you need to make the backends 'class', 'alterbbn' and 'plc'.
##  You also need to download the Planck data and set the path to it in the
##  rules for
##  - capability: plc_2_0_init
##    options:
##      planck_path: path/to/your/planck/data
##
## Janina Renk <janina.renk@fysik.su.se>
## 2018 Nov
##########################################################################


#======== Input parameter declarations =======
Parameters:

 # --- import model parameters for models to scan over ---
 #LCDM: !import include/LCDM_scan.yaml        # base LCDM
 #LCDM_dNeffCMB: !import include/LCDM_dNeffCMB_scan.yaml
 #LCDM_dNeffCMB_dNeffBBN: !import include/LCDM_dNeffCMB_dNeffBBN_scan.yaml
 #LCDM_dNeffCMB_dNeffBBN_etaBBN: !import include/LCDM_dNeffCMB_dNeffBBN_etaBBN_scan.yaml
 LCDM_ExtdNeffCMB_ExtetaBBN: !import include/LCDM_scan.yaml

 # neutrino masses
 #StandardModel_numass_single: !import include/StandardModel_numass_single_scan.yaml
 StandardModel_numass_degenerate: !import include/StandardModel_numass_degenerate_scan.yaml

 # nuisance parameters in Planck likelihood
 Planck_lite: !import include/Planck_lite_scan.yaml

 # model parameters for "TestDecayingDM"
 CosmoALP:
   fa: 1.0
   ma0:
     #fixed_value: 1e6
     range: [1.0E+2, 1.0E+7]
     prior_type: log
   gagg:
     range: [1e-15, 1e-5]
     prior_type: log
   thetai: 0.0
   Ya0:
     range: [1.0E-15, 1.0E-3]
     prior_type: log

 # nuisance paramters for other cosmological likelihoods
 cosmo_nuisance_params: !import include/cosmo_nuisance_params.yaml

#======== Prior setup ========
Priors:

#======== Output setup ========
Printer:
  printer: ascii
  options:
    output_file: "gambit_output.data"
    buffer_length: 100

#======== Scanner setup ========
Scanner:
  use_scanner: random

  scanners:
    multinest:
      plugin: multinest
      like:  LogLike
      nlive: 1000
      tol: 0.01
      aux_printer_txt_options:
      aux_printer_stats_options:
      aux_printer_live_options:

    random:
      plugin: random
      point_number: 10
      like:  LogLike

#======== Observables of interest ========
ObsLikes:
  - purpose:      LogLike
    capability:   BAO_LogLike
    module:       CosmoBit
    type:         double

  - purpose:      LogLike
    capability:   BBN_LogLike
    module:       CosmoBit
    type:         double

  - purpose:      LogLike
    capability:   Pantheon_LogLike
    module:       CosmoBit
    type:         double

  - purpose:      LogLike
    capability:   compute_Planck_high_TT_loglike
    module:       CosmoBit
    type:         double

  - purpose:      LogLike
    capability:   lnL_RParameter
    module:       DarkBit
    type:         double

  - purpose:      LogLike
    capability:   lnL_SN1987A_DecayApprox
    module:       DarkBit
    type:         double

  - purpose:      Observable
    capability:   Helium_abundance
    module:       CosmoBit
    type:         std::vector<double>

  - purpose:      Observable
    capability:   Deuterium_abundance
    module:       CosmoBit
    type:         std::vector<double>

  - purpose:      LogLike
    capability:   sigma8_LogLike
    module:       CosmoBit
    type:         double

  - purpose:      Observable
    capability:   Omega0_m
    module:       CosmoBit
    type:         double

  - purpose:      Observable
    capability:   lifetime
    module:       CosmoBit
    type:         double

  - purpose:      Observable
    capability:   DM_fraction
    module:       CosmoBit
    type:         double

  - purpose:      Observable
    capability:   etaCMB
    module:       CosmoBit
    type:         double

  - purpose:      Observable
    capability:   external_dNeff_etaBBN
    module:       CosmoBit
    type:         map_str_dbl

  - purpose:      Observable
    capability:   LCDM_dNeffCMB_dNeffBBN_etaBBN_parameters
    type:         ModelParameters

#======== Rule entries ========
Rules:

#####
##  Since the "Planck_lite" model fits to be used by
##  the marginalized (lite) versions of both, the TT
##  and the TTTEEE, likelihoods, we need to resolve
##  this ambiguity manually.
#####

  - capability: compute_Planck_high_TT_loglike
    function: function_Planck_high_TT_lite_loglike
    module: CosmoBit

#####
##
##  Specify data files for BAO, BBN, H0 and sigma8 Likelihoods
##
####

  - capability: T_cmb
    options:
      T_cmb: 2.7255

  - capability: BAO_LogLike
    options:
      DataFile:  BAO_2014.dat

  - capability: BBN_LogLike
    options:
      DataFile: PDG_2017.dat # Use both, the Yp and D/H measurement as given in PDG 2017

  - capability: plc_2_0_init
    options:
      planck_path: PATH/TO/plc_2.0/

  - capability: sigma8_LogLike
    options:
      DataFile: Planck_SZ.dat

  - capability: class_set_parameter
    options:
      class_dict:
        output: "tCl pCl lCl mPk" # need to add matter power spectrum for sigma8 computation
        k_pivot: 0.05

  - capability: AlterBBN_modelinfo
    options:
      failsafe: 1
      err: 0

  - capability: BBN_abundances
    options:
      correlation_matrix: [[1.0,0.2],[0.2,1.0]]
      relative_errors: [1e-3,1e-2]
      elements: [Yp,D]

  - capability: DM_fraction
    function: DM_fraction_CosmoALP

  - capability: lifetime
    function: lifetime_CosmoALP
    # Should points with a lifetime large than 1e17 be rejected?
    options:
      do_rejection: false
      reject_tau_bigger_than: 1e17

#======== Logging setup ========
Logger:
  redirection:
    [Debug]      : "debug.log"
    [Default]      : "default.log"
    [CosmoBit]  : "CosmoBit.log"

#======== Generic Name/Value Section ========
KeyValues:

  debug: true

  default_output_path: "runs/CosmoBit_testDecay_ALP"

  rng: ranlux48

  prefer_model_specific_functions: true

  likelihood:
    model_invalid_for_lnlike_below: -1e6
