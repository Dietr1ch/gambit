CMake-How-To
------------

-- Antje Putze, Oct 2014

CMake is a out-of-source compilation system, i.e. one needs a directory for the build step of the compilation
1) cd build

Now we only need to call cmake for configuration and give it the path to the source files, i.e. the location where the main CMakeLists.txt file is located
2) cmake ..

It will check now the dependencies, compilers, etc. If you do not want to use the main C++, C, or Fortran compilers and linker you can set them
2a) CXX=g++-4.9 CC=gcc-4.9 FC=gfortran-4.9 LD=g++-4.9 cmake ..

Now you can compile GAMBIT
3) make [-j5]

In a seperate step, you can also compile all of the backends, i.e. DDCal0 gamLike DarkSUSY nulike by simply calling the backends target
4) make backends

Individual backends can also be compiled, e.g.
4a) make gamLike

As usual we have also a clean target
5) make clean

A more complete clean target, the distclean target, has also been added
6) make distclean

If you need to also clean the cmake created files, just delete the contents of the build folder and start from step 1)
7) rm -rf build/*



Appendix:

By default in cmake, each warning is treated as an error. During development one can turn this feature off with the -DWERROR=OFF switch. This is currently set automatically though, so no need to worry about it for now... but BEWARE: we might remove this switch at any time, so start getting rid of warnings generated by your code!!!
2b) cmake .. -DWERROR=OFF


Dear Mac OS X Users,

GAMBIT is not supporting the clang compiler due to a missing OpenMP support. This makes things more complicated, especially if you want to use external libraries compiled with clang. Please make sure that those libraries are compiled and linked with the "-stdlib-libstdc++" option.