Parameters:

  CMSSM:
    A0: [49.9589, 55.0]
    M0: 8304.61
    M12: 5808.96
    SignMu: 1
    TanBeta: 57.7776
  StandardModel_SLHA2:
    CKM_A: 0.814
    CKM_etabar: 0.353
    CKM_lambda: 0.22537
    CKM_rhobar: 0.117
    GF: 1.16638e-05
    alpha1: 0
    alpha2: 0
    alphaS: 0.120273
    alphainv: 127.94
    delta13: 0
    mBmB: 4.18
    mCmC: 1.275
    mD: 0.0048
    mE: 0.000510999
    mMu: 0.105658
    mNu1: 0
    mNu2: 0
    mNu3: 0
    mS: 0.095
    mT: 174.077
    mTau: 1.77682
    mU: 0.0023
    mZ: 91.1876
    theta12: 0.58376
    theta13: 0.15495
    theta23: 0.76958


Priors:

  # All priors simple, so specified in Parameters section

Printer:

  printer: hdf5

  options:
    output_file: "CMSSM_FlavOnly.hdf5"
    group: "/CMSSM"

Scanner:

  use_scanner: multinest

  scanners:
    multinest:
      plugin: MultiNest
      like:  LogLike
      nlive: 10000
      tol: 0.5
      updInt: 1

    de:
      plugin: Diver
      like: LogLike
      NP: 7200
      convthresh: 1e-3
      verbosity: 1

ObsLikes:

    # Flavour physics likelihoods
    - purpose:    LogLike
      capability: b2ll_LL

    - purpose:    LogLike
      capability: SL_LL

    - purpose:    LogLike
      capability: b2sll_LL

    - purpose:    LogLike
      capability: b2sgamma_LL

    # Precision physics likelihoods
    - capability: lnL_W_mass
      purpose:    LogLike

    - capability:  lnL_gm2
      purpose:     LogLike




Rules:

  # Tell all functions that are able to dump SLHA files to do so.
  #- options:
  #    drop_SLHA_file: true

  # Choose to use gm2calc for g-2
  - capability: muon_gm2
    function: GM2C_SUSY

  # Choose to base the SM prediction for g-2 on e+e- data
  - capability: muon_gm2_SM
    function: gm2_SM_ee


  # Choose to get the spectrum from SpecBit proper, not an SLHA file.
  - capability: unimproved_MSSM_spectrum
    function: get_CMSSM_spectrum
    options:
      # Set to match benchmark point specified in
      # SpecBit/MSSM_benchmark_points/LesHouches.in.MSSM_1
      precision_goal:        1.0e-4
      max_iterations:        0
      calculate_sm_masses:   false
      pole_mass_loop_order:  2
      ewsb_loop_order:       2
      beta_loop_order:       2
      threshold_corrections_loop_order: 1
      use_higgs_2loop_at_as: true
      use_higgs_2loop_ab_as: true
      use_higgs_2loop_at_at: true
      use_higgs_2loop_atau_atau: true
      invalid_point_fatal: false

  - capability: MSSM_spectrum
    type: Spectrum
    function: make_MSSM_precision_spectrum_none
    #function: make_MSSM_precision_spectrum_W
    #function: make_MSSM_precision_spectrum_H_W
    # The following options only have an impact when using make_MSSM_precision_spectrum_H_W.
    # Choose to take FeynHiggs' prediction for the Higgs mass (rather then FlexibleSUSY's).
    # Choose to use the difference between the FeynHiggs and spectrum generator predictions, along
    # with the FH error estimate, to estimate the theoretical error on the prediction.
    #options:
    #  Higgs_predictions_source: 1
    #  Higgs_predictions_error_method: 4

  # Make sure to use the next-to-latest version (2.11.3) of FeynHiggs for things that need it,
  # as the latest version (2.12.0) is buggy.
  # In practice, the easiest way to do this is just to not install / nuke the versions you don't want to use, e.g.
  #  make nuke-feynhiggs_2_12_0
  #  make nuke-feynhiggs_2_11_2
  # In a future version of GAMBIT, it will possible to just do this here in the yaml file:
  #- backend: FeynHiggs
  #  version: 2.11.3
  # If you want to do it from the yaml file now, you need to do this:
  #- capability: FH_Couplings_output
  #  backends:
  #  - {backend: FeynHiggs, version: 2.11.3}
  #- capability: FH_Precision
  #  backends:
  #  - {backend: FeynHiggs, version: 2.11.3}
  # The following two rules only have an impact when using make_MSSM_precision_spectrum_H_W
  #- capability: prec_HiggsMasses
  #  backends:
  #  - {backend: FeynHiggs, version: 2.11.3}
  #- capability: FH_MSSMMasses
  #  backends:
  #  - {backend: FeynHiggs, version: 2.11.3}


  # PrecisionBit likelihood function for light quark masses
  - capability: lnL_light_quark_masses
    options:
      # m_u/m_d
      mud_central: 0.48
      mud_error: 0.10
      # m_s / ((m_u + m_d)/2)
      msud_central: 27.5
      msud_error: 1.0
      # m_s
      ms_central: 95.E-03
      ms_error: 5.E-03


Logger:

  redirection:
    [Debug] : "debug.log"
    [Default] : "default.log"
    [DecayBit] : "DecayBit.log"
    [DarkBit] : "DarkBit.log"
    [PrecisionBit] : "PrecisionBit.log"
    [FlavBit] : "FlavBit.log"
    [ColliderBit] : "ColliderBit.log"
    [SpecBit] : "SpecBit.log"
    [Dependency Resolver] : "dep_resolver.log"

KeyValues:

  dependency_resolution:
    prefer_model_specific_functions: true

  likelihood:
    model_invalid_for_lnlike_below: -5e5
    model_invalid_for_lnlike_below_alt: -1e5

  default_output_path: "runs/CMSSM/"

  debug: true
