//   GAMBIT: Global and Modular BSM Inference Tool
//   *********************************************
///  \file                                       
///                                               
///  Automatically generated template             
///  specialisations for module functors, for     
///  the full GAMBIT executable.                  
///                                               
///  This file was automatically generated by     
///  module_harvester.py. Do not modify.          
///                                               
///  The content is harvested from:               
///   - rollcall headers in module_rollcall.hpp   
///   - types registered in types_rollcall.hpp    
///                                               
///  *********************************************
///                                               
///  Authors:                                     
///                                               
///  \author The GAMBIT Collaboration            
///  \date 03:01PM on October 23, 2019
///                                               
///  *********************************************
                                                  
#ifndef __module_functor_types_hpp__              
#define __module_functor_types_hpp__              
                                                  
#include "gambit/Elements/types_rollcall.hpp"   
#include "gambit/Elements/functor_definitions.hpp"
                                                  
namespace Gambit                                  
{                                                 
  template class module_functor<DecayTable>;
  template class module_functor<mass_es_pseudonyms>;
  template class module_functor<int>;
  template class module_functor<double>;
  template class module_functor<LocalMaxwellianHalo>;
  template class module_functor<float>;
  template class module_functor<Spectrum>;
  template class module_functor<unsigned>;
  template class module_functor<DecayTable::Entry>;
  template class module_functor<ModelParameters>;
  template class module_functor<std::vector<float>>;
  template class module_functor<SMInputs>;
  template class module_functor<std::vector<double>>;
  template class module_functor<DM_nucleon_couplings>;
}

#endif // defined __module_functor_types_hpp__
