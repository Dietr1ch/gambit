# Minimal GAMBIT DarkBit test initialization file (in YAML)
 
###################################
# Input parameter declarations
###################################

Parameters: 
    StandardModel_SLHA2: !import StandardModel_SLHA2_defaults.yaml
    nuclear_params_fnq: !import NuclearParams_fnq_defaults.yaml

    SingletDM:
        mass:
            range: [45, 100]
            prior_type: log
        lambda:
            range: [0.005, 0.5]
            #fixed_value: 0.0366524 
            prior_type: log

##############################
# Prior setup
##############################

Priors:

##############################
# Printer setup
##############################

Printer:

  # Select printer to use via string tag
  # (currently only ascii printer available)
  printer: ascii

  # This options node is passed on wholesale to
  # the printer object; required options may
  # therefore vary according to the selected
  # printer. 
  options:
    # name of output file
    output_file: "runs/DarkBit_SingletDM/samples/gambit_output.txt"
    # name of info file (explains content of output file)
    info_file: "runs/DarkBit_SingletDM/samples/gambit_output.info"

##############################
# Scanner setup
##############################

Scanner:
  use_scanner: square_grid
  
  scanners:
    square_grid:
      plugin: square_grid
      verion: ">=1.0"
      options:
        purpose: Likelihood
        grid_pts: 30 #NxN grid

###############################
# Observables of interest
###############################

# Complete list of likelihoods in DarkBit as of 2015-05-10
ObsLikes:
    - capability: IceCube_likelihood
      purpose: Likelihood

    - capability: lnL_oh2
      purpose: Likelihood 

    - capability: lnL_FermiLATdwarfs
      purpose:  Likelihood
    - capability: lnL_FermiGC
      purpose:  Likelihood

    - capability: lnL_XENON100_2012
      purpose:  Likelihood
    - capability: lnL_LUX_2013
      purpose:  Likelihood
    - capability: lnL_DARWIN_Ar_2015
      purpose:  Observable
    - capability: lnL_DARWIN_Xe_2015
      purpose:  Observable
      
# Complete list of likelihoods in DarkBit as of 2015-05-10
Rules:
  - capability: SM_spectrum 
    function: get_QedQcd_spectrum
    #function: get_SM_SubSpectrum_from_MSSM_Spectrum

  - capability: lnL_FermiLATdwarfs
    function: lnL_FermiLATdwarfs_gamLike
    #function: lnL_FermiLATdwarfsSimple

  - capability: IceCube_likelihood
    function: IC79_loglike
    #function: IC_loglike

  - capability: SimYieldTable
    function: SimYieldTable_DarkSusy
    #function: SimYieldTable_MicrOmegas
    #function: SimYieldTable_PPPC

  - capability: RD_oh2
    function: RD_oh2_general
    #function: RD_oh2_DarkSUSY  # This requires MSSM initialization of DS

  - capability: DD_couplings
    function: DD_couplings_SingletDM
    #function: DD_couplings_MicrOmegas  # This does not work properly!
    #function: DD_couplings_DarkSUSY  # This requires MSSM initialization of DS


#########################
# Logging setup
#########################

Logger:

  # Redirection of specific messages according to tags
  # Can redirect to stdout or stderr by specifying these as the "filenames". 
  # Obviously this also means it is impossible to redirect output to actual
  # files with these names.

  prefix : "runs/DarkBit_SingletDM/logs/"
  redirection:
    [Debug] : "debug.log"
    [Default] : "default.log"
    [Error] : "errors.log"
    [Warning] : "warnings.log"
    [Core,Error] : "core_errors.log"
    [Core,Error,Fatal] : "fatal_core_errors.log"
    [Dependency Resolver] : "stdout"
    [ExampleBit_A] : "ExampleBit_A.log"
    [ExampleBit_B] : "ExampleBit_B.log"
    [BackendIniBit]: "BackendIniBit.log"
    [LibFirst] : "libfirst.log"
  #  [Logger, Debug] : "stdout"
  #  [Core] : "stdout"
  #  [Dependency Resolver] : "stdout"

##########################
# Name/Value Section
##########################

KeyValues:

  dependency_resolution:
    prefer_model_specific_functions: true
    use_old_routines: false

  likelihood:
    model_invalid_for_lnlike_below: -1e6

  #By default, errors are fatal and warnings non-fatal
  exceptions:
    dependency_resolver_error: fatal
    dependency_resolver_warning: non-fatal
    core_warning: fatal
    ExampleBit_A_error: non-fatal

  enable_testing: false

