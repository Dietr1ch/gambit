# Ultra-minimal GAMBIT Initialization file (in YAML)
# Only needs example modules ExampleBit_A and ExampleBit_B,
# plus example backends libfirst and libFortran.
#
# Don't commit modified versions of this file!
# If you want to change it in order to test 
# your own modifications to the code, copy 
# it to DecayBit_test_personal.yaml, which will be 
# ignored by git.
#
# Pat Scott <p.scott@imperial.ac.uk>
# Oct 2014
#
 
###################################
# Input parameter declarations
###################################

Parameters: 

  CMSSM:
    A0:
      range: [-1000, 1000]
    M0:
      prior_type: log
      range: [0.001,1000]
    M12:
    #  same_as: CMSSM::M0
    Mstop:
      same_as: CMSSM::M0
    sgnmu:
      range: [-1, 1]
      fixed_value: 1
    tanb:
      fixed_value: 1



##############################
# Prior setup
##############################

Priors:
  # Here specify the priors, the parameters they work with, and any options as needed for that prior
  # A prior object is built for every entry here (along with any coming from 'ranges' keywords above), 
  # and then they are combined into a "composite" prior 

  m12_prior: 
    parameters: [CMSSM::M12]
    prior_type: composite
    options: 
      new_prior: 
        parameters: [CMSSM::M12]
        prior_type: log
        range: [100,2000]

##############################
# Printer setup
##############################

Printer:

  # Select printer to use via string tag
  # (currently only ascii printer available)
  printer: ascii

  # This options node is passed on wholesale to
  # the printer object; required options may
  # therefore vary according to the selected
  # printer. 
  options:
    # name of output file
    output_file: "runs/DecayBit_test/samples/gambit_output.txt"
    # name of info file (explains content of output file)
    info_file: "runs/DecayBit_test/samples/gambit_output.info"

Scanner:

  use_scanner: toy_mcmc

  scanners:
  
    toy_mcmc:
      plugin: toy_mcmc
      options:
        point_number: 2
        output_file:  output
        like:  Likelihood

            
ObsLikes:

  # Test CMSSM_I, ExampleBit_A and ExampleBit_B
  - purpose:      Likelihood
    capability:   lnL_ExampleBitB
    type:         double
    function:     ""
    module:       ""

   # Test DecayBit    
  - purpose:      Test
    capability:   decay_rates
    type:         DecayTable

Rules:

  - capability:   "LibFirst_1_1_init"
    dependencies:
    - {capability: "nevents", module: "ExampleBit_A"}  

  - capability:    "nevents_postcuts"
    dependencies:
    - {capability: "id", module: "ExampleBit_B"}

  - capability:    "MSSM_demo_parameters"
    dependencies:
    - {capability: "id", module: "ExampleBit_B"}

  - capability:    "function_pointer"
    backends:
    - {function: "externalFunction2"}

#########################
# Logging setup
#########################

Logger:

  # Redirection of specific messages according to tags
  # Can redirect to stdout or stderr by specifying these as the "filenames". 
  # Obviously this also means it is impossible to redirect output to actual
  # files with these names.

  prefix : "runs/DecayBit_test/logs/"
  redirection:
    [Debug] : "debug.log"
    [Default] : "default.log"
    [Error] : "errors.log"
    [Warning] : "warnings.log"
    [Core,Error] : "core_errors.log"
    [Core,Error,Fatal] : "fatal_core_errors.log"
    [Dependency Resolver] : "dependency_resolver.log"
    [ExampleBit_A] : "ExampleBit_A.log"
    [ExampleBit_B] : "ExampleBit_B.log"
    [DecayBit] : "DecayBit.log"


##########################
# Name/Value Section
##########################

KeyValues:

  dependency_resolution:
    prefer_model_specific_functions: true

  likelihood:
    model_invalid_for_lnlike_below: -1e6

