Code conventions
================

* .hpp and .cpp file suffixes
* CamelCase filenames for framework files, lowercase for examples/executables-to-be
* lower case variable names
* CamelCase class names
* lowCamelCase() or snake_style() function names
* indent with spaces... how many? 2? 4?
* everything in GAMBIT namespace
* what is the header include path? (#include "GAMBIT/HEColliderBit/Foo.hpp" would be nice)


Pythia8 OpenMP SUSY generation and analysis demo
================================================

py8-bsm.cc contains a proof-of-concept Pythia8 main program parallelised via OpenMP and
using FastJet and ROOT for a mini final-state particle analysis in the event loop. It
obviously needs to be worked on to make it suitable for inclusion in the Gambit framework
but being so simple makes it obvious what is going on. Build as follows:

g++ py8-bsm.cc -O3 -pedantic -Wall -Wshadow -Wno-long-long -fopenmp \
  `fastjet-config --cxxflags --libs --plugins` `root-config --cflags --libs --ldflags` \
  -I../include -L../lib/archive -lpythia8 -llhapdfdummy \
  -o bin/py8-bsm

g++ pythia8_example.cpp fastsim.cpp DetectorResponse.cpp -O3 -pedantic -Wall
  -Wno-long-long -fopenmp `fastjet-config --cxxflags --libs --plugins`
  `root-config --cflags --libs --ldflags` -I$PYTHIA8DIR/include -L$PYTHIA8DIR/lib/archive
  -lpythia8 -llhapdfdummy -o py8-example -Wno-sign-compare

The paths on the third line will need to be adapted to point at the Pythia8 installation,
until Pythia8 supplies its own pythia8-config (I'm working on it!)

Run as follows:

PYTHIA8DATA=../xmldoc bin/py8-bsm

or as follows for timing tests with explicit control over the number of threads:

time OMP_NUM_THREADS=1 PYTHIA8DATA=../xmldoc bin/py8-bsm
