#! /usr/bin/env python
# -*- python -*-

## Run like ./cmpAtlasXsecs atlasxsecs.root

import ROOT
ROOT.gROOT.SetBatch(True)

import sys, os, subprocess
assert len(sys.argv) == 2

def dev(sig, sigref):
    return (sig-sigref) / sigref
def regdev(sig, sigref, reg):
    return (sig-sigref) / (abs(sigref) + abs(reg))

f = ROOT.TFile(sys.argv[1])
tree = f.Get("SignalUncertainties")
for e in tree:
    if e.finalState == 2: ## gluino-gluino
        #os.system("../evalxsec slha/susy_msugra_%d_%d_0_10_P_softsusy.slha" % (e.m0, e.m12))
        slhafile = "slha/susy_msugra_%d_%d_0_10_P_softsusy.slha" % (e.m0, e.m12)
        #print slhafile
        s = subprocess.check_output(["../evalxsec", slhafile])
        xsec = float(s.splitlines()[-1])
        d = dev(xsec, e.crossSection)
        d = regdev(xsec, e.crossSection, reg=1e-6)
        #print " ", e.m0, e.m12, e.crossSection, xsec, "=>", d
        print e.m0, e.m12, e.crossSection, d
        #print d
