digraph G {
0[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">CMSSM_demo_parameters</font><br/>Type: ModelParameters<br/>Function: primary_parameters<br/>Module: CMSSM_demo>];
1[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">MSSM78atMGUT_parameters</font><br/>Type: ModelParameters<br/>Function: MSSM78atMGUT_parameters<br/>Module: CMSSM>];
2[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">CMSSM_parameters</font><br/>Type: ModelParameters<br/>Function: CMSSM_parameters<br/>Module: extraCMSSM>];
3[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">test_parent_I_parameters</font><br/>Type: ModelParameters<br/>Function: test_parent_I_parameters<br/>Module: MSSM_demo>];
4[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">Mstop_obs</font><br/>Type: double<br/>Function: Mstop<br/>Module: CMSSM_demo>];
5[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">MSSM_demo_parameters</font><br/>Type: ModelParameters<br/>Function: MSSM_demo_parameters<br/>Module: CMSSM_demo>];
6[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">earthvel</font><br/>Type: double<br/>Function: v_earth<br/>Module: SomeOther_Halo_demo>];
7[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">blah0cap</font><br/>Type: double<br/>Function: blah0<br/>Module: SomeOther_Halo_demo>];
8[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">TWOHDM_demo_parent_parameters</font><br/>Type: ModelParameters<br/>Function: TWOHDM_demo_parent_parameters<br/>Module: TWOHDM_demo>];
9[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">MSSM_demo_parameters</font><br/>Type: ModelParameters<br/>Function: MSSM_demo_parameters<br/>Module: TWOHDM_demo>];
10[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">TWOHDM_demo_parameters</font><br/>Type: ModelParameters<br/>Function: TWOHDM_demo_parameters<br/>Module: TWOHDM_sub_demo>];
11[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">MSSM78_parameters</font><br/>Type: ModelParameters<br/>Function: MSSM78_parameters<br/>Module: MSSM25>];
12[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">BOSSMinimalExample_1_2_init</font><br/>Type: void<br/>Function: BOSSMinimalExample_1_2_init<br/>Module: BackendIniBit>];
13[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">BOSSMinimalExample_1_0_init</font><br/>Type: void<br/>Function: BOSSMinimalExample_1_0_init<br/>Module: BackendIniBit>];
14[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">HiggsBounds_4_1_init</font><br/>Type: void<br/>Function: HiggsBounds_4_1_init<br/>Module: BackendIniBit>];
15[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">Pythia_8_186_init</font><br/>Type: void<br/>Function: Pythia_8_186_init<br/>Module: BackendIniBit>];
16[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">HiggsSignals_1_2_init</font><br/>Type: void<br/>Function: HiggsSignals_1_2_init<br/>Module: BackendIniBit>];
17[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">FastSim_1_0_init</font><br/>Type: void<br/>Function: FastSim_1_0_init<br/>Module: BackendIniBit>];
18[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">LibFarrayTest_1_0_init</font><br/>Type: void<br/>Function: LibFarrayTest_1_0_init<br/>Module: BackendIniBit>];
19[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">LibFortran_1_0_init</font><br/>Type: void<br/>Function: LibFortran_1_0_init<br/>Module: BackendIniBit>];
20[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">BOSSMinimalExample_1_1_init</font><br/>Type: void<br/>Function: BOSSMinimalExample_1_1_init<br/>Module: BackendIniBit>];
21[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">micromegas_0_1_init</font><br/>Type: void<br/>Function: micromegas_0_1_init<br/>Module: BackendIniBit>];
22[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">nulike_1_0_0_init</font><br/>Type: void<br/>Function: nulike_1_0_0_init<br/>Module: BackendIniBit>];
23[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">SuperIso_3_4_init</font><br/>Type: void<br/>Function: SuperIso_3_4_init<br/>Module: BackendIniBit>];
24[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">DarkSUSY_0_1_init</font><br/>Type: void<br/>Function: DarkSUSY_0_1_init<br/>Module: BackendIniBit>];
25[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">DDCalc0_0_0_init</font><br/>Type: void<br/>Function: DDCalc0_0_0_init<br/>Module: BackendIniBit>];
26[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">gamLike_1_0_0_init</font><br/>Type: void<br/>Function: gamLike_1_0_0_init<br/>Module: BackendIniBit>];
27[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">SUSYHIT_0_1_init</font><br/>Type: void<br/>Function: SUSYHIT_0_1_init<br/>Module: BackendIniBit>];
28[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">FeynHiggs_2_10_init</font><br/>Type: void<br/>Function: FeynHiggs_2_10_init<br/>Module: BackendIniBit>];
29[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">LibFirst_1_0_init</font><br/>Type: void<br/>Function: LibFirst_1_0_init<br/>Module: BackendIniBit>];
30[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">LibFirst_1_1_init</font><br/>Type: void<br/>Function: LibFirst_1_1_init<br/>Module: BackendIniBit>];
31[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">MSSMspectrum</font><br/>Type: eaSLHA<br/>Function: getMSSMspectrum<br/>Module: DarkBit>];
32[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">RD_spectrum</font><br/>Type: DarkBit::RD_spectrum_type<br/>Function: RD_spectrum_SUSY<br/>Module: DarkBit>];
33[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">RD_thresholds_resonances</font><br/>Type: DarkBit::TH_resonances_thresholds<br/>Function: RD_thresholds_resonances_from_ProcessCatalog<br/>Module: DarkBit>];
34[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">RD_thresholds_resonances</font><br/>Type: DarkBit::TH_resonances_thresholds<br/>Function: RD_thresholds_resonances_from_spectrum<br/>Module: DarkBit>];
35[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">RD_thresholds_resonances</font><br/>Type: DarkBit::TH_resonances_thresholds<br/>Function: RD_thresholds_resonances_SingletDM<br/>Module: DarkBit>];
36[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">RD_eff_annrate_SUSY_DSprep</font><br/>Type: int<br/>Function: RD_eff_annrate_SUSY_DSprep_func<br/>Module: DarkBit>];
37[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">RD_eff_annrate</font><br/>Type: fptr_dd<br/>Function: RD_eff_annrate_SUSY<br/>Module: DarkBit>];
38[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">RD_eff_annrate</font><br/>Type: fptr_dd<br/>Function: RD_eff_annrate_from_ProcessCatalog<br/>Module: DarkBit>];
39[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">RD_oh2</font><br/>Type: double<br/>Function: RD_oh2_general<br/>Module: DarkBit>];
40[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">RD_oh2</font><br/>Type: double<br/>Function: RD_oh2_DarkSUSY<br/>Module: DarkBit>];
41[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">RD_oh2</font><br/>Type: double<br/>Function: RD_oh2_micromegas<br/>Module: DarkBit>];
42[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">cascadeMC_FinalStates_Constructor</font><br/>Type: DarkBit::mutableFinalStateContainer<br/>Function: cascadeMC_FinalStates_Constructor<br/>Module: DarkBit>];
43[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">cascadeMC_FinalStates_Enable_gamma</font><br/>Type: bool<br/>Function: cascadeMC_FinalStates_Enable_gamma<br/>Module: DarkBit>];
44[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">cascadeMC_FinalStates_Enable_test6</font><br/>Type: bool<br/>Function: cascadeMC_FinalStates_Enable_test6<br/>Module: DarkBit>];
45[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">cascadeMC_FinalStates_SetThroughYaml</font><br/>Type: bool<br/>Function: cascadeMC_FinalStates_SetThroughYaml<br/>Module: DarkBit>];
46[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">cascadeMC_FinalStates</font><br/>Type: std::vector&lt;std::string&gt;<br/>Function: cascadeMC_FinalStates<br/>Module: DarkBit>];
47[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">cascadeMC_printFinalStates</font><br/>Type: bool<br/>Function: cascadeMC_printFinalStates<br/>Module: DarkBit>];
48[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">cascadeMC_ChainList</font><br/>Type: std::vector&lt;std::string&gt;<br/>Function: cascadeMC_TestList<br/>Module: DarkBit>];
49[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">cascadeMC_DecayTable</font><br/>Type: DarkBit::DecayChain::DecayTable<br/>Function: cascadeMC_DecayTable<br/>Module: DarkBit>];
50[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">cascadeMC_LoopManagement</font><br/>Type: void<br/>Function: cascadeMC_LoopManager<br/>Module: DarkBit>];
51[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">cascadeMC_InitialState</font><br/>Type: std::string<br/>Function: cascadeMC_InitialState<br/>Module: DarkBit>];
52[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">cascadeMC_EventCount</font><br/>Type: DarkBit::stringIntMap<br/>Function: cascadeMC_EventCount<br/>Module: DarkBit>];
53[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">cascadeMC_ChainEvent</font><br/>Type: DarkBit::DecayChain::ChainContainer<br/>Function: cascadeMC_GenerateChain<br/>Module: DarkBit>];
54[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">cascadeMC_Histograms</font><br/>Type: DarkBit::simpleHistContainter<br/>Function: cascadeMC_Histograms<br/>Module: DarkBit>];
55[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">cascadeMC_gammaSpectra</font><br/>Type: DarkBit::stringFunkMap<br/>Function: cascadeMC_gammaSpectra<br/>Module: DarkBit>];
56[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">cascadeMC_PrintResult</font><br/>Type: bool<br/>Function: cascadeMC_PrintResult<br/>Module: DarkBit>];
57[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">chain_test_cap</font><br/>Type: double<br/>Function: chain_test<br/>Module: DarkBit>];
58[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">GA_AnnYield</font><br/>Type: Funk::Funk<br/>Function: GA_AnnYield_DarkSUSY<br/>Module: DarkBit>];
59[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">GA_AnnYield</font><br/>Type: Funk::Funk<br/>Function: ToyAnnYield<br/>Module: DarkBit>];
60[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">TH_ProcessCatalog</font><br/>Type: DarkBit::TH_ProcessCatalog<br/>Function: TH_ProcessCatalog_CMSSM<br/>Module: DarkBit>];
61[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">TH_ProcessCatalog</font><br/>Type: DarkBit::TH_ProcessCatalog<br/>Function: TH_ProcessCatalog_SingletDM<br/>Module: DarkBit>];
62[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">lnL_FermiLATdwarfs</font><br/>Type: double<br/>Function: lnL_FermiLATdwarfsSimple<br/>Module: DarkBit>];
63[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">lnL_FermiLATdwarfs</font><br/>Type: double<br/>Function: lnL_FermiLATdwarfs_gamLike<br/>Module: DarkBit>];
64[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">lnL_FermiGC</font><br/>Type: double<br/>Function: lnL_FermiGC_gamLike<br/>Module: DarkBit>];
65[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">dump_GammaSpectrum</font><br/>Type: double<br/>Function: dump_GammaSpectrum<br/>Module: DarkBit>];
66[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">lnL_oh2</font><br/>Type: double<br/>Function: lnL_oh2_Simple<br/>Module: DarkBit>];
67[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">DD_couplings</font><br/>Type: DarkBit::DD_couplings<br/>Function: DD_couplings_DarkSUSY<br/>Module: DarkBit>];
68[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">DD_couplings</font><br/>Type: DarkBit::DD_couplings<br/>Function: DD_couplings_micrOMEGAs<br/>Module: DarkBit>];
69[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">DD_couplings</font><br/>Type: DarkBit::DD_couplings<br/>Function: DD_couplings_SingletDM<br/>Module: DarkBit>];
70[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">lnL_XENON100_2012</font><br/>Type: double<br/>Function: lnL_XENON100_2012<br/>Module: DarkBit>];
71[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">lnL_LUX_2013</font><br/>Type: double<br/>Function: lnL_LUX_2013<br/>Module: DarkBit>];
72[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">lnL_DARWIN_Ar_2014</font><br/>Type: double<br/>Function: lnL_DARWIN_Ar_2014<br/>Module: DarkBit>];
73[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">lnL_DARWIN_Xe_2014</font><br/>Type: double<br/>Function: lnL_DARWIN_Xe_2014<br/>Module: DarkBit>];
74[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">lnL_DD_test</font><br/>Type: double<br/>Function: lnL_DD_test<br/>Module: DarkBit>];
75[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">IC22_data</font><br/>Type: nudata<br/>Function: IC22_full<br/>Module: DarkBit>];
76[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">IC22_signal</font><br/>Type: double<br/>Function: IC22_signal<br/>Module: DarkBit>];
77[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">IC22_bg</font><br/>Type: double<br/>Function: IC22_bg<br/>Module: DarkBit>];
78[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">IC22_loglike</font><br/>Type: double<br/>Function: IC22_loglike<br/>Module: DarkBit>];
79[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">IC22_pvalue</font><br/>Type: double<br/>Function: IC22_pvalue<br/>Module: DarkBit>];
80[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">IC22_nobs</font><br/>Type: int<br/>Function: IC22_nobs<br/>Module: DarkBit>];
81[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">IC79WH_data</font><br/>Type: nudata<br/>Function: IC79WH_full<br/>Module: DarkBit>];
82[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">IC79WH_signal</font><br/>Type: double<br/>Function: IC79WH_signal<br/>Module: DarkBit>];
83[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">IC79WH_bg</font><br/>Type: double<br/>Function: IC79WH_bg<br/>Module: DarkBit>];
84[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">IC79WH_loglike</font><br/>Type: double<br/>Function: IC79WH_loglike<br/>Module: DarkBit>];
85[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">IC79WH_pvalue</font><br/>Type: double<br/>Function: IC79WH_pvalue<br/>Module: DarkBit>];
86[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">IC79WH_nobs</font><br/>Type: int<br/>Function: IC79WH_nobs<br/>Module: DarkBit>];
87[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">IC79WL_data</font><br/>Type: nudata<br/>Function: IC79WL_full<br/>Module: DarkBit>];
88[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">IC79WL_signal</font><br/>Type: double<br/>Function: IC79WL_signal<br/>Module: DarkBit>];
89[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">IC79WL_bg</font><br/>Type: double<br/>Function: IC79WL_bg<br/>Module: DarkBit>];
90[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">IC79WL_loglike</font><br/>Type: double<br/>Function: IC79WL_loglike<br/>Module: DarkBit>];
91[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">IC79WL_pvalue</font><br/>Type: double<br/>Function: IC79WL_pvalue<br/>Module: DarkBit>];
92[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">IC79WL_nobs</font><br/>Type: int<br/>Function: IC79WL_nobs<br/>Module: DarkBit>];
93[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">IC79SL_data</font><br/>Type: nudata<br/>Function: IC79SL_full<br/>Module: DarkBit>];
94[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">IC79SL_signal</font><br/>Type: double<br/>Function: IC79SL_signal<br/>Module: DarkBit>];
95[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">IC79SL_bg</font><br/>Type: double<br/>Function: IC79SL_bg<br/>Module: DarkBit>];
96[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">IC79SL_loglike</font><br/>Type: double<br/>Function: IC79SL_loglike<br/>Module: DarkBit>];
97[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">IC79SL_pvalue</font><br/>Type: double<br/>Function: IC79SL_pvalue<br/>Module: DarkBit>];
98[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">IC79SL_nobs</font><br/>Type: int<br/>Function: IC79SL_nobs<br/>Module: DarkBit>];
99[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">IceCube_likelihood</font><br/>Type: double<br/>Function: IC_loglike<br/>Module: DarkBit>];
100[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">nuyield</font><br/>Type: nuyield_functype<br/>Function: nuyield_toy<br/>Module: DarkBit>];
101[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">mwimp</font><br/>Type: double<br/>Function: mwimp_toy<br/>Module: DarkBit>];
102[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">annrate</font><br/>Type: double<br/>Function: annrate_toy<br/>Module: DarkBit>];
103[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">UnitTest_DarkBit</font><br/>Type: int<br/>Function: UnitTest_DarkBit<br/>Module: DarkBit>];
104[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">SimYieldTable</font><br/>Type: DarkBit::SimYieldTable<br/>Function: SimYieldTable_DarkSusy<br/>Module: DarkBit>];
105[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">testSUSYBRs</font><br/>Type: double<br/>Function: decayTest<br/>Module: DecayBit>];
106[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">FH_Precision</font><br/>Type: double<br/>Function: FH_Precision<br/>Module: EWPOBit>];
107[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">FH_Masses</font><br/>Type: double<br/>Function: FH_Masses<br/>Module: EWPOBit>];
108[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">FH_Flavor</font><br/>Type: double<br/>Function: FH_Flavor<br/>Module: EWPOBit>];
109[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">FH_Higgs</font><br/>Type: double<br/>Function: FH_Higgs<br/>Module: EWPOBit>];
110[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">eventLoopManagement</font><br/>Type: void<br/>Function: eventLoopManager<br/>Module: ExampleBit_A>];
111[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">event</font><br/>Type: singleprec<br/>Function: exampleEventGen<br/>Module: ExampleBit_A>];
112[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">event</font><br/>Type: int<br/>Function: exampleCut<br/>Module: ExampleBit_A>];
113[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">eventAccumulation</font><br/>Type: int<br/>Function: eventAccumulator<br/>Module: ExampleBit_A>];
114[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">nevents</font><br/>Type: double<br/>Function: nevents_dbl<br/>Module: ExampleBit_A>];
115[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">nevents</font><br/>Type: int<br/>Function: nevents_int<br/>Module: ExampleBit_A>];
116[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">nevents_like</font><br/>Type: double<br/>Function: nevents_like<br/>Module: ExampleBit_A>];
117[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">event_gen</font><br/>Type: HEPUtils::Event<br/>Function: Aldos_evgen<br/>Module: ExampleBit_A>];
118[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">fast_sim_init</font><br/>Type: double<br/>Function: fast_sim_init<br/>Module: ExampleBit_A>];
119[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">function_pointer</font><br/>Type: fptr<br/>Function: function_pointer_retriever<br/>Module: ExampleBit_A>];
120[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">id</font><br/>Type: std::string<br/>Function: identity<br/>Module: ExampleBit_A>];
121[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">damu</font><br/>Type: double<br/>Function: damu<br/>Module: ExampleBit_A>];
122[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">normaldist_loglike</font><br/>Type: double<br/>Function: normaldist_loglike<br/>Module: ExampleBit_A>];
123[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">doFarrayStuff</font><br/>Type: double<br/>Function: do_Farray_stuff<br/>Module: ExampleBit_A>];
124[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">marg_lnlike_test</font><br/>Type: double<br/>Function: marg_poisson_test<br/>Module: ExampleBit_A>];
125[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">BOSSed_X</font><br/>Type: X<br/>Function: bossed_class_example1<br/>Module: ExampleBit_A>];
126[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">BOSS_tester</font><br/>Type: int<br/>Function: bossed_class_example2<br/>Module: ExampleBit_A>];
127[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">Pythia_tester</font><br/>Type: bool<br/>Function: bossed_pythia_test_function<br/>Module: ExampleBit_A>];
128[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">xsection</font><br/>Type: double<br/>Function: xsection<br/>Module: ExampleBit_B>];
129[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">charge</font><br/>Type: int<br/>Function: exampleCharge<br/>Module: ExampleBit_B>];
130[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">nevents_postcuts</font><br/>Type: int<br/>Function: nevents_postcuts<br/>Module: ExampleBit_B>];
131[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">id</font><br/>Type: std::string<br/>Function: identity<br/>Module: ExampleBit_B>];
132[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">nevents</font><br/>Type: int<br/>Function: nevents<br/>Module: ExampleBit_B>];
133[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">ptrmeth_arr_tester</font><br/>Type: int<br/>Function: ptrMethArrTester<br/>Module: ExampleBit_B>];
134[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">test_vector</font><br/>Type: std::vector&lt;double&gt;<br/>Function: exampleVec<br/>Module: ExampleBit_B>];
135[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">lnL_ExampleBitB</font><br/>Type: double<br/>Function: lnL_ExampleBitB<br/>Module: ExampleBit_B>];
136[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">PointInit</font><br/>Type: void<br/>Function: PointInit_Default<br/>Module: FlavBit>];
137[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">SI_fill</font><br/>Type: parameters<br/>Function: SI_fill<br/>Module: FlavBit>];
138[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">SI_bsgamma</font><br/>Type: double<br/>Function: SI_bsgamma<br/>Module: FlavBit>];
139[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">SI_Bsmumu</font><br/>Type: double<br/>Function: SI_Bsmumu<br/>Module: FlavBit>];
140[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">SI_Bsmumu_untag</font><br/>Type: double<br/>Function: SI_Bsmumu_untag<br/>Module: FlavBit>];
141[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">SI_Bdmumu</font><br/>Type: double<br/>Function: SI_Bdmumu<br/>Module: FlavBit>];
142[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">SI_Btaunu</font><br/>Type: double<br/>Function: SI_Btaunu<br/>Module: FlavBit>];
143[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">SI_BDtaunu</font><br/>Type: double<br/>Function: SI_BDtaunu<br/>Module: FlavBit>];
144[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">SI_BDtaunu_BDenu</font><br/>Type: double<br/>Function: SI_BDtaunu_BDenu<br/>Module: FlavBit>];
145[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">SI_Kmunu_pimunu</font><br/>Type: double<br/>Function: SI_Kmunu_pimunu<br/>Module: FlavBit>];
146[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">SI_Rmu23</font><br/>Type: double<br/>Function: SI_Rmu23<br/>Module: FlavBit>];
147[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">SI_Dstaunu</font><br/>Type: double<br/>Function: SI_Dstaunu<br/>Module: FlavBit>];
148[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">SI_Dsmunu</font><br/>Type: double<br/>Function: SI_Dsmunu<br/>Module: FlavBit>];
149[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">SI_Dmunu</font><br/>Type: double<br/>Function: SI_Dmunu<br/>Module: FlavBit>];
150[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">SI_muon_gm2</font><br/>Type: double<br/>Function: SI_muon_gm2<br/>Module: FlavBit>];
151[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">SI_delta0</font><br/>Type: double<br/>Function: SI_delta0<br/>Module: FlavBit>];
152[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">SI_BRBXsmumu_lowq2</font><br/>Type: double<br/>Function: SI_BRBXsmumu_lowq2<br/>Module: FlavBit>];
153[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">SI_BRBXsmumu_highq2</font><br/>Type: double<br/>Function: SI_BRBXsmumu_highq2<br/>Module: FlavBit>];
154[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">SI_A_BXsmumu_lowq2</font><br/>Type: double<br/>Function: SI_A_BXsmumu_lowq2<br/>Module: FlavBit>];
155[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">SI_A_BXsmumu_highq2</font><br/>Type: double<br/>Function: SI_A_BXsmumu_highq2<br/>Module: FlavBit>];
156[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">SI_A_BXsmumu_zero</font><br/>Type: double<br/>Function: SI_A_BXsmumu_zero<br/>Module: FlavBit>];
157[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">SI_BRBXstautau_highq2</font><br/>Type: double<br/>Function: SI_BRBXstautau_highq2<br/>Module: FlavBit>];
158[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">SI_A_BXstautau_highq2</font><br/>Type: double<br/>Function: SI_A_BXstautau_highq2<br/>Module: FlavBit>];
159[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">SI_BRBKstarmumu</font><br/>Type: double<br/>Function: SI_BRBKstarmumu<br/>Module: FlavBit>];
160[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">SI_AI_BKstarmumu</font><br/>Type: double<br/>Function: SI_AI_BKstarmumu<br/>Module: FlavBit>];
161[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">SI_AI_BKstarmumu_zero</font><br/>Type: double<br/>Function: SI_AI_BKstarmumu_zero<br/>Module: FlavBit>];
162[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">PointInit</font><br/>Type: void<br/>Function: PointInit_Default<br/>Module: HiggsBit>];
163[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">HB_LEPchisq</font><br/>Type: double<br/>Function: HB_LEPchisq<br/>Module: HiggsBit>];
164[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">HS_LHCchisq</font><br/>Type: double<br/>Function: HS_LHCchisq<br/>Module: HiggsBit>];
165[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">MSSM_spectrum</font><br/>Type: Spectrum*<br/>Function: make_test_spectrum<br/>Module: SpecBit>];
166[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">MSSM_spectrum</font><br/>Type: Spectrum*<br/>Function: get_CMSSM_spectrum<br/>Module: SpecBit>];
167[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">MSSM_spectrum</font><br/>Type: Spectrum*<br/>Function: get_MSSMatQ_spectrum<br/>Module: SpecBit>];
168[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">MSSM_spectrum</font><br/>Type: Spectrum*<br/>Function: get_MSSMatMGUT_spectrum<br/>Module: SpecBit>];
169[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">MSSM_spectrum</font><br/>Type: Spectrum*<br/>Function: get_GUTMSSMB_spectrum<br/>Module: SpecBit>];
170[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">MSSM_spectrum</font><br/>Type: eaSLHA<br/>Function: get_MSSM_spectrum_as_SLHAea<br/>Module: SpecBit>];
171[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">SM_spectrum</font><br/>Type: Spectrum*<br/>Function: convert_MSSM_to_SM<br/>Module: SpecBit>];
172[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">specbit_tests1</font><br/>Type: double<br/>Function: specbit_test_func1<br/>Module: SpecBit>];
173[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">specbit_tests2</font><br/>Type: double<br/>Function: specbit_test_func2<br/>Module: SpecBit>];
174[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">specbit_tests3</font><br/>Type: double<br/>Function: specbit_test_func3<br/>Module: SpecBit>];
175[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">dump_spectrum_slha</font><br/>Type: double<br/>Function: dump_spectrum<br/>Module: SpecBit>];
176[fillcolor="#F0F0D0", style="rounded,filled", shape=box,label=< <font point-size="20" color="red">SpecBit_examples</font><br/>Type: bool<br/>Function: exampleRead<br/>Module: SpecBit>];
130->135 ;
30->133 ;
134->133 ;
113->116 ;
114->116 ;
28->107 ;
28->109 ;
28->108 ;
30->130 ;
19->130 ;
119->130 ;
131->130 ;
114->130 ;
115->30 ;
112->113 ;
110->113 ;
128->114 ;
19->119 ;
114->115 ;
111->112 ;
110->112 ;
5->128 ;
110->111 ;
0->5 ;
131->5 ;
}
