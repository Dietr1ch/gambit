# Ultra-minimal GAMBIT Initialization file (in YAML)
# Only needs example modules ExampleBit_A and ExampleBit_B,
# plus example backends libfirst and libFortran.
#
# To use this you'll need to 
# make
# make libfirst
# make libfortran
#
# Don't commit modified versions of this file!
# If you want to change it in order to test 
# your own modifications to the code, copy 
# it to spartan_personal.yaml, which will be 
# ignored by git.
#
# Pat Scott <p.scott@imperial.ac.uk>
# Oct 2014
#
 
###################################
# Input parameter declarations
###################################

Parameters: 



##############################
# Prior setup
##############################

Priors:

  # Here specify the priors, the parameters they work with, and any options as needed for that prior
  # A prior object is built for every entry here (along with any coming from 'ranges' keywords above), 
  # and then they are combined into a "composite" prior 

##############################
# Printer setup
##############################

Printer:

  # Select printer to use via string tag
  # (currently only ascii printer available)
  #printer: ascii
  printer: hdf5

  # This options node is passed on wholesale to
  # the printer object; required options may
  # therefore vary according to the selected
  # printer. 
  options:
    # name of output file
    #output_file: "runs/spartan/samples/gambit_output2.txt"
    # name of info file (explains content of output file)
    #info_file: "runs/spartan/samples/gambit_output2.info"

    output_file: "runs/test_hdf5/samples/gambit_output.hdf5"
    group: "/test/test2"
    delete_file_if_exists: true

##############################
# Scanner setup
##############################

Scanner:

  use_objectives: EggBox
  #use_scanner: gal_0, gal_1, gal_2, gal_3, gal_4, gal_5, gal_6, gal_m
  use_scanner: twalk
  #find_shift
  #find_kernel
  #object_detection
  #use_scanner: gal_1
  #find_kernel
  #gnest, bin_grid_greg

  scanners:
  
    twalk:
      plugin: twalk
      options:
        tolerance: 1.001
        #chain_number: 20
        projection_dimension: 4
      
    ransample:
      plugin: random_sampler
      options:
        #point_number: 20
        output_file:  output
        like:  Likelihood
        files:
          output_file: "weights ..."
          
    toy:
      purpose: Likelihood
      plugin: toy_mcmc
      #plugin_path: /home/gmartine/libsample.so
          
    square_grid:
      plugin: square_grid
      version: ">=1.0"
      options:
        purpose: Likelihood
        grid_pts: 3 #NxN grid
        
    grid:
      plugin: grid
      version: ">=1.0"
      options:
        purpose: Likelihood
        grid_pts: [4, 2]
        
    multinest:
      plugin: MultiNest
      options:
        like:  Likelihood
        nlive: 500
        tol: 0.1
        aux_printer_txt_options:
          output_file: "runs/spartan_multinest/samples/gambit_output.txt"
          info_file: "runs/spartan_multinest/samples/gambit_output.txt_info"
        aux_printer_stats_options:
          output_file: "runs/spartan_multinest/samples/gambit_output.stats"
          info_file: "runs/spartan_multinest/samples/gambit_output.stats_info"
        aux_printer_live_options:
          output_file: "runs/spartan_multinest/samples/gambit_output.live"
          info_file: "runs/spartan_multinest/samples/gambit_output.live_info"
          
    gnest:
      plugin: gnest
      options:
        file_name: "output_file"
        like_purpose: Likelihood
        live_number: 2000
          
    bin_grid:
      plugin: bin_grid
      options:
        input_files: ["runs/spartan_multinest/samples/gambit_output.txt"]
        output_file: "output"
        xrange: [0, 1]
        yrange: [0, 1]
        grid: [100, 100]
        selected_pts: [2, 3]
        mult: 5
        flags: ["linear"]
        
    bin_grid_greg:
      plugin: bin_grid
      options:
        input_files: ["output_file"]
        output_file: "output"
        xrange: [0.0, 1.0]
        yrange: [0.0, 1.0]
        grid: [100, 100]
        selected_pts: [0, 1]
        mult: 0
        flags: ["linear"]
        
##########################################
    
    hdf5:
      plugin: bin_grid
      options:
        use_hdf5: true
        input_files: ["runs/test_hdf5/samples/gambit_output.hdf5"]
        groups: ["/test/test2"]
        output_file: "output_hdf5"
        #xrange: [2.0, 6.0]
        xrange: [0, 1]
        yrange: [0, 1]
        #xrange: [-5, 5]
        #yrange: [-5, 5]
        grid: [50, 50]
        selected_pts: 
          - "EggBox::param_0"
          - "EggBox::param_1"
        #selected_pts: 
        #  - "gaussian::param_0"
        #  - "gaussian::param_1"
        mult: ["mult"]
        #loglike: 1
        flags: ["linear"]
        #flags: ["linear", "noadjx", "logx"]
        
    gal_0:
      plugin: bin_grid
      options:
        input_files: ["/home/gmartine/Downloads/drop/no7/efit_.txt"]
        output_file: "output0"
        #xrange: [2.0, 6.0]
        xrange: [2.0e6, 6.0e6]
        yrange: [5000.0, 10000.0]
        grid: [100, 100]
        selected_pts: [0, 6]
        mult: 0
        loglike: 1
        flags: ["linear"]
        #flags: ["linear", "noadjx", "logx"]
        
    gal_1:
      plugin: bin_grid
      options:
        input_files: ["/home/gmartine/Downloads/drop/no9/efit_.txt"]
        output_file: "output1"
        #xrange: [2.0, 6.0]
        xrange: [2.0e6, 6.0e6]
        yrange: [5000.0, 10000.0]
        grid: [100, 100]
        selected_pts: [0, 6]
        mult: 0
        loglike: 1
        flags: ["linear"]
        #flags: ["linear", "noadjx", "logx"]
    gal_2:
      plugin: bin_grid
      options:
        input_files: ["/home/gmartine/Downloads/drop/no10/efit_.txt"]
        output_file: "output2"
        #xrange: [2.0, 6.0]
        xrange: [2.0e6, 6.0e6]
        yrange: [5000.0, 10000.0]
        grid: [100, 100]
        selected_pts: [0, 6]
        mult: 0
        loglike: 1
        flags: ["linear"]
        #flags: ["linear", "noadjx", "logx"]
    gal_3:
      plugin: bin_grid
      options:
        input_files: ["/home/gmartine/Downloads/drop/no12/efit_.txt"]
        output_file: "output3"
        #xrange: [2.0, 6.0]
        xrange: [2.0e6, 6.0e6]
        yrange: [5000.0, 10000.0]
        grid: [100, 100]
        selected_pts: [0, 6]
        mult: 0
        loglike: 1
        flags: ["linear"]
        #flags: ["linear", "noadjx", "logx"]
    gal_4:
      plugin: bin_grid
      options:
        input_files: ["/home/gmartine/Downloads/drop/no15/efit_.txt"]
        output_file: "output4"
        #xrange: [2.0, 6.0]
        xrange: [2.0e6, 6.0e6]
        yrange: [5000.0, 10000.0]
        grid: [100, 100]
        selected_pts: [0, 6]
        mult: 0
        loglike: 1
        flags: ["linear"]
        #flags: ["linear", "noadjx", "logx"]
    gal_5:
      plugin: bin_grid
      options:
        input_files: ["/home/gmartine/Downloads/drop/no17/efit_.txt"]
        output_file: "output5"
        #xrange: [2.0, 6.0]
        xrange: [2.0e6, 6.0e6]
        yrange: [5000.0, 10000.0]
        grid: [100, 100]
        selected_pts: [0, 6]
        mult: 0
        loglike: 1
        flags: ["linear"]
        #flags: ["linear", "noadjx", "logx"]
    gal_6:
      plugin: bin_grid
      options:
        input_files: ["/home/gmartine/Downloads/drop/no28/efit_.txt"]
        output_file: "output6"
        #xrange: [2.0, 6.0]
        xrange: [2.0e6, 6.0e6]
        yrange: [5000.0, 10000.0]
        grid: [100, 100]
        selected_pts: [0, 6]
        mult: 0
        loglike: 1
        flags: ["linear"]
        #flags: ["linear", "noadjx", "logx"]
    gal_m:
      plugin: bin_grid
      options:
        input_files: ["/home/gmartine/Downloads/drop/efit_.txt"]
        output_file: "outputm"
        #xrange: [2.0, 6.0]
        xrange: [2.0e6, 6.0e6]
        yrange: [5000.0, 10000.0]
        grid: [100, 100]
        selected_pts: [0, 6]
        mult: 0
        loglike: 1
        flags: ["linear"]
        #flags: ["linear", "noadjx", "logx"]
        
    find_shift:
      plugin: find_shift
      options:
        input_files:
          - "/home/gmartine/Downloads/drop/no7/efit_.txt"
          - "/home/gmartine/Downloads/drop/no9/efit_.txt"
          - "/home/gmartine/Downloads/drop/no10/efit_.txt"
          - "/home/gmartine/Downloads/drop/no12/efit_.txt"
          - "/home/gmartine/Downloads/drop/no15/efit_.txt"
          - "/home/gmartine/Downloads/drop/no17/efit_.txt"
          - "/home/gmartine/Downloads/drop/no28/efit_.txt"
        #output_file: "average_output.txt"
        output_file: "median_output.txt"
        mult: 0
        loglike: 1
        main_file: "/home/gmartine/Downloads/drop/efit_.txt"
        #opt: "average"
        opt: "median"
        labels: [M, x0, y0, vx, vy, vz, R0, Omega, omega, i, P, T0, e]
        joints: [[0, 6], [1, 2], [3, 4], [0, 3], [0, 4], [0, 1], [0, 2], [6, 3], [6, 4], [6, 1], [6, 2]]
        
    find_kernel:
      plugin: find_kernel
      options:
        input_files:
          - "output0.z"
          - "output1.z"
          - "output2.z"
          - "output3.z"
          - "output4.z"
          - "output5.z"
          - "output6.z"
        #output_file: "average_output.txt"
        main_file: "outputm.z"
        output_file: "combined_output.z"
    
  objectives:
  
    object_detection:
      plugin: object_detection
      purpose: Likelihood
      options:
        psf_file: "/home/gmartine/fits/c0052_psf_grid.fits"
        image_file: "/home/gmartine/fits/c0052.fits"
        grid_file: "/home/gmartine/fits/grid.fits"
        min_pixel_number: -1
      parameters:
        pos_x:
          range: [200, 800]
        pos_y:
          range: [200, 800]
        #intensity:
        #  range: [0, 10000]
  
    uniform:
      purpose: Likelihood
      plugin: uniform
      version: ">=1.0 & <2.0"
      options:
        some_param: 10
      parameters:
        param...2:
          range: [1, 2]
        
    uniform_prior:
      plugin: flat_prior
      purpose: Likelihood
      options:
        range: [2, 1]
      parameters:
        param...2:
          range: [1, 2]
          
    EggBox:
      plugin: EggBox
      purpose: Likelihood
      options:
        Printer:
          printer: ascii
          #options:
          output_file: "runs/spartan/samples/gambit_output2.txt"
          info_file: "runs/spartan/samples/gambit_output2.info"
      parameters:
        param...2:
          range: [0, 1]
          
    gaussian:
      plugin: gaussian
      purpose: Likelihood
      #options:
      #  cov: [[0.01, 0.0], [0.0, 0.01]]
      #  mean: [1.5, 1.5]
      parameters:
        param...100:
          range: [-5, 5]
      
    test:
      plugin: test_plug
      #plugin_path: /home/gmartine/test.so
        
  #parameters:
    #uniform:
      #param...2:
        #range: [1, 2]
        
  #priors:
    #flat_prior:
      #parameters: [uniform::param...2]
      #prior_type: plugin
      #options:
        #plugin: uniform_prior
    #m12_prior: 
      #parameters: [uniform::param...2]
      #prior_type: composite
      #options: 
        #new_prior: 
          #parameters: [uniform::param_0]
          #prior_type: flat
          #range: [10,20]
        #newnewprior:
          #parameters: [uniform::param_1]
          #prior_type: flat
          #range: [10,20]
            
###############################
# Observables of interest
###############################

ObsLikes:


  ## Test CMSSM_I, ExampleBit_A and ExampleBit_B
  #- purpose:      Likelihood
    #capability:   lnL_ExampleBitB
    #type:         double
    #function:     ""
    #module:       ""

  ## Test array and -> operators in safety buckets.
  #- purpose:      Observable
    #capability:   ptrmeth_arr_tester

  ## Test loop manager
  #- purpose:      Likelihood
    #capability:   nevents_like
    #type:         double

  ## Test vector output of printer
  #- purpose:      Observable
    #capability:   test_vector
    #type:         std::vector<double>


#########################
# Rule entries
#########################

Rules:

  - capability:   "LibFirst_1_1_init"
    dependencies:
    - {capability: "nevents", module: "ExampleBit_A"}  

  - capability:    "nevents_postcuts"
    dependencies:
    - {capability: "id", module: "ExampleBit_B"}

  - capability:    "MSSM_demo_parameters"
    dependencies:
    - {capability: "id", module: "ExampleBit_B"}

  - capability:    "xsection"
    options:
      scale: 15.5

  - capability:    "function_pointer"
    backends:
    - {function: "externalFunction2"}


#########################
# Logging setup
#########################

Logger:

  # Redirection of specific messages according to tags
  # Can redirect to stdout or stderr by specifying these as the "filenames". 
  # Obviously this also means it is impossible to redirect output to actual
  # files with these names.

  prefix : "runs/spartan/logs/"
  redirection:
    [Debug] : "debug.log"
    [Default] : "default.log"
    [Error] : "errors.log"
    [Warning] : "warnings.log"

###############################
## Printer (output) setup
###############################

# Ben: Here we will choose which printer(s?) we want to use. For now
# it is hardcoded: I'll come back to this.


##########################
# Name/Value Section
##########################

KeyValues:

  # Some example keys and subkeys
  my_key: 123
  another_key:
    subkey3:
      subsubkey1: value2

  dependency_resolution:
    prefer_model_specific_functions: true

  likelihood:
    model_invalid_for_lnlike_below: -1e6

  #By default, errors are fatal and warnings non-fatal
  exceptions:
    dependency_resolver_error: fatal
    dependency_resolver_warning: non-fatal
    core_warning: fatal
    ExampleBit_A_error: non-fatal

  enable_testing: false

