*** NOTE: I'm about to seriously clean up the Analysis class...
    In case I break something, here is the working commit before I 
    change stuff:

    fecec2795f09f98a3be2604041e996e71d6c53da
***



*** ANALYSIS METHODS WHICH ARE ACTUALLY IN USE ***

Used publicly by Gambit:
  [factory construction]
  analyze
  get_results

Used privately by the base class:
  collect_results   [ from get_results ]

Used protectedly by analysis specifications:
  finalize
  add_result
  



*** WHERE IS THAT STUFF DEFINED? ***

Base class defined
  get_results
  add_result

Specialization defined
  analyze
  collect_results
  finalize




*** UNUSED / WIERD STUFF TO CLEAN UP... ***

Inherited classes are calling "super.analyze" for some reason.
Is loglikelihood ever called? Or do we just pass our stuff on to nulike??
Clean up analysis factories.

Put the following in Specialized(able)Analysis header:

#include "gambit/ColliderBit/Utils.hpp"
using namespace HEPUtils   // ...maybe. Or edit the code for verbosity.


