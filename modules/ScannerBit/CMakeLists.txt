# GAMBIT: Global and Modular BSM Inference Tool  
#************************************************
# \file                                         
#                                                
#  Cmake CMakeLists.txt file for ScannerBit.     
#                                                
#  This file has been automatically generated by 
#  locate_scanners.py.  Please do not modify.    
#                                                
#************************************************
#                                                
#  Authors:                                      
#                                                
#  \author The GAMBIT Collaboration             
#  \date 07:42AM on February 05, 2015
#                                                
#************************************************
                                                 
set( PLUGIN_INCLUDE_DIRECTORIES                  
                ${PROJECT_SOURCE_DIR}            
                ${PROJECT_BINARY_DIR}            
                ${GAMBIT_INCDIRS}                
                ${yaml_INCLUDE_DIRS}             
                ${Boost_INCLUDE_DIR}             
                ${GSL_INCLUDE_DIRS}              
                ${ROOT_INCLUDE_DIR}              
)                                                

if( ${PLUG_VERBOSE} )                            
    message("*** begin PLUG_INCLUDE_DIRECTORIES ***")
    foreach(dir ${PLUGIN_INCLUDE_DIRECTORIES})   
        message(STATUS "dir='${dir}'")         
    endforeach()                                 
    message("*** end PLUG_INCLUDE_DIRECTORIES ***")
endif()                                          

set( scannerbit_sources
                src/cauchy.cpp
                src/composite.cpp
                src/gaussian.cpp
                src/plugin_comparators.cpp
                src/plugin_details.cpp
                src/plugin_loader.cpp
                src/scan.cpp
                src/scanner_utils.cpp
)

set( scannerbit_headers
                include/cholesky.hpp
                include/factory_defs.hpp
                include/factory_registry.hpp
                include/objective_plugin.hpp
                include/plugin_comparators.hpp
                include/plugin_defs.hpp
                include/plugin_details.hpp
                include/plugin_factory.hpp
                include/plugin_interface.hpp
                include/plugin_loader.hpp
                include/plugin_macros.hpp
                include/plugin_utilities.hpp
                include/printer_interface.hpp
                include/priors.hpp
                include/priors_rollcall.hpp
                include/scan.hpp
                include/scan_file.hpp
                include/scanner_plugin.hpp
                include/scanner_utils.hpp
                include/scannerbit.hpp
                include/priors/cauchy.hpp
                include/priors/composite.hpp
                include/priors/dummy.hpp
                include/priors/fixed_same_as.hpp
                include/priors/flat_log.hpp
                include/priors/gaussian.hpp
                include/priors/plugin.hpp
)

set( objective_plugin_sources_test_functions
                src/objectives/test_functions/examples.cpp
)

set( objective_plugin_headers_test_functions
)

set( scanner_plugin_sources_sample
                src/scanners/sample/grid.cpp
                src/scanners/sample/random_sampler.cpp
                src/scanners/sample/square_grid.cpp
                src/scanners/sample/toy_mcmc.cpp
                src/scanners/sample/twalk.cpp
)

set( scanner_plugin_headers_sample
                include/scanners/sample/random.h
                include/scanners/sample/twalk.hpp
)

set( scanner_scanlibs_sources                   
                src/scanlibs/scanlibs.cpp       
)                                               
                                                
add_gambit_library( ScannerBit OPTION OBJECT SOURCES ${scannerbit_sources} HEADERS ${scannerbit_headers} )

add_gambit_executable( scanlibs SOURCES ${scanner_scanlibs_sources} )
set_target_properties( scanlibs                 
                       PROPERTIES               
                       RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/bin")

add_gambit_library( objective_test_functions OPTION SHARED SOURCES ${objective_plugin_sources_test_functions} HEADERS ${objective_plugin_headers_test_functions} )
set_target_properties( objective_test_functions
                       PROPERTIES
                       INCLUDE_DIRECTORIES "${PLUGIN_INCLUDE_DIRECTORIES};${CMAKE_CURRENT_SOURCE_DIR}/include/objectives/test_functions"
                       ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/lib"
                       LIBRARY_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/lib")
add_gambit_library( scanner_sample OPTION SHARED SOURCES ${scanner_plugin_sources_sample} HEADERS ${scanner_plugin_headers_sample} )
set_target_properties( scanner_sample
                       PROPERTIES
                       INCLUDE_DIRECTORIES "${PLUGIN_INCLUDE_DIRECTORIES};${CMAKE_CURRENT_SOURCE_DIR}/include/scanners/sample"
                       ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/lib"
                       LIBRARY_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/lib")
