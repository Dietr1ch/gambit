TODO:
* Support alternative ini format
* Grouping backend requirements into blocks/groups
* Allow conditional backend requirements (conditional on model only, not dependency)
* Fix naming conventions
  - GAMBIT->Gambit
  - filenames (lowercase+underscore)
* Experiment with automake and cmake for build
* Implement exception handling/logging system
* Create SLHA internal representation, plus hook up file reader/writer.
* General review of legacy code -> cull obsolete stuff
* Convert comments to Doxygen
* Tracking of config files -> lists in module/backend rollcall headers?
  - Add function-level "HAS_CONFIG_FILE" macro to do this
    - for both modules and backends
* Create "little guys" (parameter mini-functors : e.g. *params::M0)
* Create mini-core for module stand-alone releases
* Add chained 'depends on parameter' to functor class



Recent decisions:
* Module specific types in module directories
  -> BUT common return types in 
     utils/include/common_return_types.hpp
* Separate output/log for points with "BadPoint" errors

Done:
* No more GET_DEP -> change all examples to safe pointers (*Dep::observable)
* Separate gambit_example.cpps

