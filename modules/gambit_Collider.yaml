# GAMBIT Initialization file (in YAML)
#
# Christoph Weniger <c.weniger@uva.nl>
# June, July 2013
#
# Ben Farmer <ben.farmer@gmail.com>
# Dec 2013
#

 
###################################
# Input parameter declarations
###################################

Parameters:
  NormalDist:
    mu:
      fixed_value: 1
    sigma:
      fixed_value: 1

##############################
# Printer setup
##############################

Printer:

  # Select printer to use via string tag
  # (currently only ascii printer available)
  printer: ascii

  # This options node is passed on wholesale to
  # the printer object; required options may
  # therefore vary according to the selected
  # printer. 
  options:
    # name of output file
    output_file: "runs/example_minimal_test/samples/gambit_output.txt"
    # name of info file (explains content of output file)
    info_file: "runs/example_minimal_test/samples/gambit_output.info"

##############################
# Scanner setup
##############################

Scanner:

  plugin: crapsample
  file_path:  ScannerBit/lib/libsample.so

  enable_redirect: false
  redirect_output:
     scanner:  xterm
  #   error:  test_errors
      
  crapsample:
    point_number: 1
    output_file:  output
    like:  Observable

###############################
# Observables of interest
###############################

ObsLikes:

  # ColliderBit
  #- purpose:      Observable
  #  capability:   LogLikelihood

  # Test marginalised Poisson likelihood
  - purpose:    Likelihood
    capability: LogLikelihood


#########################
# Auxiliary entries
#########################

Auxiliaries:

  #ColliderBit options (note, these ones are mandatory at this moment)

  - capability: ListOfAnalyses
    function: specifyAnalysisList
    options:  
      AnalysisList: ["ATLAS_0LEPStop_20invfb","ATLAS_1LEPStop_20invfb"]

  - capability:  colliderLoopManager
    function:    manageVanillaLoop
    options:
      nEvents:   2000

  - capability: AnalysisList

  - capability:  GambitColliderEvent
    function:    reconstructDelphesEvent
    options:
      delphesConfigFilename: "ColliderBit/data/delphes_card_ATLAS.tcl" 

  - capability:  hardScatteringEvent
    function:    generatePythia8Event
    options:
      slhaFilename: "ColliderBit/data/sps1aWithDecays.spc" 

  - capability: LogLikelihood
    function:   calcLogLike
    backends:
    - {capability: lnlike_marg_poisson_gaussian_error}

  - capability: AnalysisNumbers
    dependencies:
    - {capability: "GambitColliderEvent", type: "HEP_Simple_Lib::Event", function: "reconstructDelphesEvent"}

#########################
# Logging setup
#########################

Logger:

  # Redirectory of specific messages according to tags
  # Can redirect to stdout or stderr by specifying these as the "filenames". Obviously this also means it is impossible to redirect output to actual files with these names.

  prefix : "runs/example_minimal_test/logs/"
  redirection:
    [Debug] : "debug.log"
    [Default] : "default.log"
    [Error] : "errors.log"
    [Warning] : "warnings.log"
    [Core,Error] : "core_errors.log"
    [Core,Error,Fatal] : "fatal_core_errors.log"
    [Dependency Resolver] : "dependency_resolver.log"
    [ColliderBit] : "ColliderBit.log"

##########################
# Name/Value Section
##########################

KeyValues:

  dependency_resolution:
    prefer_model_specific_functions: true

  likelihood:
    model_invalid_for_lnlike_below: -1e6

  #By default, errors are fatal and warnings non-fatal
  exceptions:
    dependency_resolver_error: fatal
    dependency_resolver_warning: non-fatal
    core_warning: fatal
    scan_error: non-fatal #make this fatal to see an example error
