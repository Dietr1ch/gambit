# GAMBIT Initialization file (in YAML)
#
# A testing Gambit ini file for ColliderBit
#  - attempting to remove anything not needed for testing only
#    ColliderBit.... Why is that so difficult?


##############################
# Printer setup
##############################

Printer:

  # Select printer to use via string tag
  # (currently only ascii printer available)
  printer: ascii

  # This options node is passed on wholesale to
  # the printer object; required options may
  # therefore vary according to the selected
  # printer. 
  options:
    # name of output file
    output_file: "runs/example_minimal_test/samples/gambit_output.txt"
    # name of info file (explains content of output file)
    info_file: "runs/example_minimal_test/samples/gambit_output.info"

###############################
# Observables of interest
###############################

ObsLikes:

  # Uncomment to test ColliderBit
  - purpose:      Observable
    capability:   analysisAccumulator

#########################
# Auxiliary entries
#########################

Auxiliaries:

  #ColliderBit options (note, these ones are mandatory at this moment)
  - capability:  eventLoopManager
    function:    manageVanillaLoop
    options:
      nEvents:   2000

  - capability:  GambitColliderEvent
    function:    reconstructDelphesEvent
    options:
      delphesConfigFilename: "ColliderBit/data/delphes_card_ATLAS.tcl" 

  - capability:  hardScatteringEvent
    function:    generatePythia8Event
    options:
      slhaFilename: "ColliderBit/data/sps1aWithDecays.spc" 

  - capability:   analysisAccumulator
    dependencies:
    - {capability: "GambitColliderEvent", type: "HEP_Simple_Lib::Event", function: "reconstructDelphesEvent"}

#########################
# Logging setup
#########################

Logger:

  # Redirectory of specific messages according to tags
  # Can redirect to stdout or stderr by specifying these as the "filenames". Obviously this also means it is impossible to redirect output to actual files with these names.

  prefix : "runs/example_minimal_test/logs/"
  redirection:
    [Debug] : "debug.log"
    [Default] : "default.log"
    [Error] : "errors.log"
    [Warning] : "warnings.log"
    [Core,Error] : "core_errors.log"
    [Core,Error,Fatal] : "fatal_core_errors.log"
    [Dependency Resolver] : "dependency_resolver.log"
    [ColliderBit] : "ColliderBit.log"


###############################
## Printer (output) setup
###############################

# Ben: Here we will choose which printer(s?) we want to use. For now
# it is hardcoded: I'll come back to this.


##########################
# Name/Value Section
##########################

KeyValues:

  dependency_resolution:
    prefer_model_specific_functions: false

  likelihood:
    model_invalid_for_lnlike_below: -1e6

  #By default, errors are fatal and warnings non-fatal
  exceptions:
    dependency_resolver_error: fatal
    dependency_resolver_warning: non-fatal
    core_warning: fatal
    scan_error: non-fatal #make this fatal to see an example error

  enable_testing: false
  test_function: uniform
      
  uniform:
    dim: 2
    priors:
      gauss_prior:
        parameters: [0, 1]
        options:
          cov: [[1, 0], [0, 1]]
